/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.nomina.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.nomina.util.EmpleadoConstantesFunciones;
import com.bydan.erp.nomina.util.EmpleadoParameterReturnGeneral;
//import com.bydan.erp.nomina.util.EmpleadoParameterGeneral;
//import com.bydan.erp.nomina.presentation.report.source.EmpleadoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.nomina.resources.reportes.AuxiliarReportes;


import com.bydan.erp.nomina.util.*;
import com.bydan.erp.nomina.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.nomina.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class EmpleadoBeanSwingJInternalFrame extends EmpleadoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(EmpleadoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Empleado> empleadoValidator = new ClassValidator<Empleado>(Empleado.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Empleado empleado;	
	public Empleado empleadoAux;
	public Empleado empleadoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Empleado empleadoTotales;
	public Long idEmpleadoActual;
	public Long iIdNuevoEmpleado=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboProvincia="";

	public List<Provincia> provinciasForeignKey;

	public List<Provincia> getprovinciasForeignKey() {
		return provinciasForeignKey;
	}

	public void setprovinciasForeignKey(List<Provincia> provinciasForeignKey) {
		this.provinciasForeignKey = provinciasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Provincia provinciaForeignKey;

	public Provincia getprovinciaForeignKey() {
		return provinciaForeignKey;
	}

	public void setprovinciaForeignKey(Provincia provinciaForeignKey) {
		this.provinciaForeignKey = provinciaForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboReligion="";

	public List<Religion> religionsForeignKey;

	public List<Religion> getreligionsForeignKey() {
		return religionsForeignKey;
	}

	public void setreligionsForeignKey(List<Religion> religionsForeignKey) {
		this.religionsForeignKey = religionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Religion religionForeignKey;

	public Religion getreligionForeignKey() {
		return religionForeignKey;
	}

	public void setreligionForeignKey(Religion religionForeignKey) {
		this.religionForeignKey = religionForeignKey;
	}

	public String sFinalQueryComboEstadoCivil="";

	public List<EstadoCivil> estadocivilsForeignKey;

	public List<EstadoCivil> getestadocivilsForeignKey() {
		return estadocivilsForeignKey;
	}

	public void setestadocivilsForeignKey(List<EstadoCivil> estadocivilsForeignKey) {
		this.estadocivilsForeignKey = estadocivilsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoCivil estadocivilForeignKey;

	public EstadoCivil getestadocivilForeignKey() {
		return estadocivilForeignKey;
	}

	public void setestadocivilForeignKey(EstadoCivil estadocivilForeignKey) {
		this.estadocivilForeignKey = estadocivilForeignKey;
	}

	public String sFinalQueryComboTipoGenero="";

	public List<TipoGenero> tipogenerosForeignKey;

	public List<TipoGenero> gettipogenerosForeignKey() {
		return tipogenerosForeignKey;
	}

	public void settipogenerosForeignKey(List<TipoGenero> tipogenerosForeignKey) {
		this.tipogenerosForeignKey = tipogenerosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGenero tipogeneroForeignKey;

	public TipoGenero gettipogeneroForeignKey() {
		return tipogeneroForeignKey;
	}

	public void settipogeneroForeignKey(TipoGenero tipogeneroForeignKey) {
		this.tipogeneroForeignKey = tipogeneroForeignKey;
	}

	public String sFinalQueryComboTipoEmpleado="";

	public List<TipoEmpleado> tipoempleadosForeignKey;

	public List<TipoEmpleado> gettipoempleadosForeignKey() {
		return tipoempleadosForeignKey;
	}

	public void settipoempleadosForeignKey(List<TipoEmpleado> tipoempleadosForeignKey) {
		this.tipoempleadosForeignKey = tipoempleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoEmpleado tipoempleadoForeignKey;

	public TipoEmpleado gettipoempleadoForeignKey() {
		return tipoempleadoForeignKey;
	}

	public void settipoempleadoForeignKey(TipoEmpleado tipoempleadoForeignKey) {
		this.tipoempleadoForeignKey = tipoempleadoForeignKey;
	}

	public String sFinalQueryComboTipoInstruccion="";

	public List<TipoInstruccion> tipoinstruccionsForeignKey;

	public List<TipoInstruccion> gettipoinstruccionsForeignKey() {
		return tipoinstruccionsForeignKey;
	}

	public void settipoinstruccionsForeignKey(List<TipoInstruccion> tipoinstruccionsForeignKey) {
		this.tipoinstruccionsForeignKey = tipoinstruccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoInstruccion tipoinstruccionForeignKey;

	public TipoInstruccion gettipoinstruccionForeignKey() {
		return tipoinstruccionForeignKey;
	}

	public void settipoinstruccionForeignKey(TipoInstruccion tipoinstruccionForeignKey) {
		this.tipoinstruccionForeignKey = tipoinstruccionForeignKey;
	}

	public String sFinalQueryComboCargo="";

	public List<Cargo> cargosForeignKey;

	public List<Cargo> getcargosForeignKey() {
		return cargosForeignKey;
	}

	public void setcargosForeignKey(List<Cargo> cargosForeignKey) {
		this.cargosForeignKey = cargosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cargo cargoForeignKey;

	public Cargo getcargoForeignKey() {
		return cargoForeignKey;
	}

	public void setcargoForeignKey(Cargo cargoForeignKey) {
		this.cargoForeignKey = cargoForeignKey;
	}

	public String sFinalQueryComboEstructura="";

	public List<Estructura> estructurasForeignKey;

	public List<Estructura> getestructurasForeignKey() {
		return estructurasForeignKey;
	}

	public void setestructurasForeignKey(List<Estructura> estructurasForeignKey) {
		this.estructurasForeignKey = estructurasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Estructura estructuraForeignKey;

	public Estructura getestructuraForeignKey() {
		return estructuraForeignKey;
	}

	public void setestructuraForeignKey(Estructura estructuraForeignKey) {
		this.estructuraForeignKey = estructuraForeignKey;
	}

	public String sFinalQueryComboEstructuraSeccion="";

	public List<Estructura> estructuraseccionsForeignKey;

	public List<Estructura> getestructuraseccionsForeignKey() {
		return estructuraseccionsForeignKey;
	}

	public void setestructuraseccionsForeignKey(List<Estructura> estructuraseccionsForeignKey) {
		this.estructuraseccionsForeignKey = estructuraseccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Estructura estructuraseccionForeignKey;

	public Estructura getestructuraseccionForeignKey() {
		return estructuraseccionForeignKey;
	}

	public void setestructuraseccionForeignKey(Estructura estructuraseccionForeignKey) {
		this.estructuraseccionForeignKey = estructuraseccionForeignKey;
	}

	public String sFinalQueryComboEstadoEmpleado="";

	public List<EstadoEmpleado> estadoempleadosForeignKey;

	public List<EstadoEmpleado> getestadoempleadosForeignKey() {
		return estadoempleadosForeignKey;
	}

	public void setestadoempleadosForeignKey(List<EstadoEmpleado> estadoempleadosForeignKey) {
		this.estadoempleadosForeignKey = estadoempleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoEmpleado estadoempleadoForeignKey;

	public EstadoEmpleado getestadoempleadoForeignKey() {
		return estadoempleadoForeignKey;
	}

	public void setestadoempleadoForeignKey(EstadoEmpleado estadoempleadoForeignKey) {
		this.estadoempleadoForeignKey = estadoempleadoForeignKey;
	}

	public String sFinalQueryComboTipoContrato="";

	public List<TipoContrato> tipocontratosForeignKey;

	public List<TipoContrato> gettipocontratosForeignKey() {
		return tipocontratosForeignKey;
	}

	public void settipocontratosForeignKey(List<TipoContrato> tipocontratosForeignKey) {
		this.tipocontratosForeignKey = tipocontratosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoContrato tipocontratoForeignKey;

	public TipoContrato gettipocontratoForeignKey() {
		return tipocontratoForeignKey;
	}

	public void settipocontratoForeignKey(TipoContrato tipocontratoForeignKey) {
		this.tipocontratoForeignKey = tipocontratoForeignKey;
	}

	public String sFinalQueryComboTipoCuentaBancoGlobal="";

	public List<TipoCuentaBancoGlobal> tipocuentabancoglobalsForeignKey;

	public List<TipoCuentaBancoGlobal> gettipocuentabancoglobalsForeignKey() {
		return tipocuentabancoglobalsForeignKey;
	}

	public void settipocuentabancoglobalsForeignKey(List<TipoCuentaBancoGlobal> tipocuentabancoglobalsForeignKey) {
		this.tipocuentabancoglobalsForeignKey = tipocuentabancoglobalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCuentaBancoGlobal tipocuentabancoglobalForeignKey;

	public TipoCuentaBancoGlobal gettipocuentabancoglobalForeignKey() {
		return tipocuentabancoglobalForeignKey;
	}

	public void settipocuentabancoglobalForeignKey(TipoCuentaBancoGlobal tipocuentabancoglobalForeignKey) {
		this.tipocuentabancoglobalForeignKey = tipocuentabancoglobalForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	

	public Boolean isTienePermisosCargaFamiliar_NM=false;

	public Boolean getIsTienePermisosCargaFamiliar_NM() {
		return isTienePermisosCargaFamiliar_NM;
	}

	public void setIsTienePermisosCargaFamiliar_NM(Boolean isTienePermisosCargaFamiliar_NM) {
		this.isTienePermisosCargaFamiliar_NM= isTienePermisosCargaFamiliar_NM;
	}


	public Boolean isTienePermisosCurso=false;

	public Boolean getIsTienePermisosCurso() {
		return isTienePermisosCurso;
	}

	public void setIsTienePermisosCurso(Boolean isTienePermisosCurso) {
		this.isTienePermisosCurso= isTienePermisosCurso;
	}


	public Boolean isTienePermisosPrestamo=false;

	public Boolean getIsTienePermisosPrestamo() {
		return isTienePermisosPrestamo;
	}

	public void setIsTienePermisosPrestamo(Boolean isTienePermisosPrestamo) {
		this.isTienePermisosPrestamo= isTienePermisosPrestamo;
	}


	public Boolean isTienePermisosEmpleadoIdioma=false;

	public Boolean getIsTienePermisosEmpleadoIdioma() {
		return isTienePermisosEmpleadoIdioma;
	}

	public void setIsTienePermisosEmpleadoIdioma(Boolean isTienePermisosEmpleadoIdioma) {
		this.isTienePermisosEmpleadoIdioma= isTienePermisosEmpleadoIdioma;
	}


	public Boolean isTienePermisosHistorialPagoMesNomi=false;

	public Boolean getIsTienePermisosHistorialPagoMesNomi() {
		return isTienePermisosHistorialPagoMesNomi;
	}

	public void setIsTienePermisosHistorialPagoMesNomi(Boolean isTienePermisosHistorialPagoMesNomi) {
		this.isTienePermisosHistorialPagoMesNomi= isTienePermisosHistorialPagoMesNomi;
	}


	public Boolean isTienePermisosEmpleadoImpuestoRenta=false;

	public Boolean getIsTienePermisosEmpleadoImpuestoRenta() {
		return isTienePermisosEmpleadoImpuestoRenta;
	}

	public void setIsTienePermisosEmpleadoImpuestoRenta(Boolean isTienePermisosEmpleadoImpuestoRenta) {
		this.isTienePermisosEmpleadoImpuestoRenta= isTienePermisosEmpleadoImpuestoRenta;
	}


	public Boolean isTienePermisosDatoGeneralEmpleado=false;

	public Boolean getIsTienePermisosDatoGeneralEmpleado() {
		return isTienePermisosDatoGeneralEmpleado;
	}

	public void setIsTienePermisosDatoGeneralEmpleado(Boolean isTienePermisosDatoGeneralEmpleado) {
		this.isTienePermisosDatoGeneralEmpleado= isTienePermisosDatoGeneralEmpleado;
	}


	public Boolean isTienePermisosArea=false;

	public Boolean getIsTienePermisosArea() {
		return isTienePermisosArea;
	}

	public void setIsTienePermisosArea(Boolean isTienePermisosArea) {
		this.isTienePermisosArea= isTienePermisosArea;
	}


	public Boolean isTienePermisosGastoEmpleado=false;

	public Boolean getIsTienePermisosGastoEmpleado() {
		return isTienePermisosGastoEmpleado;
	}

	public void setIsTienePermisosGastoEmpleado(Boolean isTienePermisosGastoEmpleado) {
		this.isTienePermisosGastoEmpleado= isTienePermisosGastoEmpleado;
	}


	public Boolean isTienePermisosEmpleadoHobby=false;

	public Boolean getIsTienePermisosEmpleadoHobby() {
		return isTienePermisosEmpleadoHobby;
	}

	public void setIsTienePermisosEmpleadoHobby(Boolean isTienePermisosEmpleadoHobby) {
		this.isTienePermisosEmpleadoHobby= isTienePermisosEmpleadoHobby;
	}


	public Boolean isTienePermisosEmpleadoEMail=false;

	public Boolean getIsTienePermisosEmpleadoEMail() {
		return isTienePermisosEmpleadoEMail;
	}

	public void setIsTienePermisosEmpleadoEMail(Boolean isTienePermisosEmpleadoEMail) {
		this.isTienePermisosEmpleadoEMail= isTienePermisosEmpleadoEMail;
	}


	public Boolean isTienePermisosRasgoPersonal=false;

	public Boolean getIsTienePermisosRasgoPersonal() {
		return isTienePermisosRasgoPersonal;
	}

	public void setIsTienePermisosRasgoPersonal(Boolean isTienePermisosRasgoPersonal) {
		this.isTienePermisosRasgoPersonal= isTienePermisosRasgoPersonal;
	}


	public Boolean isTienePermisosReferencia=false;

	public Boolean getIsTienePermisosReferencia() {
		return isTienePermisosReferencia;
	}

	public void setIsTienePermisosReferencia(Boolean isTienePermisosReferencia) {
		this.isTienePermisosReferencia= isTienePermisosReferencia;
	}


	public Boolean isTienePermisosTelefono_NM=false;

	public Boolean getIsTienePermisosTelefono_NM() {
		return isTienePermisosTelefono_NM;
	}

	public void setIsTienePermisosTelefono_NM(Boolean isTienePermisosTelefono_NM) {
		this.isTienePermisosTelefono_NM= isTienePermisosTelefono_NM;
	}


	public Boolean isTienePermisosNovedad=false;

	public Boolean getIsTienePermisosNovedad() {
		return isTienePermisosNovedad;
	}

	public void setIsTienePermisosNovedad(Boolean isTienePermisosNovedad) {
		this.isTienePermisosNovedad= isTienePermisosNovedad;
	}


	public Boolean isTienePermisosEmpleadoHerra=false;

	public Boolean getIsTienePermisosEmpleadoHerra() {
		return isTienePermisosEmpleadoHerra;
	}

	public void setIsTienePermisosEmpleadoHerra(Boolean isTienePermisosEmpleadoHerra) {
		this.isTienePermisosEmpleadoHerra= isTienePermisosEmpleadoHerra;
	}


	public Boolean isTienePermisosEmpleadoEnfer=false;

	public Boolean getIsTienePermisosEmpleadoEnfer() {
		return isTienePermisosEmpleadoEnfer;
	}

	public void setIsTienePermisosEmpleadoEnfer(Boolean isTienePermisosEmpleadoEnfer) {
		this.isTienePermisosEmpleadoEnfer= isTienePermisosEmpleadoEnfer;
	}


	public Boolean isTienePermisosVisa=false;

	public Boolean getIsTienePermisosVisa() {
		return isTienePermisosVisa;
	}

	public void setIsTienePermisosVisa(Boolean isTienePermisosVisa) {
		this.isTienePermisosVisa= isTienePermisosVisa;
	}


	public Boolean isTienePermisosSeguro=false;

	public Boolean getIsTienePermisosSeguro() {
		return isTienePermisosSeguro;
	}

	public void setIsTienePermisosSeguro(Boolean isTienePermisosSeguro) {
		this.isTienePermisosSeguro= isTienePermisosSeguro;
	}


	public Boolean isTienePermisosAsistenciaMensual=false;

	public Boolean getIsTienePermisosAsistenciaMensual() {
		return isTienePermisosAsistenciaMensual;
	}

	public void setIsTienePermisosAsistenciaMensual(Boolean isTienePermisosAsistenciaMensual) {
		this.isTienePermisosAsistenciaMensual= isTienePermisosAsistenciaMensual;
	}


	public Boolean isTienePermisosEmpleadoDisca=false;

	public Boolean getIsTienePermisosEmpleadoDisca() {
		return isTienePermisosEmpleadoDisca;
	}

	public void setIsTienePermisosEmpleadoDisca(Boolean isTienePermisosEmpleadoDisca) {
		this.isTienePermisosEmpleadoDisca= isTienePermisosEmpleadoDisca;
	}


	public Boolean isTienePermisosProfesionEmplea=false;

	public Boolean getIsTienePermisosProfesionEmplea() {
		return isTienePermisosProfesionEmplea;
	}

	public void setIsTienePermisosProfesionEmplea(Boolean isTienePermisosProfesionEmplea) {
		this.isTienePermisosProfesionEmplea= isTienePermisosProfesionEmplea;
	}


	public Boolean isTienePermisosRubroEmpleado=false;

	public Boolean getIsTienePermisosRubroEmpleado() {
		return isTienePermisosRubroEmpleado;
	}

	public void setIsTienePermisosRubroEmpleado(Boolean isTienePermisosRubroEmpleado) {
		this.isTienePermisosRubroEmpleado= isTienePermisosRubroEmpleado;
	}


	public Boolean isTienePermisosEmpleadoConstante=false;

	public Boolean getIsTienePermisosEmpleadoConstante() {
		return isTienePermisosEmpleadoConstante;
	}

	public void setIsTienePermisosEmpleadoConstante(Boolean isTienePermisosEmpleadoConstante) {
		this.isTienePermisosEmpleadoConstante= isTienePermisosEmpleadoConstante;
	}


	public Boolean isTienePermisosTallaVestido=false;

	public Boolean getIsTienePermisosTallaVestido() {
		return isTienePermisosTallaVestido;
	}

	public void setIsTienePermisosTallaVestido(Boolean isTienePermisosTallaVestido) {
		this.isTienePermisosTallaVestido= isTienePermisosTallaVestido;
	}


	public Boolean isTienePermisosNovedadNomi=false;

	public Boolean getIsTienePermisosNovedadNomi() {
		return isTienePermisosNovedadNomi;
	}

	public void setIsTienePermisosNovedadNomi(Boolean isTienePermisosNovedadNomi) {
		this.isTienePermisosNovedadNomi= isTienePermisosNovedadNomi;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoEmpleado;
	public Boolean isPermisoNuevoEmpleado;
	public Boolean isPermisoActualizarEmpleado;
	public Boolean isPermisoActualizarOriginalEmpleado;
	public Boolean isPermisoEliminarEmpleado;
	public Boolean isPermisoGuardarCambiosEmpleado;
	public Boolean isPermisoConsultaEmpleado;
	public Boolean isPermisoBusquedaEmpleado;
	public Boolean isPermisoReporteEmpleado;
	public Boolean isPermisoPaginacionMedioEmpleado;
	public Boolean isPermisoPaginacionAltoEmpleado;
	public Boolean isPermisoPaginacionTodoEmpleado;
	public Boolean isPermisoCopiarEmpleado;
	public Boolean isPermisoVerFormEmpleado;
	public Boolean isPermisoDuplicarEmpleado;
	public Boolean isPermisoOrdenEmpleado;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public EmpleadoParameterReturnGeneral empleadoReturnGeneral;
	public EmpleadoParameterReturnGeneral empleadoParameterGeneral;
	
	

	public CargaFamiliar_NMLogic cargafamiliar_nmLogic=null;

	public CargaFamiliar_NMLogic getCargaFamiliar_NMLogic() {
		return cargafamiliar_nmLogic;
	}

	public void setCargaFamiliar_NMLogic(CargaFamiliar_NMLogic cargafamiliar_nmLogic) {
		this.cargafamiliar_nmLogic = cargafamiliar_nmLogic;
	}


	public CursoLogic cursoLogic=null;

	public CursoLogic getCursoLogic() {
		return cursoLogic;
	}

	public void setCursoLogic(CursoLogic cursoLogic) {
		this.cursoLogic = cursoLogic;
	}


	public PrestamoLogic prestamoLogic=null;

	public PrestamoLogic getPrestamoLogic() {
		return prestamoLogic;
	}

	public void setPrestamoLogic(PrestamoLogic prestamoLogic) {
		this.prestamoLogic = prestamoLogic;
	}


	public EmpleadoIdiomaLogic empleadoidiomaLogic=null;

	public EmpleadoIdiomaLogic getEmpleadoIdiomaLogic() {
		return empleadoidiomaLogic;
	}

	public void setEmpleadoIdiomaLogic(EmpleadoIdiomaLogic empleadoidiomaLogic) {
		this.empleadoidiomaLogic = empleadoidiomaLogic;
	}


	public HistorialPagoMesNomiLogic historialpagomesnomiLogic=null;

	public HistorialPagoMesNomiLogic getHistorialPagoMesNomiLogic() {
		return historialpagomesnomiLogic;
	}

	public void setHistorialPagoMesNomiLogic(HistorialPagoMesNomiLogic historialpagomesnomiLogic) {
		this.historialpagomesnomiLogic = historialpagomesnomiLogic;
	}


	public EmpleadoImpuestoRentaLogic empleadoimpuestorentaLogic=null;

	public EmpleadoImpuestoRentaLogic getEmpleadoImpuestoRentaLogic() {
		return empleadoimpuestorentaLogic;
	}

	public void setEmpleadoImpuestoRentaLogic(EmpleadoImpuestoRentaLogic empleadoimpuestorentaLogic) {
		this.empleadoimpuestorentaLogic = empleadoimpuestorentaLogic;
	}


	public DatoGeneralEmpleadoLogic datogeneralempleadoLogic=null;

	public DatoGeneralEmpleadoLogic getDatoGeneralEmpleadoLogic() {
		return datogeneralempleadoLogic;
	}

	public void setDatoGeneralEmpleadoLogic(DatoGeneralEmpleadoLogic datogeneralempleadoLogic) {
		this.datogeneralempleadoLogic = datogeneralempleadoLogic;
	}


	public AreaLogic areaLogic=null;

	public AreaLogic getAreaLogic() {
		return areaLogic;
	}

	public void setAreaLogic(AreaLogic areaLogic) {
		this.areaLogic = areaLogic;
	}


	public GastoEmpleadoLogic gastoempleadoLogic=null;

	public GastoEmpleadoLogic getGastoEmpleadoLogic() {
		return gastoempleadoLogic;
	}

	public void setGastoEmpleadoLogic(GastoEmpleadoLogic gastoempleadoLogic) {
		this.gastoempleadoLogic = gastoempleadoLogic;
	}


	public EmpleadoHobbyLogic empleadohobbyLogic=null;

	public EmpleadoHobbyLogic getEmpleadoHobbyLogic() {
		return empleadohobbyLogic;
	}

	public void setEmpleadoHobbyLogic(EmpleadoHobbyLogic empleadohobbyLogic) {
		this.empleadohobbyLogic = empleadohobbyLogic;
	}


	public EmpleadoEMailLogic empleadoemailLogic=null;

	public EmpleadoEMailLogic getEmpleadoEMailLogic() {
		return empleadoemailLogic;
	}

	public void setEmpleadoEMailLogic(EmpleadoEMailLogic empleadoemailLogic) {
		this.empleadoemailLogic = empleadoemailLogic;
	}


	public RasgoPersonalLogic rasgopersonalLogic=null;

	public RasgoPersonalLogic getRasgoPersonalLogic() {
		return rasgopersonalLogic;
	}

	public void setRasgoPersonalLogic(RasgoPersonalLogic rasgopersonalLogic) {
		this.rasgopersonalLogic = rasgopersonalLogic;
	}


	public ReferenciaLogic referenciaLogic=null;

	public ReferenciaLogic getReferenciaLogic() {
		return referenciaLogic;
	}

	public void setReferenciaLogic(ReferenciaLogic referenciaLogic) {
		this.referenciaLogic = referenciaLogic;
	}


	public Telefono_NMLogic telefono_nmLogic=null;

	public Telefono_NMLogic getTelefono_NMLogic() {
		return telefono_nmLogic;
	}

	public void setTelefono_NMLogic(Telefono_NMLogic telefono_nmLogic) {
		this.telefono_nmLogic = telefono_nmLogic;
	}


	public NovedadLogic novedadLogic=null;

	public NovedadLogic getNovedadLogic() {
		return novedadLogic;
	}

	public void setNovedadLogic(NovedadLogic novedadLogic) {
		this.novedadLogic = novedadLogic;
	}


	public EmpleadoHerraLogic empleadoherraLogic=null;

	public EmpleadoHerraLogic getEmpleadoHerraLogic() {
		return empleadoherraLogic;
	}

	public void setEmpleadoHerraLogic(EmpleadoHerraLogic empleadoherraLogic) {
		this.empleadoherraLogic = empleadoherraLogic;
	}


	public EmpleadoEnferLogic empleadoenferLogic=null;

	public EmpleadoEnferLogic getEmpleadoEnferLogic() {
		return empleadoenferLogic;
	}

	public void setEmpleadoEnferLogic(EmpleadoEnferLogic empleadoenferLogic) {
		this.empleadoenferLogic = empleadoenferLogic;
	}


	public VisaLogic visaLogic=null;

	public VisaLogic getVisaLogic() {
		return visaLogic;
	}

	public void setVisaLogic(VisaLogic visaLogic) {
		this.visaLogic = visaLogic;
	}


	public SeguroLogic seguroLogic=null;

	public SeguroLogic getSeguroLogic() {
		return seguroLogic;
	}

	public void setSeguroLogic(SeguroLogic seguroLogic) {
		this.seguroLogic = seguroLogic;
	}


	public AsistenciaMensualLogic asistenciamensualLogic=null;

	public AsistenciaMensualLogic getAsistenciaMensualLogic() {
		return asistenciamensualLogic;
	}

	public void setAsistenciaMensualLogic(AsistenciaMensualLogic asistenciamensualLogic) {
		this.asistenciamensualLogic = asistenciamensualLogic;
	}


	public EmpleadoDiscaLogic empleadodiscaLogic=null;

	public EmpleadoDiscaLogic getEmpleadoDiscaLogic() {
		return empleadodiscaLogic;
	}

	public void setEmpleadoDiscaLogic(EmpleadoDiscaLogic empleadodiscaLogic) {
		this.empleadodiscaLogic = empleadodiscaLogic;
	}


	public ProfesionEmpleaLogic profesionempleaLogic=null;

	public ProfesionEmpleaLogic getProfesionEmpleaLogic() {
		return profesionempleaLogic;
	}

	public void setProfesionEmpleaLogic(ProfesionEmpleaLogic profesionempleaLogic) {
		this.profesionempleaLogic = profesionempleaLogic;
	}


	public RubroEmpleadoLogic rubroempleadoLogic=null;

	public RubroEmpleadoLogic getRubroEmpleadoLogic() {
		return rubroempleadoLogic;
	}

	public void setRubroEmpleadoLogic(RubroEmpleadoLogic rubroempleadoLogic) {
		this.rubroempleadoLogic = rubroempleadoLogic;
	}


	public EmpleadoConstanteLogic empleadoconstanteLogic=null;

	public EmpleadoConstanteLogic getEmpleadoConstanteLogic() {
		return empleadoconstanteLogic;
	}

	public void setEmpleadoConstanteLogic(EmpleadoConstanteLogic empleadoconstanteLogic) {
		this.empleadoconstanteLogic = empleadoconstanteLogic;
	}


	public TallaVestidoLogic tallavestidoLogic=null;

	public TallaVestidoLogic getTallaVestidoLogic() {
		return tallavestidoLogic;
	}

	public void setTallaVestidoLogic(TallaVestidoLogic tallavestidoLogic) {
		this.tallavestidoLogic = tallavestidoLogic;
	}


	public NovedadNomiLogic novedadnomiLogic=null;

	public NovedadNomiLogic getNovedadNomiLogic() {
		return novedadnomiLogic;
	}

	public void setNovedadNomiLogic(NovedadNomiLogic novedadnomiLogic) {
		this.novedadnomiLogic = novedadnomiLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoEmpleado=false;
	public Boolean esParaAccionDesdeFormularioEmpleado=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected EmpleadoSessionBeanAdditional empleadoSessionBeanAdditional=null;
	
	public EmpleadoSessionBeanAdditional getEmpleadoSessionBeanAdditional() {
		return this.empleadoSessionBeanAdditional;
	}
	
	public void setEmpleadoSessionBeanAdditional(EmpleadoSessionBeanAdditional empleadoSessionBeanAdditional) {
		try {
			this.empleadoSessionBeanAdditional=empleadoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected EmpleadoBeanSwingJInternalFrameAdditional empleadoBeanSwingJInternalFrameAdditional=null;
	//public class EmpleadoBeanSwingJInternalFrame
	
	public EmpleadoBeanSwingJInternalFrameAdditional getEmpleadoBeanSwingJInternalFrameAdditional() {
		return this.empleadoBeanSwingJInternalFrameAdditional;
	}
	
	public void setEmpleadoBeanSwingJInternalFrameAdditional(EmpleadoBeanSwingJInternalFrameAdditional empleadoBeanSwingJInternalFrameAdditional) {
		try {
			this.empleadoBeanSwingJInternalFrameAdditional=empleadoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public EmpleadoLogic empleadoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Empleado empleadoBean;
	public EmpleadoConstantesFunciones empleadoConstantesFunciones;
	//public EmpleadoParameterReturnGeneral empleadoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public PaisLogic paisLogic;
	public ProvinciaLogic provinciaLogic;
	public CiudadLogic ciudadLogic;
	public CentroCostoLogic centrocostoLogic;
	public ReligionLogic religionLogic;
	public EstadoCivilLogic estadocivilLogic;
	public TipoGeneroLogic tipogeneroLogic;
	public TipoEmpleadoLogic tipoempleadoLogic;
	public TipoInstruccionLogic tipoinstruccionLogic;
	public CargoLogic cargoLogic;
	public EstructuraLogic estructuraLogic;
	public EstructuraLogic estructuraseccionLogic;
	public EstadoEmpleadoLogic estadoempleadoLogic;
	public TipoContratoLogic tipocontratoLogic;
	public TipoCuentaBancoGlobalLogic tipocuentabancoglobalLogic;
	
	//PARAMETROS
	
	
	//public List<Empleado> empleados;	
	//public List<Empleado> empleadosEliminados;
	//public List<Empleado> empleadosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoEmpleado=false;
	public Boolean isVisibilidadCeldaDuplicarEmpleado=true;
	public Boolean isVisibilidadCeldaCopiarEmpleado=true;
	public Boolean isVisibilidadCeldaVerFormEmpleado=true;
	public Boolean isVisibilidadCeldaOrdenEmpleado=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesEmpleado=false;
	public Boolean isVisibilidadCeldaModificarEmpleado=false;
	public Boolean isVisibilidadCeldaActualizarEmpleado=false;
	public Boolean isVisibilidadCeldaEliminarEmpleado=false;
	public Boolean isVisibilidadCeldaCancelarEmpleado=false;
	public Boolean isVisibilidadCeldaGuardarEmpleado=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosEmpleado=false;	
	
	
	public Boolean isVisibilidadFK_IdCargo=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoCivil=false;
	public Boolean isVisibilidadFK_IdEstadoEmpleado=false;
	public Boolean isVisibilidadFK_IdEstructura=false;
	public Boolean isVisibilidadFK_IdEstructuraSeccion=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdProvincia=false;
	public Boolean isVisibilidadFK_IdReligion=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoContrato=false;
	public Boolean isVisibilidadFK_IdTipoCuentaBancoGlobal=false;
	public Boolean isVisibilidadFK_IdTipoEmpleado=false;
	public Boolean isVisibilidadFK_IdTipoGenero=false;
	public Boolean isVisibilidadFK_IdTipoInstruccion=false;
	
	public Long getiIdNuevoEmpleado() {
		return this.iIdNuevoEmpleado;
	}

	public void setiIdNuevoEmpleado(Long iIdNuevoEmpleado) {
		this.iIdNuevoEmpleado = iIdNuevoEmpleado;
	}
	
	public Long getidEmpleadoActual() {
		return this.idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual = idEmpleadoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Empleado getempleado() {
		return this.empleado;
	}

	public void setempleado(Empleado empleado) {
		this.empleado = empleado;
	}
	
	public Empleado getempleadoAux() {
		return this.empleadoAux;
	}

	public void setempleadoAux(Empleado empleadoAux) {
		this.empleadoAux = empleadoAux;
	}				
	
	public Empleado getempleadoAnterior() {
		return this.empleadoAnterior;
	}

	public void setempleadoAnterior(Empleado empleadoAnterior) {
		this.empleadoAnterior = empleadoAnterior;
	}	
	
	public Empleado getempleadoTotales() {
		return this.empleadoTotales;
	}

	public void setempleadoTotales(Empleado empleadoTotales) {
		this.empleadoTotales = empleadoTotales;
	}	
	
	public Empleado getempleadoBean() {
		return this.empleadoBean;
	}

	public void setempleadoBean(Empleado empleadoBean) {
		this.empleadoBean = empleadoBean;
	}	
	
	public EmpleadoParameterReturnGeneral getempleadoReturnGeneral() {
		return this.empleadoReturnGeneral;
	}

	public void setempleadoReturnGeneral(EmpleadoParameterReturnGeneral empleadoReturnGeneral) {
		this.empleadoReturnGeneral = empleadoReturnGeneral;
	}	
	
	
	public Long id_cargoFK_IdCargo=-1L;

	public Long getid_cargoFK_IdCargo() {
		return this.id_cargoFK_IdCargo;
	}

	public void setid_cargoFK_IdCargo(Long id_cargoFK_IdCargo) {
		this.id_cargoFK_IdCargo = id_cargoFK_IdCargo;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_civilFK_IdEstadoCivil=-1L;

	public Long getid_estado_civilFK_IdEstadoCivil() {
		return this.id_estado_civilFK_IdEstadoCivil;
	}

	public void setid_estado_civilFK_IdEstadoCivil(Long id_estado_civilFK_IdEstadoCivil) {
		this.id_estado_civilFK_IdEstadoCivil = id_estado_civilFK_IdEstadoCivil;
	}

	public Long id_estado_empleadoFK_IdEstadoEmpleado=-1L;

	public Long getid_estado_empleadoFK_IdEstadoEmpleado() {
		return this.id_estado_empleadoFK_IdEstadoEmpleado;
	}

	public void setid_estado_empleadoFK_IdEstadoEmpleado(Long id_estado_empleadoFK_IdEstadoEmpleado) {
		this.id_estado_empleadoFK_IdEstadoEmpleado = id_estado_empleadoFK_IdEstadoEmpleado;
	}

	public Long id_estructuraFK_IdEstructura=-1L;

	public Long getid_estructuraFK_IdEstructura() {
		return this.id_estructuraFK_IdEstructura;
	}

	public void setid_estructuraFK_IdEstructura(Long id_estructuraFK_IdEstructura) {
		this.id_estructuraFK_IdEstructura = id_estructuraFK_IdEstructura;
	}

	public Long id_estructura_seccionFK_IdEstructuraSeccion=-1L;

	public Long getid_estructura_seccionFK_IdEstructuraSeccion() {
		return this.id_estructura_seccionFK_IdEstructuraSeccion;
	}

	public void setid_estructura_seccionFK_IdEstructuraSeccion(Long id_estructura_seccionFK_IdEstructuraSeccion) {
		this.id_estructura_seccionFK_IdEstructuraSeccion = id_estructura_seccionFK_IdEstructuraSeccion;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_provinciaFK_IdProvincia=-1L;

	public Long getid_provinciaFK_IdProvincia() {
		return this.id_provinciaFK_IdProvincia;
	}

	public void setid_provinciaFK_IdProvincia(Long id_provinciaFK_IdProvincia) {
		this.id_provinciaFK_IdProvincia = id_provinciaFK_IdProvincia;
	}

	public Long id_religionFK_IdReligion=-1L;

	public Long getid_religionFK_IdReligion() {
		return this.id_religionFK_IdReligion;
	}

	public void setid_religionFK_IdReligion(Long id_religionFK_IdReligion) {
		this.id_religionFK_IdReligion = id_religionFK_IdReligion;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_contratoFK_IdTipoContrato=-1L;

	public Long getid_tipo_contratoFK_IdTipoContrato() {
		return this.id_tipo_contratoFK_IdTipoContrato;
	}

	public void setid_tipo_contratoFK_IdTipoContrato(Long id_tipo_contratoFK_IdTipoContrato) {
		this.id_tipo_contratoFK_IdTipoContrato = id_tipo_contratoFK_IdTipoContrato;
	}

	public Long id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal=-1L;

	public Long getid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal() {
		return this.id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal;
	}

	public void setid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal(Long id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal) {
		this.id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal = id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal;
	}

	public Long id_tipo_empleadoFK_IdTipoEmpleado=-1L;

	public Long getid_tipo_empleadoFK_IdTipoEmpleado() {
		return this.id_tipo_empleadoFK_IdTipoEmpleado;
	}

	public void setid_tipo_empleadoFK_IdTipoEmpleado(Long id_tipo_empleadoFK_IdTipoEmpleado) {
		this.id_tipo_empleadoFK_IdTipoEmpleado = id_tipo_empleadoFK_IdTipoEmpleado;
	}

	public Long id_tipo_generoFK_IdTipoGenero=-1L;

	public Long getid_tipo_generoFK_IdTipoGenero() {
		return this.id_tipo_generoFK_IdTipoGenero;
	}

	public void setid_tipo_generoFK_IdTipoGenero(Long id_tipo_generoFK_IdTipoGenero) {
		this.id_tipo_generoFK_IdTipoGenero = id_tipo_generoFK_IdTipoGenero;
	}

	public Long id_tipo_instruccionFK_IdTipoInstruccion=-1L;

	public Long getid_tipo_instruccionFK_IdTipoInstruccion() {
		return this.id_tipo_instruccionFK_IdTipoInstruccion;
	}

	public void setid_tipo_instruccionFK_IdTipoInstruccion(Long id_tipo_instruccionFK_IdTipoInstruccion) {
		this.id_tipo_instruccionFK_IdTipoInstruccion = id_tipo_instruccionFK_IdTipoInstruccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public EmpleadoLogic getEmpleadoLogic()	{		
		return empleadoLogic;
	}

	public void setEmpleadoLogic(EmpleadoLogic empleadoLogic) {
		this.empleadoLogic = empleadoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoEmpleado() {
		return isEsNuevoEmpleado;
	}

	public void setIsEsNuevoEmpleado(Boolean isEsNuevoEmpleado) {
		this.isEsNuevoEmpleado = isEsNuevoEmpleado;
	}

	public Boolean getEsParaAccionDesdeFormularioEmpleado() {
		return esParaAccionDesdeFormularioEmpleado;
	}
	
	public void setEsParaAccionDesdeFormularioEmpleado(Boolean esParaAccionDesdeFormularioEmpleado) {
		this.esParaAccionDesdeFormularioEmpleado = esParaAccionDesdeFormularioEmpleado;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(empleadoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(empleadoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(empleadoSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProvinciasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.provinciasForeignKey=new ArrayList<Provincia>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProvinciaLogic provinciaLogic=new ProvinciaLogic();

			//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

					provinciaLogic.getTodosProvinciasWithConnection(sFinalQuery,new Pagination());

					this.provinciasForeignKey=provinciaLogic.getProvincias();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProvincia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					provinciaLogic.getEntityWithConnection(empleadoSessionBean.getlidProvinciaActual());
					this.provinciasForeignKey.add(provinciaLogic.getProvincia());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(empleadoSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(empleadoSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosReligionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.religionsForeignKey=new ArrayList<Religion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ReligionLogic religionLogic=new ReligionLogic();

			//religionLogic.getReligionDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionReligion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//religionLogic.getReligionDataAccess().setIsForForeingKeyData(true);

					religionLogic.getTodosReligionsWithConnection(sFinalQuery,new Pagination());

					this.religionsForeignKey=religionLogic.getReligions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaReligion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					religionLogic.getEntityWithConnection(empleadoSessionBean.getlidReligionActual());
					this.religionsForeignKey.add(religionLogic.getReligion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoCivilsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoCivilLogic estadocivilLogic=new EstadoCivilLogic();

			//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

					estadocivilLogic.getTodosEstadoCivilsWithConnection(sFinalQuery,new Pagination());

					this.estadocivilsForeignKey=estadocivilLogic.getEstadoCivils();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoCivil(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadocivilLogic.getEntityWithConnection(empleadoSessionBean.getlidEstadoCivilActual());
					this.estadocivilsForeignKey.add(estadocivilLogic.getEstadoCivil());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGenerosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGeneroLogic tipogeneroLogic=new TipoGeneroLogic();

			//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

					tipogeneroLogic.getTodosTipoGenerosWithConnection(sFinalQuery,new Pagination());

					this.tipogenerosForeignKey=tipogeneroLogic.getTipoGeneros();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGenero(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogeneroLogic.getEntityWithConnection(empleadoSessionBean.getlidTipoGeneroActual());
					this.tipogenerosForeignKey.add(tipogeneroLogic.getTipoGenero());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoempleadosForeignKey=new ArrayList<TipoEmpleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoEmpleadoLogic tipoempleadoLogic=new TipoEmpleadoLogic();

			//tipoempleadoLogic.getTipoEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoempleadoLogic.getTipoEmpleadoDataAccess().setIsForForeingKeyData(true);

					tipoempleadoLogic.getTodosTipoEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.tipoempleadosForeignKey=tipoempleadoLogic.getTipoEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoempleadoLogic.getEntityWithConnection(empleadoSessionBean.getlidTipoEmpleadoActual());
					this.tipoempleadosForeignKey.add(tipoempleadoLogic.getTipoEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoInstruccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoinstruccionsForeignKey=new ArrayList<TipoInstruccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoInstruccionLogic tipoinstruccionLogic=new TipoInstruccionLogic();

			//tipoinstruccionLogic.getTipoInstruccionDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoInstruccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoinstruccionLogic.getTipoInstruccionDataAccess().setIsForForeingKeyData(true);

					tipoinstruccionLogic.getTodosTipoInstruccionsWithConnection(sFinalQuery,new Pagination());

					this.tipoinstruccionsForeignKey=tipoinstruccionLogic.getTipoInstruccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoInstruccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoinstruccionLogic.getEntityWithConnection(empleadoSessionBean.getlidTipoInstruccionActual());
					this.tipoinstruccionsForeignKey.add(tipoinstruccionLogic.getTipoInstruccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCargosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cargosForeignKey=new ArrayList<Cargo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CargoLogic cargoLogic=new CargoLogic();

			//cargoLogic.getCargoDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCargo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cargoLogic.getCargoDataAccess().setIsForForeingKeyData(true);

					cargoLogic.getTodosCargosWithConnection(sFinalQuery,new Pagination());

					this.cargosForeignKey=cargoLogic.getCargos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCargo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cargoLogic.getEntityWithConnection(empleadoSessionBean.getlidCargoActual());
					this.cargosForeignKey.add(cargoLogic.getCargo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstructurasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estructurasForeignKey=new ArrayList<Estructura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstructuraLogic estructuraLogic=new EstructuraLogic();

			//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

					estructuraLogic.getTodosEstructurasWithConnection(sFinalQuery,new Pagination());

					this.estructurasForeignKey=estructuraLogic.getEstructuras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstructura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEntityWithConnection(empleadoSessionBean.getlidEstructuraActual());
					this.estructurasForeignKey.add(estructuraLogic.getEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstructuraSeccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estructuraseccionsForeignKey=new ArrayList<Estructura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstructuraLogic estructuraLogic=new EstructuraLogic();

			//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructuraSeccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estructuraseccionLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

					estructuraLogic.getTodosEstructurasWithConnection(sFinalQuery,new Pagination());

					this.estructuraseccionsForeignKey=estructuraLogic.getEstructuras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstructuraSeccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEntityWithConnection(empleadoSessionBean.getlidEstructuraSeccionActual());
					this.estructuraseccionsForeignKey.add(estructuraLogic.getEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoempleadosForeignKey=new ArrayList<EstadoEmpleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoEmpleadoLogic estadoempleadoLogic=new EstadoEmpleadoLogic();

			//estadoempleadoLogic.getEstadoEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoempleadoLogic.getEstadoEmpleadoDataAccess().setIsForForeingKeyData(true);

					estadoempleadoLogic.getTodosEstadoEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.estadoempleadosForeignKey=estadoempleadoLogic.getEstadoEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoempleadoLogic.getEntityWithConnection(empleadoSessionBean.getlidEstadoEmpleadoActual());
					this.estadoempleadosForeignKey.add(estadoempleadoLogic.getEstadoEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoContratosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocontratosForeignKey=new ArrayList<TipoContrato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoContratoLogic tipocontratoLogic=new TipoContratoLogic();

			//tipocontratoLogic.getTipoContratoDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoContrato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocontratoLogic.getTipoContratoDataAccess().setIsForForeingKeyData(true);

					tipocontratoLogic.getTodosTipoContratosWithConnection(sFinalQuery,new Pagination());

					this.tipocontratosForeignKey=tipocontratoLogic.getTipoContratos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoContrato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocontratoLogic.getEntityWithConnection(empleadoSessionBean.getlidTipoContratoActual());
					this.tipocontratosForeignKey.add(tipocontratoLogic.getTipoContrato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCuentaBancoGlobalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocuentabancoglobalsForeignKey=new ArrayList<TipoCuentaBancoGlobal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCuentaBancoGlobalLogic tipocuentabancoglobalLogic=new TipoCuentaBancoGlobalLogic();

			//tipocuentabancoglobalLogic.getTipoCuentaBancoGlobalDataAccess().setIsForForeingKeyData(true);

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCuentaBancoGlobal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocuentabancoglobalLogic.getTipoCuentaBancoGlobalDataAccess().setIsForForeingKeyData(true);

					tipocuentabancoglobalLogic.getTodosTipoCuentaBancoGlobalsWithConnection(sFinalQuery,new Pagination());

					this.tipocuentabancoglobalsForeignKey=tipocuentabancoglobalLogic.getTipoCuentaBancoGlobals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCuentaBancoGlobal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocuentabancoglobalLogic.getEntityWithConnection(empleadoSessionBean.getlidTipoCuentaBancoGlobalActual());
					this.tipocuentabancoglobalsForeignKey.add(tipocuentabancoglobalLogic.getTipoCuentaBancoGlobal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaEmpleado.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaEmpleadoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaEmpleadoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaEmpleadoGenerico!=null && jComboBoxid_empresaEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_empresaEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalEmpleado.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalEmpleadoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalEmpleadoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalEmpleadoGenerico!=null && jComboBoxid_sucursalEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisEmpleado.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisEmpleado!=null) {
						jComboBoxid_paisFK_IdPaisEmpleado.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisEmpleado!=null) {
							//jComboBoxid_paisFK_IdPaisEmpleado.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisEmpleado.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisEmpleadoGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisEmpleadoGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisEmpleadoGenerico!=null && jComboBoxid_paisEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_paisEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProvinciaForeignKey(Long idProvinciaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(provinciaTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setProvincia(provinciaTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setSelectedItem(provinciaTemp);
					}
				} else {
					//jComboBoxid_provinciaEmpleado.setSelectedItem(provinciaTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProvincia") || sFormularioTipoBusqueda.equals("Todos")){
					if(provinciaTemp!=null && jComboBoxid_provinciaFK_IdProvinciaEmpleado!=null) {
						jComboBoxid_provinciaFK_IdProvinciaEmpleado.setSelectedItem(provinciaTemp);
					} else {
						if(jComboBoxid_provinciaFK_IdProvinciaEmpleado!=null) {
							//jComboBoxid_provinciaFK_IdProvinciaEmpleado.setSelectedItem(provinciaTemp);
							if(jComboBoxid_provinciaFK_IdProvinciaEmpleado.getItemCount()>0) {
								jComboBoxid_provinciaFK_IdProvinciaEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProvinciaForeignKeyDescripcion(Long idProvinciaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}


			sDescripcion=ProvinciaConstantesFunciones.getProvinciaDescripcion(provinciaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProvinciaForeignKeyGenerico(Long idProvinciaSeleccionado,JComboBox jComboBoxid_provinciaEmpleadoGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(provinciaTemp!=null) {
				jComboBoxid_provinciaEmpleadoGenerico.setSelectedItem(provinciaTemp);
			} else {
				if(jComboBoxid_provinciaEmpleadoGenerico!=null && jComboBoxid_provinciaEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_provinciaEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadEmpleado.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudadTemp!=null && jComboBoxid_ciudadFK_IdCiudadEmpleado!=null) {
						jComboBoxid_ciudadFK_IdCiudadEmpleado.setSelectedItem(ciudadTemp);
					} else {
						if(jComboBoxid_ciudadFK_IdCiudadEmpleado!=null) {
							//jComboBoxid_ciudadFK_IdCiudadEmpleado.setSelectedItem(ciudadTemp);
							if(jComboBoxid_ciudadFK_IdCiudadEmpleado.getItemCount()>0) {
								jComboBoxid_ciudadFK_IdCiudadEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadEmpleadoGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadEmpleadoGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadEmpleadoGenerico!=null && jComboBoxid_ciudadEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_ciudadEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoEmpleado.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoEmpleado!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoEmpleado!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoEmpleadoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoEmpleadoGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoEmpleadoGenerico!=null && jComboBoxid_centro_costoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualReligionForeignKey(Long idReligionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Religion  religionTemp=null;

			for(Religion religionAux:religionsForeignKey) {
				if(religionAux.getId()!=null && religionAux.getId().equals(idReligionSeleccionado)) {
					religionTemp=religionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(religionTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setReligion(religionTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setSelectedItem(religionTemp);
					}
				} else {
					//jComboBoxid_religionEmpleado.setSelectedItem(religionTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdReligion") || sFormularioTipoBusqueda.equals("Todos")){
					if(religionTemp!=null && jComboBoxid_religionFK_IdReligionEmpleado!=null) {
						jComboBoxid_religionFK_IdReligionEmpleado.setSelectedItem(religionTemp);
					} else {
						if(jComboBoxid_religionFK_IdReligionEmpleado!=null) {
							//jComboBoxid_religionFK_IdReligionEmpleado.setSelectedItem(religionTemp);
							if(jComboBoxid_religionFK_IdReligionEmpleado.getItemCount()>0) {
								jComboBoxid_religionFK_IdReligionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualReligionForeignKeyDescripcion(Long idReligionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Religion  religionTemp=null;

			for(Religion religionAux:religionsForeignKey) {
				if(religionAux.getId()!=null && religionAux.getId().equals(idReligionSeleccionado)) {
					religionTemp=religionAux;
					break;
				}
			}


			sDescripcion=ReligionConstantesFunciones.getReligionDescripcion(religionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualReligionForeignKeyGenerico(Long idReligionSeleccionado,JComboBox jComboBoxid_religionEmpleadoGenerico)throws Exception
	{
		try
		{
			Religion  religionTemp=null;

			for(Religion religionAux:religionsForeignKey) {
				if(religionAux.getId()!=null && religionAux.getId().equals(idReligionSeleccionado)) {
					religionTemp=religionAux;
					break;
				}
			}

			if(religionTemp!=null) {
				jComboBoxid_religionEmpleadoGenerico.setSelectedItem(religionTemp);
			} else {
				if(jComboBoxid_religionEmpleadoGenerico!=null && jComboBoxid_religionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_religionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoCivilForeignKey(Long idEstadoCivilSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadocivilTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setEstadoCivil(estadocivilTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setSelectedItem(estadocivilTemp);
					}
				} else {
					//jComboBoxid_estado_civilEmpleado.setSelectedItem(estadocivilTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadocivilTemp!=null && jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado!=null) {
						jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.setSelectedItem(estadocivilTemp);
					} else {
						if(jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado!=null) {
							//jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.setSelectedItem(estadocivilTemp);
							if(jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.getItemCount()>0) {
								jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoCivilForeignKeyDescripcion(Long idEstadoCivilSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}


			sDescripcion=EstadoCivilConstantesFunciones.getEstadoCivilDescripcion(estadocivilTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoCivilForeignKeyGenerico(Long idEstadoCivilSeleccionado,JComboBox jComboBoxid_estado_civilEmpleadoGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(estadocivilTemp!=null) {
				jComboBoxid_estado_civilEmpleadoGenerico.setSelectedItem(estadocivilTemp);
			} else {
				if(jComboBoxid_estado_civilEmpleadoGenerico!=null && jComboBoxid_estado_civilEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_estado_civilEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGeneroForeignKey(Long idTipoGeneroSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogeneroTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setTipoGenero(tipogeneroTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setSelectedItem(tipogeneroTemp);
					}
				} else {
					//jComboBoxid_tipo_generoEmpleado.setSelectedItem(tipogeneroTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoGenero") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipogeneroTemp!=null && jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado!=null) {
						jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.setSelectedItem(tipogeneroTemp);
					} else {
						if(jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado!=null) {
							//jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.setSelectedItem(tipogeneroTemp);
							if(jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGeneroForeignKeyDescripcion(Long idTipoGeneroSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}


			sDescripcion=TipoGeneroConstantesFunciones.getTipoGeneroDescripcion(tipogeneroTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGeneroForeignKeyGenerico(Long idTipoGeneroSeleccionado,JComboBox jComboBoxid_tipo_generoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(tipogeneroTemp!=null) {
				jComboBoxid_tipo_generoEmpleadoGenerico.setSelectedItem(tipogeneroTemp);
			} else {
				if(jComboBoxid_tipo_generoEmpleadoGenerico!=null && jComboBoxid_tipo_generoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_generoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoEmpleadoForeignKey(Long idTipoEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoEmpleado  tipoempleadoTemp=null;

			for(TipoEmpleado tipoempleadoAux:tipoempleadosForeignKey) {
				if(tipoempleadoAux.getId()!=null && tipoempleadoAux.getId().equals(idTipoEmpleadoSeleccionado)) {
					tipoempleadoTemp=tipoempleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoempleadoTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setTipoEmpleado(tipoempleadoTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setSelectedItem(tipoempleadoTemp);
					}
				} else {
					//jComboBoxid_tipo_empleadoEmpleado.setSelectedItem(tipoempleadoTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoempleadoTemp!=null && jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado!=null) {
						jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.setSelectedItem(tipoempleadoTemp);
					} else {
						if(jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado!=null) {
							//jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.setSelectedItem(tipoempleadoTemp);
							if(jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoEmpleadoForeignKeyDescripcion(Long idTipoEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoEmpleado  tipoempleadoTemp=null;

			for(TipoEmpleado tipoempleadoAux:tipoempleadosForeignKey) {
				if(tipoempleadoAux.getId()!=null && tipoempleadoAux.getId().equals(idTipoEmpleadoSeleccionado)) {
					tipoempleadoTemp=tipoempleadoAux;
					break;
				}
			}


			sDescripcion=TipoEmpleadoConstantesFunciones.getTipoEmpleadoDescripcion(tipoempleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoEmpleadoForeignKeyGenerico(Long idTipoEmpleadoSeleccionado,JComboBox jComboBoxid_tipo_empleadoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoEmpleado  tipoempleadoTemp=null;

			for(TipoEmpleado tipoempleadoAux:tipoempleadosForeignKey) {
				if(tipoempleadoAux.getId()!=null && tipoempleadoAux.getId().equals(idTipoEmpleadoSeleccionado)) {
					tipoempleadoTemp=tipoempleadoAux;
					break;
				}
			}

			if(tipoempleadoTemp!=null) {
				jComboBoxid_tipo_empleadoEmpleadoGenerico.setSelectedItem(tipoempleadoTemp);
			} else {
				if(jComboBoxid_tipo_empleadoEmpleadoGenerico!=null && jComboBoxid_tipo_empleadoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_empleadoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoInstruccionForeignKey(Long idTipoInstruccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoInstruccion  tipoinstruccionTemp=null;

			for(TipoInstruccion tipoinstruccionAux:tipoinstruccionsForeignKey) {
				if(tipoinstruccionAux.getId()!=null && tipoinstruccionAux.getId().equals(idTipoInstruccionSeleccionado)) {
					tipoinstruccionTemp=tipoinstruccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoinstruccionTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setTipoInstruccion(tipoinstruccionTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setSelectedItem(tipoinstruccionTemp);
					}
				} else {
					//jComboBoxid_tipo_instruccionEmpleado.setSelectedItem(tipoinstruccionTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoInstruccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoinstruccionTemp!=null && jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado!=null) {
						jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.setSelectedItem(tipoinstruccionTemp);
					} else {
						if(jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado!=null) {
							//jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.setSelectedItem(tipoinstruccionTemp);
							if(jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoInstruccionForeignKeyDescripcion(Long idTipoInstruccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoInstruccion  tipoinstruccionTemp=null;

			for(TipoInstruccion tipoinstruccionAux:tipoinstruccionsForeignKey) {
				if(tipoinstruccionAux.getId()!=null && tipoinstruccionAux.getId().equals(idTipoInstruccionSeleccionado)) {
					tipoinstruccionTemp=tipoinstruccionAux;
					break;
				}
			}


			sDescripcion=TipoInstruccionConstantesFunciones.getTipoInstruccionDescripcion(tipoinstruccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoInstruccionForeignKeyGenerico(Long idTipoInstruccionSeleccionado,JComboBox jComboBoxid_tipo_instruccionEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoInstruccion  tipoinstruccionTemp=null;

			for(TipoInstruccion tipoinstruccionAux:tipoinstruccionsForeignKey) {
				if(tipoinstruccionAux.getId()!=null && tipoinstruccionAux.getId().equals(idTipoInstruccionSeleccionado)) {
					tipoinstruccionTemp=tipoinstruccionAux;
					break;
				}
			}

			if(tipoinstruccionTemp!=null) {
				jComboBoxid_tipo_instruccionEmpleadoGenerico.setSelectedItem(tipoinstruccionTemp);
			} else {
				if(jComboBoxid_tipo_instruccionEmpleadoGenerico!=null && jComboBoxid_tipo_instruccionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_instruccionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCargoForeignKey(Long idCargoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cargo  cargoTemp=null;

			for(Cargo cargoAux:cargosForeignKey) {
				if(cargoAux.getId()!=null && cargoAux.getId().equals(idCargoSeleccionado)) {
					cargoTemp=cargoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cargoTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setCargo(cargoTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setSelectedItem(cargoTemp);
					}
				} else {
					//jComboBoxid_cargoEmpleado.setSelectedItem(cargoTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCargo") || sFormularioTipoBusqueda.equals("Todos")){
					if(cargoTemp!=null && jComboBoxid_cargoFK_IdCargoEmpleado!=null) {
						jComboBoxid_cargoFK_IdCargoEmpleado.setSelectedItem(cargoTemp);
					} else {
						if(jComboBoxid_cargoFK_IdCargoEmpleado!=null) {
							//jComboBoxid_cargoFK_IdCargoEmpleado.setSelectedItem(cargoTemp);
							if(jComboBoxid_cargoFK_IdCargoEmpleado.getItemCount()>0) {
								jComboBoxid_cargoFK_IdCargoEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCargoForeignKeyDescripcion(Long idCargoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cargo  cargoTemp=null;

			for(Cargo cargoAux:cargosForeignKey) {
				if(cargoAux.getId()!=null && cargoAux.getId().equals(idCargoSeleccionado)) {
					cargoTemp=cargoAux;
					break;
				}
			}


			sDescripcion=CargoConstantesFunciones.getCargoDescripcion(cargoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCargoForeignKeyGenerico(Long idCargoSeleccionado,JComboBox jComboBoxid_cargoEmpleadoGenerico)throws Exception
	{
		try
		{
			Cargo  cargoTemp=null;

			for(Cargo cargoAux:cargosForeignKey) {
				if(cargoAux.getId()!=null && cargoAux.getId().equals(idCargoSeleccionado)) {
					cargoTemp=cargoAux;
					break;
				}
			}

			if(cargoTemp!=null) {
				jComboBoxid_cargoEmpleadoGenerico.setSelectedItem(cargoTemp);
			} else {
				if(jComboBoxid_cargoEmpleadoGenerico!=null && jComboBoxid_cargoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_cargoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstructuraForeignKey(Long idEstructuraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estructuraTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setEstructura(estructuraTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setSelectedItem(estructuraTemp);
					}
				} else {
					//jComboBoxid_estructuraEmpleado.setSelectedItem(estructuraTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){
					if(estructuraTemp!=null && jComboBoxid_estructuraFK_IdEstructuraEmpleado!=null) {
						jComboBoxid_estructuraFK_IdEstructuraEmpleado.setSelectedItem(estructuraTemp);
					} else {
						if(jComboBoxid_estructuraFK_IdEstructuraEmpleado!=null) {
							//jComboBoxid_estructuraFK_IdEstructuraEmpleado.setSelectedItem(estructuraTemp);
							if(jComboBoxid_estructuraFK_IdEstructuraEmpleado.getItemCount()>0) {
								jComboBoxid_estructuraFK_IdEstructuraEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstructuraForeignKeyDescripcion(Long idEstructuraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}


			sDescripcion=EstructuraConstantesFunciones.getEstructuraDescripcion(estructuraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstructuraForeignKeyGenerico(Long idEstructuraSeleccionado,JComboBox jComboBoxid_estructuraEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(estructuraTemp!=null) {
				jComboBoxid_estructuraEmpleadoGenerico.setSelectedItem(estructuraTemp);
			} else {
				if(jComboBoxid_estructuraEmpleadoGenerico!=null && jComboBoxid_estructuraEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_estructuraEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstructuraSeccionForeignKey(Long idEstructuraSeccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Estructura  estructuraseccionTemp=null;

			for(Estructura estructuraseccionAux:estructuraseccionsForeignKey) {
				if(estructuraseccionAux.getId()!=null && estructuraseccionAux.getId().equals(idEstructuraSeccionSeleccionado)) {
					estructuraseccionTemp=estructuraseccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estructuraseccionTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setEstructuraSeccion(estructuraseccionTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setSelectedItem(estructuraseccionTemp);
					}
				} else {
					//jComboBoxid_estructura_seccionEmpleado.setSelectedItem(estructuraseccionTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstructuraSeccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(estructuraseccionTemp!=null && jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado!=null) {
						jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.setSelectedItem(estructuraseccionTemp);
					} else {
						if(jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado!=null) {
							//jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.setSelectedItem(estructuraseccionTemp);
							if(jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.getItemCount()>0) {
								jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstructuraSeccionForeignKeyDescripcion(Long idEstructuraSeccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Estructura  estructuraseccionTemp=null;

			for(Estructura estructuraseccionAux:estructuraseccionsForeignKey) {
				if(estructuraseccionAux.getId()!=null && estructuraseccionAux.getId().equals(idEstructuraSeccionSeleccionado)) {
					estructuraseccionTemp=estructuraseccionAux;
					break;
				}
			}


			sDescripcion=EstructuraConstantesFunciones.getEstructuraDescripcion(estructuraseccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstructuraSeccionForeignKeyGenerico(Long idEstructuraSeccionSeleccionado,JComboBox jComboBoxid_estructura_seccionEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraseccionTemp=null;

			for(Estructura estructuraseccionAux:estructuraseccionsForeignKey) {
				if(estructuraseccionAux.getId()!=null && estructuraseccionAux.getId().equals(idEstructuraSeccionSeleccionado)) {
					estructuraseccionTemp=estructuraseccionAux;
					break;
				}
			}

			if(estructuraseccionTemp!=null) {
				jComboBoxid_estructura_seccionEmpleadoGenerico.setSelectedItem(estructuraseccionTemp);
			} else {
				if(jComboBoxid_estructura_seccionEmpleadoGenerico!=null && jComboBoxid_estructura_seccionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_estructura_seccionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoEmpleadoForeignKey(Long idEstadoEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoEmpleado  estadoempleadoTemp=null;

			for(EstadoEmpleado estadoempleadoAux:estadoempleadosForeignKey) {
				if(estadoempleadoAux.getId()!=null && estadoempleadoAux.getId().equals(idEstadoEmpleadoSeleccionado)) {
					estadoempleadoTemp=estadoempleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoempleadoTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setEstadoEmpleado(estadoempleadoTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setSelectedItem(estadoempleadoTemp);
					}
				} else {
					//jComboBoxid_estado_empleadoEmpleado.setSelectedItem(estadoempleadoTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoempleadoTemp!=null && jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado!=null) {
						jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.setSelectedItem(estadoempleadoTemp);
					} else {
						if(jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado!=null) {
							//jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.setSelectedItem(estadoempleadoTemp);
							if(jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.getItemCount()>0) {
								jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoEmpleadoForeignKeyDescripcion(Long idEstadoEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoEmpleado  estadoempleadoTemp=null;

			for(EstadoEmpleado estadoempleadoAux:estadoempleadosForeignKey) {
				if(estadoempleadoAux.getId()!=null && estadoempleadoAux.getId().equals(idEstadoEmpleadoSeleccionado)) {
					estadoempleadoTemp=estadoempleadoAux;
					break;
				}
			}


			sDescripcion=EstadoEmpleadoConstantesFunciones.getEstadoEmpleadoDescripcion(estadoempleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoEmpleadoForeignKeyGenerico(Long idEstadoEmpleadoSeleccionado,JComboBox jComboBoxid_estado_empleadoEmpleadoGenerico)throws Exception
	{
		try
		{
			EstadoEmpleado  estadoempleadoTemp=null;

			for(EstadoEmpleado estadoempleadoAux:estadoempleadosForeignKey) {
				if(estadoempleadoAux.getId()!=null && estadoempleadoAux.getId().equals(idEstadoEmpleadoSeleccionado)) {
					estadoempleadoTemp=estadoempleadoAux;
					break;
				}
			}

			if(estadoempleadoTemp!=null) {
				jComboBoxid_estado_empleadoEmpleadoGenerico.setSelectedItem(estadoempleadoTemp);
			} else {
				if(jComboBoxid_estado_empleadoEmpleadoGenerico!=null && jComboBoxid_estado_empleadoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_estado_empleadoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoContratoForeignKey(Long idTipoContratoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoContrato  tipocontratoTemp=null;

			for(TipoContrato tipocontratoAux:tipocontratosForeignKey) {
				if(tipocontratoAux.getId()!=null && tipocontratoAux.getId().equals(idTipoContratoSeleccionado)) {
					tipocontratoTemp=tipocontratoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocontratoTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setTipoContrato(tipocontratoTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setSelectedItem(tipocontratoTemp);
					}
				} else {
					//jComboBoxid_tipo_contratoEmpleado.setSelectedItem(tipocontratoTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoContrato") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocontratoTemp!=null && jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado!=null) {
						jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.setSelectedItem(tipocontratoTemp);
					} else {
						if(jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado!=null) {
							//jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.setSelectedItem(tipocontratoTemp);
							if(jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoContratoForeignKeyDescripcion(Long idTipoContratoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoContrato  tipocontratoTemp=null;

			for(TipoContrato tipocontratoAux:tipocontratosForeignKey) {
				if(tipocontratoAux.getId()!=null && tipocontratoAux.getId().equals(idTipoContratoSeleccionado)) {
					tipocontratoTemp=tipocontratoAux;
					break;
				}
			}


			sDescripcion=TipoContratoConstantesFunciones.getTipoContratoDescripcion(tipocontratoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoContratoForeignKeyGenerico(Long idTipoContratoSeleccionado,JComboBox jComboBoxid_tipo_contratoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoContrato  tipocontratoTemp=null;

			for(TipoContrato tipocontratoAux:tipocontratosForeignKey) {
				if(tipocontratoAux.getId()!=null && tipocontratoAux.getId().equals(idTipoContratoSeleccionado)) {
					tipocontratoTemp=tipocontratoAux;
					break;
				}
			}

			if(tipocontratoTemp!=null) {
				jComboBoxid_tipo_contratoEmpleadoGenerico.setSelectedItem(tipocontratoTemp);
			} else {
				if(jComboBoxid_tipo_contratoEmpleadoGenerico!=null && jComboBoxid_tipo_contratoEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_contratoEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCuentaBancoGlobalForeignKey(Long idTipoCuentaBancoGlobalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCuentaBancoGlobal  tipocuentabancoglobalTemp=null;

			for(TipoCuentaBancoGlobal tipocuentabancoglobalAux:tipocuentabancoglobalsForeignKey) {
				if(tipocuentabancoglobalAux.getId()!=null && tipocuentabancoglobalAux.getId().equals(idTipoCuentaBancoGlobalSeleccionado)) {
					tipocuentabancoglobalTemp=tipocuentabancoglobalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocuentabancoglobalTemp!=null) {

					if(this.empleado!=null) {
						this.empleado.setTipoCuentaBancoGlobal(tipocuentabancoglobalTemp);
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedItem(tipocuentabancoglobalTemp);
					}
				} else {
					//jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedItem(tipocuentabancoglobalTemp);
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCuentaBancoGlobal") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocuentabancoglobalTemp!=null && jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado!=null) {
						jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.setSelectedItem(tipocuentabancoglobalTemp);
					} else {
						if(jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado!=null) {
							//jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.setSelectedItem(tipocuentabancoglobalTemp);
							if(jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCuentaBancoGlobalForeignKeyDescripcion(Long idTipoCuentaBancoGlobalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCuentaBancoGlobal  tipocuentabancoglobalTemp=null;

			for(TipoCuentaBancoGlobal tipocuentabancoglobalAux:tipocuentabancoglobalsForeignKey) {
				if(tipocuentabancoglobalAux.getId()!=null && tipocuentabancoglobalAux.getId().equals(idTipoCuentaBancoGlobalSeleccionado)) {
					tipocuentabancoglobalTemp=tipocuentabancoglobalAux;
					break;
				}
			}


			sDescripcion=TipoCuentaBancoGlobalConstantesFunciones.getTipoCuentaBancoGlobalDescripcion(tipocuentabancoglobalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCuentaBancoGlobalForeignKeyGenerico(Long idTipoCuentaBancoGlobalSeleccionado,JComboBox jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoCuentaBancoGlobal  tipocuentabancoglobalTemp=null;

			for(TipoCuentaBancoGlobal tipocuentabancoglobalAux:tipocuentabancoglobalsForeignKey) {
				if(tipocuentabancoglobalAux.getId()!=null && tipocuentabancoglobalAux.getId().equals(idTipoCuentaBancoGlobalSeleccionado)) {
					tipocuentabancoglobalTemp=tipocuentabancoglobalAux;
					break;
				}
			}

			if(tipocuentabancoglobalTemp!=null) {
				jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico.setSelectedItem(tipocuentabancoglobalTemp);
			} else {
				if(jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico!=null && jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Empleado empleado,JComboBox jComboBoxid_empresaEmpleadoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaEmpleadoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaEmpleadoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				empleado.setid_empresa(empresaAux.getId());
				empleado.setempresa_descripcion(EmpleadoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				empleado.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Empleado empleado,JComboBox jComboBoxid_sucursalEmpleadoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalEmpleadoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalEmpleadoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				empleado.setid_sucursal(sucursalAux.getId());
				empleado.setsucursal_descripcion(EmpleadoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				empleado.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(Empleado empleado,JComboBox jComboBoxid_paisEmpleadoGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisEmpleadoGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisEmpleadoGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				empleado.setid_pais(paisAux.getId());
				empleado.setpais_descripcion(EmpleadoConstantesFunciones.getPaisDescripcion(paisAux));
				empleado.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProvinciaForeignKey(Empleado empleado,JComboBox jComboBoxid_provinciaEmpleadoGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaAux=new Provincia();

			if(jComboBoxid_provinciaEmpleadoGenerico==null) {
				provinciaAux=(Provincia)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.getSelectedItem();
			} else {
				provinciaAux=(Provincia)jComboBoxid_provinciaEmpleadoGenerico.getSelectedItem();
			}

			if(provinciaAux!=null && provinciaAux.getId()!=null) {
				empleado.setid_provincia(provinciaAux.getId());
				empleado.setprovincia_descripcion(EmpleadoConstantesFunciones.getProvinciaDescripcion(provinciaAux));
				empleado.setProvincia(provinciaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(Empleado empleado,JComboBox jComboBoxid_ciudadEmpleadoGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadEmpleadoGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadEmpleadoGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				empleado.setid_ciudad(ciudadAux.getId());
				empleado.setciudad_descripcion(EmpleadoConstantesFunciones.getCiudadDescripcion(ciudadAux));
				empleado.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(Empleado empleado,JComboBox jComboBoxid_centro_costoEmpleadoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoEmpleadoGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoEmpleadoGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				empleado.setid_centro_costo(centrocostoAux.getId());
				empleado.setcentrocosto_descripcion(EmpleadoConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				empleado.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarReligionForeignKey(Empleado empleado,JComboBox jComboBoxid_religionEmpleadoGenerico)throws Exception
	{
		try
		{
			Religion  religionAux=new Religion();

			if(jComboBoxid_religionEmpleadoGenerico==null) {
				religionAux=(Religion)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.getSelectedItem();
			} else {
				religionAux=(Religion)jComboBoxid_religionEmpleadoGenerico.getSelectedItem();
			}

			if(religionAux!=null && religionAux.getId()!=null) {
				empleado.setid_religion(religionAux.getId());
				empleado.setreligion_descripcion(EmpleadoConstantesFunciones.getReligionDescripcion(religionAux));
				empleado.setReligion(religionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoCivilForeignKey(Empleado empleado,JComboBox jComboBoxid_estado_civilEmpleadoGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilAux=new EstadoCivil();

			if(jComboBoxid_estado_civilEmpleadoGenerico==null) {
				estadocivilAux=(EstadoCivil)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.getSelectedItem();
			} else {
				estadocivilAux=(EstadoCivil)jComboBoxid_estado_civilEmpleadoGenerico.getSelectedItem();
			}

			if(estadocivilAux!=null && estadocivilAux.getId()!=null) {
				empleado.setid_estado_civil(estadocivilAux.getId());
				empleado.setestadocivil_descripcion(EmpleadoConstantesFunciones.getEstadoCivilDescripcion(estadocivilAux));
				empleado.setEstadoCivil(estadocivilAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGeneroForeignKey(Empleado empleado,JComboBox jComboBoxid_tipo_generoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroAux=new TipoGenero();

			if(jComboBoxid_tipo_generoEmpleadoGenerico==null) {
				tipogeneroAux=(TipoGenero)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.getSelectedItem();
			} else {
				tipogeneroAux=(TipoGenero)jComboBoxid_tipo_generoEmpleadoGenerico.getSelectedItem();
			}

			if(tipogeneroAux!=null && tipogeneroAux.getId()!=null) {
				empleado.setid_tipo_genero(tipogeneroAux.getId());
				empleado.settipogenero_descripcion(EmpleadoConstantesFunciones.getTipoGeneroDescripcion(tipogeneroAux));
				empleado.setTipoGenero(tipogeneroAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoEmpleadoForeignKey(Empleado empleado,JComboBox jComboBoxid_tipo_empleadoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoEmpleado  tipoempleadoAux=new TipoEmpleado();

			if(jComboBoxid_tipo_empleadoEmpleadoGenerico==null) {
				tipoempleadoAux=(TipoEmpleado)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.getSelectedItem();
			} else {
				tipoempleadoAux=(TipoEmpleado)jComboBoxid_tipo_empleadoEmpleadoGenerico.getSelectedItem();
			}

			if(tipoempleadoAux!=null && tipoempleadoAux.getId()!=null) {
				empleado.setid_tipo_empleado(tipoempleadoAux.getId());
				empleado.settipoempleado_descripcion(EmpleadoConstantesFunciones.getTipoEmpleadoDescripcion(tipoempleadoAux));
				empleado.setTipoEmpleado(tipoempleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoInstruccionForeignKey(Empleado empleado,JComboBox jComboBoxid_tipo_instruccionEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoInstruccion  tipoinstruccionAux=new TipoInstruccion();

			if(jComboBoxid_tipo_instruccionEmpleadoGenerico==null) {
				tipoinstruccionAux=(TipoInstruccion)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.getSelectedItem();
			} else {
				tipoinstruccionAux=(TipoInstruccion)jComboBoxid_tipo_instruccionEmpleadoGenerico.getSelectedItem();
			}

			if(tipoinstruccionAux!=null && tipoinstruccionAux.getId()!=null) {
				empleado.setid_tipo_instruccion(tipoinstruccionAux.getId());
				empleado.settipoinstruccion_descripcion(EmpleadoConstantesFunciones.getTipoInstruccionDescripcion(tipoinstruccionAux));
				empleado.setTipoInstruccion(tipoinstruccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCargoForeignKey(Empleado empleado,JComboBox jComboBoxid_cargoEmpleadoGenerico)throws Exception
	{
		try
		{
			Cargo  cargoAux=new Cargo();

			if(jComboBoxid_cargoEmpleadoGenerico==null) {
				cargoAux=(Cargo)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.getSelectedItem();
			} else {
				cargoAux=(Cargo)jComboBoxid_cargoEmpleadoGenerico.getSelectedItem();
			}

			if(cargoAux!=null && cargoAux.getId()!=null) {
				empleado.setid_cargo(cargoAux.getId());
				empleado.setcargo_descripcion(EmpleadoConstantesFunciones.getCargoDescripcion(cargoAux));
				empleado.setCargo(cargoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstructuraForeignKey(Empleado empleado,JComboBox jComboBoxid_estructuraEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraAux=new Estructura();

			if(jComboBoxid_estructuraEmpleadoGenerico==null) {
				estructuraAux=(Estructura)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.getSelectedItem();
			} else {
				estructuraAux=(Estructura)jComboBoxid_estructuraEmpleadoGenerico.getSelectedItem();
			}

			if(estructuraAux!=null && estructuraAux.getId()!=null) {
				empleado.setid_estructura(estructuraAux.getId());
				empleado.setestructura_descripcion(EmpleadoConstantesFunciones.getEstructuraDescripcion(estructuraAux));
				empleado.setEstructura(estructuraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstructuraSeccionForeignKey(Empleado empleado,JComboBox jComboBoxid_estructura_seccionEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraAux=new Estructura();

			if(jComboBoxid_estructura_seccionEmpleadoGenerico==null) {
				estructuraAux=(Estructura)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.getSelectedItem();
			} else {
				estructuraAux=(Estructura)jComboBoxid_estructura_seccionEmpleadoGenerico.getSelectedItem();
			}

			if(estructuraAux!=null && estructuraAux.getId()!=null) {
				empleado.setid_estructura_seccion(estructuraAux.getId());
				empleado.setestructuraseccion_descripcion(EmpleadoConstantesFunciones.getEstructuraSeccionDescripcion(estructuraAux));
				empleado.setEstructuraSeccion(estructuraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoEmpleadoForeignKey(Empleado empleado,JComboBox jComboBoxid_estado_empleadoEmpleadoGenerico)throws Exception
	{
		try
		{
			EstadoEmpleado  estadoempleadoAux=new EstadoEmpleado();

			if(jComboBoxid_estado_empleadoEmpleadoGenerico==null) {
				estadoempleadoAux=(EstadoEmpleado)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.getSelectedItem();
			} else {
				estadoempleadoAux=(EstadoEmpleado)jComboBoxid_estado_empleadoEmpleadoGenerico.getSelectedItem();
			}

			if(estadoempleadoAux!=null && estadoempleadoAux.getId()!=null) {
				empleado.setid_estado_empleado(estadoempleadoAux.getId());
				empleado.setestadoempleado_descripcion(EmpleadoConstantesFunciones.getEstadoEmpleadoDescripcion(estadoempleadoAux));
				empleado.setEstadoEmpleado(estadoempleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoContratoForeignKey(Empleado empleado,JComboBox jComboBoxid_tipo_contratoEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoContrato  tipocontratoAux=new TipoContrato();

			if(jComboBoxid_tipo_contratoEmpleadoGenerico==null) {
				tipocontratoAux=(TipoContrato)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.getSelectedItem();
			} else {
				tipocontratoAux=(TipoContrato)jComboBoxid_tipo_contratoEmpleadoGenerico.getSelectedItem();
			}

			if(tipocontratoAux!=null && tipocontratoAux.getId()!=null) {
				empleado.setid_tipo_contrato(tipocontratoAux.getId());
				empleado.settipocontrato_descripcion(EmpleadoConstantesFunciones.getTipoContratoDescripcion(tipocontratoAux));
				empleado.setTipoContrato(tipocontratoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCuentaBancoGlobalForeignKey(Empleado empleado,JComboBox jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoCuentaBancoGlobal  tipocuentabancoglobalAux=new TipoCuentaBancoGlobal();

			if(jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico==null) {
				tipocuentabancoglobalAux=(TipoCuentaBancoGlobal)this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.getSelectedItem();
			} else {
				tipocuentabancoglobalAux=(TipoCuentaBancoGlobal)jComboBoxid_tipo_cuenta_banco_globalEmpleadoGenerico.getSelectedItem();
			}

			if(tipocuentabancoglobalAux!=null && tipocuentabancoglobalAux.getId()!=null) {
				empleado.setid_tipo_cuenta_banco_global(tipocuentabancoglobalAux.getId());
				empleado.settipocuentabancoglobal_descripcion(EmpleadoConstantesFunciones.getTipoCuentaBancoGlobalDescripcion(tipocuentabancoglobalAux));
				empleado.setTipoCuentaBancoGlobal(tipocuentabancoglobalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisEmpleado.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisEmpleado.addItem(pais);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProvinciasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProvincia=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.removeAllItems();

							for(Provincia provincia:this.provinciasForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.addItem(provincia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProvincia") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.removeAllItems();

							for(Provincia provincia:this.provinciasForeignKey) {
								this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.addItem(provincia);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadEmpleado.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jComboBoxid_ciudadFK_IdCiudadEmpleado.addItem(ciudad);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.addItem(centrocosto);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameReligionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingReligion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.removeAllItems();

							for(Religion religion:this.religionsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.addItem(religion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdReligion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_religionFK_IdReligionEmpleado.removeAllItems();

							for(Religion religion:this.religionsForeignKey) {
								this.jComboBoxid_religionFK_IdReligionEmpleado.addItem(religion);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoCivilsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoCivil=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.addItem(estadocivil);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.addItem(estadocivil);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGenerosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGenero=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.addItem(tipogenero);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoGenero") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.addItem(tipogenero);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.removeAllItems();

							for(TipoEmpleado tipoempleado:this.tipoempleadosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.addItem(tipoempleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.removeAllItems();

							for(TipoEmpleado tipoempleado:this.tipoempleadosForeignKey) {
								this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.addItem(tipoempleado);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoInstruccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoInstruccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.removeAllItems();

							for(TipoInstruccion tipoinstruccion:this.tipoinstruccionsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.addItem(tipoinstruccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoInstruccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.removeAllItems();

							for(TipoInstruccion tipoinstruccion:this.tipoinstruccionsForeignKey) {
								this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.addItem(tipoinstruccion);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCargosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCargo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.removeAllItems();

							for(Cargo cargo:this.cargosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.addItem(cargo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCargo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cargoFK_IdCargoEmpleado.removeAllItems();

							for(Cargo cargo:this.cargosForeignKey) {
								this.jComboBoxid_cargoFK_IdCargoEmpleado.addItem(cargo);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstructurasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstructura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.addItem(estructura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.addItem(estructura);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstructuraSeccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstructura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.removeAllItems();

							for(Estructura estructuraseccion:this.estructuraseccionsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.addItem(estructuraseccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstructuraSeccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.removeAllItems();

							for(Estructura estructuraseccion:this.estructuraseccionsForeignKey) {
								this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.addItem(estructuraseccion);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.removeAllItems();

							for(EstadoEmpleado estadoempleado:this.estadoempleadosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.addItem(estadoempleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.removeAllItems();

							for(EstadoEmpleado estadoempleado:this.estadoempleadosForeignKey) {
								this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.addItem(estadoempleado);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoContratosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoContrato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.removeAllItems();

							for(TipoContrato tipocontrato:this.tipocontratosForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.addItem(tipocontrato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoContrato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.removeAllItems();

							for(TipoContrato tipocontrato:this.tipocontratosForeignKey) {
								this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.addItem(tipocontrato);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCuentaBancoGlobalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCuentaBancoGlobal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) { 
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.removeAllItems();

							for(TipoCuentaBancoGlobal tipocuentabancoglobal:this.tipocuentabancoglobalsForeignKey) {
								this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.addItem(tipocuentabancoglobal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEmpleado!=null) { 
					}

					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCuentaBancoGlobal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.removeAllItems();

							for(TipoCuentaBancoGlobal tipocuentabancoglobal:this.tipocuentabancoglobalsForeignKey) {
								this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.addItem(tipocuentabancoglobal);
							}
						}

						if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisEmpleado.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProvinciaForeignKey(Provincia provincia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setSelectedItem(provincia);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.setSelectedItem(provincia);
						} else {
							this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudadFK_IdCiudadEmpleado.setSelectedItem(ciudad);
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameReligionForeignKey(Religion religion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setSelectedItem(religion);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_religionFK_IdReligionEmpleado.setSelectedItem(religion);
						} else {
							this.jComboBoxid_religionFK_IdReligionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoCivilForeignKey(EstadoCivil estadocivil,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setSelectedItem(estadocivil);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.setSelectedItem(estadocivil);
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGeneroForeignKey(TipoGenero tipogenero,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setSelectedItem(tipogenero);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.setSelectedItem(tipogenero);
						} else {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoEmpleadoForeignKey(TipoEmpleado tipoempleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setSelectedItem(tipoempleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.setSelectedItem(tipoempleado);
						} else {
							this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoInstruccionForeignKey(TipoInstruccion tipoinstruccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setSelectedItem(tipoinstruccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.setSelectedItem(tipoinstruccion);
						} else {
							this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCargoForeignKey(Cargo cargo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setSelectedItem(cargo);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cargoFK_IdCargoEmpleado.setSelectedItem(cargo);
						} else {
							this.jComboBoxid_cargoFK_IdCargoEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstructuraForeignKey(Estructura estructura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setSelectedItem(estructura);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.setSelectedItem(estructura);
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstructuraSeccionForeignKey(Estructura estructuraseccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setSelectedItem(estructuraseccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.setSelectedItem(estructuraseccion);
						} else {
							this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoEmpleadoForeignKey(EstadoEmpleado estadoempleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setSelectedItem(estadoempleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.setSelectedItem(estadoempleado);
						} else {
							this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoContratoForeignKey(TipoContrato tipocontrato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setSelectedItem(tipocontrato);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.setSelectedItem(tipocontrato);
						} else {
							this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCuentaBancoGlobalForeignKey(TipoCuentaBancoGlobal tipocuentabancoglobal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedItem(tipocuentabancoglobal);
						}
					} else {
						if(this.jInternalFrameDetalleFormEmpleado!=null) {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.setSelectedItem(tipocuentabancoglobal);
						} else {
							this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesEmpleado() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			EmpleadoConstantesFunciones.refrescarForeignKeysDescripcionesEmpleado(this.empleadoLogic.getEmpleados());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			EmpleadoConstantesFunciones.refrescarForeignKeysDescripcionesEmpleado(this.empleados);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Provincia.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Religion.class));
		classes.add(new Classe(EstadoCivil.class));
		classes.add(new Classe(TipoGenero.class));
		classes.add(new Classe(TipoEmpleado.class));
		classes.add(new Classe(TipoInstruccion.class));
		classes.add(new Classe(Cargo.class));
		classes.add(new Classe(Estructura.class));
		classes.add(new Classe(EstadoEmpleado.class));
		classes.add(new Classe(TipoContrato.class));
		classes.add(new Classe(TipoCuentaBancoGlobal.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//empleadoLogic.setEmpleados(this.empleados);
			empleadoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public EmpleadoParameterReturnGeneral getEmpleadoParameterGeneral() {
		return this.empleadoParameterGeneral;
	}
	
	public void setEmpleadoParameterGeneral(EmpleadoParameterReturnGeneral empleadoParameterGeneral) {
		this.empleadoParameterGeneral = empleadoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoEmpleado() {
		return isPermisoTodoEmpleado;
	}

	public void setIsPermisoTodoEmpleado(Boolean isPermisoTodoEmpleado) {
		this.isPermisoTodoEmpleado = isPermisoTodoEmpleado;
	}

	public Boolean getIsPermisoNuevoEmpleado() {
		return isPermisoNuevoEmpleado;
	}

	public void setIsPermisoNuevoEmpleado(Boolean isPermisoNuevoEmpleado) {
		this.isPermisoNuevoEmpleado = isPermisoNuevoEmpleado;
	}

	public Boolean getIsPermisoActualizarEmpleado() {
		return isPermisoActualizarEmpleado;
	}

	public void setIsPermisoActualizarEmpleado(Boolean isPermisoActualizarEmpleado) {
		this.isPermisoActualizarEmpleado = isPermisoActualizarEmpleado;
	}

	public Boolean getIsPermisoEliminarEmpleado() {
		return isPermisoEliminarEmpleado;
	}

	public void setIsPermisoEliminarEmpleado(Boolean isPermisoEliminarEmpleado) {
		this.isPermisoEliminarEmpleado = isPermisoEliminarEmpleado;
	}

	public Boolean getIsPermisoGuardarCambiosEmpleado() {
		return isPermisoGuardarCambiosEmpleado;
	}

	public void setIsPermisoGuardarCambiosEmpleado(Boolean isPermisoGuardarCambiosEmpleado) {
		this.isPermisoGuardarCambiosEmpleado = isPermisoGuardarCambiosEmpleado;
	}
	
	public Boolean getIsPermisoConsultaEmpleado() {
		return isPermisoConsultaEmpleado;
	}

	public void setIsPermisoConsultaEmpleado(Boolean isPermisoConsultaEmpleado) {
		this.isPermisoConsultaEmpleado = isPermisoConsultaEmpleado;
	}

	public Boolean getIsPermisoBusquedaEmpleado() {
		return isPermisoBusquedaEmpleado;
	}

	public void setIsPermisoBusquedaEmpleado(Boolean isPermisoBusquedaEmpleado) {
		this.isPermisoBusquedaEmpleado = isPermisoBusquedaEmpleado;
	}

	public Boolean getIsPermisoReporteEmpleado() {
		return isPermisoReporteEmpleado;
	}

	public void setIsPermisoReporteEmpleado(Boolean isPermisoReporteEmpleado) {
		this.isPermisoReporteEmpleado = isPermisoReporteEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionMedioEmpleado() {
		return isPermisoPaginacionMedioEmpleado;
	}

	public void setIsPermisoPaginacionMedioEmpleado(Boolean isPermisoPaginacionMedioEmpleado) {
		this.isPermisoPaginacionMedioEmpleado = isPermisoPaginacionMedioEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionTodoEmpleado() {
		return isPermisoPaginacionTodoEmpleado;
	}

	public void setIsPermisoPaginacionTodoEmpleado(Boolean isPermisoPaginacionTodoEmpleado) {
		this.isPermisoPaginacionTodoEmpleado = isPermisoPaginacionTodoEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionAltoEmpleado() {
		return isPermisoPaginacionAltoEmpleado;
	}

	public void setIsPermisoPaginacionAltoEmpleado(Boolean isPermisoPaginacionAltoEmpleado) {
		this.isPermisoPaginacionAltoEmpleado = isPermisoPaginacionAltoEmpleado;
	}
	
	public Boolean getIsPermisoCopiarEmpleado() {
		return isPermisoCopiarEmpleado;
	}

	public void setIsPermisoCopiarEmpleado(Boolean isPermisoCopiarEmpleado) {
		this.isPermisoCopiarEmpleado = isPermisoCopiarEmpleado;
	}
	
	public Boolean getIsPermisoVerFormEmpleado() {
		return isPermisoVerFormEmpleado;
	}

	public void setIsPermisoVerFormEmpleado(Boolean isPermisoVerFormEmpleado) {
		this.isPermisoVerFormEmpleado = isPermisoVerFormEmpleado;
	}
	
	public Boolean getIsPermisoDuplicarEmpleado() {
		return isPermisoDuplicarEmpleado;
	}

	public void setIsPermisoDuplicarEmpleado(Boolean isPermisoDuplicarEmpleado) {
		this.isPermisoDuplicarEmpleado = isPermisoDuplicarEmpleado;
	}
	
	public Boolean getIsPermisoOrdenEmpleado() {
		return isPermisoOrdenEmpleado;
	}

	public void setIsPermisoOrdenEmpleado(Boolean isPermisoOrdenEmpleado) {
		this.isPermisoOrdenEmpleado = isPermisoOrdenEmpleado;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoEmpleado() {
		return isVisibilidadCeldaNuevoEmpleado;
	}

	public void setIsVisibilidadCeldaNuevoEmpleado(Boolean isVisibilidadCeldaNuevoEmpleado) {
		this.isVisibilidadCeldaNuevoEmpleado = isVisibilidadCeldaNuevoEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarEmpleado() {
		return isVisibilidadCeldaDuplicarEmpleado;
	}

	public void setIsVisibilidadCeldaDuplicarEmpleado(Boolean isVisibilidadCeldaDuplicarEmpleado) {
		this.isVisibilidadCeldaDuplicarEmpleado = isVisibilidadCeldaDuplicarEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarEmpleado() {
		return isVisibilidadCeldaCopiarEmpleado;
	}

	public void setIsVisibilidadCeldaCopiarEmpleado(Boolean isVisibilidadCeldaCopiarEmpleado) {
		this.isVisibilidadCeldaCopiarEmpleado = isVisibilidadCeldaCopiarEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormEmpleado() {
		return isVisibilidadCeldaVerFormEmpleado;
	}

	public void setIsVisibilidadCeldaVerFormEmpleado(Boolean isVisibilidadCeldaVerFormEmpleado) {
		this.isVisibilidadCeldaVerFormEmpleado = isVisibilidadCeldaVerFormEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenEmpleado() {
		return isVisibilidadCeldaOrdenEmpleado;
	}

	public void setIsVisibilidadCeldaOrdenEmpleado(Boolean isVisibilidadCeldaOrdenEmpleado) {
		this.isVisibilidadCeldaOrdenEmpleado = isVisibilidadCeldaOrdenEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesEmpleado() {
		return isVisibilidadCeldaNuevoRelacionesEmpleado;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesEmpleado(Boolean isVisibilidadCeldaNuevoRelacionesEmpleado) {
		this.isVisibilidadCeldaNuevoRelacionesEmpleado = isVisibilidadCeldaNuevoRelacionesEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaModificarEmpleado() {
		return isVisibilidadCeldaModificarEmpleado;
	}

	public void setIsVisibilidadCeldaModificarEmpleado(Boolean isVisibilidadCeldaModificarEmpleado) {
		this.isVisibilidadCeldaModificarEmpleado = isVisibilidadCeldaModificarEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarEmpleado() {
		return isVisibilidadCeldaActualizarEmpleado;
	}

	public void setIsVisibilidadCeldaActualizarEmpleado(Boolean isVisibilidadCeldaActualizarEmpleado) {
		this.isVisibilidadCeldaActualizarEmpleado = isVisibilidadCeldaActualizarEmpleado;
	}

	public Boolean getIsVisibilidadCeldaEliminarEmpleado() {
		return isVisibilidadCeldaEliminarEmpleado;
	}

	public void setIsVisibilidadCeldaEliminarEmpleado(Boolean isVisibilidadCeldaEliminarEmpleado) {
		this.isVisibilidadCeldaEliminarEmpleado = isVisibilidadCeldaEliminarEmpleado;
	}

	public Boolean getIsVisibilidadCeldaCancelarEmpleado() {
		return isVisibilidadCeldaCancelarEmpleado;
	}

	public void setIsVisibilidadCeldaCancelarEmpleado(Boolean isVisibilidadCeldaCancelarEmpleado) {
		this.isVisibilidadCeldaCancelarEmpleado = isVisibilidadCeldaCancelarEmpleado;
	}

	public Boolean getIsVisibilidadCeldaGuardarEmpleado() {
		return isVisibilidadCeldaGuardarEmpleado;
	}

	public void setIsVisibilidadCeldaGuardarEmpleado(Boolean isVisibilidadCeldaGuardarEmpleado) {
		this.isVisibilidadCeldaGuardarEmpleado = isVisibilidadCeldaGuardarEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosEmpleado() {
		return isVisibilidadCeldaGuardarCambiosEmpleado;
	}

	public void setIsVisibilidadCeldaGuardarCambiosEmpleado(Boolean isVisibilidadCeldaGuardarCambiosEmpleado) {
		this.isVisibilidadCeldaGuardarCambiosEmpleado = isVisibilidadCeldaGuardarCambiosEmpleado;
	}
		
	public EmpleadoSessionBean getempleadoSessionBean() {
		return this.empleadoSessionBean;
	}
	
	public void setempleadoSessionBean(EmpleadoSessionBean empleadoSessionBean) {
		this.empleadoSessionBean=empleadoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCargo() {
		return this.isVisibilidadFK_IdCargo;
	}

	public void setisVisibilidadFK_IdCargo(Boolean isVisibilidadFK_IdCargo) {
		this.isVisibilidadFK_IdCargo=isVisibilidadFK_IdCargo;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoCivil() {
		return this.isVisibilidadFK_IdEstadoCivil;
	}

	public void setisVisibilidadFK_IdEstadoCivil(Boolean isVisibilidadFK_IdEstadoCivil) {
		this.isVisibilidadFK_IdEstadoCivil=isVisibilidadFK_IdEstadoCivil;
	}

	public Boolean getisVisibilidadFK_IdEstadoEmpleado() {
		return this.isVisibilidadFK_IdEstadoEmpleado;
	}

	public void setisVisibilidadFK_IdEstadoEmpleado(Boolean isVisibilidadFK_IdEstadoEmpleado) {
		this.isVisibilidadFK_IdEstadoEmpleado=isVisibilidadFK_IdEstadoEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEstructura() {
		return this.isVisibilidadFK_IdEstructura;
	}

	public void setisVisibilidadFK_IdEstructura(Boolean isVisibilidadFK_IdEstructura) {
		this.isVisibilidadFK_IdEstructura=isVisibilidadFK_IdEstructura;
	}

	public Boolean getisVisibilidadFK_IdEstructuraSeccion() {
		return this.isVisibilidadFK_IdEstructuraSeccion;
	}

	public void setisVisibilidadFK_IdEstructuraSeccion(Boolean isVisibilidadFK_IdEstructuraSeccion) {
		this.isVisibilidadFK_IdEstructuraSeccion=isVisibilidadFK_IdEstructuraSeccion;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdProvincia() {
		return this.isVisibilidadFK_IdProvincia;
	}

	public void setisVisibilidadFK_IdProvincia(Boolean isVisibilidadFK_IdProvincia) {
		this.isVisibilidadFK_IdProvincia=isVisibilidadFK_IdProvincia;
	}

	public Boolean getisVisibilidadFK_IdReligion() {
		return this.isVisibilidadFK_IdReligion;
	}

	public void setisVisibilidadFK_IdReligion(Boolean isVisibilidadFK_IdReligion) {
		this.isVisibilidadFK_IdReligion=isVisibilidadFK_IdReligion;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoContrato() {
		return this.isVisibilidadFK_IdTipoContrato;
	}

	public void setisVisibilidadFK_IdTipoContrato(Boolean isVisibilidadFK_IdTipoContrato) {
		this.isVisibilidadFK_IdTipoContrato=isVisibilidadFK_IdTipoContrato;
	}

	public Boolean getisVisibilidadFK_IdTipoCuentaBancoGlobal() {
		return this.isVisibilidadFK_IdTipoCuentaBancoGlobal;
	}

	public void setisVisibilidadFK_IdTipoCuentaBancoGlobal(Boolean isVisibilidadFK_IdTipoCuentaBancoGlobal) {
		this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isVisibilidadFK_IdTipoCuentaBancoGlobal;
	}

	public Boolean getisVisibilidadFK_IdTipoEmpleado() {
		return this.isVisibilidadFK_IdTipoEmpleado;
	}

	public void setisVisibilidadFK_IdTipoEmpleado(Boolean isVisibilidadFK_IdTipoEmpleado) {
		this.isVisibilidadFK_IdTipoEmpleado=isVisibilidadFK_IdTipoEmpleado;
	}

	public Boolean getisVisibilidadFK_IdTipoGenero() {
		return this.isVisibilidadFK_IdTipoGenero;
	}

	public void setisVisibilidadFK_IdTipoGenero(Boolean isVisibilidadFK_IdTipoGenero) {
		this.isVisibilidadFK_IdTipoGenero=isVisibilidadFK_IdTipoGenero;
	}

	public Boolean getisVisibilidadFK_IdTipoInstruccion() {
		return this.isVisibilidadFK_IdTipoInstruccion;
	}

	public void setisVisibilidadFK_IdTipoInstruccion(Boolean isVisibilidadFK_IdTipoInstruccion) {
		this.isVisibilidadFK_IdTipoInstruccion=isVisibilidadFK_IdTipoInstruccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysEmpleado(Empleado empleado)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(empleado,null);
				this.setActualParaGuardarSucursalForeignKey(empleado,null);
				this.setActualParaGuardarPaisForeignKey(empleado,null);
				this.setActualParaGuardarProvinciaForeignKey(empleado,null);
				this.setActualParaGuardarCiudadForeignKey(empleado,null);
				this.setActualParaGuardarCentroCostoForeignKey(empleado,null);
				this.setActualParaGuardarReligionForeignKey(empleado,null);
				this.setActualParaGuardarEstadoCivilForeignKey(empleado,null);
				this.setActualParaGuardarTipoGeneroForeignKey(empleado,null);
				this.setActualParaGuardarTipoEmpleadoForeignKey(empleado,null);
				this.setActualParaGuardarTipoInstruccionForeignKey(empleado,null);
				this.setActualParaGuardarCargoForeignKey(empleado,null);
				this.setActualParaGuardarEstructuraForeignKey(empleado,null);
				this.setActualParaGuardarEstructuraSeccionForeignKey(empleado,null);
				this.setActualParaGuardarEstadoEmpleadoForeignKey(empleado,null);
				this.setActualParaGuardarTipoContratoForeignKey(empleado,null);
				this.setActualParaGuardarTipoCuentaBancoGlobalForeignKey(empleado,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Empleado empleado,Empleado empleadoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalEmpleado(empleado);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		empleadoAux.setId(empleado.getId());
		empleadoAux.setVersionRow(empleado.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessEmpleado();
		
			int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = empleadoValidator.getInvalidValues(this.empleado);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			empleadoLogic.setDatosCliente(datosCliente);
			empleadoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				empleadoAux=new  Empleado();
				
				empleadoAux.setIsNew(true);
				empleadoAux.setIsChanged(true);
				
				empleadoAux.setEmpleadoOriginal(this.empleado);
				
				empleadoAux.setId(this.empleado.getId());	
				empleadoAux.setVersionRow(this.empleado.getVersionRow());	
				empleadoAux.setid_empresa(this.empleado.getid_empresa());	
				empleadoAux.setid_sucursal(this.empleado.getid_sucursal());	
				empleadoAux.setid_pais(this.empleado.getid_pais());	
				empleadoAux.setid_provincia(this.empleado.getid_provincia());	
				empleadoAux.setid_ciudad(this.empleado.getid_ciudad());	
				empleadoAux.setid_centro_costo(this.empleado.getid_centro_costo());	
				empleadoAux.setid_religion(this.empleado.getid_religion());	
				empleadoAux.setid_estado_civil(this.empleado.getid_estado_civil());	
				empleadoAux.setid_tipo_genero(this.empleado.getid_tipo_genero());	
				empleadoAux.setid_tipo_empleado(this.empleado.getid_tipo_empleado());	
				empleadoAux.setid_tipo_instruccion(this.empleado.getid_tipo_instruccion());	
				empleadoAux.setid_cargo(this.empleado.getid_cargo());	
				empleadoAux.setid_estructura(this.empleado.getid_estructura());	
				empleadoAux.setid_estructura_seccion(this.empleado.getid_estructura_seccion());	
				empleadoAux.setid_estado_empleado(this.empleado.getid_estado_empleado());	
				empleadoAux.setid_tipo_contrato(this.empleado.getid_tipo_contrato());	
				empleadoAux.setcodigo(this.empleado.getcodigo());	
				empleadoAux.setnombre(this.empleado.getnombre());	
				empleadoAux.setapellido(this.empleado.getapellido());	
				empleadoAux.setnombre_completo(this.empleado.getnombre_completo());	
				empleadoAux.setmail(this.empleado.getmail());	
				empleadoAux.setdireccion(this.empleado.getdireccion());	
				empleadoAux.setsueldo(this.empleado.getsueldo());	
				empleadoAux.settelefono(this.empleado.gettelefono());	
				empleadoAux.setid_tipo_cuenta_banco_global(this.empleado.getid_tipo_cuenta_banco_global());	
				empleadoAux.setnumero_cuenta(this.empleado.getnumero_cuenta());	
				empleadoAux.settiene_casa(this.empleado.gettiene_casa());	
				empleadoAux.settiene_vehiculo(this.empleado.gettiene_vehiculo());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.empleadoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(empleadoAux,empleados);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.empleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.saveEmpleados();//WithConnection
						//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.empleado,empleadoAux);
					
					this.refrescarForeignKeysDescripcionesEmpleado();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.empleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos().addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos().addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas().addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys().addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals().addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias().addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas().addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros().addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas().addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos().addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis().addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms.addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos.addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos.addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados.addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas.addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados.addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys.addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals.addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias.addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms.addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas.addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros.addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas.addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos.addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis.addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								empleadoLogic.saveEmpleadoRelaciones(empleadoAux,this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs(),this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos(),this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos(),this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas(),this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado(),this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas(),this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys(),this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails(),this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals(),this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias(),this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs(),this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras(),this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers(),this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas(),this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros(),this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas(),this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas(),this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes(),this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos(),this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());//WithConnection
								//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.empleado,empleadoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.setCargaFamiliar_NMs(new ArrayList<CargaFamiliar_NM>());
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.setCursos(new ArrayList<Curso>());
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.setPrestamos(new ArrayList<Prestamo>());
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.setEmpleadoIdiomas(new ArrayList<EmpleadoIdioma>());
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.setDatoGeneralEmpleados(new ArrayList<DatoGeneralEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.setAreas(new ArrayList<Area>());
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.setGastoEmpleados(new ArrayList<GastoEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.setEmpleadoHobbys(new ArrayList<EmpleadoHobby>());
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.setEmpleadoEMails(new ArrayList<EmpleadoEMail>());
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.setRasgoPersonals(new ArrayList<RasgoPersonal>());
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.setReferencias(new ArrayList<Referencia>());
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.setTelefono_NMs(new ArrayList<Telefono_NM>());
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.setEmpleadoHerras(new ArrayList<EmpleadoHerra>());
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.setEmpleadoEnfers(new ArrayList<EmpleadoEnfer>());
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.setVisas(new ArrayList<Visa>());
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.setSeguros(new ArrayList<Seguro>());
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.setEmpleadoDiscas(new ArrayList<EmpleadoDisca>());
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.setProfesionEmpleas(new ArrayList<ProfesionEmplea>());
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.setEmpleadoConstantes(new ArrayList<EmpleadoConstante>());
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.setTallaVestidos(new ArrayList<TallaVestido>());
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.setNovedadNomis(new ArrayList<NovedadNomi>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms= new ArrayList<CargaFamiliar_NM>();
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos= new ArrayList<Curso>();
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos= new ArrayList<Prestamo>();
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas= new ArrayList<EmpleadoIdioma>();
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados= new ArrayList<DatoGeneralEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas= new ArrayList<Area>();
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados= new ArrayList<GastoEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys= new ArrayList<EmpleadoHobby>();
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails= new ArrayList<EmpleadoEMail>();
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals= new ArrayList<RasgoPersonal>();
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias= new ArrayList<Referencia>();
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms= new ArrayList<Telefono_NM>();
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras= new ArrayList<EmpleadoHerra>();
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers= new ArrayList<EmpleadoEnfer>();
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas= new ArrayList<Visa>();
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros= new ArrayList<Seguro>();
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas= new ArrayList<EmpleadoDisca>();
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas= new ArrayList<ProfesionEmplea>();
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes= new ArrayList<EmpleadoConstante>();
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos= new ArrayList<TallaVestido>();
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis= new ArrayList<NovedadNomi>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos());

							if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas());

							if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setDatoGeneralEmpleado(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado());

							if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas());

							if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails());

							if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals());

							if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias());

							if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers());

							if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas());

							if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros());

							if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas());

							if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas());

							if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes());

							if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos());

							if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.empleadoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(empleadoAux,empleados);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.empleado,empleadoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				empleadoAux=new  Empleado();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.empleadoSessionBean.getEsGuardarRelacionado() 
					|| (this.empleadoSessionBean.getEsGuardarRelacionado() && this.empleado.getId()>=0)) {
						
					empleadoAux.setIsNew(false);
				}
				
				empleadoAux.setIsDeleted(false);
			
				empleadoAux.setId(this.empleado.getId());	
				empleadoAux.setVersionRow(this.empleado.getVersionRow());	
				empleadoAux.setid_empresa(this.empleado.getid_empresa());	
				empleadoAux.setid_sucursal(this.empleado.getid_sucursal());	
				empleadoAux.setid_pais(this.empleado.getid_pais());	
				empleadoAux.setid_provincia(this.empleado.getid_provincia());	
				empleadoAux.setid_ciudad(this.empleado.getid_ciudad());	
				empleadoAux.setid_centro_costo(this.empleado.getid_centro_costo());	
				empleadoAux.setid_religion(this.empleado.getid_religion());	
				empleadoAux.setid_estado_civil(this.empleado.getid_estado_civil());	
				empleadoAux.setid_tipo_genero(this.empleado.getid_tipo_genero());	
				empleadoAux.setid_tipo_empleado(this.empleado.getid_tipo_empleado());	
				empleadoAux.setid_tipo_instruccion(this.empleado.getid_tipo_instruccion());	
				empleadoAux.setid_cargo(this.empleado.getid_cargo());	
				empleadoAux.setid_estructura(this.empleado.getid_estructura());	
				empleadoAux.setid_estructura_seccion(this.empleado.getid_estructura_seccion());	
				empleadoAux.setid_estado_empleado(this.empleado.getid_estado_empleado());	
				empleadoAux.setid_tipo_contrato(this.empleado.getid_tipo_contrato());	
				empleadoAux.setcodigo(this.empleado.getcodigo());	
				empleadoAux.setnombre(this.empleado.getnombre());	
				empleadoAux.setapellido(this.empleado.getapellido());	
				empleadoAux.setnombre_completo(this.empleado.getnombre_completo());	
				empleadoAux.setmail(this.empleado.getmail());	
				empleadoAux.setdireccion(this.empleado.getdireccion());	
				empleadoAux.setsueldo(this.empleado.getsueldo());	
				empleadoAux.settelefono(this.empleado.gettelefono());	
				empleadoAux.setid_tipo_cuenta_banco_global(this.empleado.getid_tipo_cuenta_banco_global());	
				empleadoAux.setnumero_cuenta(this.empleado.getnumero_cuenta());	
				empleadoAux.settiene_casa(this.empleado.gettiene_casa());	
				empleadoAux.settiene_vehiculo(this.empleado.gettiene_vehiculo());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(empleadoAux,empleados);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.empleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.saveEmpleados();//WithConnection
						//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.empleado,empleadoAux);
					
					this.refrescarForeignKeysDescripcionesEmpleado();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.empleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos().addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos().addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas().addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys().addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals().addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias().addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas().addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros().addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas().addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos().addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis().addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms.addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos.addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos.addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados.addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas.addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados.addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys.addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals.addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias.addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms.addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas.addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros.addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas.addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos.addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis.addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						}
						//ARCHITECTURE
						
						if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								empleadoLogic.saveEmpleadoRelaciones(empleadoAux,this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs(),this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos(),this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos(),this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas(),this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado(),this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas(),this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys(),this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails(),this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals(),this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias(),this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs(),this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras(),this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers(),this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas(),this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros(),this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas(),this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas(),this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes(),this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos(),this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());//WithConnection
								//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.empleado,empleadoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.setCargaFamiliar_NMs(new ArrayList<CargaFamiliar_NM>());
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.setCursos(new ArrayList<Curso>());
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.setPrestamos(new ArrayList<Prestamo>());
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.setEmpleadoIdiomas(new ArrayList<EmpleadoIdioma>());
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.setDatoGeneralEmpleados(new ArrayList<DatoGeneralEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.setAreas(new ArrayList<Area>());
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.setGastoEmpleados(new ArrayList<GastoEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.setEmpleadoHobbys(new ArrayList<EmpleadoHobby>());
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.setEmpleadoEMails(new ArrayList<EmpleadoEMail>());
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.setRasgoPersonals(new ArrayList<RasgoPersonal>());
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.setReferencias(new ArrayList<Referencia>());
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.setTelefono_NMs(new ArrayList<Telefono_NM>());
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.setEmpleadoHerras(new ArrayList<EmpleadoHerra>());
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.setEmpleadoEnfers(new ArrayList<EmpleadoEnfer>());
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.setVisas(new ArrayList<Visa>());
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.setSeguros(new ArrayList<Seguro>());
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.setEmpleadoDiscas(new ArrayList<EmpleadoDisca>());
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.setProfesionEmpleas(new ArrayList<ProfesionEmplea>());
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.setEmpleadoConstantes(new ArrayList<EmpleadoConstante>());
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.setTallaVestidos(new ArrayList<TallaVestido>());
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.setNovedadNomis(new ArrayList<NovedadNomi>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms= new ArrayList<CargaFamiliar_NM>();
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos= new ArrayList<Curso>();
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos= new ArrayList<Prestamo>();
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas= new ArrayList<EmpleadoIdioma>();
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados= new ArrayList<DatoGeneralEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas= new ArrayList<Area>();
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados= new ArrayList<GastoEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys= new ArrayList<EmpleadoHobby>();
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails= new ArrayList<EmpleadoEMail>();
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals= new ArrayList<RasgoPersonal>();
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias= new ArrayList<Referencia>();
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms= new ArrayList<Telefono_NM>();
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras= new ArrayList<EmpleadoHerra>();
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers= new ArrayList<EmpleadoEnfer>();
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas= new ArrayList<Visa>();
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros= new ArrayList<Seguro>();
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas= new ArrayList<EmpleadoDisca>();
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas= new ArrayList<ProfesionEmplea>();
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes= new ArrayList<EmpleadoConstante>();
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos= new ArrayList<TallaVestido>();
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis= new ArrayList<NovedadNomi>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos());

							if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas());

							if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setDatoGeneralEmpleado(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado());

							if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas());

							if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails());

							if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals());

							if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias());

							if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers());

							if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas());

							if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros());

							if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas());

							if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas());

							if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes());

							if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos());

							if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.empleadoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(empleadoAux,empleados);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.empleado,empleadoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				empleadoAux=new  Empleado();
				
				empleadoAux.setIsNew(false);
				empleadoAux.setIsChanged(false);
				
				empleadoAux.setIsDeleted(true);
				
				empleadoAux.setId(this.empleado.getId());	
				empleadoAux.setVersionRow(this.empleado.getVersionRow());	
				empleadoAux.setid_empresa(this.empleado.getid_empresa());	
				empleadoAux.setid_sucursal(this.empleado.getid_sucursal());	
				empleadoAux.setid_pais(this.empleado.getid_pais());	
				empleadoAux.setid_provincia(this.empleado.getid_provincia());	
				empleadoAux.setid_ciudad(this.empleado.getid_ciudad());	
				empleadoAux.setid_centro_costo(this.empleado.getid_centro_costo());	
				empleadoAux.setid_religion(this.empleado.getid_religion());	
				empleadoAux.setid_estado_civil(this.empleado.getid_estado_civil());	
				empleadoAux.setid_tipo_genero(this.empleado.getid_tipo_genero());	
				empleadoAux.setid_tipo_empleado(this.empleado.getid_tipo_empleado());	
				empleadoAux.setid_tipo_instruccion(this.empleado.getid_tipo_instruccion());	
				empleadoAux.setid_cargo(this.empleado.getid_cargo());	
				empleadoAux.setid_estructura(this.empleado.getid_estructura());	
				empleadoAux.setid_estructura_seccion(this.empleado.getid_estructura_seccion());	
				empleadoAux.setid_estado_empleado(this.empleado.getid_estado_empleado());	
				empleadoAux.setid_tipo_contrato(this.empleado.getid_tipo_contrato());	
				empleadoAux.setcodigo(this.empleado.getcodigo());	
				empleadoAux.setnombre(this.empleado.getnombre());	
				empleadoAux.setapellido(this.empleado.getapellido());	
				empleadoAux.setnombre_completo(this.empleado.getnombre_completo());	
				empleadoAux.setmail(this.empleado.getmail());	
				empleadoAux.setdireccion(this.empleado.getdireccion());	
				empleadoAux.setsueldo(this.empleado.getsueldo());	
				empleadoAux.settelefono(this.empleado.gettelefono());	
				empleadoAux.setid_tipo_cuenta_banco_global(this.empleado.getid_tipo_cuenta_banco_global());	
				empleadoAux.setnumero_cuenta(this.empleado.getnumero_cuenta());	
				empleadoAux.settiene_casa(this.empleado.gettiene_casa());	
				empleadoAux.settiene_vehiculo(this.empleado.gettiene_vehiculo());	
				
				if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.empleadoAux.getId()>=0) {	
						this.empleadosEliminados.add(empleadoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(empleadoAux,empleados);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.empleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.saveEmpleados();//WithConnection
						//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.empleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos().addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos().addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas().addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys().addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals().addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias().addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs().addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas().addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros().addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas().addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas().addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes().addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos().addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis().addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms.addAll(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos.addAll(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursosEliminados);
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos.addAll(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomasEliminados);
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados.addAll(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas.addAll(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areasEliminados);
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados.addAll(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys.addAll(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbysEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailsEliminados);
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals.addAll(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalsEliminados);
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias.addAll(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciasEliminados);
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms.addAll(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmsEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherrasEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfersEliminados);
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas.addAll(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visasEliminados);
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros.addAll(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.segurosEliminados);
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas.addAll(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscasEliminados);
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas.addAll(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleasEliminados);
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes.addAll(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantesEliminados);
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos.addAll(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidosEliminados);
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis.addAll(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomisEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jInternalFrameDetalleFormCurso.detallecursoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jInternalFrameDetalleFormReferencia.telefonoreferenciaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								empleadoLogic.saveEmpleadoRelaciones(empleadoAux,this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs(),this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos(),this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos(),this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas(),this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado(),this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas(),this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys(),this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails(),this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals(),this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias(),this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs(),this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras(),this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers(),this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas(),this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros(),this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas(),this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas(),this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes(),this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos(),this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());//WithConnection
								//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.setCargaFamiliar_NMs(new ArrayList<CargaFamiliar_NM>());
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.setCursos(new ArrayList<Curso>());
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.setPrestamos(new ArrayList<Prestamo>());
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.setEmpleadoIdiomas(new ArrayList<EmpleadoIdioma>());
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.setDatoGeneralEmpleados(new ArrayList<DatoGeneralEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.setAreas(new ArrayList<Area>());
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.setGastoEmpleados(new ArrayList<GastoEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.setEmpleadoHobbys(new ArrayList<EmpleadoHobby>());
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.setEmpleadoEMails(new ArrayList<EmpleadoEMail>());
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.setRasgoPersonals(new ArrayList<RasgoPersonal>());
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.setReferencias(new ArrayList<Referencia>());
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.setTelefono_NMs(new ArrayList<Telefono_NM>());
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.setEmpleadoHerras(new ArrayList<EmpleadoHerra>());
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.setEmpleadoEnfers(new ArrayList<EmpleadoEnfer>());
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.setVisas(new ArrayList<Visa>());
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.setSeguros(new ArrayList<Seguro>());
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.setEmpleadoDiscas(new ArrayList<EmpleadoDisca>());
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.setProfesionEmpleas(new ArrayList<ProfesionEmplea>());
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.setEmpleadoConstantes(new ArrayList<EmpleadoConstante>());
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.setTallaVestidos(new ArrayList<TallaVestido>());
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.setNovedadNomis(new ArrayList<NovedadNomi>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms= new ArrayList<CargaFamiliar_NM>();
							this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos= new ArrayList<Curso>();
							this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos= new ArrayList<Prestamo>();
							this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas= new ArrayList<EmpleadoIdioma>();
							this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleados= new ArrayList<DatoGeneralEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas= new ArrayList<Area>();
							this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados= new ArrayList<GastoEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys= new ArrayList<EmpleadoHobby>();
							this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails= new ArrayList<EmpleadoEMail>();
							this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals= new ArrayList<RasgoPersonal>();
							this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias= new ArrayList<Referencia>();
							this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms= new ArrayList<Telefono_NM>();
							this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras= new ArrayList<EmpleadoHerra>();
							this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers= new ArrayList<EmpleadoEnfer>();
							this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas= new ArrayList<Visa>();
							this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros= new ArrayList<Seguro>();
							this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas= new ArrayList<EmpleadoDisca>();
							this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas= new ArrayList<ProfesionEmplea>();
							this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes= new ArrayList<EmpleadoConstante>();
							this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos= new ArrayList<TallaVestido>();
							this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis= new ArrayList<NovedadNomi>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos());

							if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas());

							if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setDatoGeneralEmpleado(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado());

							if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas());

							if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails());

							if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals());

							if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias());

							if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs());

							if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers());

							if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas());

							if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros());

							if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas());

							if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas());

							if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes());

							if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos());

							if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							empleadoAux.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.empleadoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(empleadoAux,empleadoLogic.getEmpleados());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(empleadoAux,empleados);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getEmpleados().addAll(this.empleadosEliminados);
					
					empleadoLogic.saveEmpleados();//WithConnection
					//empleadoLogic.getSetVersionRowEmpleados();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesEmpleado();
				
				this.empleadosEliminados= new ArrayList<Empleado>();		
			}
			
			if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Empleado GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.empleado=empleadoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessEmpleado();
      	}
		
	}	
	
	public void actualizarRelaciones(Empleado empleadoLocal) throws Exception {
		
		if(this.empleadoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				empleadoLocal.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs());
				empleadoLocal.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos());
				empleadoLocal.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos());
				empleadoLocal.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas());
				empleadoLocal.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());
				empleadoLocal.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());
				empleadoLocal.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas());
				empleadoLocal.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados());
				empleadoLocal.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys());
				empleadoLocal.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails());
				empleadoLocal.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals());
				empleadoLocal.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias());
				empleadoLocal.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs());
				empleadoLocal.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());
				empleadoLocal.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras());
				empleadoLocal.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers());
				empleadoLocal.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas());
				empleadoLocal.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros());
				empleadoLocal.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());
				empleadoLocal.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas());
				empleadoLocal.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas());
				empleadoLocal.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());
				empleadoLocal.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes());
				empleadoLocal.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos());
				empleadoLocal.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());
			
			} else {
			
				empleadoLocal.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nms);
				empleadoLocal.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursos);
				empleadoLocal.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamos);
				empleadoLocal.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomas);
				empleadoLocal.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis);
				empleadoLocal.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas);
				empleadoLocal.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areas);
				empleadoLocal.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleados);
				empleadoLocal.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbys);
				empleadoLocal.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemails);
				empleadoLocal.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonals);
				empleadoLocal.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referencias);
				empleadoLocal.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nms);
				empleadoLocal.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedads);
				empleadoLocal.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherras);
				empleadoLocal.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenfers);
				empleadoLocal.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visas);
				empleadoLocal.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguros);
				empleadoLocal.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals);
				empleadoLocal.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscas);
				empleadoLocal.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleas);
				empleadoLocal.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleados);
				empleadoLocal.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstantes);
				empleadoLocal.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidos);
				empleadoLocal.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomis);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Empleado empleadoLocal) throws Exception {	
		if(this.empleadoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				empleadoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				empleadoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				empleadoLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProvinciaDetalleFormJInternalFrame.class)) {
				ProvinciaBeanSwingJInternalFrame provinciaBeanSwingJInternalFrameLocal=(ProvinciaBeanSwingJInternalFrame) ((ProvinciaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				provinciaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProvincia(provinciaBeanSwingJInternalFrameLocal.getprovincia(),true);
				provinciaBeanSwingJInternalFrameLocal.actualizarLista(provinciaBeanSwingJInternalFrameLocal.provincia,this.provinciasForeignKey);

				provinciaBeanSwingJInternalFrameLocal.actualizarRelaciones(provinciaBeanSwingJInternalFrameLocal.provincia);

				empleadoLocal.setProvincia(provinciaBeanSwingJInternalFrameLocal.provincia);

				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey("Formulario");
				this.setActualProvinciaForeignKey(provinciaBeanSwingJInternalFrameLocal.provincia.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				empleadoLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				empleadoLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ReligionDetalleFormJInternalFrame.class)) {
				ReligionBeanSwingJInternalFrame religionBeanSwingJInternalFrameLocal=(ReligionBeanSwingJInternalFrame) ((ReligionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				religionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoReligion(religionBeanSwingJInternalFrameLocal.getreligion(),true);
				religionBeanSwingJInternalFrameLocal.actualizarLista(religionBeanSwingJInternalFrameLocal.religion,this.religionsForeignKey);

				religionBeanSwingJInternalFrameLocal.actualizarRelaciones(religionBeanSwingJInternalFrameLocal.religion);

				empleadoLocal.setReligion(religionBeanSwingJInternalFrameLocal.religion);

				this.addItemDefectoCombosForeignKeyReligion();
				this.cargarCombosFrameReligionsForeignKey("Formulario");
				this.setActualReligionForeignKey(religionBeanSwingJInternalFrameLocal.religion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoCivilDetalleFormJInternalFrame.class)) {
				EstadoCivilBeanSwingJInternalFrame estadocivilBeanSwingJInternalFrameLocal=(EstadoCivilBeanSwingJInternalFrame) ((EstadoCivilDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadocivilBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.getestadocivil(),true);
				estadocivilBeanSwingJInternalFrameLocal.actualizarLista(estadocivilBeanSwingJInternalFrameLocal.estadocivil,this.estadocivilsForeignKey);

				estadocivilBeanSwingJInternalFrameLocal.actualizarRelaciones(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				empleadoLocal.setEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey("Formulario");
				this.setActualEstadoCivilForeignKey(estadocivilBeanSwingJInternalFrameLocal.estadocivil.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGeneroDetalleFormJInternalFrame.class)) {
				TipoGeneroBeanSwingJInternalFrame tipogeneroBeanSwingJInternalFrameLocal=(TipoGeneroBeanSwingJInternalFrame) ((TipoGeneroDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogeneroBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.gettipogenero(),true);
				tipogeneroBeanSwingJInternalFrameLocal.actualizarLista(tipogeneroBeanSwingJInternalFrameLocal.tipogenero,this.tipogenerosForeignKey);

				tipogeneroBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				empleadoLocal.setTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey("Formulario");
				this.setActualTipoGeneroForeignKey(tipogeneroBeanSwingJInternalFrameLocal.tipogenero.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoEmpleadoDetalleFormJInternalFrame.class)) {
				TipoEmpleadoBeanSwingJInternalFrame tipoempleadoBeanSwingJInternalFrameLocal=(TipoEmpleadoBeanSwingJInternalFrame) ((TipoEmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoempleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoEmpleado(tipoempleadoBeanSwingJInternalFrameLocal.gettipoempleado(),true);
				tipoempleadoBeanSwingJInternalFrameLocal.actualizarLista(tipoempleadoBeanSwingJInternalFrameLocal.tipoempleado,this.tipoempleadosForeignKey);

				tipoempleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoempleadoBeanSwingJInternalFrameLocal.tipoempleado);

				empleadoLocal.setTipoEmpleado(tipoempleadoBeanSwingJInternalFrameLocal.tipoempleado);

				this.addItemDefectoCombosForeignKeyTipoEmpleado();
				this.cargarCombosFrameTipoEmpleadosForeignKey("Formulario");
				this.setActualTipoEmpleadoForeignKey(tipoempleadoBeanSwingJInternalFrameLocal.tipoempleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoInstruccionDetalleFormJInternalFrame.class)) {
				TipoInstruccionBeanSwingJInternalFrame tipoinstruccionBeanSwingJInternalFrameLocal=(TipoInstruccionBeanSwingJInternalFrame) ((TipoInstruccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoinstruccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoInstruccion(tipoinstruccionBeanSwingJInternalFrameLocal.gettipoinstruccion(),true);
				tipoinstruccionBeanSwingJInternalFrameLocal.actualizarLista(tipoinstruccionBeanSwingJInternalFrameLocal.tipoinstruccion,this.tipoinstruccionsForeignKey);

				tipoinstruccionBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoinstruccionBeanSwingJInternalFrameLocal.tipoinstruccion);

				empleadoLocal.setTipoInstruccion(tipoinstruccionBeanSwingJInternalFrameLocal.tipoinstruccion);

				this.addItemDefectoCombosForeignKeyTipoInstruccion();
				this.cargarCombosFrameTipoInstruccionsForeignKey("Formulario");
				this.setActualTipoInstruccionForeignKey(tipoinstruccionBeanSwingJInternalFrameLocal.tipoinstruccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CargoDetalleFormJInternalFrame.class)) {
				CargoBeanSwingJInternalFrame cargoBeanSwingJInternalFrameLocal=(CargoBeanSwingJInternalFrame) ((CargoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cargoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCargo(cargoBeanSwingJInternalFrameLocal.getcargo(),true);
				cargoBeanSwingJInternalFrameLocal.actualizarLista(cargoBeanSwingJInternalFrameLocal.cargo,this.cargosForeignKey);

				cargoBeanSwingJInternalFrameLocal.actualizarRelaciones(cargoBeanSwingJInternalFrameLocal.cargo);

				empleadoLocal.setCargo(cargoBeanSwingJInternalFrameLocal.cargo);

				this.addItemDefectoCombosForeignKeyCargo();
				this.cargarCombosFrameCargosForeignKey("Formulario");
				this.setActualCargoForeignKey(cargoBeanSwingJInternalFrameLocal.cargo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstructuraDetalleFormJInternalFrame.class)) {
				EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrameLocal=(EstructuraBeanSwingJInternalFrame) ((EstructuraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estructuraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstructura(estructuraBeanSwingJInternalFrameLocal.getestructura(),true);
				estructuraBeanSwingJInternalFrameLocal.actualizarLista(estructuraBeanSwingJInternalFrameLocal.estructura,this.estructurasForeignKey);

				estructuraBeanSwingJInternalFrameLocal.actualizarRelaciones(estructuraBeanSwingJInternalFrameLocal.estructura);

				empleadoLocal.setEstructura(estructuraBeanSwingJInternalFrameLocal.estructura);

				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey("Formulario");
				this.setActualEstructuraForeignKey(estructuraBeanSwingJInternalFrameLocal.estructura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstructuraDetalleFormJInternalFrame.class)) {
				EstructuraBeanSwingJInternalFrame estructuraseccionBeanSwingJInternalFrameLocal=(EstructuraBeanSwingJInternalFrame) ((EstructuraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estructuraseccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstructura(estructuraseccionBeanSwingJInternalFrameLocal.getestructura(),true);
				estructuraseccionBeanSwingJInternalFrameLocal.actualizarLista(estructuraseccionBeanSwingJInternalFrameLocal.estructura,this.estructuraseccionsForeignKey);

				estructuraseccionBeanSwingJInternalFrameLocal.actualizarRelaciones(estructuraseccionBeanSwingJInternalFrameLocal.estructura);

				empleadoLocal.setEstructuraSeccion(estructuraseccionBeanSwingJInternalFrameLocal.estructura);

				this.addItemDefectoCombosForeignKeyEstructuraSeccion();
				this.cargarCombosFrameEstructuraSeccionsForeignKey("Formulario");
				this.setActualEstructuraSeccionForeignKey(estructuraseccionBeanSwingJInternalFrameLocal.estructura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoEmpleadoDetalleFormJInternalFrame.class)) {
				EstadoEmpleadoBeanSwingJInternalFrame estadoempleadoBeanSwingJInternalFrameLocal=(EstadoEmpleadoBeanSwingJInternalFrame) ((EstadoEmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoempleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoEmpleado(estadoempleadoBeanSwingJInternalFrameLocal.getestadoempleado(),true);
				estadoempleadoBeanSwingJInternalFrameLocal.actualizarLista(estadoempleadoBeanSwingJInternalFrameLocal.estadoempleado,this.estadoempleadosForeignKey);

				estadoempleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoempleadoBeanSwingJInternalFrameLocal.estadoempleado);

				empleadoLocal.setEstadoEmpleado(estadoempleadoBeanSwingJInternalFrameLocal.estadoempleado);

				this.addItemDefectoCombosForeignKeyEstadoEmpleado();
				this.cargarCombosFrameEstadoEmpleadosForeignKey("Formulario");
				this.setActualEstadoEmpleadoForeignKey(estadoempleadoBeanSwingJInternalFrameLocal.estadoempleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoContratoDetalleFormJInternalFrame.class)) {
				TipoContratoBeanSwingJInternalFrame tipocontratoBeanSwingJInternalFrameLocal=(TipoContratoBeanSwingJInternalFrame) ((TipoContratoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocontratoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoContrato(tipocontratoBeanSwingJInternalFrameLocal.gettipocontrato(),true);
				tipocontratoBeanSwingJInternalFrameLocal.actualizarLista(tipocontratoBeanSwingJInternalFrameLocal.tipocontrato,this.tipocontratosForeignKey);

				tipocontratoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocontratoBeanSwingJInternalFrameLocal.tipocontrato);

				empleadoLocal.setTipoContrato(tipocontratoBeanSwingJInternalFrameLocal.tipocontrato);

				this.addItemDefectoCombosForeignKeyTipoContrato();
				this.cargarCombosFrameTipoContratosForeignKey("Formulario");
				this.setActualTipoContratoForeignKey(tipocontratoBeanSwingJInternalFrameLocal.tipocontrato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCuentaBancoGlobalDetalleFormJInternalFrame.class)) {
				TipoCuentaBancoGlobalBeanSwingJInternalFrame tipocuentabancoglobalBeanSwingJInternalFrameLocal=(TipoCuentaBancoGlobalBeanSwingJInternalFrame) ((TipoCuentaBancoGlobalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocuentabancoglobalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCuentaBancoGlobal(tipocuentabancoglobalBeanSwingJInternalFrameLocal.gettipocuentabancoglobal(),true);
				tipocuentabancoglobalBeanSwingJInternalFrameLocal.actualizarLista(tipocuentabancoglobalBeanSwingJInternalFrameLocal.tipocuentabancoglobal,this.tipocuentabancoglobalsForeignKey);

				tipocuentabancoglobalBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocuentabancoglobalBeanSwingJInternalFrameLocal.tipocuentabancoglobal);

				empleadoLocal.setTipoCuentaBancoGlobal(tipocuentabancoglobalBeanSwingJInternalFrameLocal.tipocuentabancoglobal);

				this.addItemDefectoCombosForeignKeyTipoCuentaBancoGlobal();
				this.cargarCombosFrameTipoCuentaBancoGlobalsForeignKey("Formulario");
				this.setActualTipoCuentaBancoGlobalForeignKey(tipocuentabancoglobalBeanSwingJInternalFrameLocal.tipocuentabancoglobal.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarEmpleadoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = empleadoValidator.getInvalidValues(this.empleado);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Empleado empleado,List<Empleado> empleados) throws Exception {
		try	{		
			EmpleadoConstantesFunciones.actualizarLista(empleado,empleados,this.empleadoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Empleado empleado,List<Empleado> empleados) throws Exception {
		try	{			
			EmpleadoConstantesFunciones.actualizarSelectedLista(empleado,empleados);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Empleado> empleadosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				empleadosLocal=this.empleadoLogic.getEmpleados();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				empleadosLocal=this.empleados;
			}
			//ARCHITECTURE
		
			for(Empleado empleadoLocal:empleadosLocal) {
				if(this.permiteMantenimiento(empleadoLocal) && empleadoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+EmpleadoConstantesFunciones.getEmpleadoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_empresaEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_sucursalEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_paisEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDPROVINCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_provinciaEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_ciudadEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_centro_costoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDRELIGION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_religionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDESTADOCIVIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_estado_civilEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDTIPOGENERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_generoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDTIPOEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_empleadoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDTIPOINSTRUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_instruccionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDCARGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_cargoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDESTRUCTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_estructuraEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDESTRUCTURASECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_estructura_seccionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDESTADOEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_estado_empleadoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDTIPOCONTRATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_contratoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelcodigoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnombreEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.APELLIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelapellidoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.NOMBRECOMPLETO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnombre_completoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.MAIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelmailEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeldireccionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.SUELDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelsueldoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltelefonoEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.IDTIPOCUENTABANCOGLOBAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_cuenta_banco_globalEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.NUMEROCUENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnumero_cuentaEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.TIENECASA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_casaEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EmpleadoConstantesFunciones.TIENEVEHICULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_vehiculoEmpleado,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_empresaEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_sucursalEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_paisEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_provinciaEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_ciudadEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_centro_costoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_religionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_estado_civilEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_generoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_empleadoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_instruccionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_cargoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_estructuraEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_estructura_seccionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_estado_empleadoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_contratoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelcodigoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelnombreEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelapellidoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelnombre_completoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelmailEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabeldireccionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelsueldoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabeltelefonoEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelid_tipo_cuenta_banco_globalEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabelnumero_cuentaEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_casaEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_vehiculoEmpleado,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("CargaFamiliar_NM")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.getcargafamiliar_nm().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Curso")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.getcurso().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Prestamo")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.getprestamo().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoIdioma")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.getempleadoidioma().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("HistorialPagoMesNomi")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.gethistorialpagomesnomi().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoImpuestoRenta")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.getempleadoimpuestorenta().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("DatoGeneralEmpleado")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.getdatogeneralempleado().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Area")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.getarea().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("GastoEmpleado")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.getgastoempleado().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoHobby")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.getempleadohobby().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoEMail")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.getempleadoemail().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("RasgoPersonal")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.getrasgopersonal().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Referencia")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.getreferencia().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Telefono_NM")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.gettelefono_nm().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Novedad")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.getnovedad().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoHerra")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.getempleadoherra().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoEnfer")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.getempleadoenfer().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Visa")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.getvisa().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("Seguro")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.getseguro().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("AsistenciaMensual")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.getasistenciamensual().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoDisca")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.getempleadodisca().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("ProfesionEmplea")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.getprofesionemplea().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEmpleado")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.getrubroempleado().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoConstante")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.getempleadoconstante().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("TallaVestido")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.gettallavestido().setEmpleado(this.empleado);
			}

			return;
		}
		 else  if(sTipo.equals("NovedadNomi")) {
			if(this.empleado==null) {
				this.empleado= new Empleado();
			}

			if(this.empleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEmpleado
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.getnovedadnomi().setEmpleado(this.empleado);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoEmpleado--;	
		
		
		this.empleadoAux=new Empleado();
		
		this.empleadoAux.setId(this.iIdNuevoEmpleado);
		this.empleadoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.empleadoLogic.getEmpleados().add(this.empleadoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.empleados.add(this.empleadoAux);
		}
		//ARCHITECTURE
		
		this.empleado=this.empleadoAux;
		
		if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioEmpleado(this.empleado);
			this.setVariablesObjetoActualToFormularioForeignKeyEmpleado(this.empleado);
		}
				
		//this.setDefaultControlesEmpleado();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyEmpleado();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyEmpleado();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyEmpleado();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEmpleado(this.empleadoBean,this.empleado,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(EmpleadoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.empleadoSessionBean.getConGuardarRelaciones()) {
			classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.empleadoReturnGeneral=empleadoLogic.procesarEventosEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.empleadoLogic.getEmpleados(),this.empleado,this.empleadoParameterGeneral,this.isEsNuevoEmpleado,classes);//this.empleadoLogic.getEmpleado()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanEmpleado(this.empleadoReturnGeneral,this.empleadoBean,false);
		
		if(this.empleadoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyEmpleado(this.empleadoReturnGeneral.getEmpleado());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioEmpleado(this.empleadoReturnGeneral.getEmpleado());
		}
		
		if(this.empleadoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioEmpleado(this.empleadoReturnGeneral.getEmpleado(),classes);//this.empleadoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyEmpleado();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyEmpleado();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EmpleadoBeanSwingJInternalFrameAdditional.RecargarFormEmpleado(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingEmpleado(false);
						
			if(empleadoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.getEsGuardarRelacionado() && CargaFamiliar_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCargaFamiliar_NMActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoSessionBean.getEsGuardarRelacionado() && CursoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCursoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoSessionBean.getEsGuardarRelacionado() && PrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrestamoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.getEsGuardarRelacionado() && EmpleadoIdiomaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoIdiomaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado() && HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoMesNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado() && EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoImpuestoRentaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.getEsGuardarRelacionado() && DatoGeneralEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDatoGeneralEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaSessionBean.getEsGuardarRelacionado() && AreaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAreaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.getEsGuardarRelacionado() && GastoEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGastoEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.getEsGuardarRelacionado() && EmpleadoHobbyJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoHobbyActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.getEsGuardarRelacionado() && EmpleadoEMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEMailActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.getEsGuardarRelacionado() && RasgoPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRasgoPersonalActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaSessionBean.getEsGuardarRelacionado() && ReferenciaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.getEsGuardarRelacionado() && Telefono_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTelefono_NMActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado() && NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.getEsGuardarRelacionado() && EmpleadoHerraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoHerraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.getEsGuardarRelacionado() && EmpleadoEnferJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEnferActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaSessionBean.getEsGuardarRelacionado() && VisaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVisaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroSessionBean.getEsGuardarRelacionado() && SeguroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSeguroActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado() && AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaMensualActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.getEsGuardarRelacionado() && EmpleadoDiscaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoDiscaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.getEsGuardarRelacionado() && ProfesionEmpleaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProfesionEmpleaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado() && RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.getEsGuardarRelacionado() && EmpleadoConstanteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoConstanteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.getEsGuardarRelacionado() && TallaVestidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTallaVestidoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.getEsGuardarRelacionado() && NovedadNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadNomiActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEmpleado();
			}
			
			this.actualizarVisualTableDatosEmpleado();
			
			this.jTableDatosEmpleado.setRowSelectionInterval(this.getIndiceNuevoEmpleado(), this.getIndiceNuevoEmpleado());
			
			this.seleccionarFilaTablaEmpleadoActual();
						
			this.actualizarEstadoCeldasBotonesEmpleado("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesEmpleado(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarcodigoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarnombreEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarapellidoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarnombre_completoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarmailEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activardireccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarsueldoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activartelefonoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarnumero_cuentaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activartiene_casaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activartiene_vehiculoEmpleado);	
		//
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_empresaEmpleado);//
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_sucursalEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_paisEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_provinciaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_ciudadEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_centro_costoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_religionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_estado_civilEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_tipo_generoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_tipo_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_tipo_instruccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_cargoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_estructuraEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_estructura_seccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_estado_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_tipo_contratoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setEnabled(isHabilitar && this.empleadoConstantesFunciones.activarid_tipo_cuenta_banco_globalEmpleado);
	};
	
	public void setDefaultControlesEmpleado() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoEmpleado(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.empleadoSessionBean.setConGuardarRelaciones(true);			
			this.empleadoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.empleadoSessionBean.setConGuardarRelaciones(false);			
			this.empleadoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoEmpleado() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
				if(empleadoAux.getId().equals(this.iIdNuevoEmpleado)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Empleado empleadoAux:this.empleados) {
				if(empleadoAux.getId().equals(this.iIdNuevoEmpleado)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualEmpleado(Empleado empleado,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
				if(empleadoAux.getId().equals(empleado.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Empleado empleadoAux:this.empleados) {
				if(empleadoAux.getId().equals(empleado.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalEmpleado(Empleado empleadoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
				if(empleadoAux.getEmpleadoOriginal().getId().equals(empleadoOriginal.getId())) {
					existe=true;
					empleadoOriginal.setId(empleadoAux.getId());
					empleadoOriginal.setVersionRow(empleadoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Empleado empleadoAux:this.empleados) {
				if(empleadoAux.getEmpleadoOriginal().getId().equals(empleadoOriginal.getId())) {
					existe=true;
					empleadoOriginal.setId(empleadoAux.getId());
					empleadoOriginal.setVersionRow(empleadoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosEmpleado(Boolean esParaCancelar) throws Exception {
		empleadosAux=new ArrayList<Empleado>();
		empleadoAux=new Empleado();
		
		if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
					if(empleadoAux.getId()<0) {
						empleadosAux.add(empleadoAux);
					}		
				}
				this.iIdNuevoEmpleado=0L;
				this.empleadoLogic.getEmpleados().removeAll(empleadosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Empleado empleadoAux:this.empleados) {
					if(empleadoAux.getId()<0) {
						empleadosAux.add(empleadoAux);
					}		
				}
				this.iIdNuevoEmpleado=0L;
				this.empleados.removeAll(empleadosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoEmpleado 
					&& this.empleadoLogic.getEmpleados().size()>0
					) {
					empleadoAux=this.empleadoLogic.getEmpleados().get(this.empleadoLogic.getEmpleados().size() - 1);
				
					if(empleadoAux.getId()<0) {
						this.empleadoLogic.getEmpleados().remove(empleadoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoEmpleado && this.empleados.size()>0) {
					empleadoAux=this.empleados.get(this.empleados.size() - 1);
				
					if(empleadoAux.getId()<0) {
						this.empleados.remove(empleadoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoEmpleado(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(empleado.getId()<0) {
				this.empleadoLogic.getEmpleados().remove(this.empleado);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(empleado.getId()<0) {
				this.empleados.remove(this.empleado);
			}
		}			
	}
	
	public void setEstadosInicialesEmpleado(List<Empleado> empleadosAux) throws Exception {
		EmpleadoConstantesFunciones.setEstadosInicialesEmpleado(empleadosAux);
	}
	
	public void setEstadosInicialesEmpleado(Empleado empleadoAux) throws Exception {
		EmpleadoConstantesFunciones.setEstadosInicialesEmpleado(empleadoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarEmpleadoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarEmpleadoActual()) {
				if(!this.isEsNuevoEmpleado) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoEmpleado=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarEmpleadoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Empleado ?", "MANTENIMIENTO DE Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Empleado empleado) throws Exception {
		EmpleadoConstantesFunciones.seleccionarAsignar(this.empleado,empleado);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarEmpleado=this.isPermisoActualizarOriginalEmpleado;
			
			
			this.seleccionarAsignar(empleado);
			
			

			idCentroCostoActual=empleado.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EmpleadoConstantesFunciones.quitarEspaciosEmpleado(this.empleado,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.empleadoSessionBean.setsFuncionBusquedaRapida(this.empleadoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoEmpleado) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosEmpleado(esParaCancelar);				
				this.cancelarNuevoEmpleado(esParaCancelar);								
			}
			
			this.empleado=new Empleado();
			
			this.inicializarEmpleado();
			
			this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarEmpleado() throws Exception {
		try {
			EmpleadoConstantesFunciones.inicializarEmpleado(this.empleado);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.empleadoLogic.getEmpleados().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteEmpleados(String sAccionBusqueda,List<Empleado> empleadosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Empleado"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="EmpleadoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("EmpleadoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Empleado"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Empleados");		
		parameters.put("busquedapor", EmpleadoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(CargaFamiliar_NM.class));
			classes.add(new Classe(Curso.class));
			classes.add(new Classe(Prestamo.class));
			classes.add(new Classe(EmpleadoIdioma.class));
			classes.add(new Classe(HistorialPagoMesNomi.class));
			classes.add(new Classe(EmpleadoImpuestoRenta.class));
			classes.add(new Classe(DatoGeneralEmpleado.class));
			classes.add(new Classe(Area.class));
			classes.add(new Classe(GastoEmpleado.class));
			classes.add(new Classe(EmpleadoHobby.class));
			classes.add(new Classe(EmpleadoEMail.class));
			classes.add(new Classe(RasgoPersonal.class));
			classes.add(new Classe(Referencia.class));
			classes.add(new Classe(Telefono_NM.class));
			classes.add(new Classe(Novedad.class));
			classes.add(new Classe(EmpleadoHerra.class));
			classes.add(new Classe(EmpleadoEnfer.class));
			classes.add(new Classe(Visa.class));
			classes.add(new Classe(Seguro.class));
			classes.add(new Classe(AsistenciaMensual.class));
			classes.add(new Classe(EmpleadoDisca.class));
			classes.add(new Classe(ProfesionEmplea.class));
			classes.add(new Classe(RubroEmpleado.class));
			classes.add(new Classe(EmpleadoConstante.class));
			classes.add(new Classe(TallaVestido.class));
			classes.add(new Classe(NovedadNomi.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					EmpleadoLogic empleadoLogicAuxiliar=new EmpleadoLogic();
					empleadoLogicAuxiliar.setDatosCliente(empleadoLogic.getDatosCliente());				
					empleadoLogicAuxiliar.setEmpleados(empleadosParaReportes);
					
					empleadoLogicAuxiliar.cargarRelacionesLoteForeignKeyEmpleadoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					empleadosParaReportes=empleadoLogicAuxiliar.getEmpleados();
					
					//empleadoLogic.getNewConnexionToDeep();
					
					//for (Empleado empleado:empleadosParaReportes) {
					//	empleadoLogic.deepLoad(empleado, false, DeepLoadType.INCLUDE, classes);
					//}						
					//empleadoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//empleadoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileCargaFamiliar_NM = AuxiliarReportes.class.getResourceAsStream("CargaFamiliar_NMDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cargafamiliar_nm", reportFileCargaFamiliar_NM);

			InputStream reportFileCurso = AuxiliarReportes.class.getResourceAsStream("CursoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_curso", reportFileCurso);

			InputStream reportFilePrestamo = AuxiliarReportes.class.getResourceAsStream("PrestamoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_prestamo", reportFilePrestamo);

			InputStream reportFileEmpleadoIdioma = AuxiliarReportes.class.getResourceAsStream("EmpleadoIdiomaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoidioma", reportFileEmpleadoIdioma);

			InputStream reportFileHistorialPagoMesNomi = AuxiliarReportes.class.getResourceAsStream("HistorialPagoMesNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_historialpagomesnomi", reportFileHistorialPagoMesNomi);

			InputStream reportFileEmpleadoImpuestoRenta = AuxiliarReportes.class.getResourceAsStream("EmpleadoImpuestoRentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoimpuestorenta", reportFileEmpleadoImpuestoRenta);

			InputStream reportFileDatoGeneralEmpleado = AuxiliarReportes.class.getResourceAsStream("DatoGeneralEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_datogeneralempleado", reportFileDatoGeneralEmpleado);

			InputStream reportFileArea = AuxiliarReportes.class.getResourceAsStream("AreaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_area", reportFileArea);

			InputStream reportFileGastoEmpleado = AuxiliarReportes.class.getResourceAsStream("GastoEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_gastoempleado", reportFileGastoEmpleado);

			InputStream reportFileEmpleadoHobby = AuxiliarReportes.class.getResourceAsStream("EmpleadoHobbyDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadohobby", reportFileEmpleadoHobby);

			InputStream reportFileEmpleadoEMail = AuxiliarReportes.class.getResourceAsStream("EmpleadoEMailDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoemail", reportFileEmpleadoEMail);

			InputStream reportFileRasgoPersonal = AuxiliarReportes.class.getResourceAsStream("RasgoPersonalDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rasgopersonal", reportFileRasgoPersonal);

			InputStream reportFileReferencia = AuxiliarReportes.class.getResourceAsStream("ReferenciaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_referencia", reportFileReferencia);

			InputStream reportFileTelefono_NM = AuxiliarReportes.class.getResourceAsStream("Telefono_NMDetalleRelacionesDesign.jasper");
			parameters.put("subreport_telefono_nm", reportFileTelefono_NM);

			InputStream reportFileNovedad = AuxiliarReportes.class.getResourceAsStream("NovedadDetalleRelacionesDesign.jasper");
			parameters.put("subreport_novedad", reportFileNovedad);

			InputStream reportFileEmpleadoHerra = AuxiliarReportes.class.getResourceAsStream("EmpleadoHerraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoherra", reportFileEmpleadoHerra);

			InputStream reportFileEmpleadoEnfer = AuxiliarReportes.class.getResourceAsStream("EmpleadoEnferDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoenfer", reportFileEmpleadoEnfer);

			InputStream reportFileVisa = AuxiliarReportes.class.getResourceAsStream("VisaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_visa", reportFileVisa);

			InputStream reportFileSeguro = AuxiliarReportes.class.getResourceAsStream("SeguroDetalleRelacionesDesign.jasper");
			parameters.put("subreport_seguro", reportFileSeguro);

			InputStream reportFileAsistenciaMensual = AuxiliarReportes.class.getResourceAsStream("AsistenciaMensualDetalleRelacionesDesign.jasper");
			parameters.put("subreport_asistenciamensual", reportFileAsistenciaMensual);

			InputStream reportFileEmpleadoDisca = AuxiliarReportes.class.getResourceAsStream("EmpleadoDiscaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadodisca", reportFileEmpleadoDisca);

			InputStream reportFileProfesionEmplea = AuxiliarReportes.class.getResourceAsStream("ProfesionEmpleaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_profesionemplea", reportFileProfesionEmplea);

			InputStream reportFileRubroEmpleado = AuxiliarReportes.class.getResourceAsStream("RubroEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroempleado", reportFileRubroEmpleado);

			InputStream reportFileEmpleadoConstante = AuxiliarReportes.class.getResourceAsStream("EmpleadoConstanteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoconstante", reportFileEmpleadoConstante);

			InputStream reportFileTallaVestido = AuxiliarReportes.class.getResourceAsStream("TallaVestidoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_tallavestido", reportFileTallaVestido);

			InputStream reportFileNovedadNomi = AuxiliarReportes.class.getResourceAsStream("NovedadNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_novedadnomi", reportFileNovedadNomi);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceEmpleado=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			EmpleadoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			EmpleadoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceEmpleado=new JRBeanArrayDataSource(EmpleadoJInternalFrame.TraerEmpleadoBeans(empleadosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceEmpleado);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+EmpleadoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+EmpleadoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(EmpleadoBean.TraerEmpleadoBeans(empleadosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoEmpleadoActionPerformed(null);
					//this.generarExcelReporteEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesEmpleados(sAccionBusqueda,sTipoArchivoReporte,empleadosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<Empleado> empleadosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Empleados");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEmpleado("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Empleado empleado : empleadosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			EmpleadoConstantesFunciones.generarExcelReporteDataEmpleado("NORMAL",row,workbook,empleado,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderEmpleado(String sTipo,Row row,Workbook workbook) {
		
		EmpleadoConstantesFunciones.generarExcelReporteHeaderEmpleado(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<Empleado> empleadosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Empleados");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Empleado empleado : empleadosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleado));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDPROVINCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPROVINCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getprovincia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDRELIGION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDRELIGION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getreligion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getestadocivil_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettipogenero_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettipoempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettipoinstruccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDCARGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCARGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getcargo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getestructura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getestructuraseccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getestadoempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettipocontrato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_APELLIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_APELLIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getapellido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getnombre_completo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_MAIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_MAIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getmail());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_SUELDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_SUELDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getsueldo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.gettipocuentabancoglobal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(empleado.getnumero_cuenta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_TIENECASA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENECASA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(empleado.gettiene_casa()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(empleado.gettiene_vehiculo()));


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<Empleado> empleadosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Empleado> empleadosRespaldo=null;
		
		classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.empleadoLogic.setDatosCliente(this.datosCliente);
		this.empleadoLogic.setDatosDeep(this.datosDeep);
		this.empleadoLogic.setIsConDeep(true);
		
		empleadosRespaldo=this.empleadoLogic.getEmpleados();
		
		this.empleadoLogic.setEmpleados(empleadosParaReportes);	
		this.empleadoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		empleadosParaReportes=this.empleadoLogic.getEmpleados();
		this.empleadoLogic.setEmpleados(empleadosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Empleados");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEmpleado("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Empleado empleado : empleadosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderEmpleado("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			EmpleadoConstantesFunciones.generarExcelReporteDataEmpleado("NORMAL",row,workbook,empleado,cellStyleDataAux);
		
			
			


				//CargaFamiliar_NM
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CargaFamiliar_NMConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getCargaFamiliar_NMs()!=null && empleado.getCargaFamiliar_NMs().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CargaFamiliar_NMConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CargaFamiliar_NMConstantesFunciones.generarExcelReporteHeaderCargaFamiliar_NM("RELACIONADO",row,workbook);
				}

				if(empleado.getCargaFamiliar_NMs()!=null) {
					i2=0;
					for(CargaFamiliar_NM cargafamiliar_nm : empleado.getCargaFamiliar_NMs()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CargaFamiliar_NMConstantesFunciones.generarExcelReporteDataCargaFamiliar_NM("RELACIONADO",row,workbook,cargafamiliar_nm,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Curso
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CursoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getCursos()!=null && empleado.getCursos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CursoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CursoConstantesFunciones.generarExcelReporteHeaderCurso("RELACIONADO",row,workbook);
				}

				if(empleado.getCursos()!=null) {
					i2=0;
					for(Curso curso : empleado.getCursos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CursoConstantesFunciones.generarExcelReporteDataCurso("RELACIONADO",row,workbook,curso,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Prestamo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PrestamoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getPrestamos()!=null && empleado.getPrestamos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PrestamoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PrestamoConstantesFunciones.generarExcelReporteHeaderPrestamo("RELACIONADO",row,workbook);
				}

				if(empleado.getPrestamos()!=null) {
					i2=0;
					for(Prestamo prestamo : empleado.getPrestamos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PrestamoConstantesFunciones.generarExcelReporteDataPrestamo("RELACIONADO",row,workbook,prestamo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoIdioma
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoIdiomaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoIdiomas()!=null && empleado.getEmpleadoIdiomas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoIdiomaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoIdiomaConstantesFunciones.generarExcelReporteHeaderEmpleadoIdioma("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoIdiomas()!=null) {
					i2=0;
					for(EmpleadoIdioma empleadoidioma : empleado.getEmpleadoIdiomas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoIdiomaConstantesFunciones.generarExcelReporteDataEmpleadoIdioma("RELACIONADO",row,workbook,empleadoidioma,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//HistorialPagoMesNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getHistorialPagoMesNomis()!=null && empleado.getHistorialPagoMesNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					HistorialPagoMesNomiConstantesFunciones.generarExcelReporteHeaderHistorialPagoMesNomi("RELACIONADO",row,workbook);
				}

				if(empleado.getHistorialPagoMesNomis()!=null) {
					i2=0;
					for(HistorialPagoMesNomi historialpagomesnomi : empleado.getHistorialPagoMesNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						HistorialPagoMesNomiConstantesFunciones.generarExcelReporteDataHistorialPagoMesNomi("RELACIONADO",row,workbook,historialpagomesnomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoImpuestoRenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoImpuestoRentas()!=null && empleado.getEmpleadoImpuestoRentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoImpuestoRentaConstantesFunciones.generarExcelReporteHeaderEmpleadoImpuestoRenta("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoImpuestoRentas()!=null) {
					i2=0;
					for(EmpleadoImpuestoRenta empleadoimpuestorenta : empleado.getEmpleadoImpuestoRentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoImpuestoRentaConstantesFunciones.generarExcelReporteDataEmpleadoImpuestoRenta("RELACIONADO",row,workbook,empleadoimpuestorenta,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DatoGeneralEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DatoGeneralEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getDatoGeneralEmpleado()!=null) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DatoGeneralEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DatoGeneralEmpleadoConstantesFunciones.generarExcelReporteHeaderDatoGeneralEmpleado("RELACIONADO",row,workbook);
				}

				if(empleado.getDatoGeneralEmpleado()!=null) {
					i2=0;
					DatoGeneralEmpleado datogeneralempleado=empleado.getDatoGeneralEmpleado();
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DatoGeneralEmpleadoConstantesFunciones.generarExcelReporteDataDatoGeneralEmpleado("RELACIONADO",row,workbook,datogeneralempleado,cellStyleDataAuxHijo);
						i2++;
					}
				
			}


				//Area
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(AreaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getAreas()!=null && empleado.getAreas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(AreaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					AreaConstantesFunciones.generarExcelReporteHeaderArea("RELACIONADO",row,workbook);
				}

				if(empleado.getAreas()!=null) {
					i2=0;
					for(Area area : empleado.getAreas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						AreaConstantesFunciones.generarExcelReporteDataArea("RELACIONADO",row,workbook,area,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GastoEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GastoEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getGastoEmpleados()!=null && empleado.getGastoEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GastoEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GastoEmpleadoConstantesFunciones.generarExcelReporteHeaderGastoEmpleado("RELACIONADO",row,workbook);
				}

				if(empleado.getGastoEmpleados()!=null) {
					i2=0;
					for(GastoEmpleado gastoempleado : empleado.getGastoEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GastoEmpleadoConstantesFunciones.generarExcelReporteDataGastoEmpleado("RELACIONADO",row,workbook,gastoempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoHobby
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoHobbyConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoHobbys()!=null && empleado.getEmpleadoHobbys().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoHobbyConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoHobbyConstantesFunciones.generarExcelReporteHeaderEmpleadoHobby("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoHobbys()!=null) {
					i2=0;
					for(EmpleadoHobby empleadohobby : empleado.getEmpleadoHobbys()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoHobbyConstantesFunciones.generarExcelReporteDataEmpleadoHobby("RELACIONADO",row,workbook,empleadohobby,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoEMail
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoEMailConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoEMails()!=null && empleado.getEmpleadoEMails().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoEMailConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoEMailConstantesFunciones.generarExcelReporteHeaderEmpleadoEMail("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoEMails()!=null) {
					i2=0;
					for(EmpleadoEMail empleadoemail : empleado.getEmpleadoEMails()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoEMailConstantesFunciones.generarExcelReporteDataEmpleadoEMail("RELACIONADO",row,workbook,empleadoemail,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RasgoPersonal
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RasgoPersonalConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getRasgoPersonals()!=null && empleado.getRasgoPersonals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RasgoPersonalConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RasgoPersonalConstantesFunciones.generarExcelReporteHeaderRasgoPersonal("RELACIONADO",row,workbook);
				}

				if(empleado.getRasgoPersonals()!=null) {
					i2=0;
					for(RasgoPersonal rasgopersonal : empleado.getRasgoPersonals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RasgoPersonalConstantesFunciones.generarExcelReporteDataRasgoPersonal("RELACIONADO",row,workbook,rasgopersonal,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Referencia
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ReferenciaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getReferencias()!=null && empleado.getReferencias().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ReferenciaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ReferenciaConstantesFunciones.generarExcelReporteHeaderReferencia("RELACIONADO",row,workbook);
				}

				if(empleado.getReferencias()!=null) {
					i2=0;
					for(Referencia referencia : empleado.getReferencias()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ReferenciaConstantesFunciones.generarExcelReporteDataReferencia("RELACIONADO",row,workbook,referencia,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Telefono_NM
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(Telefono_NMConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getTelefono_NMs()!=null && empleado.getTelefono_NMs().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(Telefono_NMConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					Telefono_NMConstantesFunciones.generarExcelReporteHeaderTelefono_NM("RELACIONADO",row,workbook);
				}

				if(empleado.getTelefono_NMs()!=null) {
					i2=0;
					for(Telefono_NM telefono_nm : empleado.getTelefono_NMs()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						Telefono_NMConstantesFunciones.generarExcelReporteDataTelefono_NM("RELACIONADO",row,workbook,telefono_nm,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Novedad
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NovedadConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getNovedads()!=null && empleado.getNovedads().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NovedadConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NovedadConstantesFunciones.generarExcelReporteHeaderNovedad("RELACIONADO",row,workbook);
				}

				if(empleado.getNovedads()!=null) {
					i2=0;
					for(Novedad novedad : empleado.getNovedads()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NovedadConstantesFunciones.generarExcelReporteDataNovedad("RELACIONADO",row,workbook,novedad,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoHerra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoHerraConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoHerras()!=null && empleado.getEmpleadoHerras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoHerraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoHerraConstantesFunciones.generarExcelReporteHeaderEmpleadoHerra("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoHerras()!=null) {
					i2=0;
					for(EmpleadoHerra empleadoherra : empleado.getEmpleadoHerras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoHerraConstantesFunciones.generarExcelReporteDataEmpleadoHerra("RELACIONADO",row,workbook,empleadoherra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoEnfer
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoEnferConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoEnfers()!=null && empleado.getEmpleadoEnfers().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoEnferConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoEnferConstantesFunciones.generarExcelReporteHeaderEmpleadoEnfer("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoEnfers()!=null) {
					i2=0;
					for(EmpleadoEnfer empleadoenfer : empleado.getEmpleadoEnfers()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoEnferConstantesFunciones.generarExcelReporteDataEmpleadoEnfer("RELACIONADO",row,workbook,empleadoenfer,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Visa
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(VisaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getVisas()!=null && empleado.getVisas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(VisaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					VisaConstantesFunciones.generarExcelReporteHeaderVisa("RELACIONADO",row,workbook);
				}

				if(empleado.getVisas()!=null) {
					i2=0;
					for(Visa visa : empleado.getVisas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						VisaConstantesFunciones.generarExcelReporteDataVisa("RELACIONADO",row,workbook,visa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Seguro
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SeguroConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getSeguros()!=null && empleado.getSeguros().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SeguroConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SeguroConstantesFunciones.generarExcelReporteHeaderSeguro("RELACIONADO",row,workbook);
				}

				if(empleado.getSeguros()!=null) {
					i2=0;
					for(Seguro seguro : empleado.getSeguros()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SeguroConstantesFunciones.generarExcelReporteDataSeguro("RELACIONADO",row,workbook,seguro,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//AsistenciaMensual
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getAsistenciaMensuals()!=null && empleado.getAsistenciaMensuals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					AsistenciaMensualConstantesFunciones.generarExcelReporteHeaderAsistenciaMensual("RELACIONADO",row,workbook);
				}

				if(empleado.getAsistenciaMensuals()!=null) {
					i2=0;
					for(AsistenciaMensual asistenciamensual : empleado.getAsistenciaMensuals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						AsistenciaMensualConstantesFunciones.generarExcelReporteDataAsistenciaMensual("RELACIONADO",row,workbook,asistenciamensual,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoDisca
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoDiscaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoDiscas()!=null && empleado.getEmpleadoDiscas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoDiscaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoDiscaConstantesFunciones.generarExcelReporteHeaderEmpleadoDisca("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoDiscas()!=null) {
					i2=0;
					for(EmpleadoDisca empleadodisca : empleado.getEmpleadoDiscas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoDiscaConstantesFunciones.generarExcelReporteDataEmpleadoDisca("RELACIONADO",row,workbook,empleadodisca,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProfesionEmplea
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProfesionEmpleaConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getProfesionEmpleas()!=null && empleado.getProfesionEmpleas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProfesionEmpleaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProfesionEmpleaConstantesFunciones.generarExcelReporteHeaderProfesionEmplea("RELACIONADO",row,workbook);
				}

				if(empleado.getProfesionEmpleas()!=null) {
					i2=0;
					for(ProfesionEmplea profesionemplea : empleado.getProfesionEmpleas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProfesionEmpleaConstantesFunciones.generarExcelReporteDataProfesionEmplea("RELACIONADO",row,workbook,profesionemplea,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getRubroEmpleados()!=null && empleado.getRubroEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEmpleadoConstantesFunciones.generarExcelReporteHeaderRubroEmpleado("RELACIONADO",row,workbook);
				}

				if(empleado.getRubroEmpleados()!=null) {
					i2=0;
					for(RubroEmpleado rubroempleado : empleado.getRubroEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEmpleadoConstantesFunciones.generarExcelReporteDataRubroEmpleado("RELACIONADO",row,workbook,rubroempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoConstante
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoConstanteConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getEmpleadoConstantes()!=null && empleado.getEmpleadoConstantes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoConstanteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoConstanteConstantesFunciones.generarExcelReporteHeaderEmpleadoConstante("RELACIONADO",row,workbook);
				}

				if(empleado.getEmpleadoConstantes()!=null) {
					i2=0;
					for(EmpleadoConstante empleadoconstante : empleado.getEmpleadoConstantes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoConstanteConstantesFunciones.generarExcelReporteDataEmpleadoConstante("RELACIONADO",row,workbook,empleadoconstante,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//TallaVestido
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TallaVestidoConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getTallaVestidos()!=null && empleado.getTallaVestidos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TallaVestidoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TallaVestidoConstantesFunciones.generarExcelReporteHeaderTallaVestido("RELACIONADO",row,workbook);
				}

				if(empleado.getTallaVestidos()!=null) {
					i2=0;
					for(TallaVestido tallavestido : empleado.getTallaVestidos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TallaVestidoConstantesFunciones.generarExcelReporteDataTallaVestido("RELACIONADO",row,workbook,tallavestido,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//NovedadNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NovedadNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(empleado.getNovedadNomis()!=null && empleado.getNovedadNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NovedadNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NovedadNomiConstantesFunciones.generarExcelReporteHeaderNovedadNomi("RELACIONADO",row,workbook);
				}

				if(empleado.getNovedadNomis()!=null) {
					i2=0;
					for(NovedadNomi novedadnomi : empleado.getNovedadNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NovedadNomiConstantesFunciones.generarExcelReporteDataNovedadNomi("RELACIONADO",row,workbook,novedadnomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleado));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEmpleado.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessEmpleado() throws Exception {		
		this.startProcessEmpleado(true);
	}
	
	public void startProcessEmpleado(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasEmpleado ,this.jPanelParametrosReportesEmpleado, this.jScrollPanelDatosEmpleado,this.jPanelPaginacionEmpleado, this.jScrollPanelDatosEdicionEmpleado, this.jPanelAccionesEmpleado,this.jPanelAccionesFormularioEmpleado,this.jmenuBarEmpleado,this.jmenuBarDetalleEmpleado,this.jTtoolBarEmpleado,this.jTtoolBarDetalleEmpleado);		
		
		final JTabbedPane jTabbedPaneBusquedasEmpleado=this.jTabbedPaneBusquedasEmpleado; 
		
		final JPanel jPanelParametrosReportesEmpleado=this.jPanelParametrosReportesEmpleado;
		//final JScrollPane jScrollPanelDatosEmpleado=this.jScrollPanelDatosEmpleado;
		final JTable jTableDatosEmpleado=this.jTableDatosEmpleado;		
		final JPanel jPanelPaginacionEmpleado=this.jPanelPaginacionEmpleado;
		//final JScrollPane jScrollPanelDatosEdicionEmpleado=this.jScrollPanelDatosEdicionEmpleado;
		final JPanel jPanelAccionesEmpleado=this.jPanelAccionesEmpleado;
		
		JPanel jPanelCamposAuxiliarEmpleado=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarEmpleado=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
			jPanelCamposAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jPanelCamposEmpleado;
			jPanelAccionesFormularioAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jPanelAccionesFormularioEmpleado;
		}
		
		final JPanel jPanelCamposEmpleado=jPanelCamposAuxiliarEmpleado;
		final JPanel jPanelAccionesFormularioEmpleado=jPanelAccionesFormularioAuxiliarEmpleado;
		
		
		final JMenuBar jmenuBarEmpleado=this.jmenuBarEmpleado;
		final JToolBar jTtoolBarEmpleado=this.jTtoolBarEmpleado;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarEmpleado=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEmpleado=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
			jmenuBarDetalleAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jmenuBarDetalleEmpleado;
			jTtoolBarDetalleAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jTtoolBarDetalleEmpleado;
		}
		
		final JMenuBar jmenuBarDetalleEmpleado=jmenuBarDetalleAuxiliarEmpleado;
		final JToolBar jTtoolBarDetalleEmpleado=jTtoolBarDetalleAuxiliarEmpleado;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEmpleado;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEmpleado;
			processRunnable.jTableDatos=jTableDatosEmpleado;
			processRunnable.jPanelCampos=jPanelCamposEmpleado;
			processRunnable.jPanelPaginacion=jPanelPaginacionEmpleado;
			processRunnable.jPanelAcciones=jPanelAccionesEmpleado;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEmpleado;
			
			
			processRunnable.jmenuBar=jmenuBarEmpleado;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEmpleado;
			processRunnable.jTtoolBar=jTtoolBarEmpleado;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEmpleado;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEmpleado ,jPanelParametrosReportesEmpleado,jTableDatosEmpleado, /*jScrollPanelDatosEmpleado,*/jPanelCamposEmpleado,jPanelPaginacionEmpleado, /*jScrollPanelDatosEdicionEmpleado,*/ jPanelAccionesEmpleado,jPanelAccionesFormularioEmpleado,jmenuBarEmpleado,jmenuBarDetalleEmpleado,jTtoolBarEmpleado,jTtoolBarDetalleEmpleado);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEmpleado ,jPanelParametrosReportesEmpleado, jScrollPanelDatosEmpleado,jPanelPaginacionEmpleado, jScrollPanelDatosEdicionEmpleado, jPanelAccionesEmpleado,jPanelAccionesFormularioEmpleado,jmenuBarEmpleado,jmenuBarDetalleEmpleado,jTtoolBarEmpleado,jTtoolBarDetalleEmpleado);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessEmpleado() {// throws Exception 
		this.finishProcessEmpleado(true);
	}
	
	public void finishProcessEmpleado(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasEmpleado ,this.jPanelParametrosReportesEmpleado, this.jScrollPanelDatosEmpleado,this.jPanelPaginacionEmpleado, this.jScrollPanelDatosEdicionEmpleado, this.jPanelAccionesEmpleado,this.jPanelAccionesFormularioEmpleado,this.jmenuBarEmpleado,this.jmenuBarDetalleEmpleado,this.jTtoolBarEmpleado,this.jTtoolBarDetalleEmpleado);		
		
		final JTabbedPane jTabbedPaneBusquedasEmpleado=this.jTabbedPaneBusquedasEmpleado; 
		
		final JPanel jPanelParametrosReportesEmpleado=this.jPanelParametrosReportesEmpleado;
		//final JScrollPane jScrollPanelDatosEmpleado=this.jScrollPanelDatosEmpleado;
		final JTable jTableDatosEmpleado=this.jTableDatosEmpleado;		
		final JPanel jPanelPaginacionEmpleado=this.jPanelPaginacionEmpleado;
		//final JScrollPane jScrollPanelDatosEdicionEmpleado=this.jScrollPanelDatosEdicionEmpleado;
		final JPanel jPanelAccionesEmpleado=this.jPanelAccionesEmpleado;
		
		JPanel jPanelCamposAuxiliarEmpleado=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarEmpleado=new JPanel();
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
			jPanelCamposAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jPanelCamposEmpleado;
			jPanelAccionesFormularioAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jPanelAccionesFormularioEmpleado;
		}
		
		final JPanel jPanelCamposEmpleado=jPanelCamposAuxiliarEmpleado;
		final JPanel jPanelAccionesFormularioEmpleado=jPanelAccionesFormularioAuxiliarEmpleado;
		
		
		final JMenuBar jmenuBarEmpleado=this.jmenuBarEmpleado;		
		final JToolBar jTtoolBarEmpleado=this.jTtoolBarEmpleado;
				
		JMenuBar jmenuBarDetalleAuxiliarEmpleado=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEmpleado=new JToolBar();
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
			jmenuBarDetalleAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jmenuBarDetalleEmpleado;
			jTtoolBarDetalleAuxiliarEmpleado=this.jInternalFrameDetalleFormEmpleado.jTtoolBarDetalleEmpleado;		
		}
		
		final JMenuBar jmenuBarDetalleEmpleado=jmenuBarDetalleAuxiliarEmpleado;
		final JToolBar jTtoolBarDetalleEmpleado=jTtoolBarDetalleAuxiliarEmpleado;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEmpleado;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEmpleado;
			processRunnable.jTableDatos=jTableDatosEmpleado;
			processRunnable.jPanelCampos=jPanelCamposEmpleado;
			processRunnable.jPanelPaginacion=jPanelPaginacionEmpleado;
			processRunnable.jPanelAcciones=jPanelAccionesEmpleado;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEmpleado;
			
			
			processRunnable.jmenuBar=jmenuBarEmpleado;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEmpleado;
			processRunnable.jTtoolBar=jTtoolBarEmpleado;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEmpleado;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasEmpleado ,jPanelParametrosReportesEmpleado, jTableDatosEmpleado,/*jScrollPanelDatosEmpleado,*/jPanelCamposEmpleado,jPanelPaginacionEmpleado, /*jScrollPanelDatosEdicionEmpleado,*/ jPanelAccionesEmpleado,jPanelAccionesFormularioEmpleado,jmenuBarEmpleado,jmenuBarDetalleEmpleado,jTtoolBarEmpleado,jTtoolBarDetalleEmpleado));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarEmpleado(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuEmpleado(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarEmpleado,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleEmpleado,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarEmpleado,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleEmpleado,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.empleadoConstantesFunciones.getsFinalQueryEmpleado();
		String  finalQueryPaginacionTodos=this.empleadoConstantesFunciones.getsFinalQueryEmpleado();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=EmpleadoConstantesFunciones.getArrayColumnasGlobalesNoEmpleado(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.empleadosEliminados= new ArrayList<Empleado>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessEmpleado();
		
				///*EmpleadoSessionBean*/this.empleadoSessionBean=new EmpleadoSessionBean();
			
			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=EmpleadoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=EmpleadoConstantesFunciones.getClassesForeignKeysOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/empleado."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			empleadosAux= new ArrayList<Empleado>();
			
				
			empleadoLogic.setDatosCliente(this.datosCliente);
			empleadoLogic.setDatosDeep(this.datosDeep);
			empleadoLogic.setIsConDeep(true);
			
			
			empleadoLogic.getEmpleadoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					empleadoLogic.getTodosEmpleados(finalQueryGlobal,pagination);
					
					//empleadoLogic.getTodosEmpleadosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(empleadoLogic.getEmpleados()==null|| empleadoLogic.getEmpleados().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							empleadosAux= new ArrayList<Empleado>();
							empleadosAux.addAll(empleadoLogic.getEmpleados());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux= new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							empleadoLogic.getTodosEmpleados(finalQueryGlobal+"",this.pagination);												
							
							//empleadoLogic.getTodosEmpleadosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteEmpleados("Todos",empleadoLogic.getEmpleados() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							empleadoLogic.setEmpleados(new ArrayList<Empleado>());					
							empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idEmpleado=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idEmpleado=this.idActual;
				
				} else if(this.idEmpleadoActual!=null && this.idEmpleadoActual!=0L) {
					idEmpleado=idEmpleadoActual;
				}
				
					
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndicePorId(idEmpleado);
				
				this.empleados=new ArrayList<Empleado>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					empleadoLogic.getEntity(idEmpleado);
					
					//empleadoLogic.getEntityWithConnection(idEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.setEmpleados(new ArrayList<Empleado>());
					empleadoLogic.getEmpleados().add(empleadoLogic.getEmpleado());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleados=new ArrayList<Empleado>();
					this.empleados.add(empleado);
				}
				
				if(empleadoLogic.getEmpleado()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCargo")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCargo(id_cargoFK_IdCargo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdCargo(finalQueryGlobal,pagination,id_cargoFK_IdCargo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCargo(id_cargoFK_IdCargo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCargo(id_cargoFK_IdCargo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdCargo(finalQueryGlobal,pagination,id_cargoFK_IdCargo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCargo(id_cargoFK_IdCargo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCargo(id_cargoFK_IdCargo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdCargo",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdCargo",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdCentroCosto",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdCentroCosto",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCiudad")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdCiudad",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdCiudad",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdEmpresa",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdEmpresa",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoCivil")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdEstadoCivil",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdEstadoCivil",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoEmpleado")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoEmpleado(id_estado_empleadoFK_IdEstadoEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdEstadoEmpleado(finalQueryGlobal,pagination,id_estado_empleadoFK_IdEstadoEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoEmpleado(id_estado_empleadoFK_IdEstadoEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoEmpleado(id_estado_empleadoFK_IdEstadoEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdEstadoEmpleado(finalQueryGlobal,pagination,id_estado_empleadoFK_IdEstadoEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoEmpleado(id_estado_empleadoFK_IdEstadoEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstadoEmpleado(id_estado_empleadoFK_IdEstadoEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdEstadoEmpleado",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdEstadoEmpleado",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstructura")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdEstructura",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdEstructura",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstructuraSeccion")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructuraSeccion(id_estructura_seccionFK_IdEstructuraSeccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdEstructuraSeccion(finalQueryGlobal,pagination,id_estructura_seccionFK_IdEstructuraSeccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructuraSeccion(id_estructura_seccionFK_IdEstructuraSeccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructuraSeccion(id_estructura_seccionFK_IdEstructuraSeccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdEstructuraSeccion(finalQueryGlobal,pagination,id_estructura_seccionFK_IdEstructuraSeccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructuraSeccion(id_estructura_seccionFK_IdEstructuraSeccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructuraSeccion(id_estructura_seccionFK_IdEstructuraSeccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdEstructuraSeccion",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdEstructuraSeccion",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdPais",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdPais",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProvincia")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdProvincia(finalQueryGlobal,pagination,id_provinciaFK_IdProvincia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdProvincia(finalQueryGlobal,pagination,id_provinciaFK_IdProvincia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdProvincia",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdProvincia",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdReligion")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdReligion(id_religionFK_IdReligion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdReligion(finalQueryGlobal,pagination,id_religionFK_IdReligion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdReligion(id_religionFK_IdReligion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdReligion(id_religionFK_IdReligion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdReligion(finalQueryGlobal,pagination,id_religionFK_IdReligion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdReligion(id_religionFK_IdReligion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdReligion(id_religionFK_IdReligion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdReligion",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdReligion",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdSucursal",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdSucursal",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoContrato")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoContrato(id_tipo_contratoFK_IdTipoContrato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdTipoContrato(finalQueryGlobal,pagination,id_tipo_contratoFK_IdTipoContrato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoContrato(id_tipo_contratoFK_IdTipoContrato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoContrato(id_tipo_contratoFK_IdTipoContrato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdTipoContrato(finalQueryGlobal,pagination,id_tipo_contratoFK_IdTipoContrato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoContrato(id_tipo_contratoFK_IdTipoContrato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoContrato(id_tipo_contratoFK_IdTipoContrato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdTipoContrato",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdTipoContrato",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCuentaBancoGlobal")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoCuentaBancoGlobal(id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdTipoCuentaBancoGlobal(finalQueryGlobal,pagination,id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoCuentaBancoGlobal(id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoCuentaBancoGlobal(id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdTipoCuentaBancoGlobal(finalQueryGlobal,pagination,id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoCuentaBancoGlobal(id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoCuentaBancoGlobal(id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdTipoCuentaBancoGlobal",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdTipoCuentaBancoGlobal",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoEmpleado")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEmpleado(id_tipo_empleadoFK_IdTipoEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdTipoEmpleado(finalQueryGlobal,pagination,id_tipo_empleadoFK_IdTipoEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEmpleado(id_tipo_empleadoFK_IdTipoEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEmpleado(id_tipo_empleadoFK_IdTipoEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdTipoEmpleado(finalQueryGlobal,pagination,id_tipo_empleadoFK_IdTipoEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEmpleado(id_tipo_empleadoFK_IdTipoEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEmpleado(id_tipo_empleadoFK_IdTipoEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdTipoEmpleado",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdTipoEmpleado",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoGenero")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdTipoGenero(finalQueryGlobal,pagination,id_tipo_generoFK_IdTipoGenero);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdTipoGenero(finalQueryGlobal,pagination,id_tipo_generoFK_IdTipoGenero);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdTipoGenero",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdTipoGenero",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoInstruccion")) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoInstruccion(id_tipo_instruccionFK_IdTipoInstruccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					empleadoLogic.getEmpleadosFK_IdTipoInstruccion(finalQueryGlobal,pagination,id_tipo_instruccionFK_IdTipoInstruccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoInstruccion(id_tipo_instruccionFK_IdTipoInstruccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoInstruccion(id_tipo_instruccionFK_IdTipoInstruccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=empleadoLogic.getEmpleados()==null||empleadoLogic.getEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=empleados==null|| empleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadosAux=new ArrayList<Empleado>();
						empleadosAux.addAll(empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadosAux=new ArrayList<Empleado>();
							empleadosAux.addAll(empleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							empleadoLogic.getEmpleadosFK_IdTipoInstruccion(finalQueryGlobal,pagination,id_tipo_instruccionFK_IdTipoInstruccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoInstruccion(id_tipo_instruccionFK_IdTipoInstruccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoInstruccion(id_tipo_instruccionFK_IdTipoInstruccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEmpleados("FK_IdTipoInstruccion",empleadoLogic.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEmpleados("FK_IdTipoInstruccion",empleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoLogic.setEmpleados(new ArrayList<Empleado>());
						empleadoLogic.getEmpleados().addAll(empleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleados=new ArrayList<Empleado>();
							empleados.addAll(empleadosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesEmpleado();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessEmpleado();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=empleadoLogic.getEmpleados().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=empleados.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=empleadoLogic.getEmpleados().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=empleados.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Empleado empleado) {
		Boolean permite=true;
		
		if(this.empleado.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=EmpleadoConstantesFunciones.getOrderByListaEmpleado();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=EmpleadoConstantesFunciones.getOrderByListaEmpleado();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Empleado empleado:empleadoLogic.getEmpleados()) {
				if(empleado.getsType().equals(Constantes2.S_TOTALES)) {
					empleadoTotales=empleado;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Empleado empleado:this.empleados) {
				if(empleado.getsType().equals(Constantes2.S_TOTALES)) {
					empleadoTotales=empleado;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.empleadoAux=new Empleado();
			this.empleadoAux.setsType(Constantes2.S_TOTALES);
			this.empleadoAux.setIsNew(false);
			this.empleadoAux.setIsChanged(false);
			this.empleadoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				EmpleadoConstantesFunciones.TotalizarValoresFilaEmpleado(this.empleadoLogic.getEmpleados(),this.empleadoAux);
				
				this.empleadoLogic.getEmpleados().add(this.empleadoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				EmpleadoConstantesFunciones.TotalizarValoresFilaEmpleado(this.empleados,this.empleadoAux);
				
				this.empleados.add(this.empleadoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		empleadoTotales=new Empleado();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.empleadoLogic.getEmpleados().remove(empleadoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.empleados.remove(empleadoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		empleadoTotales=new Empleado();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Empleado empleado:empleadoLogic.getEmpleados()) {
				if(empleado.getsType().equals(Constantes2.S_TOTALES)) {
					empleadoTotales=empleado;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EmpleadoConstantesFunciones.TotalizarValoresFilaEmpleado(this.empleadoLogic.getEmpleados(),empleadoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Empleado empleado:this.empleados) {
				if(empleado.getsType().equals(Constantes2.S_TOTALES)) {
					empleadoTotales=empleado;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EmpleadoConstantesFunciones.TotalizarValoresFilaEmpleado(this.empleados,empleadoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getEmpleadosFK_IdCargo()throws Exception {
		try {
			sAccionBusqueda="FK_IdCargo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdEstadoCivil()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoCivil";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdEstadoEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdEstructura()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstructura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdEstructuraSeccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstructuraSeccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdProvincia()throws Exception {
		try {
			sAccionBusqueda="FK_IdProvincia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdReligion()throws Exception {
		try {
			sAccionBusqueda="FK_IdReligion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdTipoContrato()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoContrato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdTipoCuentaBancoGlobal()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCuentaBancoGlobal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdTipoEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdTipoGenero()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGenero";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEmpleadosFK_IdTipoInstruccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoInstruccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getEmpleadosFK_IdCargo(String sFinalQuery,Long id_cargo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdCargo(sFinalQuery,this.pagination,id_cargo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdEstadoCivil(String sFinalQuery,Long id_estado_civil)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdEstadoCivil(sFinalQuery,this.pagination,id_estado_civil);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdEstadoEmpleado(String sFinalQuery,Long id_estado_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdEstadoEmpleado(sFinalQuery,this.pagination,id_estado_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdEstructura(String sFinalQuery,Long id_estructura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdEstructura(sFinalQuery,this.pagination,id_estructura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdEstructuraSeccion(String sFinalQuery,Long id_estructura_seccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdEstructuraSeccion(sFinalQuery,this.pagination,id_estructura_seccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdProvincia(String sFinalQuery,Long id_provincia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdProvincia(sFinalQuery,this.pagination,id_provincia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdReligion(String sFinalQuery,Long id_religion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdReligion(sFinalQuery,this.pagination,id_religion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdTipoContrato(String sFinalQuery,Long id_tipo_contrato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdTipoContrato(sFinalQuery,this.pagination,id_tipo_contrato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdTipoCuentaBancoGlobal(String sFinalQuery,Long id_tipo_cuenta_banco_global)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdTipoCuentaBancoGlobal(sFinalQuery,this.pagination,id_tipo_cuenta_banco_global);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdTipoEmpleado(String sFinalQuery,Long id_tipo_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdTipoEmpleado(sFinalQuery,this.pagination,id_tipo_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdTipoGenero(String sFinalQuery,Long id_tipo_genero)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdTipoGenero(sFinalQuery,this.pagination,id_tipo_genero);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEmpleadosFK_IdTipoInstruccion(String sFinalQuery,Long id_tipo_instruccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEmpleadosFK_IdTipoInstruccion(sFinalQuery,this.pagination,id_tipo_instruccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosEmpleado() {
		this.isPermisoTodoEmpleado=false;
		this.isPermisoNuevoEmpleado=false;
		this.isPermisoActualizarEmpleado=false;
		this.isPermisoActualizarOriginalEmpleado=false;
		this.isPermisoEliminarEmpleado=false;
		this.isPermisoGuardarCambiosEmpleado=false;
		this.isPermisoConsultaEmpleado=false;
		this.isPermisoBusquedaEmpleado=false;
		this.isPermisoReporteEmpleado=false;		
		this.isPermisoOrdenEmpleado=false;		
		this.isPermisoPaginacionMedioEmpleado=false;		
		this.isPermisoPaginacionAltoEmpleado=false;
		this.isPermisoPaginacionTodoEmpleado=false;
		this.isPermisoCopiarEmpleado=false;		
		this.isPermisoVerFormEmpleado=false;		
		this.isPermisoDuplicarEmpleado=false;		
		this.isPermisoOrdenEmpleado=false;		
	}
	
	public void setPermisosUsuarioEmpleado(Boolean isPermiso) {
		this.isPermisoTodoEmpleado=isPermiso;
		this.isPermisoNuevoEmpleado=isPermiso;
		this.isPermisoActualizarEmpleado=isPermiso;
		this.isPermisoActualizarOriginalEmpleado=isPermiso;
		this.isPermisoEliminarEmpleado=isPermiso;
		this.isPermisoGuardarCambiosEmpleado=isPermiso;
		this.isPermisoConsultaEmpleado=isPermiso;
		this.isPermisoBusquedaEmpleado=isPermiso;
		this.isPermisoReporteEmpleado=isPermiso;
		this.isPermisoOrdenEmpleado=isPermiso;		
		this.isPermisoPaginacionMedioEmpleado=isPermiso;		
		this.isPermisoPaginacionAltoEmpleado=isPermiso;		
		this.isPermisoPaginacionTodoEmpleado=isPermiso;		
		this.isPermisoCopiarEmpleado=isPermiso;		
		this.isPermisoVerFormEmpleado=isPermiso;		
		this.isPermisoDuplicarEmpleado=isPermiso;
		this.isPermisoOrdenEmpleado=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioEmpleado(Boolean isPermiso) {
		//this.isPermisoTodoEmpleado=isPermiso;
		this.isPermisoNuevoEmpleado=isPermiso;
		this.isPermisoActualizarEmpleado=isPermiso;
		this.isPermisoActualizarOriginalEmpleado=isPermiso;
		this.isPermisoEliminarEmpleado=isPermiso;
		this.isPermisoGuardarCambiosEmpleado=isPermiso;
		//this.isPermisoConsultaEmpleado=isPermiso;
		//this.isPermisoBusquedaEmpleado=isPermiso;
		//this.isPermisoReporteEmpleado=isPermiso;
		//this.isPermisoOrdenEmpleado=isPermiso;		
		//this.isPermisoPaginacionMedioEmpleado=isPermiso;		
		//this.isPermisoPaginacionAltoEmpleado=isPermiso;		
		//this.isPermisoPaginacionTodoEmpleado=isPermiso;		
		//this.isPermisoCopiarEmpleado=isPermiso;		
		//this.isPermisoDuplicarEmpleado=isPermiso;
		//this.isPermisoOrdenEmpleado=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioEmpleadoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(CargaFamiliar_NMConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(CursoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PrestamoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoIdiomaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DatoGeneralEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(AreaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GastoEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoHobbyConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoEMailConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RasgoPersonalConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ReferenciaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(Telefono_NMConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NovedadConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoHerraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoEnferConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(VisaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SeguroConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(AsistenciaMensualConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoDiscaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProfesionEmpleaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoConstanteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(TallaVestidoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NovedadNomiConstantesFunciones.SNOMBREOPCION);
		
		if(EmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosCargaFamiliar_NM=false;
		this.isTienePermisosCargaFamiliar_NM=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,CargaFamiliar_NMConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCurso=false;
		this.isTienePermisosCurso=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,CursoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPrestamo=false;
		this.isTienePermisosPrestamo=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,PrestamoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoIdioma=false;
		this.isTienePermisosEmpleadoIdioma=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoIdiomaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosHistorialPagoMesNomi=false;
		this.isTienePermisosHistorialPagoMesNomi=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoImpuestoRenta=false;
		this.isTienePermisosEmpleadoImpuestoRenta=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDatoGeneralEmpleado=false;
		this.isTienePermisosDatoGeneralEmpleado=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,DatoGeneralEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosArea=false;
		this.isTienePermisosArea=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,AreaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGastoEmpleado=false;
		this.isTienePermisosGastoEmpleado=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,GastoEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoHobby=false;
		this.isTienePermisosEmpleadoHobby=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoHobbyConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoEMail=false;
		this.isTienePermisosEmpleadoEMail=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoEMailConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRasgoPersonal=false;
		this.isTienePermisosRasgoPersonal=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,RasgoPersonalConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosReferencia=false;
		this.isTienePermisosReferencia=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,ReferenciaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTelefono_NM=false;
		this.isTienePermisosTelefono_NM=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,Telefono_NMConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNovedad=false;
		this.isTienePermisosNovedad=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,NovedadConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoHerra=false;
		this.isTienePermisosEmpleadoHerra=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoHerraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoEnfer=false;
		this.isTienePermisosEmpleadoEnfer=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoEnferConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosVisa=false;
		this.isTienePermisosVisa=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,VisaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSeguro=false;
		this.isTienePermisosSeguro=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,SeguroConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosAsistenciaMensual=false;
		this.isTienePermisosAsistenciaMensual=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,AsistenciaMensualConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoDisca=false;
		this.isTienePermisosEmpleadoDisca=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoDiscaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProfesionEmplea=false;
		this.isTienePermisosProfesionEmplea=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,ProfesionEmpleaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEmpleado=false;
		this.isTienePermisosRubroEmpleado=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,RubroEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoConstante=false;
		this.isTienePermisosEmpleadoConstante=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,EmpleadoConstanteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTallaVestido=false;
		this.isTienePermisosTallaVestido=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,TallaVestidoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNovedadNomi=false;
		this.isTienePermisosNovedadNomi=this.verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(this.opcionsRelacionadas,NovedadNomiConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebEmpleado(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioEmpleadoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosCargaFamiliar_NM=conPermiso;
		this.isTienePermisosCurso=conPermiso;
		this.isTienePermisosPrestamo=conPermiso;
		this.isTienePermisosEmpleadoIdioma=conPermiso;
		this.isTienePermisosHistorialPagoMesNomi=conPermiso;
		this.isTienePermisosEmpleadoImpuestoRenta=conPermiso;
		this.isTienePermisosDatoGeneralEmpleado=conPermiso;
		this.isTienePermisosArea=conPermiso;
		this.isTienePermisosGastoEmpleado=conPermiso;
		this.isTienePermisosEmpleadoHobby=conPermiso;
		this.isTienePermisosEmpleadoEMail=conPermiso;
		this.isTienePermisosRasgoPersonal=conPermiso;
		this.isTienePermisosReferencia=conPermiso;
		this.isTienePermisosTelefono_NM=conPermiso;
		this.isTienePermisosNovedad=conPermiso;
		this.isTienePermisosEmpleadoHerra=conPermiso;
		this.isTienePermisosEmpleadoEnfer=conPermiso;
		this.isTienePermisosVisa=conPermiso;
		this.isTienePermisosSeguro=conPermiso;
		this.isTienePermisosAsistenciaMensual=conPermiso;
		this.isTienePermisosEmpleadoDisca=conPermiso;
		this.isTienePermisosProfesionEmplea=conPermiso;
		this.isTienePermisosRubroEmpleado=conPermiso;
		this.isTienePermisosEmpleadoConstante=conPermiso;
		this.isTienePermisosTallaVestido=conPermiso;
		this.isTienePermisosNovedadNomi=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioEmpleadoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionEmpleadoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioEmpleadoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosCargaFamiliar_NM && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCurso && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPrestamo && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoIdioma && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosHistorialPagoMesNomi && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoImpuestoRenta && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDatoGeneralEmpleado && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosArea && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGastoEmpleado && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoHobby && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoEMail && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRasgoPersonal && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosReferencia && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTelefono_NM && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNovedad && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoHerra && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoEnfer && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosVisa && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSeguro && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosAsistenciaMensual && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoDisca && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProfesionEmplea && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEmpleado && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoConstante && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTallaVestido && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNovedadNomi && this.jInternalFrameDetalleFormEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.remove(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioEmpleado() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(EmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, EmpleadoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoEmpleado=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarEmpleado=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalEmpleado=this.isPermisoActualizarEmpleado;
			this.isPermisoEliminarEmpleado=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosEmpleado=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaEmpleado=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaEmpleado=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoEmpleado=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteEmpleado=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEmpleado=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioEmpleado=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoEmpleado=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoEmpleado=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarEmpleado=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormEmpleado=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarEmpleado=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEmpleado=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosEmpleado.setToolTipText(this.jTableDatosEmpleado.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioEmpleado(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioEmpleado(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(EmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(EmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioEmpleado() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosCargaFamiliar_NM && this.empleadoConstantesFunciones.mostrarCargaFamiliar_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Carga Familiar_ N M");
			reporte.setsDescripcion("Carga Familiar_ N M");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCurso && this.empleadoConstantesFunciones.mostrarCursoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Curso");
			reporte.setsDescripcion("Curso");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPrestamo && this.empleadoConstantesFunciones.mostrarPrestamoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Prestamo");
			reporte.setsDescripcion("Prestamo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoIdioma && this.empleadoConstantesFunciones.mostrarEmpleadoIdiomaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Idioma");
			reporte.setsDescripcion("Empleado Idioma");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosHistorialPagoMesNomi && this.empleadoConstantesFunciones.mostrarHistorialPagoMesNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Historial Pago Mes Nomi");
			reporte.setsDescripcion("Historial Pago Mes Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoImpuestoRenta && this.empleadoConstantesFunciones.mostrarEmpleadoImpuestoRentaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Impuesto Renta");
			reporte.setsDescripcion("Empleado Impuesto Renta");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDatoGeneralEmpleado && this.empleadoConstantesFunciones.mostrarDatoGeneralEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Dato General Empleado");
			reporte.setsDescripcion("Dato General Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosArea && this.empleadoConstantesFunciones.mostrarAreaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Area");
			reporte.setsDescripcion("Area");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGastoEmpleado && this.empleadoConstantesFunciones.mostrarGastoEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Gasto Empleado");
			reporte.setsDescripcion("Gasto Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoHobby && this.empleadoConstantesFunciones.mostrarEmpleadoHobbyEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Hobby");
			reporte.setsDescripcion("Empleado Hobby");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoEMail && this.empleadoConstantesFunciones.mostrarEmpleadoEMailEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Email");
			reporte.setsDescripcion("Empleado Email");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRasgoPersonal && this.empleadoConstantesFunciones.mostrarRasgoPersonalEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rasgo Personal");
			reporte.setsDescripcion("Rasgo Personal");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosReferencia && this.empleadoConstantesFunciones.mostrarReferenciaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Referencia");
			reporte.setsDescripcion("Referencia");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTelefono_NM && this.empleadoConstantesFunciones.mostrarTelefono_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Telefono_ N M");
			reporte.setsDescripcion("Telefono_ N M");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNovedad && this.empleadoConstantesFunciones.mostrarNovedadEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Novedad");
			reporte.setsDescripcion("Novedad");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoHerra && this.empleadoConstantesFunciones.mostrarEmpleadoHerraEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Herra");
			reporte.setsDescripcion("Empleado Herra");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoEnfer && this.empleadoConstantesFunciones.mostrarEmpleadoEnferEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Enfer");
			reporte.setsDescripcion("Empleado Enfer");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosVisa && this.empleadoConstantesFunciones.mostrarVisaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Visa");
			reporte.setsDescripcion("Visa");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSeguro && this.empleadoConstantesFunciones.mostrarSeguroEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Seguro");
			reporte.setsDescripcion("Seguro");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosAsistenciaMensual && this.empleadoConstantesFunciones.mostrarAsistenciaMensualEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Asistencia Mensual");
			reporte.setsDescripcion("Asistencia Mensual");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoDisca && this.empleadoConstantesFunciones.mostrarEmpleadoDiscaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Disca");
			reporte.setsDescripcion("Empleado Disca");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProfesionEmplea && this.empleadoConstantesFunciones.mostrarProfesionEmpleaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Profesion Emplea");
			reporte.setsDescripcion("Profesion Emplea");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEmpleado && this.empleadoConstantesFunciones.mostrarRubroEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Empleado");
			reporte.setsDescripcion("Rubro Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoConstante && this.empleadoConstantesFunciones.mostrarEmpleadoConstanteEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Constante");
			reporte.setsDescripcion("Empleado Constante");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTallaVestido && this.empleadoConstantesFunciones.mostrarTallaVestidoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Talla Vestido");
			reporte.setsDescripcion("Talla Vestido");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNovedadNomi && this.empleadoConstantesFunciones.mostrarNovedadNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Novedad Nomi");
			reporte.setsDescripcion("Novedad Nomi");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyEmpleadoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.provinciasForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.religionsForeignKey=new ArrayList();
				this.estadocivilsForeignKey=new ArrayList();
				this.tipogenerosForeignKey=new ArrayList();
				this.tipoempleadosForeignKey=new ArrayList();
				this.tipoinstruccionsForeignKey=new ArrayList();
				this.cargosForeignKey=new ArrayList();
				this.estructurasForeignKey=new ArrayList();
				this.estructuraseccionsForeignKey=new ArrayList();
				this.estadoempleadosForeignKey=new ArrayList();
				this.tipocontratosForeignKey=new ArrayList();
				this.tipocuentabancoglobalsForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(EmpleadoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyEmpleadoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyReligionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoInstruccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCargoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstructuraSeccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoContratoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCuentaBancoGlobalListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvinciaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProvinciaConstantesFunciones.SFINALQUERY;

				this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyReligionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.religionsForeignKey==null||this.religionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ReligionConstantesFunciones.getArrayColumnasGlobalesReligion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ReligionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ReligionConstantesFunciones.SFINALQUERY;

				this.cargarCombosReligionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivilListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoCivilConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGeneroListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGeneroConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoempleadosForeignKey==null||this.tipoempleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoEmpleadoConstantesFunciones.getArrayColumnasGlobalesTipoEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoEmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoInstruccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoinstruccionsForeignKey==null||this.tipoinstruccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoInstruccionConstantesFunciones.getArrayColumnasGlobalesTipoInstruccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoInstruccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoInstruccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoInstruccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCargoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cargosForeignKey==null||this.cargosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CargoConstantesFunciones.getArrayColumnasGlobalesCargo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CargoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CargoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCargosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructuraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstructuraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructuraSeccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estructuraseccionsForeignKey==null||this.estructuraseccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstructuraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstructuraSeccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoempleadosForeignKey==null||this.estadoempleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoEmpleadoConstantesFunciones.getArrayColumnasGlobalesEstadoEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoEmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoEmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoContratoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocontratosForeignKey==null||this.tipocontratosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoContratoConstantesFunciones.getArrayColumnasGlobalesTipoContrato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoContratoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoContratoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoContratosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCuentaBancoGlobalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocuentabancoglobalsForeignKey==null||this.tipocuentabancoglobalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCuentaBancoGlobalConstantesFunciones.getArrayColumnasGlobalesTipoCuentaBancoGlobal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCuentaBancoGlobalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCuentaBancoGlobalConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCuentaBancoGlobalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyEmpleadoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			EmpleadoParameterReturnGeneral empleadoReturnGeneral=new EmpleadoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_empresaEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_empresaEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_sucursalEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_sucursalEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_paisEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_paisEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalProvincia="";

				if(((this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_provinciaEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_provinciaEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProvincia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

						finalQueryGlobalProvincia=Funciones.GetFinalQueryAppend(finalQueryGlobalProvincia, "");
						finalQueryGlobalProvincia+=ProvinciaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProvincia=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidProvinciaActual();
					}
				} else {
					finalQueryGlobalProvincia="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(cargarCombosDependencia && ((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_ciudadEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_ciudadEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_centro_costoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_centro_costoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalReligion="";

				if(((this.religionsForeignKey==null||this.religionsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_religionEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_religionEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionReligion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ReligionConstantesFunciones.getArrayColumnasGlobalesReligion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalReligion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ReligionConstantesFunciones.TABLENAME);

						finalQueryGlobalReligion=Funciones.GetFinalQueryAppend(finalQueryGlobalReligion, "");
						finalQueryGlobalReligion+=ReligionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosReligionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalReligion=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidReligionActual();
					}
				} else {
					finalQueryGlobalReligion="NONE";
				}


				String finalQueryGlobalEstadoCivil="";

				if(((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_estado_civilEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_estado_civilEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoCivil=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoCivil=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoCivil, "");
						finalQueryGlobalEstadoCivil+=EstadoCivilConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoCivil=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidEstadoCivilActual();
					}
				} else {
					finalQueryGlobalEstadoCivil="NONE";
				}


				String finalQueryGlobalTipoGenero="";

				if(((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_tipo_generoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_tipo_generoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGenero=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGenero=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGenero, "");
						finalQueryGlobalTipoGenero+=TipoGeneroConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGenero=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidTipoGeneroActual();
					}
				} else {
					finalQueryGlobalTipoGenero="NONE";
				}


				String finalQueryGlobalTipoEmpleado="";

				if(((this.tipoempleadosForeignKey==null||this.tipoempleadosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_tipo_empleadoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_tipo_empleadoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoEmpleadoConstantesFunciones.getArrayColumnasGlobalesTipoEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoEmpleado, "");
						finalQueryGlobalTipoEmpleado+=TipoEmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoEmpleado=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidTipoEmpleadoActual();
					}
				} else {
					finalQueryGlobalTipoEmpleado="NONE";
				}


				String finalQueryGlobalTipoInstruccion="";

				if(((this.tipoinstruccionsForeignKey==null||this.tipoinstruccionsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_tipo_instruccionEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_tipo_instruccionEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoInstruccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoInstruccionConstantesFunciones.getArrayColumnasGlobalesTipoInstruccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoInstruccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoInstruccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoInstruccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoInstruccion, "");
						finalQueryGlobalTipoInstruccion+=TipoInstruccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoInstruccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoInstruccion=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidTipoInstruccionActual();
					}
				} else {
					finalQueryGlobalTipoInstruccion="NONE";
				}


				String finalQueryGlobalCargo="";

				if(((this.cargosForeignKey==null||this.cargosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_cargoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_cargoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCargo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CargoConstantesFunciones.getArrayColumnasGlobalesCargo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCargo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CargoConstantesFunciones.TABLENAME);

						finalQueryGlobalCargo=Funciones.GetFinalQueryAppend(finalQueryGlobalCargo, "");
						finalQueryGlobalCargo+=CargoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCargosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCargo=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidCargoActual();
					}
				} else {
					finalQueryGlobalCargo="NONE";
				}


				String finalQueryGlobalEstructura="";

				if(((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_estructuraEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_estructuraEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstructura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstructura=Funciones.GetFinalQueryAppend(finalQueryGlobalEstructura, "");
						finalQueryGlobalEstructura+=EstructuraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstructura=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidEstructuraActual();
					}
				} else {
					finalQueryGlobalEstructura="NONE";
				}


				String finalQueryGlobalEstructuraSeccion="";

				if(((this.estructuraseccionsForeignKey==null||this.estructuraseccionsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_estructura_seccionEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_estructura_seccionEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructuraSeccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstructuraSeccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstructuraSeccion=Funciones.GetFinalQueryAppend(finalQueryGlobalEstructuraSeccion, "");
						finalQueryGlobalEstructuraSeccion+=EstructuraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstructuraSeccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstructuraSeccion=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidEstructuraSeccionActual();
					}
				} else {
					finalQueryGlobalEstructuraSeccion="NONE";
				}


				String finalQueryGlobalEstadoEmpleado="";

				if(((this.estadoempleadosForeignKey==null||this.estadoempleadosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_estado_empleadoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_estado_empleadoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoEmpleadoConstantesFunciones.getArrayColumnasGlobalesEstadoEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoEmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoEmpleado, "");
						finalQueryGlobalEstadoEmpleado+=EstadoEmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoEmpleado=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidEstadoEmpleadoActual();
					}
				} else {
					finalQueryGlobalEstadoEmpleado="NONE";
				}


				String finalQueryGlobalTipoContrato="";

				if(((this.tipocontratosForeignKey==null||this.tipocontratosForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_tipo_contratoEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_tipo_contratoEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoContrato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoContratoConstantesFunciones.getArrayColumnasGlobalesTipoContrato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoContrato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoContratoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoContrato=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoContrato, "");
						finalQueryGlobalTipoContrato+=TipoContratoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoContratosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoContrato=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidTipoContratoActual();
					}
				} else {
					finalQueryGlobalTipoContrato="NONE";
				}


				String finalQueryGlobalTipoCuentaBancoGlobal="";

				if(((this.tipocuentabancoglobalsForeignKey==null||this.tipocuentabancoglobalsForeignKey.size()<=0) && this.empleadoConstantesFunciones.cargarid_tipo_cuenta_banco_globalEmpleado)
					 || (this.esRecargarFks && this.empleadoConstantesFunciones.cargarid_tipo_cuenta_banco_globalEmpleado)) {

					if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCuentaBancoGlobal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCuentaBancoGlobalConstantesFunciones.getArrayColumnasGlobalesTipoCuentaBancoGlobal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCuentaBancoGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCuentaBancoGlobalConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCuentaBancoGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCuentaBancoGlobal, "");
						finalQueryGlobalTipoCuentaBancoGlobal+=TipoCuentaBancoGlobalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCuentaBancoGlobalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCuentaBancoGlobal=" WHERE " + ConstantesSql.ID + "="+empleadoSessionBean.getlidTipoCuentaBancoGlobalActual();
					}
				} else {
					finalQueryGlobalTipoCuentaBancoGlobal="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				empleadoReturnGeneral=empleadoLogic.cargarCombosLoteForeignKeyEmpleado(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalPais,finalQueryGlobalProvincia,finalQueryGlobalCiudad,finalQueryGlobalCentroCosto,finalQueryGlobalReligion,finalQueryGlobalEstadoCivil,finalQueryGlobalTipoGenero,finalQueryGlobalTipoEmpleado,finalQueryGlobalTipoInstruccion,finalQueryGlobalCargo,finalQueryGlobalEstructura,finalQueryGlobalEstructuraSeccion,finalQueryGlobalEstadoEmpleado,finalQueryGlobalTipoContrato,finalQueryGlobalTipoCuentaBancoGlobal);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=empleadoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=empleadoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=empleadoReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalProvincia.equals("NONE")) {
				this.provinciasForeignKey=empleadoReturnGeneral.getprovinciasForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=empleadoReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=empleadoReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalReligion.equals("NONE")) {
				this.religionsForeignKey=empleadoReturnGeneral.getreligionsForeignKey();
			}

			if(!finalQueryGlobalEstadoCivil.equals("NONE")) {
				this.estadocivilsForeignKey=empleadoReturnGeneral.getestadocivilsForeignKey();
			}

			if(!finalQueryGlobalTipoGenero.equals("NONE")) {
				this.tipogenerosForeignKey=empleadoReturnGeneral.gettipogenerosForeignKey();
			}

			if(!finalQueryGlobalTipoEmpleado.equals("NONE")) {
				this.tipoempleadosForeignKey=empleadoReturnGeneral.gettipoempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoInstruccion.equals("NONE")) {
				this.tipoinstruccionsForeignKey=empleadoReturnGeneral.gettipoinstruccionsForeignKey();
			}

			if(!finalQueryGlobalCargo.equals("NONE")) {
				this.cargosForeignKey=empleadoReturnGeneral.getcargosForeignKey();
			}

			if(!finalQueryGlobalEstructura.equals("NONE")) {
				this.estructurasForeignKey=empleadoReturnGeneral.getestructurasForeignKey();
			}

			if(!finalQueryGlobalEstructuraSeccion.equals("NONE")) {
				this.estructuraseccionsForeignKey=empleadoReturnGeneral.getestructuraseccionsForeignKey();
			}

			if(!finalQueryGlobalEstadoEmpleado.equals("NONE")) {
				this.estadoempleadosForeignKey=empleadoReturnGeneral.getestadoempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoContrato.equals("NONE")) {
				this.tipocontratosForeignKey=empleadoReturnGeneral.gettipocontratosForeignKey();
			}

			if(!finalQueryGlobalTipoCuentaBancoGlobal.equals("NONE")) {
				this.tipocuentabancoglobalsForeignKey=empleadoReturnGeneral.gettipocuentabancoglobalsForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyEmpleado()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyProvincia();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyReligion();
			this.addItemDefectoCombosForeignKeyEstadoCivil();
			this.addItemDefectoCombosForeignKeyTipoGenero();
			this.addItemDefectoCombosForeignKeyTipoEmpleado();
			this.addItemDefectoCombosForeignKeyTipoInstruccion();
			this.addItemDefectoCombosForeignKeyCargo();
			this.addItemDefectoCombosForeignKeyEstructura();
			this.addItemDefectoCombosForeignKeyEstructuraSeccion();
			this.addItemDefectoCombosForeignKeyEstadoEmpleado();
			this.addItemDefectoCombosForeignKeyTipoContrato();
			this.addItemDefectoCombosForeignKeyTipoCuentaBancoGlobal();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProvincia()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				Provincia provincia=new Provincia();
				ProvinciaConstantesFunciones.setProvinciaDescripcion(provincia,Constantes.SMENSAJE_ESCOJA_OPCION);
				provincia.setId(null);

				if(!ProvinciaConstantesFunciones.ExisteEnLista(this.provinciasForeignKey,provincia,true)) {

					this.provinciasForeignKey.add(0,provincia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyReligion()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionReligion()) {
				Religion religion=new Religion();
				ReligionConstantesFunciones.setReligionDescripcion(religion,Constantes.SMENSAJE_ESCOJA_OPCION);
				religion.setId(null);

				if(!ReligionConstantesFunciones.ExisteEnLista(this.religionsForeignKey,religion,true)) {

					this.religionsForeignKey.add(0,religion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoCivil()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				EstadoCivil estadocivil=new EstadoCivil();
				EstadoCivilConstantesFunciones.setEstadoCivilDescripcion(estadocivil,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadocivil.setId(null);

				if(!EstadoCivilConstantesFunciones.ExisteEnLista(this.estadocivilsForeignKey,estadocivil,true)) {

					this.estadocivilsForeignKey.add(0,estadocivil);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGenero()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				TipoGenero tipogenero=new TipoGenero();
				TipoGeneroConstantesFunciones.setTipoGeneroDescripcion(tipogenero,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogenero.setId(null);

				if(!TipoGeneroConstantesFunciones.ExisteEnLista(this.tipogenerosForeignKey,tipogenero,true)) {

					this.tipogenerosForeignKey.add(0,tipogenero);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoEmpleado()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEmpleado()) {
				TipoEmpleado tipoempleado=new TipoEmpleado();
				TipoEmpleadoConstantesFunciones.setTipoEmpleadoDescripcion(tipoempleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoempleado.setId(null);

				if(!TipoEmpleadoConstantesFunciones.ExisteEnLista(this.tipoempleadosForeignKey,tipoempleado,true)) {

					this.tipoempleadosForeignKey.add(0,tipoempleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoInstruccion()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoInstruccion()) {
				TipoInstruccion tipoinstruccion=new TipoInstruccion();
				TipoInstruccionConstantesFunciones.setTipoInstruccionDescripcion(tipoinstruccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoinstruccion.setId(null);

				if(!TipoInstruccionConstantesFunciones.ExisteEnLista(this.tipoinstruccionsForeignKey,tipoinstruccion,true)) {

					this.tipoinstruccionsForeignKey.add(0,tipoinstruccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCargo()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionCargo()) {
				Cargo cargo=new Cargo();
				CargoConstantesFunciones.setCargoDescripcion(cargo,Constantes.SMENSAJE_ESCOJA_OPCION);
				cargo.setId(null);

				if(!CargoConstantesFunciones.ExisteEnLista(this.cargosForeignKey,cargo,true)) {

					this.cargosForeignKey.add(0,cargo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstructura()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				Estructura estructura=new Estructura();
				EstructuraConstantesFunciones.setEstructuraDescripcion(estructura,Constantes.SMENSAJE_ESCOJA_OPCION);
				estructura.setId(null);

				if(!EstructuraConstantesFunciones.ExisteEnLista(this.estructurasForeignKey,estructura,true)) {

					this.estructurasForeignKey.add(0,estructura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstructuraSeccion()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructuraSeccion()) {
				Estructura estructuraseccion=new Estructura();
				EstructuraConstantesFunciones.setEstructuraDescripcion(estructuraseccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				estructuraseccion.setId(null);

				if(!EstructuraConstantesFunciones.ExisteEnLista(this.estructuraseccionsForeignKey,estructuraseccion,true)) {

					this.estructuraseccionsForeignKey.add(0,estructuraseccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoEmpleado()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoEmpleado()) {
				EstadoEmpleado estadoempleado=new EstadoEmpleado();
				EstadoEmpleadoConstantesFunciones.setEstadoEmpleadoDescripcion(estadoempleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoempleado.setId(null);

				if(!EstadoEmpleadoConstantesFunciones.ExisteEnLista(this.estadoempleadosForeignKey,estadoempleado,true)) {

					this.estadoempleadosForeignKey.add(0,estadoempleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoContrato()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoContrato()) {
				TipoContrato tipocontrato=new TipoContrato();
				TipoContratoConstantesFunciones.setTipoContratoDescripcion(tipocontrato,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocontrato.setId(null);

				if(!TipoContratoConstantesFunciones.ExisteEnLista(this.tipocontratosForeignKey,tipocontrato,true)) {

					this.tipocontratosForeignKey.add(0,tipocontrato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCuentaBancoGlobal()throws Exception {
		try {

			if(!this.empleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCuentaBancoGlobal()) {
				TipoCuentaBancoGlobal tipocuentabancoglobal=new TipoCuentaBancoGlobal();
				TipoCuentaBancoGlobalConstantesFunciones.setTipoCuentaBancoGlobalDescripcion(tipocuentabancoglobal,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocuentabancoglobal.setId(null);

				if(!TipoCuentaBancoGlobalConstantesFunciones.ExisteEnLista(this.tipocuentabancoglobalsForeignKey,tipocuentabancoglobal,true)) {

					this.tipocuentabancoglobalsForeignKey.add(0,tipocuentabancoglobal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyEmpleado()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyEmpleado(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyPais(JComboBox jComboBoxPaisGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Pais paisLocal=(Pais)jComboBoxPaisGenerico.getSelectedItem();

			if(paisLocal!=null  && paisLocal.getId()!=null  && paisLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_pais="+paisLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboCiudad=sFinalQueryCombo;

			this.ciudadsForeignKey=new ArrayList<Ciudad>();
			this.cargarCombosForeignKeyCiudad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyPais(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.addItemListener(new ComboBoxItemListener(this,"id_paisEmpleado"));
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.addFocusListener(new ComboBoxFocusListener(this,"id_paisEmpleado"));
					}
				} else {
					if(this.jInternalFrameDetalleFormEmpleado!=null) {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.addActionListener(new ComboBoxActionListener(this,"id_paisEmpleado"));
						this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.addFocusListener(new ComboBoxFocusListener(this,"id_paisEmpleado"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_paisFK_IdPaisEmpleado.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_paisFK_IdPaisEmpleado"));

						this.jComboBoxid_paisFK_IdPaisEmpleado.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_paisFK_IdPaisEmpleado"));

					} else {
						this.jComboBoxid_paisFK_IdPaisEmpleado.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_paisFK_IdPaisEmpleado"));

						this.jComboBoxid_paisFK_IdPaisEmpleado.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_paisFK_IdPaisEmpleado"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyEmpleado()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyEmpleado();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyEmpleado(Empleado empleado)throws Exception {	
		try {
			
			this.setActualPaisForeignKey(empleado.getid_pais(),false,"Formulario");
			this.setActualProvinciaForeignKey(empleado.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(empleado.getid_ciudad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(empleado.getid_centro_costo(),false,"Formulario");
			this.setActualReligionForeignKey(empleado.getid_religion(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(empleado.getid_estado_civil(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(empleado.getid_tipo_genero(),false,"Formulario");
			this.setActualTipoEmpleadoForeignKey(empleado.getid_tipo_empleado(),false,"Formulario");
			this.setActualTipoInstruccionForeignKey(empleado.getid_tipo_instruccion(),false,"Formulario");
			this.setActualCargoForeignKey(empleado.getid_cargo(),false,"Formulario");
			this.setActualEstructuraForeignKey(empleado.getid_estructura(),false,"Formulario");
			this.setActualEstructuraSeccionForeignKey(empleado.getid_estructura_seccion(),false,"Formulario");
			this.setActualEstadoEmpleadoForeignKey(empleado.getid_estado_empleado(),false,"Formulario");
			this.setActualTipoContratoForeignKey(empleado.getid_tipo_contrato(),false,"Formulario");
			this.setActualTipoCuentaBancoGlobalForeignKey(empleado.getid_tipo_cuenta_banco_global(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyEmpleado(Empleado empleado,String sTipoEvento)throws Exception {	
		try {
			
			

				if(empleado.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoEmpleado")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(empleado.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyEmpleado()throws Exception {	
		try {
			
			this.setActualPaisForeignKey(this.empleadoConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualProvinciaForeignKey(this.empleadoConstantesFunciones.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(this.empleadoConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.empleadoConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualReligionForeignKey(this.empleadoConstantesFunciones.getid_religion(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(this.empleadoConstantesFunciones.getid_estado_civil(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(this.empleadoConstantesFunciones.getid_tipo_genero(),false,"Formulario");
			this.setActualTipoEmpleadoForeignKey(this.empleadoConstantesFunciones.getid_tipo_empleado(),false,"Formulario");
			this.setActualTipoInstruccionForeignKey(this.empleadoConstantesFunciones.getid_tipo_instruccion(),false,"Formulario");
			this.setActualCargoForeignKey(this.empleadoConstantesFunciones.getid_cargo(),false,"Formulario");
			this.setActualEstructuraForeignKey(this.empleadoConstantesFunciones.getid_estructura(),false,"Formulario");
			this.setActualEstructuraSeccionForeignKey(this.empleadoConstantesFunciones.getid_estructura_seccion(),false,"Formulario");
			this.setActualEstadoEmpleadoForeignKey(this.empleadoConstantesFunciones.getid_estado_empleado(),false,"Formulario");
			this.setActualTipoContratoForeignKey(this.empleadoConstantesFunciones.getid_tipo_contrato(),false,"Formulario");
			this.setActualTipoCuentaBancoGlobalForeignKey(this.empleadoConstantesFunciones.getid_tipo_cuenta_banco_global(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyEmpleado()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyEmpleado()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyEmpleado()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroEmpleado()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyEmpleado()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameProvinciasForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameReligionsForeignKey("Todos");
			this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
			this.cargarCombosFrameTipoGenerosForeignKey("Todos");
			this.cargarCombosFrameTipoEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoInstruccionsForeignKey("Todos");
			this.cargarCombosFrameCargosForeignKey("Todos");
			this.cargarCombosFrameEstructurasForeignKey("Todos");
			this.cargarCombosFrameEstructuraSeccionsForeignKey("Todos");
			this.cargarCombosFrameEstadoEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoContratosForeignKey("Todos");
			this.cargarCombosFrameTipoCuentaBancoGlobalsForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyEmpleado(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameReligionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoInstruccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCargosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstructuraSeccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoContratosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCuentaBancoGlobalsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado!=null && this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormEmpleadoPais(JComboBox<?> jComboBoxGenericoPais,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormEmpleadoid_ciudad(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
	}




























	
	



	public void recargarFormEmpleadoid_ciudad(JComboBox<?> jComboBoxGenericoCiudad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.empleado,jComboBoxGenericoCiudad);
			}

			if(this.empleado.getid_pais()!=null && this.empleado.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.empleado.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualCiudadForeignKey(this.empleado.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosCiudadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public EmpleadoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public EmpleadoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public EmpleadoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.empleadoSessionBean=new EmpleadoSessionBean(); 
		this.empleadoConstantesFunciones=new EmpleadoConstantesFunciones(); 
		this.empleadoBean=new Empleado();//(this.empleadoConstantesFunciones); 		
		this.empleadoReturnGeneral=new EmpleadoParameterReturnGeneral(); 
		
		this.empleadoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.empleadoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public EmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public EmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public EmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessEmpleado(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.empleadoConstantesFunciones=new EmpleadoConstantesFunciones(); 
			this.empleadoBean=new Empleado();//this.empleadoConstantesFunciones); 			
			this.empleadoReturnGeneral=new EmpleadoParameterReturnGeneral(); 
		
			EmpleadoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Empleado Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.empleado=new Empleado();
			this.empleados = new ArrayList<Empleado>();
			this.empleadosAux = new ArrayList<Empleado>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic=new EmpleadoLogic();
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			//this.empleadoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.empleadoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormEmpleado);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEmpleado);	
					}
					
					if(this.jInternalFrameImportacionEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEmpleado);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByEmpleado);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormEmpleado!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormEmpleado);
				this.jInternalFrameDetalleFormEmpleado.setVisible(false);
				this.jInternalFrameDetalleFormEmpleado.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEmpleado);
					this.jInternalFrameReporteDinamicoEmpleado.setVisible(false);
					this.jInternalFrameReporteDinamicoEmpleado.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionEmpleado);
					this.jInternalFrameImportacionEmpleado.setVisible(false);
					this.jInternalFrameImportacionEmpleado.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByEmpleado);
					this.jInternalFrameOrderByEmpleado.setVisible(false);
					this.jInternalFrameOrderByEmpleado.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idEmpleadoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=EmpleadoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.empleadoReturnGeneral=new EmpleadoParameterReturnGeneral();
			
			this.empleadoParameterGeneral=new EmpleadoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.empleadoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(EmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(CargaFamiliar_NMConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(CursoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PrestamoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoIdiomaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DatoGeneralEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(AreaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GastoEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoHobbyConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoEMailConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RasgoPersonalConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ReferenciaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(Telefono_NMConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NovedadConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoHerraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoEnferConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(VisaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SeguroConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(AsistenciaMensualConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoDiscaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProfesionEmpleaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoConstanteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(TallaVestidoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NovedadNomiConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EmpleadoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.empleadoSessionBean.getEsGuardarRelacionado(),this.empleadoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EmpleadoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.empleadoSessionBean.getEsGuardarRelacionado(),this.empleadoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaDuplicarEmpleado=true;
			this.isVisibilidadCeldaCopiarEmpleado=true;
			this.isVisibilidadCeldaVerFormEmpleado=true;
			this.isVisibilidadCeldaOrdenEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=false;
			this.isVisibilidadCeldaGuardarEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			
			
			this.isVisibilidadFK_IdCargo=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoCivil=true;
			this.isVisibilidadFK_IdEstadoEmpleado=true;
			this.isVisibilidadFK_IdEstructura=true;
			this.isVisibilidadFK_IdEstructuraSeccion=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdProvincia=true;
			this.isVisibilidadFK_IdReligion=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoContrato=true;
			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=true;
			this.isVisibilidadFK_IdTipoEmpleado=true;
			this.isVisibilidadFK_IdTipoGenero=true;
			this.isVisibilidadFK_IdTipoInstruccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosEmpleado();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioEmpleado(false);
			
			this.setPermisosUsuarioEmpleado();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.empleadoSessionBean.getEsGuardarRelacionado() 
				|| (this.empleadoSessionBean.getEsGuardarRelacionado() && this.empleadoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioEmpleadoClasesRelacionadas();
			}
			
			if(this.empleadoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioEmpleadoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosEmpleado();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualEmpleado();
			}
			
			if(!this.isPermisoBusquedaEmpleado) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasEmpleado.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioEmpleado,this.isPermisoPaginacionMedioEmpleado,this.isPermisoPaginacionTodoEmpleado);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(EmpleadoConstantesFunciones.getTiposSeleccionarEmpleado());
				
				this.tiposColumnasSelect=EmpleadoConstantesFunciones.getTiposSeleccionarEmpleado(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectEmpleado();				
				//this.tiposRelacionesSelect=EmpleadoConstantesFunciones.getTiposRelacionesEmpleado(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioEmpleado();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioEmpleado(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioEmpleado(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesEmpleado() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.cargafamiliar_nmLogic=new CargaFamiliar_NMLogic();
			this.cursoLogic=new CursoLogic();
			this.prestamoLogic=new PrestamoLogic();
			this.empleadoidiomaLogic=new EmpleadoIdiomaLogic();
			this.historialpagomesnomiLogic=new HistorialPagoMesNomiLogic();
			this.empleadoimpuestorentaLogic=new EmpleadoImpuestoRentaLogic();
			this.datogeneralempleadoLogic=new DatoGeneralEmpleadoLogic();
			this.areaLogic=new AreaLogic();
			this.gastoempleadoLogic=new GastoEmpleadoLogic();
			this.empleadohobbyLogic=new EmpleadoHobbyLogic();
			this.empleadoemailLogic=new EmpleadoEMailLogic();
			this.rasgopersonalLogic=new RasgoPersonalLogic();
			this.referenciaLogic=new ReferenciaLogic();
			this.telefono_nmLogic=new Telefono_NMLogic();
			this.novedadLogic=new NovedadLogic();
			this.empleadoherraLogic=new EmpleadoHerraLogic();
			this.empleadoenferLogic=new EmpleadoEnferLogic();
			this.visaLogic=new VisaLogic();
			this.seguroLogic=new SeguroLogic();
			this.asistenciamensualLogic=new AsistenciaMensualLogic();
			this.empleadodiscaLogic=new EmpleadoDiscaLogic();
			this.profesionempleaLogic=new ProfesionEmpleaLogic();
			this.rubroempleadoLogic=new RubroEmpleadoLogic();
			this.empleadoconstanteLogic=new EmpleadoConstanteLogic();
			this.tallavestidoLogic=new TallaVestidoLogic();
			this.novedadnomiLogic=new NovedadNomiLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.paisLogic=new PaisLogic();
			this.provinciaLogic=new ProvinciaLogic();
			this.ciudadLogic=new CiudadLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.religionLogic=new ReligionLogic();
			this.estadocivilLogic=new EstadoCivilLogic();
			this.tipogeneroLogic=new TipoGeneroLogic();
			this.tipoempleadoLogic=new TipoEmpleadoLogic();
			this.tipoinstruccionLogic=new TipoInstruccionLogic();
			this.cargoLogic=new CargoLogic();
			this.estructuraLogic=new EstructuraLogic();
			this.estructuraseccionLogic=new EstructuraLogic();
			this.estadoempleadoLogic=new EstadoEmpleadoLogic();
			this.tipocontratoLogic=new TipoContratoLogic();
			this.tipocuentabancoglobalLogic=new TipoCuentaBancoGlobalLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				empleadoImplementable= (EmpleadoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EmpleadoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				empleadoImplementableHome= (EmpleadoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EmpleadoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.empleados= new ArrayList<Empleado>();
			this.empleadosEliminados= new ArrayList<Empleado>();
						
			this.isEsNuevoEmpleado=false;
			this.esParaAccionDesdeFormularioEmpleado=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.provinciasForeignKey=new ArrayList<Provincia>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.religionsForeignKey=new ArrayList<Religion>() ;
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>() ;
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>() ;
			this.tipoempleadosForeignKey=new ArrayList<TipoEmpleado>() ;
			this.tipoinstruccionsForeignKey=new ArrayList<TipoInstruccion>() ;
			this.cargosForeignKey=new ArrayList<Cargo>() ;
			this.estructurasForeignKey=new ArrayList<Estructura>() ;
			this.estructuraseccionsForeignKey=new ArrayList<Estructura>() ;
			this.estadoempleadosForeignKey=new ArrayList<EstadoEmpleado>() ;
			this.tipocontratosForeignKey=new ArrayList<TipoContrato>() ;
			this.tipocuentabancoglobalsForeignKey=new ArrayList<TipoCuentaBancoGlobal>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyEmpleado(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroEmpleado();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			EmpleadoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=EmpleadoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingEmpleado(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			
		this.jButtonRelacionesFinNormalEmpleadoActionPerformed(null);;
						
			if(this.jInternalFrameDetalleFormEmpleado!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioEmpleado();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioEmpleado();
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasEmpleado.getTabCount(); i++) {
					this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessEmpleado(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Empleado: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectEmpleado() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(CargaFamiliar_NMConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CargaFamiliar_NMConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(CursoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CursoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PrestamoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PrestamoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoIdiomaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoIdiomaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DatoGeneralEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DatoGeneralEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(AreaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(AreaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GastoEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GastoEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoHobbyConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoHobbyConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoEMailConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoEMailConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RasgoPersonalConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RasgoPersonalConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ReferenciaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ReferenciaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(Telefono_NMConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(Telefono_NMConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NovedadConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NovedadConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoHerraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoHerraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoEnferConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoEnferConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(VisaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(VisaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SeguroConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SeguroConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoDiscaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoDiscaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProfesionEmpleaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProfesionEmpleaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoConstanteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoConstanteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(TallaVestidoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TallaVestidoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NovedadNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NovedadNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesEmpleado")) {
				iIndex=this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();	
				
				

				if(sTitle.equals("Asistencia Mensuales")) {
					if(!AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaAsistenciaMensual(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Areas")) {
					if(!AreaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaArea(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Carga Familiar_ N Mes")) {
					if(!CargaFamiliar_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaCargaFamiliar_NM(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cursos")) {
					if(!CursoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaCurso(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Dato General Empleados")) {
					if(!DatoGeneralEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaDatoGeneralEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Constantes")) {
					if(!EmpleadoConstanteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoConstante(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Discas")) {
					if(!EmpleadoDiscaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoDisca(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Emails")) {
					if(!EmpleadoEMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoEMail(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Enferes")) {
					if(!EmpleadoEnferJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoEnfer(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Herras")) {
					if(!EmpleadoHerraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoHerra(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Hobbyes")) {
					if(!EmpleadoHobbyJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoHobby(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Idiomas")) {
					if(!EmpleadoIdiomaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoIdioma(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Impuesto Rentas")) {
					if(!EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoImpuestoRenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Gasto Empleados")) {
					if(!GastoEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaGastoEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Historial Pago Mes Nomis")) {
					if(!HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaHistorialPagoMesNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Novedades")) {
					if(!NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaNovedad(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Novedad Nomis")) {
					if(!NovedadNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaNovedadNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Prestamos")) {
					if(!PrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaPrestamo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Profesion Empleas")) {
					if(!ProfesionEmpleaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaProfesionEmplea(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rasgo Personales")) {
					if(!RasgoPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaRasgoPersonal(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Referencias")) {
					if(!ReferenciaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaReferencia(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Empleados")) {
					if(!RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaRubroEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Seguros")) {
					if(!SeguroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaSeguro(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Talla Vestidos")) {
					if(!TallaVestidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaTallaVestido(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Telefono_ N Mes")) {
					if(!Telefono_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaTelefono_NM(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Visas")) {
					if(!VisaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaVisa(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			
			if(sTipo.equals("RelacionesFinformas_de_pagoEmpleado")) {
				iIndex=this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.getSelectedIndex();
				sTitle= this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.getTitleAt(iIndex);
				Integer intSelectedRow = 0;
				intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(sTitle.equals("Asistencia Mensuales")) {
					if(!AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaAsistenciaMensual(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Areas")) {
					if(!AreaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaArea(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Carga Familiar_ N Mes")) {
					if(!CargaFamiliar_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaCargaFamiliar_NM(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cursos")) {
					if(!CursoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaCurso(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Dato General Empleados")) {
					if(!DatoGeneralEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaDatoGeneralEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Constantes")) {
					if(!EmpleadoConstanteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoConstante(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Discas")) {
					if(!EmpleadoDiscaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoDisca(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Emails")) {
					if(!EmpleadoEMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoEMail(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Enferes")) {
					if(!EmpleadoEnferJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoEnfer(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Herras")) {
					if(!EmpleadoHerraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoHerra(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Hobbyes")) {
					if(!EmpleadoHobbyJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoHobby(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Idiomas")) {
					if(!EmpleadoIdiomaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoIdioma(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Impuesto Rentas")) {
					if(!EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaEmpleadoImpuestoRenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Gasto Empleados")) {
					if(!GastoEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaGastoEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Historial Pago Mes Nomis")) {
					if(!HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaHistorialPagoMesNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Novedades")) {
					if(!NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaNovedad(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Novedad Nomis")) {
					if(!NovedadNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaNovedadNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Prestamos")) {
					if(!PrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaPrestamo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Profesion Empleas")) {
					if(!ProfesionEmpleaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaProfesionEmplea(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rasgo Personales")) {
					if(!RasgoPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaRasgoPersonal(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Referencias")) {
					if(!ReferenciaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaReferencia(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Empleados")) {
					if(!RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaRubroEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Seguros")) {
					if(!SeguroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaSeguro(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Talla Vestidos")) {
					if(!TallaVestidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaTallaVestido(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Telefono_ N Mes")) {
					if(!Telefono_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaTelefono_NM(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Visas")) {
					if(!VisaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEmpleado();

						this.cargarParteTabPanelRelacionadaVisa(iIndex,intSelectedRow);
					}
					
				}
			};
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessEmpleado();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaAsistenciaMensual(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameAsistenciaMensual(false,true,iIndex);
		this.jButtonAsistenciaMensualActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaAsistenciaMensual();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaArea(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameArea(false,true,iIndex);
		this.jButtonAreaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaArea();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCargaFamiliar_NM(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameCargaFamiliar_NM(false,true,iIndex);
		this.jButtonCargaFamiliar_NMActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCargaFamiliar_NM();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCurso(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameCurso(false,true,iIndex);
		this.jButtonCursoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCurso();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDatoGeneralEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameDatoGeneralEmpleado(false,true,iIndex);
		this.jButtonDatoGeneralEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDatoGeneralEmpleado();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoConstante(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoConstante(false,true,iIndex);
		this.jButtonEmpleadoConstanteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoConstante();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoDisca(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoDisca(false,true,iIndex);
		this.jButtonEmpleadoDiscaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoDisca();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoEMail(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoEMail(false,true,iIndex);
		this.jButtonEmpleadoEMailActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoEMail();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoEnfer(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoEnfer(false,true,iIndex);
		this.jButtonEmpleadoEnferActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoEnfer();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoHerra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoHerra(false,true,iIndex);
		this.jButtonEmpleadoHerraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoHerra();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoHobby(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoHobby(false,true,iIndex);
		this.jButtonEmpleadoHobbyActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoHobby();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoIdioma(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoIdioma(false,true,iIndex);
		this.jButtonEmpleadoIdiomaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoIdioma();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoImpuestoRenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameEmpleadoImpuestoRenta(false,true,iIndex);
		this.jButtonEmpleadoImpuestoRentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGastoEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameGastoEmpleado(false,true,iIndex);
		this.jButtonGastoEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGastoEmpleado();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaHistorialPagoMesNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameHistorialPagoMesNomi(false,true,iIndex);
		this.jButtonHistorialPagoMesNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaHistorialPagoMesNomi();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNovedad(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameNovedad(false,true,iIndex);
		this.jButtonNovedadActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNovedad();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNovedadNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameNovedadNomi(false,true,iIndex);
		this.jButtonNovedadNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNovedadNomi();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPrestamo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFramePrestamo(false,true,iIndex);
		this.jButtonPrestamoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPrestamo();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProfesionEmplea(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameProfesionEmplea(false,true,iIndex);
		this.jButtonProfesionEmpleaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProfesionEmplea();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRasgoPersonal(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameRasgoPersonal(false,true,iIndex);
		this.jButtonRasgoPersonalActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRasgoPersonal();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaReferencia(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameReferencia(false,true,iIndex);
		this.jButtonReferenciaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaReferencia();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameRubroEmpleado(false,true,iIndex);
		this.jButtonRubroEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEmpleado();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSeguro(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameSeguro(false,true,iIndex);
		this.jButtonSeguroActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSeguro();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTallaVestido(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameTallaVestido(false,true,iIndex);
		this.jButtonTallaVestidoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTallaVestido();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTelefono_NM(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameTelefono_NM(false,true,iIndex);
		this.jButtonTelefono_NMActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTelefono_NM();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaVisa(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEmpleado.cargarSessionConBeanSwingJInternalFrameVisa(false,true,iIndex);
		this.jButtonVisaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaVisa();

		//this.jTabbedPaneRelacionesEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEmpleado.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("CargaFamiliar_NM")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonCargaFamiliar_NMActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Curso")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonCursoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Prestamo")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonPrestamoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoIdioma")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoIdiomaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("HistorialPagoMesNomi")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonHistorialPagoMesNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoImpuestoRenta")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoImpuestoRentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DatoGeneralEmpleado")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonDatoGeneralEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Area")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonAreaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GastoEmpleado")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonGastoEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoHobby")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoHobbyActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoEMail")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoEMailActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RasgoPersonal")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonRasgoPersonalActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Referencia")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonReferenciaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Telefono_NM")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonTelefono_NMActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Novedad")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonNovedadActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoHerra")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoHerraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoEnfer")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoEnferActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Visa")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonVisaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Seguro")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonSeguroActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("AsistenciaMensual")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonAsistenciaMensualActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoDisca")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoDiscaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProfesionEmplea")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonProfesionEmpleaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEmpleado")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonRubroEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoConstante")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonEmpleadoConstanteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("TallaVestido")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonTallaVestidoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("NovedadNomi")) {
				int row=this.jTableDatosEmpleado.getSelectedRow();
				jButtonNovedadNomiActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Carga Familiar_ N M")) {

					if(this.isTienePermisosCargaFamiliar_NM && this.empleadoConstantesFunciones.mostrarCargaFamiliar_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Carga Familiar_ N Mes"+"("+CargaFamiliar_NMConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Carga Familiar_ N Mes");

						if(empleadoConstantesFunciones.resaltarCargaFamiliar_NMEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarCargaFamiliar_NMEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarCargaFamiliar_NMEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CargaFamiliar_NM"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Curso")) {

					if(this.isTienePermisosCurso && this.empleadoConstantesFunciones.mostrarCursoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cursos"+"("+CursoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cursos");

						if(empleadoConstantesFunciones.resaltarCursoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarCursoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarCursoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Curso"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Prestamo")) {

					if(this.isTienePermisosPrestamo && this.empleadoConstantesFunciones.mostrarPrestamoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Prestamos"+"("+PrestamoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Prestamos");

						if(empleadoConstantesFunciones.resaltarPrestamoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarPrestamoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarPrestamoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Prestamo"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Idioma")) {

					if(this.isTienePermisosEmpleadoIdioma && this.empleadoConstantesFunciones.mostrarEmpleadoIdiomaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Idiomas"+"("+EmpleadoIdiomaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Idiomas");

						if(empleadoConstantesFunciones.resaltarEmpleadoIdiomaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoIdiomaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoIdiomaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoIdioma"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Historial Pago Mes Nomi")) {

					if(this.isTienePermisosHistorialPagoMesNomi && this.empleadoConstantesFunciones.mostrarHistorialPagoMesNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Historial Pago Mes Nomis"+"("+HistorialPagoMesNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Historial Pago Mes Nomis");

						if(empleadoConstantesFunciones.resaltarHistorialPagoMesNomiEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarHistorialPagoMesNomiEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarHistorialPagoMesNomiEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"HistorialPagoMesNomi"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Impuesto Renta")) {

					if(this.isTienePermisosEmpleadoImpuestoRenta && this.empleadoConstantesFunciones.mostrarEmpleadoImpuestoRentaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Impuesto Rentas"+"("+EmpleadoImpuestoRentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Impuesto Rentas");

						if(empleadoConstantesFunciones.resaltarEmpleadoImpuestoRentaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoImpuestoRentaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoImpuestoRentaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoImpuestoRenta"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Dato General Empleado")) {

					if(this.isTienePermisosDatoGeneralEmpleado && this.empleadoConstantesFunciones.mostrarDatoGeneralEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Dato General Empleados"+"("+DatoGeneralEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Dato General Empleados");

						if(empleadoConstantesFunciones.resaltarDatoGeneralEmpleadoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarDatoGeneralEmpleadoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarDatoGeneralEmpleadoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DatoGeneralEmpleado"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Area")) {

					if(this.isTienePermisosArea && this.empleadoConstantesFunciones.mostrarAreaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Areas"+"("+AreaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Areas");

						if(empleadoConstantesFunciones.resaltarAreaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarAreaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarAreaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Area"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Gasto Empleado")) {

					if(this.isTienePermisosGastoEmpleado && this.empleadoConstantesFunciones.mostrarGastoEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Gasto Empleados"+"("+GastoEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Gasto Empleados");

						if(empleadoConstantesFunciones.resaltarGastoEmpleadoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarGastoEmpleadoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarGastoEmpleadoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GastoEmpleado"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Hobby")) {

					if(this.isTienePermisosEmpleadoHobby && this.empleadoConstantesFunciones.mostrarEmpleadoHobbyEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Hobbyes"+"("+EmpleadoHobbyConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Hobbyes");

						if(empleadoConstantesFunciones.resaltarEmpleadoHobbyEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoHobbyEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoHobbyEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoHobby"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Email")) {

					if(this.isTienePermisosEmpleadoEMail && this.empleadoConstantesFunciones.mostrarEmpleadoEMailEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Emails"+"("+EmpleadoEMailConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Emails");

						if(empleadoConstantesFunciones.resaltarEmpleadoEMailEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoEMailEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoEMailEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoEMail"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rasgo Personal")) {

					if(this.isTienePermisosRasgoPersonal && this.empleadoConstantesFunciones.mostrarRasgoPersonalEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rasgo Personales"+"("+RasgoPersonalConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rasgo Personales");

						if(empleadoConstantesFunciones.resaltarRasgoPersonalEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarRasgoPersonalEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarRasgoPersonalEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RasgoPersonal"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Referencia")) {

					if(this.isTienePermisosReferencia && this.empleadoConstantesFunciones.mostrarReferenciaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Referencias"+"("+ReferenciaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Referencias");

						if(empleadoConstantesFunciones.resaltarReferenciaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarReferenciaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarReferenciaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Referencia"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Telefono_ N M")) {

					if(this.isTienePermisosTelefono_NM && this.empleadoConstantesFunciones.mostrarTelefono_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Telefono_ N Mes"+"("+Telefono_NMConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Telefono_ N Mes");

						if(empleadoConstantesFunciones.resaltarTelefono_NMEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarTelefono_NMEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarTelefono_NMEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Telefono_NM"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Novedad")) {

					if(this.isTienePermisosNovedad && this.empleadoConstantesFunciones.mostrarNovedadEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Novedades"+"("+NovedadConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Novedades");

						if(empleadoConstantesFunciones.resaltarNovedadEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarNovedadEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarNovedadEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Novedad"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Herra")) {

					if(this.isTienePermisosEmpleadoHerra && this.empleadoConstantesFunciones.mostrarEmpleadoHerraEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Herras"+"("+EmpleadoHerraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Herras");

						if(empleadoConstantesFunciones.resaltarEmpleadoHerraEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoHerraEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoHerraEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoHerra"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Enfer")) {

					if(this.isTienePermisosEmpleadoEnfer && this.empleadoConstantesFunciones.mostrarEmpleadoEnferEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Enferes"+"("+EmpleadoEnferConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Enferes");

						if(empleadoConstantesFunciones.resaltarEmpleadoEnferEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoEnferEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoEnferEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoEnfer"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Visa")) {

					if(this.isTienePermisosVisa && this.empleadoConstantesFunciones.mostrarVisaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Visas"+"("+VisaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Visas");

						if(empleadoConstantesFunciones.resaltarVisaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarVisaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarVisaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Visa"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Seguro")) {

					if(this.isTienePermisosSeguro && this.empleadoConstantesFunciones.mostrarSeguroEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Seguros"+"("+SeguroConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Seguros");

						if(empleadoConstantesFunciones.resaltarSeguroEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarSeguroEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarSeguroEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Seguro"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Asistencia Mensual")) {

					if(this.isTienePermisosAsistenciaMensual && this.empleadoConstantesFunciones.mostrarAsistenciaMensualEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Asistencia Mensuales"+"("+AsistenciaMensualConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Asistencia Mensuales");

						if(empleadoConstantesFunciones.resaltarAsistenciaMensualEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarAsistenciaMensualEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarAsistenciaMensualEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"AsistenciaMensual"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Disca")) {

					if(this.isTienePermisosEmpleadoDisca && this.empleadoConstantesFunciones.mostrarEmpleadoDiscaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Discas"+"("+EmpleadoDiscaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Discas");

						if(empleadoConstantesFunciones.resaltarEmpleadoDiscaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoDiscaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoDiscaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoDisca"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Profesion Emplea")) {

					if(this.isTienePermisosProfesionEmplea && this.empleadoConstantesFunciones.mostrarProfesionEmpleaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Profesion Empleas"+"("+ProfesionEmpleaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Profesion Empleas");

						if(empleadoConstantesFunciones.resaltarProfesionEmpleaEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarProfesionEmpleaEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarProfesionEmpleaEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProfesionEmplea"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Empleado")) {

					if(this.isTienePermisosRubroEmpleado && this.empleadoConstantesFunciones.mostrarRubroEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Empleados"+"("+RubroEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Empleados");

						if(empleadoConstantesFunciones.resaltarRubroEmpleadoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarRubroEmpleadoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarRubroEmpleadoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEmpleado"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Constante")) {

					if(this.isTienePermisosEmpleadoConstante && this.empleadoConstantesFunciones.mostrarEmpleadoConstanteEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Constantes"+"("+EmpleadoConstanteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Constantes");

						if(empleadoConstantesFunciones.resaltarEmpleadoConstanteEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarEmpleadoConstanteEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarEmpleadoConstanteEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoConstante"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Talla Vestido")) {

					if(this.isTienePermisosTallaVestido && this.empleadoConstantesFunciones.mostrarTallaVestidoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Talla Vestidos"+"("+TallaVestidoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Talla Vestidos");

						if(empleadoConstantesFunciones.resaltarTallaVestidoEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarTallaVestidoEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarTallaVestidoEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"TallaVestido"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Novedad Nomi")) {

					if(this.isTienePermisosNovedadNomi && this.empleadoConstantesFunciones.mostrarNovedadNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Novedad Nomis"+"("+NovedadNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Novedad Nomis");

						if(empleadoConstantesFunciones.resaltarNovedadNomiEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(empleadoConstantesFunciones.resaltarNovedadNomiEmpleado);
						}

						jmenuItem.setEnabled(this.empleadoConstantesFunciones.activarNovedadNomiEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"NovedadNomi"));

						

						this.jInternalFrameDetalleFormEmpleado.jmenuDetalleEmpleado.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyEmpleado(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyEmpleadoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyEmpleado();
		
		this.cargarCombosFrameForeignKeyEmpleado();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyEmpleado();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyEmpleado();
		}
	}
	
	

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvincia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaProvincia(this.provinciasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyReligion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyReligionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyReligion();
				this.cargarCombosFrameReligionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaReligion(this.religionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivil(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoCivil(this.estadocivilsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGenero(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoGenero(this.tipogenerosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoEmpleado();
				this.cargarCombosFrameTipoEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoEmpleado(this.tipoempleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoInstruccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoInstruccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoInstruccion();
				this.cargarCombosFrameTipoInstruccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoInstruccion(this.tipoinstruccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCargo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCargoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCargo();
				this.cargarCombosFrameCargosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCargo(this.cargosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstructura(this.estructurasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructuraSeccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstructuraSeccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstructuraSeccion();
				this.cargarCombosFrameEstructuraSeccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstructuraSeccion(this.estructuraseccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoEmpleado();
				this.cargarCombosFrameEstadoEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoEmpleado(this.estadoempleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoContrato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoContratoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoContrato();
				this.cargarCombosFrameTipoContratosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoContrato(this.tipocontratosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCuentaBancoGlobal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCuentaBancoGlobalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCuentaBancoGlobal();
				this.cargarCombosFrameTipoCuentaBancoGlobalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoCuentaBancoGlobal(this.tipocuentabancoglobalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoEmpleadoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.empleadoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			
			if(jTableDatosEmpleado.getRowCount()>=1) {
				jTableDatosEmpleado.removeRowSelectionInterval(0, jTableDatosEmpleado.getRowCount()-1);						
			}
			
			this.isEsNuevoEmpleado=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoEmpleado(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesEmpleado(true);			
			//this.empleado=new Empleado();
			//this.empleado.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEmpleado(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEmpleado() ;
			
			if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEmpleado(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.empleado);	
			this.actualizarInformacion("INFO_PADRE",false,this.empleado);				
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			if(this.empleadoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Empleado: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarEmpleadoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosEmpleado.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosEmpleado.getSelectedRows().length;			
			}
			
			empleadosSeleccionados=this.getEmpleadosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoEmpleado--;			
				//Empleado empleadoAux= new Empleado();			
				//empleadoAux.setId(this.iIdNuevoEmpleado);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Empleado empleadoOrigen=new Empleado();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Empleado empleadoOrigen : empleadosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							empleadoOrigen =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							empleadoOrigen =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaEmpleado();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.empleado.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosEmpleado(empleadoOrigen,this.empleado,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.empleadoLogic.getEmpleados().add(this.empleadoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.empleados.add(this.empleadoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaEmpleado(false);
				
				this.jTableDatosEmpleado.setRowSelectionInterval(this.getIndiceNuevoEmpleado(), this.getIndiceNuevoEmpleado());
				
				int iLastRow =  this.jTableDatosEmpleado.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEmpleado.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEmpleado.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEmpleado(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();									
		
			Empleado empleadoOrigen=new Empleado();
			Empleado empleadoDestino=new Empleado();
				
			empleadosSeleccionados=this.getEmpleadosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosEmpleado.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || empleadosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosEmpleado.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoOrigen =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						empleadoOrigen =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						empleadoDestino =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						empleadoDestino =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				empleadoOrigen =empleadosSeleccionados.get(0);
				empleadoDestino =empleadosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosEmpleado(empleadoOrigen,empleadoDestino,true,false);
				
				empleadoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(empleadoDestino,empleadoLogic.getEmpleados());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(empleadoDestino,empleados);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaEmpleado(false);
				
				//this.jTableDatosEmpleado.setRowSelectionInterval(this.getIndiceNuevoEmpleado(), this.getIndiceNuevoEmpleado());
				
				int iLastRow =  this.jTableDatosEmpleado.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEmpleado.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEmpleado.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEmpleado(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormEmpleado.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesEmpleado.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasEmpleado.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesEmpleado.setVisible(!isVisible);
			this.jPanelPaginacionEmpleado.setVisible(!isVisible);
			this.jPanelAccionesEmpleado.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameEmpleado();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByEmpleado();
			
			this.abrirFrameOrderByEmpleado();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleEmpleado(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormEmpleado);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormEmpleado.isMaximum()) {
					this.jInternalFrameDetalleFormEmpleado.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormEmpleado.setSize(this.jInternalFrameDetalleFormEmpleado.iWidthFormulario,this.jInternalFrameDetalleFormEmpleado.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormEmpleado.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormEmpleado.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormEmpleado.isMaximum()) {
						this.jInternalFrameDetalleFormEmpleado.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),EmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),EmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),EmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaAsistenciaMensual();
					}

					if(AreaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaArea();
					}

					if(CargaFamiliar_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCargaFamiliar_NM();
					}

					if(CursoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCurso();
					}

					if(DatoGeneralEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDatoGeneralEmpleado();
					}

					if(EmpleadoConstanteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoConstante();
					}

					if(EmpleadoDiscaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoDisca();
					}

					if(EmpleadoEMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoEMail();
					}

					if(EmpleadoEnferJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoEnfer();
					}

					if(EmpleadoHerraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoHerra();
					}

					if(EmpleadoHobbyJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoHobby();
					}

					if(EmpleadoIdiomaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoIdioma();
					}

					if(EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta();
					}

					if(GastoEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGastoEmpleado();
					}

					if(HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaHistorialPagoMesNomi();
					}

					if(NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNovedad();
					}

					if(NovedadNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNovedadNomi();
					}

					if(PrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPrestamo();
					}

					if(ProfesionEmpleaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProfesionEmplea();
					}

					if(RasgoPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRasgoPersonal();
					}

					if(ReferenciaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaReferencia();
					}

					if(RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEmpleado();
					}

					if(SeguroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSeguro();
					}

					if(TallaVestidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTallaVestido();
					}

					if(Telefono_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTelefono_NM();
					}

					if(VisaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaVisa();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormEmpleado.setVisible(true);
	        this.jInternalFrameDetalleFormEmpleado.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByEmpleado() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByEmpleado==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByEmpleado=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEmpleado,false,this);
				} else {
					this.jInternalFrameOrderByEmpleado=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEmpleado,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByEmpleado);
				this.jInternalFrameOrderByEmpleado.setVisible(false);
				this.jInternalFrameOrderByEmpleado.setSelected(false);
				
				this.jInternalFrameOrderByEmpleado.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEmpleado"));
				
				this.inicializarActualizarBindingTablaOrderByEmpleado();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionEmpleado() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionEmpleado==null) {
				
				this.jInternalFrameImportacionEmpleado=new ImportacionJInternalFrame(EmpleadoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEmpleado);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionEmpleado);
				this.jInternalFrameImportacionEmpleado.setVisible(false);
				this.jInternalFrameImportacionEmpleado.setSelected(false);


				this.jInternalFrameImportacionEmpleado.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEmpleado"));
				this.jInternalFrameImportacionEmpleado.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEmpleado"));
				this.jInternalFrameImportacionEmpleado.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEmpleado"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoEmpleado() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoEmpleado==null) {
				this.jInternalFrameReporteDinamicoEmpleado=new ReporteDinamicoJInternalFrame(EmpleadoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEmpleado);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEmpleado);
				this.jInternalFrameReporteDinamicoEmpleado.setVisible(false);
				this.jInternalFrameReporteDinamicoEmpleado.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEmpleado"));
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEmpleado"));
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEmpleado"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEmpleado();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaAsistenciaMensual() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaArea() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.jScrollPanelDatosArea.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.jScrollPanelDatosArea.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.jScrollPanelDatosArea.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.jScrollPanelDatosArea.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCargaFamiliar_NM() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar_NM.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar_NM.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar_NM.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar_NM.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCurso() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jScrollPanelDatosCurso.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jScrollPanelDatosCurso.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jScrollPanelDatosCurso.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.jScrollPanelDatosCurso.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDatoGeneralEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.jScrollPanelDatosDatoGeneralEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.jScrollPanelDatosDatoGeneralEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.jScrollPanelDatosDatoGeneralEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.jScrollPanelDatosDatoGeneralEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoConstante() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoConstante.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoConstante.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoConstante.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoConstante.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoDisca() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoDisca.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoDisca.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoDisca.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoDisca.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoEMail() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEMail.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEMail.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEMail.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEMail.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoEnfer() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEnfer.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEnfer.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEnfer.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEnfer.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoHerra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHerra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHerra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHerra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHerra.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoHobby() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHobby.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHobby.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHobby.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHobby.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoIdioma() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoIdioma.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoIdioma.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoIdioma.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoIdioma.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGastoEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.jScrollPanelDatosGastoEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.jScrollPanelDatosGastoEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.jScrollPanelDatosGastoEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.jScrollPanelDatosGastoEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaHistorialPagoMesNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNovedad() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNovedadNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.jScrollPanelDatosNovedadNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.jScrollPanelDatosNovedadNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.jScrollPanelDatosNovedadNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.jScrollPanelDatosNovedadNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPrestamo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jScrollPanelDatosPrestamo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jScrollPanelDatosPrestamo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jScrollPanelDatosPrestamo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.jScrollPanelDatosPrestamo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProfesionEmplea() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.jScrollPanelDatosProfesionEmplea.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.jScrollPanelDatosProfesionEmplea.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.jScrollPanelDatosProfesionEmplea.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.jScrollPanelDatosProfesionEmplea.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRasgoPersonal() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.jScrollPanelDatosRasgoPersonal.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.jScrollPanelDatosRasgoPersonal.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.jScrollPanelDatosRasgoPersonal.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.jScrollPanelDatosRasgoPersonal.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaReferencia() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jScrollPanelDatosReferencia.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jScrollPanelDatosReferencia.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jScrollPanelDatosReferencia.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.jScrollPanelDatosReferencia.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSeguro() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.jScrollPanelDatosSeguro.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.jScrollPanelDatosSeguro.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.jScrollPanelDatosSeguro.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.jScrollPanelDatosSeguro.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTallaVestido() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.jScrollPanelDatosTallaVestido.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.jScrollPanelDatosTallaVestido.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.jScrollPanelDatosTallaVestido.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.jScrollPanelDatosTallaVestido.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTelefono_NM() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.jScrollPanelDatosTelefono_NM.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.jScrollPanelDatosTelefono_NM.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.jScrollPanelDatosTelefono_NM.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.jScrollPanelDatosTelefono_NM.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaVisa() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.jScrollPanelDatosVisa.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEmpleado.jContentPaneDetalleEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.jScrollPanelDatosVisa.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.jScrollPanelDatosVisa.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.jScrollPanelDatosVisa.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleEmpleado() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormEmpleado);
			
	       	this.jInternalFrameDetalleFormEmpleado.setVisible(false);
	        this.jInternalFrameDetalleFormEmpleado.setSelected(false);
			
			//this.jInternalFrameDetalleFormEmpleado.dispose();
			//this.jInternalFrameDetalleFormEmpleado=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoEmpleado() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoEmpleado.setVisible(true);
	        this.jInternalFrameReporteDinamicoEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionEmpleado() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionEmpleado.setVisible(true);
	        this.jInternalFrameImportacionEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByEmpleado() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByEmpleado.setVisible(true);
	        this.jInternalFrameOrderByEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByEmpleado() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByEmpleado.setVisible(false);
	        this.jInternalFrameOrderByEmpleado.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoEmpleado() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoEmpleado.setVisible(false);
	        this.jInternalFrameReporteDinamicoEmpleado.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionEmpleado() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionEmpleado.setVisible(false);
	        this.jInternalFrameImportacionEmpleado.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderEmpleado.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCargo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCargo);
						CargoBeanSwingJInternalFrame cargoBeanSwingJInternalFrame=new CargoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cargoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.sTipoBusqueda="Cargo";
						}

						cargoBeanSwingJInternalFrame.getTodosCargoArbol();
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.setCargos(cargoBeanSwingJInternalFrame.cargosArbol);
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.CargarTreeCargo();
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.setVisible(true);
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cargoBeanSwingJInternalFrame.jInternalFrameTreeCargo.jInternalFrameParent=this;
						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderCargo=(TitledBorder)cargoBeanSwingJInternalFrame.jScrollPanelDatosCargo.getBorder();

						titledBorderCargo.setTitle(titledBorderEmpleado.getTitle() + " -> Cargo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cargoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cargoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCargo(CargoBeanSwingJInternalFrame jInternalFrameTreeCargo) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCargo);
						jInternalFrameTreeCargo.setVisible(false);
						jInternalFrameTreeCargo.setSelected(false);
						//jInternalFrameTreeCargo.dispose();
						//jInternalFrameTreeCargo=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeEstructura(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeEstructura);
						EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.sTipoBusqueda="Estructura";
						}

						estructuraBeanSwingJInternalFrame.getTodosEstructuraArbol();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setEstructuras(estructuraBeanSwingJInternalFrame.estructurasArbol);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.CargarTreeEstructura();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setVisible(true);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.jInternalFrameParent=this;
						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEstructura=(TitledBorder)estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

						titledBorderEstructura.setTitle(titledBorderEmpleado.getTitle() + " -> Estructura");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,estructuraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(estructuraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeEstructura(EstructuraBeanSwingJInternalFrame jInternalFrameTreeEstructura) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeEstructura);
						jInternalFrameTreeEstructura.setVisible(false);
						jInternalFrameTreeEstructura.setSelected(false);
						//jInternalFrameTreeEstructura.dispose();
						//jInternalFrameTreeEstructura=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeEstructuraSeccion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeEstructura);
						EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.sTipoBusqueda="EstructuraSeccion";
						}

						estructuraBeanSwingJInternalFrame.getTodosEstructuraArbol();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setEstructuras(estructuraBeanSwingJInternalFrame.estructurasArbol);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.CargarTreeEstructura();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setVisible(true);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.jInternalFrameParent=this;
						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEstructuraSeccion=(TitledBorder)estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

						titledBorderEstructuraSeccion.setTitle(titledBorderEmpleado.getTitle() + " -> Estructura");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,estructuraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(estructuraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeEstructuraSeccion(EstructuraBeanSwingJInternalFrame jInternalFrameTreeEstructura) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeEstructura);
						jInternalFrameTreeEstructura.setVisible(false);
						jInternalFrameTreeEstructura.setSelected(false);
						//jInternalFrameTreeEstructura.dispose();
						//jInternalFrameTreeEstructura=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarEmpleado(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarEmpleado(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesEmpleado(true);
			//this.isEsNuevoEmpleado=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEmpleado(false) ;
			
			if(empleadoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.getEsGuardarRelacionado() && CargaFamiliar_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCargaFamiliar_NMActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoSessionBean.getEsGuardarRelacionado() && CursoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCursoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoSessionBean.getEsGuardarRelacionado() && PrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrestamoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.getEsGuardarRelacionado() && EmpleadoIdiomaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoIdiomaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado() && HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoMesNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado() && EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoImpuestoRentaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.getEsGuardarRelacionado() && DatoGeneralEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDatoGeneralEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaSessionBean.getEsGuardarRelacionado() && AreaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAreaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.getEsGuardarRelacionado() && GastoEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGastoEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.getEsGuardarRelacionado() && EmpleadoHobbyJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoHobbyActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.getEsGuardarRelacionado() && EmpleadoEMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEMailActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.getEsGuardarRelacionado() && RasgoPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRasgoPersonalActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaSessionBean.getEsGuardarRelacionado() && ReferenciaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.getEsGuardarRelacionado() && Telefono_NMJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTelefono_NMActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado() && NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.getEsGuardarRelacionado() && EmpleadoHerraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoHerraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.getEsGuardarRelacionado() && EmpleadoEnferJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEnferActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaSessionBean.getEsGuardarRelacionado() && VisaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVisaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroSessionBean.getEsGuardarRelacionado() && SeguroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSeguroActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado() && AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaMensualActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.getEsGuardarRelacionado() && EmpleadoDiscaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoDiscaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.getEsGuardarRelacionado() && ProfesionEmpleaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProfesionEmpleaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado() && RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.getEsGuardarRelacionado() && EmpleadoConstanteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoConstanteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.getEsGuardarRelacionado() && TallaVestidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTallaVestidoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.getEsGuardarRelacionado() && NovedadNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadNomiActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEmpleado(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEmpleado(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaEmpleadoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarEmpleado(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesEmpleado(true);
			//this.isEsNuevoEmpleado=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.empleado.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesEmpleado(false) ;
			
			if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEmpleado(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEmpleado(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CentroCosto")) {
				if(!this.empleadoConstantesFunciones.cargarid_centro_costoEmpleado) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingEmpleado(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProvincia(List<Provincia> provinciasForeignKey)throws Exception{
		TableColumn tableColumnProvincia=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDPROVINCIA));
		TableCellEditor tableCellEditorProvincia =tableColumnProvincia.getCellEditor();

		ProvinciaTableCell provinciaTableCellFk=(ProvinciaTableCell)tableCellEditorProvincia;

		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.setprovinciasForeignKey(provinciasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//provinciaTableCellFk.setRowActual(intSelectedRow);
			//provinciaTableCellFk.setprovinciasForeignKeyActual(provinciasForeignKey);
		//}


		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.RecargarProvinciasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaReligion(List<Religion> religionsForeignKey)throws Exception{
		TableColumn tableColumnReligion=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDRELIGION));
		TableCellEditor tableCellEditorReligion =tableColumnReligion.getCellEditor();

		ReligionTableCell religionTableCellFk=(ReligionTableCell)tableCellEditorReligion;

		if(religionTableCellFk!=null) {
			religionTableCellFk.setreligionsForeignKey(religionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//religionTableCellFk.setRowActual(intSelectedRow);
			//religionTableCellFk.setreligionsForeignKeyActual(religionsForeignKey);
		//}


		if(religionTableCellFk!=null) {
			religionTableCellFk.RecargarReligionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoCivil(List<EstadoCivil> estadocivilsForeignKey)throws Exception{
		TableColumn tableColumnEstadoCivil=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL));
		TableCellEditor tableCellEditorEstadoCivil =tableColumnEstadoCivil.getCellEditor();

		EstadoCivilTableCell estadocivilTableCellFk=(EstadoCivilTableCell)tableCellEditorEstadoCivil;

		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.setestadocivilsForeignKey(estadocivilsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadocivilTableCellFk.setRowActual(intSelectedRow);
			//estadocivilTableCellFk.setestadocivilsForeignKeyActual(estadocivilsForeignKey);
		//}


		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.RecargarEstadoCivilsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGenero(List<TipoGenero> tipogenerosForeignKey)throws Exception{
		TableColumn tableColumnTipoGenero=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO));
		TableCellEditor tableCellEditorTipoGenero =tableColumnTipoGenero.getCellEditor();

		TipoGeneroTableCell tipogeneroTableCellFk=(TipoGeneroTableCell)tableCellEditorTipoGenero;

		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.settipogenerosForeignKey(tipogenerosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogeneroTableCellFk.setRowActual(intSelectedRow);
			//tipogeneroTableCellFk.settipogenerosForeignKeyActual(tipogenerosForeignKey);
		//}


		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.RecargarTipoGenerosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoEmpleado(List<TipoEmpleado> tipoempleadosForeignKey)throws Exception{
		TableColumn tableColumnTipoEmpleado=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO));
		TableCellEditor tableCellEditorTipoEmpleado =tableColumnTipoEmpleado.getCellEditor();

		TipoEmpleadoTableCell tipoempleadoTableCellFk=(TipoEmpleadoTableCell)tableCellEditorTipoEmpleado;

		if(tipoempleadoTableCellFk!=null) {
			tipoempleadoTableCellFk.settipoempleadosForeignKey(tipoempleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoempleadoTableCellFk.setRowActual(intSelectedRow);
			//tipoempleadoTableCellFk.settipoempleadosForeignKeyActual(tipoempleadosForeignKey);
		//}


		if(tipoempleadoTableCellFk!=null) {
			tipoempleadoTableCellFk.RecargarTipoEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoInstruccion(List<TipoInstruccion> tipoinstruccionsForeignKey)throws Exception{
		TableColumn tableColumnTipoInstruccion=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION));
		TableCellEditor tableCellEditorTipoInstruccion =tableColumnTipoInstruccion.getCellEditor();

		TipoInstruccionTableCell tipoinstruccionTableCellFk=(TipoInstruccionTableCell)tableCellEditorTipoInstruccion;

		if(tipoinstruccionTableCellFk!=null) {
			tipoinstruccionTableCellFk.settipoinstruccionsForeignKey(tipoinstruccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoinstruccionTableCellFk.setRowActual(intSelectedRow);
			//tipoinstruccionTableCellFk.settipoinstruccionsForeignKeyActual(tipoinstruccionsForeignKey);
		//}


		if(tipoinstruccionTableCellFk!=null) {
			tipoinstruccionTableCellFk.RecargarTipoInstruccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCargo(List<Cargo> cargosForeignKey)throws Exception{
		TableColumn tableColumnCargo=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCARGO));
		TableCellEditor tableCellEditorCargo =tableColumnCargo.getCellEditor();

		CargoTableCell cargoTableCellFk=(CargoTableCell)tableCellEditorCargo;

		if(cargoTableCellFk!=null) {
			cargoTableCellFk.setcargosForeignKey(cargosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cargoTableCellFk.setRowActual(intSelectedRow);
			//cargoTableCellFk.setcargosForeignKeyActual(cargosForeignKey);
		//}


		if(cargoTableCellFk!=null) {
			cargoTableCellFk.RecargarCargosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstructura(List<Estructura> estructurasForeignKey)throws Exception{
		TableColumn tableColumnEstructura=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA));
		TableCellEditor tableCellEditorEstructura =tableColumnEstructura.getCellEditor();

		EstructuraTableCell estructuraTableCellFk=(EstructuraTableCell)tableCellEditorEstructura;

		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.setestructurasForeignKey(estructurasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estructuraTableCellFk.setRowActual(intSelectedRow);
			//estructuraTableCellFk.setestructurasForeignKeyActual(estructurasForeignKey);
		//}


		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.RecargarEstructurasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstructuraSeccion(List<Estructura> estructuraseccionsForeignKey)throws Exception{
		TableColumn tableColumnEstructuraSeccion=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION));
		TableCellEditor tableCellEditorEstructuraSeccion =tableColumnEstructuraSeccion.getCellEditor();

		EstructuraTableCell estructuraTableCellFk=(EstructuraTableCell)tableCellEditorEstructuraSeccion;

		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.setestructurasForeignKey(estructuraseccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estructuraTableCellFk.setRowActual(intSelectedRow);
			//estructuraTableCellFk.setestructurasForeignKeyActual(estructuraseccionsForeignKey);
		//}


		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.RecargarEstructurasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoEmpleado(List<EstadoEmpleado> estadoempleadosForeignKey)throws Exception{
		TableColumn tableColumnEstadoEmpleado=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO));
		TableCellEditor tableCellEditorEstadoEmpleado =tableColumnEstadoEmpleado.getCellEditor();

		EstadoEmpleadoTableCell estadoempleadoTableCellFk=(EstadoEmpleadoTableCell)tableCellEditorEstadoEmpleado;

		if(estadoempleadoTableCellFk!=null) {
			estadoempleadoTableCellFk.setestadoempleadosForeignKey(estadoempleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoempleadoTableCellFk.setRowActual(intSelectedRow);
			//estadoempleadoTableCellFk.setestadoempleadosForeignKeyActual(estadoempleadosForeignKey);
		//}


		if(estadoempleadoTableCellFk!=null) {
			estadoempleadoTableCellFk.RecargarEstadoEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoContrato(List<TipoContrato> tipocontratosForeignKey)throws Exception{
		TableColumn tableColumnTipoContrato=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO));
		TableCellEditor tableCellEditorTipoContrato =tableColumnTipoContrato.getCellEditor();

		TipoContratoTableCell tipocontratoTableCellFk=(TipoContratoTableCell)tableCellEditorTipoContrato;

		if(tipocontratoTableCellFk!=null) {
			tipocontratoTableCellFk.settipocontratosForeignKey(tipocontratosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocontratoTableCellFk.setRowActual(intSelectedRow);
			//tipocontratoTableCellFk.settipocontratosForeignKeyActual(tipocontratosForeignKey);
		//}


		if(tipocontratoTableCellFk!=null) {
			tipocontratoTableCellFk.RecargarTipoContratosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCuentaBancoGlobal(List<TipoCuentaBancoGlobal> tipocuentabancoglobalsForeignKey)throws Exception{
		TableColumn tableColumnTipoCuentaBancoGlobal=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL));
		TableCellEditor tableCellEditorTipoCuentaBancoGlobal =tableColumnTipoCuentaBancoGlobal.getCellEditor();

		TipoCuentaBancoGlobalTableCell tipocuentabancoglobalTableCellFk=(TipoCuentaBancoGlobalTableCell)tableCellEditorTipoCuentaBancoGlobal;

		if(tipocuentabancoglobalTableCellFk!=null) {
			tipocuentabancoglobalTableCellFk.settipocuentabancoglobalsForeignKey(tipocuentabancoglobalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocuentabancoglobalTableCellFk.setRowActual(intSelectedRow);
			//tipocuentabancoglobalTableCellFk.settipocuentabancoglobalsForeignKeyActual(tipocuentabancoglobalsForeignKey);
		//}


		if(tipocuentabancoglobalTableCellFk!=null) {
			tipocuentabancoglobalTableCellFk.RecargarTipoCuentaBancoGlobalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesEmpleado(false);
			
			//if(!this.isEsNuevoEmpleado) {								
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				
			}
			
			if(this.permiteMantenimiento(this.empleado)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.empleadoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoEmpleado=true;
					this.inicializarActualizarBindingTablaEmpleado(false);
					this.isEsNuevoEmpleado=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoEmpleado=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoEmpleado=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEmpleado(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEmpleado(false);
				
				this.habilitarDeshabilitarControlesEmpleado(false);
			
												
				
				if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleEmpleado();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoEmpleadoActionPerformed(evt,empleadoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualEmpleado(this.empleado,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,empleadoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.empleado.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				this.empleado.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				this.empleado.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.empleado)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.empleadoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((EmpleadoModel) this.jTableDatosEmpleado.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoEmpleado=true;
				this.inicializarActualizarBindingTablaEmpleado(false);
				this.isEsNuevoEmpleado=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEmpleado(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEmpleado(false);
				
				this.habilitarDeshabilitarControlesEmpleado(false);
				
				
				
				if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleEmpleado();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarEmpleadoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosEmpleado.getRowCount()>=1) {
				jTableDatosEmpleado.removeRowSelectionInterval(0, jTableDatosEmpleado.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesEmpleado(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaEmpleado(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEmpleado(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEmpleado(false) ;
			
			this.isEsNuevoEmpleado=false;
			
			if(EmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleEmpleado();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingEmpleado(false);
				
				//SI ES MANUAL
				if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualEmpleado();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoEmpleado--;			
			//Empleado empleadoAux= new Empleado();			
			//empleadoAux.setId(this.iIdNuevoEmpleado);
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaEmpleado();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
			
			this.empleado.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.empleadoLogic.getEmpleados().add(this.empleadoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.empleados.add(this.empleadoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaEmpleado(false);
			
			this.jTableDatosEmpleado.setRowSelectionInterval(this.getIndiceNuevoEmpleado(), this.getIndiceNuevoEmpleado());
			
			int iLastRow =  this.jTableDatosEmpleado.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosEmpleado.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosEmpleado.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaEmpleado(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingEmpleado(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEmpleado(false);
			
			//SI ES MANUAL
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEmpleado();
			}
			
			//this.abrirFrameTreeEmpleado();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE EmpleadoS ?", "MANTENIMIENTO DE Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionEmpleado.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralEmpleado();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.empleadoReturnGeneral=empleadoLogic.procesarImportacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.empleadoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarEmpleadoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionEmpleado.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionEmpleado.setFileImportacion(this.jInternalFrameImportacionEmpleado.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionEmpleado.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionEmpleado.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionEmpleado.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionEmpleado.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		

		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("EmpleadoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"EmpleadoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteEmpleados("Todos",empleadosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDPROVINCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Provincia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Provincia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Provincia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Provincia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDRELIGION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Religion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Religion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Religion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Religion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoCivil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoCivil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoCivil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoCivil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGenero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGenero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGenero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGenero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoEmpleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoEmpleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoEmpleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoEmpleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoInstruccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoInstruccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoInstruccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoInstruccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDCARGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cargo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cargo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cargo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cargo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Estructura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Estructura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Estructura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Estructura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstructuraSeccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstructuraSeccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstructuraSeccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstructuraSeccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoEmpleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoEmpleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoEmpleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoEmpleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoContrato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoContrato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoContrato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoContrato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_APELLIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ellido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ellido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ellido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ellido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreCompleto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreCompleto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreCompleto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreCompleto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_MAIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_il_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_il_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_il_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_il_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_SUELDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCuentaBancoGlobal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCuentaBancoGlobal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCuentaBancoGlobal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCuentaBancoGlobal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCuenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCuenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCuenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCuenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_TIENECASA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eneCasa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eneCasa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eneCasa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eneCasa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eneVehiculo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eneVehiculo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eneVehiculo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eneVehiculo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoEmpleado.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case EmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoria="id_provincia";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDRELIGION:
					sNombreCampoCategoria="id_religion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoria="id_estado_civil";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoria="id_tipo_genero";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO:
					sNombreCampoCategoria="id_tipo_empleado";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION:
					sNombreCampoCategoria="id_tipo_instruccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCARGO:
					sNombreCampoCategoria="id_cargo";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoria="id_estructura";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION:
					sNombreCampoCategoria="id_estructura_seccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO:
					sNombreCampoCategoria="id_estado_empleado";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO:
					sNombreCampoCategoria="id_tipo_contrato";
					break;

				case EmpleadoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case EmpleadoConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoria="apellido";
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoria="nombre_completo";
					break;

				case EmpleadoConstantesFunciones.LABEL_MAIL:
					sNombreCampoCategoria="mail";
					break;

				case EmpleadoConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_SUELDO:
					sNombreCampoCategoria="sueldo";
					break;

				case EmpleadoConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL:
					sNombreCampoCategoria="id_tipo_cuenta_banco_global";
					break;

				case EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA:
					sNombreCampoCategoria="numero_cuenta";
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENECASA:
					sNombreCampoCategoria="tiene_casa";
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO:
					sNombreCampoCategoria="tiene_vehiculo";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case EmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoriaValor="id_provincia";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDRELIGION:
					sNombreCampoCategoriaValor="id_religion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoriaValor="id_estado_civil";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoriaValor="id_tipo_genero";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO:
					sNombreCampoCategoriaValor="id_tipo_empleado";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION:
					sNombreCampoCategoriaValor="id_tipo_instruccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCARGO:
					sNombreCampoCategoriaValor="id_cargo";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoriaValor="id_estructura";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION:
					sNombreCampoCategoriaValor="id_estructura_seccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO:
					sNombreCampoCategoriaValor="id_estado_empleado";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO:
					sNombreCampoCategoriaValor="id_tipo_contrato";
					break;

				case EmpleadoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case EmpleadoConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoriaValor="apellido";
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoriaValor="nombre_completo";
					break;

				case EmpleadoConstantesFunciones.LABEL_MAIL:
					sNombreCampoCategoriaValor="mail";
					break;

				case EmpleadoConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case EmpleadoConstantesFunciones.LABEL_SUELDO:
					sNombreCampoCategoriaValor="sueldo";
					break;

				case EmpleadoConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL:
					sNombreCampoCategoriaValor="id_tipo_cuenta_banco_global";
					break;

				case EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA:
					sNombreCampoCategoriaValor="numero_cuenta";
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENECASA:
					sNombreCampoCategoriaValor="tiene_casa";
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO:
					sNombreCampoCategoriaValor="tiene_vehiculo";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPROVINCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Provincia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_provincia");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDRELIGION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Religion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_religion");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Civil",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_civil");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Genero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_genero");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_empleado");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Instruccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_instruccion");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCARGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cargo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cargo");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estructura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estructura");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estructura Seccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estructura_seccion");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_empleado");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Idtipo Contrato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_contrato");
					break;

				case EmpleadoConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case EmpleadoConstantesFunciones.LABEL_APELLIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Apellido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"apellido");
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Completo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_completo");
					break;

				case EmpleadoConstantesFunciones.LABEL_MAIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mail",sNombreCampoCategoria,sNombreCampoCategoriaValor,"mail");
					break;

				case EmpleadoConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case EmpleadoConstantesFunciones.LABEL_SUELDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sueldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"sueldo");
					break;

				case EmpleadoConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cuenta Banco Global",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cuenta_banco_global");
					break;

				case EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Cuenta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_cuenta");
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENECASA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tiene Casa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"tiene_casa");
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tiene Vehiculo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"tiene_vehiculo");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoEmpleadoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Empleados");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case EmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDPROVINCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPROVINCIA);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getprovincia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDRELIGION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDRELIGION);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getreligion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getestadocivil_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettipogenero_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettipoempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettipoinstruccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDCARGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCARGO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getcargo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getestructura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getestructuraseccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getestadoempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettipocontrato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_APELLIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_APELLIDO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getapellido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getnombre_completo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_MAIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_MAIL);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getmail());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_SUELDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_SUELDO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getsueldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettipocuentabancoglobal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.getnumero_cuenta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENECASA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENECASA);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettiene_casa());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO);
					iRow++;

					for(Empleado empleado:empleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(empleado.gettiene_vehiculo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelEmpleado(row);				
			//	iRow++;
			//}				
			
			//for(Empleado empleadoAux:empleadosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelEmpleado(empleadoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEmpleado(false);
			
			//SI ES MANUAL
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEmpleado();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEmpleado(false);
			
			//SI ES MANUAL
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEmpleado();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEmpleado(false);
			
			//SI ES MANUAL
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEmpleado();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaEmpleado() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosEmpleado.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosEmpleado.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosEmpleado.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosEmpleado.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosEmpleado.setMinimumSize(dimensionMinimum);
		this.jTableDatosEmpleado.setMaximumSize(dimensionMaximum);
		this.jTableDatosEmpleado.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingEmpleado(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingEmpleado(esInicializar,true);
	}
	
	public void inicializarActualizarBindingEmpleado(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaEmpleado(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesEmpleado(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasEmpleado(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEmpleado(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesEmpleado(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!EmpleadoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualEmpleado() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaEmpleado();
		
		this.inicializarActualizarBindingBotonesManualEmpleado(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualEmpleado();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEmpleado() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualEmpleado(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualEmpleado(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosEmpleado.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosEmpleado.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteEmpleado.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormEmpleado!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionNuevoEmpleado.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionSinCerrarEmpleado.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionSinMensajeEmpleado.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosEmpleado.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosEmpleado.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteEmpleado.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormEmpleado!=null) {
				this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionNuevoEmpleado.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionSinCerrarEmpleado.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormEmpleado.jCheckBoxPostAccionSinMensajeEmpleado.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionEmpleado.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionEmpleado.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesEmpleado.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesEmpleado.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesEmpleado.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarEmpleado.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesEmpleado.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesEmpleado.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralEmpleado.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesEmpleado(Boolean esInicializar) throws Exception {
		try	{	
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualEmpleado(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesEmpleado() throws Exception {
		try	{
			if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualEmpleado();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEmpleado() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualEmpleado() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesEmpleado.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesEmpleado.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesEmpleado.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionEmpleado.addItem(reporte);
			}
			
			
			if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionEmpleado.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionEmpleado.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesEmpleado.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesEmpleado.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarEmpleado.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarEmpleado.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEmpleado();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEmpleado() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
				
				if(this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoEmpleado.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEmpleado.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=EmpleadoConstantesFunciones.getTiposSeleccionarEmpleado(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=EmpleadoConstantesFunciones.getTiposSeleccionarEmpleado(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=EmpleadoConstantesFunciones.getTiposSeleccionarEmpleado(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEmpleado.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoEmpleado.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualEmpleado()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_cargoFK_IdCargoEmpleado.getSelectedItem()!=null){this.id_cargoFK_IdCargo=((Cargo)this.jComboBoxid_cargoFK_IdCargoEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_ciudadFK_IdCiudadEmpleado.getSelectedItem()!=null){this.id_ciudadFK_IdCiudad=((Ciudad)this.jComboBoxid_ciudadFK_IdCiudadEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.getSelectedItem()!=null){this.id_estado_civilFK_IdEstadoCivil=((EstadoCivil)this.jComboBoxid_estado_civilFK_IdEstadoCivilEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.getSelectedItem()!=null){this.id_estado_empleadoFK_IdEstadoEmpleado=((EstadoEmpleado)this.jComboBoxid_estado_empleadoFK_IdEstadoEmpleadoEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.getSelectedItem()!=null){this.id_estructuraFK_IdEstructura=((Estructura)this.jComboBoxid_estructuraFK_IdEstructuraEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.getSelectedItem()!=null){this.id_estructura_seccionFK_IdEstructuraSeccion=((Estructura)this.jComboBoxid_estructura_seccionFK_IdEstructuraSeccionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisEmpleado.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.getSelectedItem()!=null){this.id_provinciaFK_IdProvincia=((Provincia)this.jComboBoxid_provinciaFK_IdProvinciaEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_religionFK_IdReligionEmpleado.getSelectedItem()!=null){this.id_religionFK_IdReligion=((Religion)this.jComboBoxid_religionFK_IdReligionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.getSelectedItem()!=null){this.id_tipo_contratoFK_IdTipoContrato=((TipoContrato)this.jComboBoxid_tipo_contratoFK_IdTipoContratoEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.getSelectedItem()!=null){this.id_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal=((TipoCuentaBancoGlobal)this.jComboBoxid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobalEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.getSelectedItem()!=null){this.id_tipo_empleadoFK_IdTipoEmpleado=((TipoEmpleado)this.jComboBoxid_tipo_empleadoFK_IdTipoEmpleadoEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.getSelectedItem()!=null){this.id_tipo_generoFK_IdTipoGenero=((TipoGenero)this.jComboBoxid_tipo_generoFK_IdTipoGeneroEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.getSelectedItem()!=null){this.id_tipo_instruccionFK_IdTipoInstruccion=((TipoInstruccion)this.jComboBoxid_tipo_instruccionFK_IdTipoInstruccionEmpleado.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasEmpleado(Boolean esInicializar) throws Exception {				
		if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualEmpleado();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaEmpleado() throws Exception {
		this.inicializarActualizarBindingTablaEmpleado(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByEmpleado() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosEmpleadoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleadoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaEmpleado(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=empleadoLogic.getEmpleados().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=empleados.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosEmpleado.setModel(new EmpleadoModel(this.empleadoLogic.getEmpleados(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosEmpleado.setModel(new EmpleadoModel(this.empleados,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByEmpleado!=null && this.jInternalFrameOrderByEmpleado.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByEmpleado();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+EmpleadoConstantesFunciones.SCLASSWEBTITULO,empleadoConstantesFunciones.resaltarSeleccionarEmpleado,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+EmpleadoConstantesFunciones.SCLASSWEBTITULO,empleadoConstantesFunciones.resaltarSeleccionarEmpleado,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_ID));

		if(this.empleadoConstantesFunciones.mostraridEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.empleadoConstantesFunciones.resaltaridEmpleado,this.empleadoConstantesFunciones.activaridEmpleado,iSizeTabla,this,true,"idEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltaridEmpleado,this.empleadoConstantesFunciones.activaridEmpleado,this,true,"idEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.empleadoConstantesFunciones.mostrarid_empresaEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.empleadoConstantesFunciones.resaltarid_empresaEmpleado,this,this.empleadoConstantesFunciones.activarid_empresaEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.empleadoConstantesFunciones.resaltarid_empresaEmpleado,this,this.empleadoConstantesFunciones.activarid_empresaEmpleado,false,"id_empresaEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.empleadoConstantesFunciones.mostrarid_sucursalEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.empleadoConstantesFunciones.resaltarid_sucursalEmpleado,this,this.empleadoConstantesFunciones.activarid_sucursalEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.empleadoConstantesFunciones.resaltarid_sucursalEmpleado,this,this.empleadoConstantesFunciones.activarid_sucursalEmpleado,false,"id_sucursalEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDPAIS));

		if(this.empleadoConstantesFunciones.mostrarid_paisEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.empleadoConstantesFunciones.resaltarid_paisEmpleado,this,this.empleadoConstantesFunciones.activarid_paisEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.empleadoConstantesFunciones.resaltarid_paisEmpleado,this,this.empleadoConstantesFunciones.activarid_paisEmpleado,true,"id_paisEmpleado","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDPROVINCIA));

		if(this.empleadoConstantesFunciones.mostrarid_provinciaEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDPROVINCIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProvinciaTableCell(this.provinciasForeignKey,this.empleadoConstantesFunciones.resaltarid_provinciaEmpleado,this,this.empleadoConstantesFunciones.activarid_provinciaEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new ProvinciaTableCell(this.provinciasForeignKey,this.empleadoConstantesFunciones.resaltarid_provinciaEmpleado,this,this.empleadoConstantesFunciones.activarid_provinciaEmpleado,true,"id_provinciaEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCIUDAD));

		if(this.empleadoConstantesFunciones.mostrarid_ciudadEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.empleadoConstantesFunciones.resaltarid_ciudadEmpleado,this,this.empleadoConstantesFunciones.activarid_ciudadEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.empleadoConstantesFunciones.resaltarid_ciudadEmpleado,this,this.empleadoConstantesFunciones.activarid_ciudadEmpleado,true,"id_ciudadEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.empleadoConstantesFunciones.mostrarid_centro_costoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.empleadoConstantesFunciones.resaltarid_centro_costoEmpleado,this,this.empleadoConstantesFunciones.activarid_centro_costoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.empleadoConstantesFunciones.resaltarid_centro_costoEmpleado,this,this.empleadoConstantesFunciones.activarid_centro_costoEmpleado,true,"id_centro_costoEmpleado","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDRELIGION));

		if(this.empleadoConstantesFunciones.mostrarid_religionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDRELIGION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ReligionTableCell(this.religionsForeignKey,this.empleadoConstantesFunciones.resaltarid_religionEmpleado,this,this.empleadoConstantesFunciones.activarid_religionEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new ReligionTableCell(this.religionsForeignKey,this.empleadoConstantesFunciones.resaltarid_religionEmpleado,this,this.empleadoConstantesFunciones.activarid_religionEmpleado,true,"id_religionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL));

		if(this.empleadoConstantesFunciones.mostrarid_estado_civilEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.empleadoConstantesFunciones.resaltarid_estado_civilEmpleado,this,this.empleadoConstantesFunciones.activarid_estado_civilEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.empleadoConstantesFunciones.resaltarid_estado_civilEmpleado,this,this.empleadoConstantesFunciones.activarid_estado_civilEmpleado,true,"id_estado_civilEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO));

		if(this.empleadoConstantesFunciones.mostrarid_tipo_generoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_generoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_generoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_generoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_generoEmpleado,true,"id_tipo_generoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO));

		if(this.empleadoConstantesFunciones.mostrarid_tipo_empleadoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoEmpleadoTableCell(this.tipoempleadosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_empleadoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_empleadoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new TipoEmpleadoTableCell(this.tipoempleadosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_empleadoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_empleadoEmpleado,true,"id_tipo_empleadoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION));

		if(this.empleadoConstantesFunciones.mostrarid_tipo_instruccionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoInstruccionTableCell(this.tipoinstruccionsForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_instruccionEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_instruccionEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new TipoInstruccionTableCell(this.tipoinstruccionsForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_instruccionEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_instruccionEmpleado,true,"id_tipo_instruccionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDCARGO));

		if(this.empleadoConstantesFunciones.mostrarid_cargoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDCARGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CargoTableCell(this.cargosForeignKey,this.empleadoConstantesFunciones.resaltarid_cargoEmpleado,this,this.empleadoConstantesFunciones.activarid_cargoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new CargoTableCell(this.cargosForeignKey,this.empleadoConstantesFunciones.resaltarid_cargoEmpleado,this,this.empleadoConstantesFunciones.activarid_cargoEmpleado,true,"id_cargoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA));

		if(this.empleadoConstantesFunciones.mostrarid_estructuraEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstructuraTableCell(this.estructurasForeignKey,this.empleadoConstantesFunciones.resaltarid_estructuraEmpleado,this,this.empleadoConstantesFunciones.activarid_estructuraEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new EstructuraTableCell(this.estructurasForeignKey,this.empleadoConstantesFunciones.resaltarid_estructuraEmpleado,this,this.empleadoConstantesFunciones.activarid_estructuraEmpleado,true,"id_estructuraEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION));

		if(this.empleadoConstantesFunciones.mostrarid_estructura_seccionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstructuraTableCell(this.estructuraseccionsForeignKey,this.empleadoConstantesFunciones.resaltarid_estructura_seccionEmpleado,this,this.empleadoConstantesFunciones.activarid_estructura_seccionEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new EstructuraTableCell(this.estructuraseccionsForeignKey,this.empleadoConstantesFunciones.resaltarid_estructura_seccionEmpleado,this,this.empleadoConstantesFunciones.activarid_estructura_seccionEmpleado,true,"id_estructura_seccionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO));

		if(this.empleadoConstantesFunciones.mostrarid_estado_empleadoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoEmpleadoTableCell(this.estadoempleadosForeignKey,this.empleadoConstantesFunciones.resaltarid_estado_empleadoEmpleado,this,this.empleadoConstantesFunciones.activarid_estado_empleadoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new EstadoEmpleadoTableCell(this.estadoempleadosForeignKey,this.empleadoConstantesFunciones.resaltarid_estado_empleadoEmpleado,this,this.empleadoConstantesFunciones.activarid_estado_empleadoEmpleado,true,"id_estado_empleadoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO));

		if(this.empleadoConstantesFunciones.mostrarid_tipo_contratoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoContratoTableCell(this.tipocontratosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_contratoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_contratoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new TipoContratoTableCell(this.tipocontratosForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_contratoEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_contratoEmpleado,true,"id_tipo_contratoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_CODIGO));

		if(this.empleadoConstantesFunciones.mostrarcodigoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarcodigoEmpleado,this.empleadoConstantesFunciones.activarcodigoEmpleado,iSizeTabla,this,true,"codigoEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarcodigoEmpleado,this.empleadoConstantesFunciones.activarcodigoEmpleado,this,true,"codigoEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_NOMBRE));

		if(this.empleadoConstantesFunciones.mostrarnombreEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarnombreEmpleado,this.empleadoConstantesFunciones.activarnombreEmpleado,iSizeTabla,this,true,"nombreEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarnombreEmpleado,this.empleadoConstantesFunciones.activarnombreEmpleado,this,true,"nombreEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_APELLIDO));

		if(this.empleadoConstantesFunciones.mostrarapellidoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_APELLIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarapellidoEmpleado,this.empleadoConstantesFunciones.activarapellidoEmpleado,iSizeTabla,this,true,"apellidoEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarapellidoEmpleado,this.empleadoConstantesFunciones.activarapellidoEmpleado,this,true,"apellidoEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO));

		if(this.empleadoConstantesFunciones.mostrarnombre_completoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarnombre_completoEmpleado,this.empleadoConstantesFunciones.activarnombre_completoEmpleado,iSizeTabla,this,true,"nombre_completoEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarnombre_completoEmpleado,this.empleadoConstantesFunciones.activarnombre_completoEmpleado,this,true,"nombre_completoEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_MAIL));

		if(this.empleadoConstantesFunciones.mostrarmailEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_MAIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarmailEmpleado,this.empleadoConstantesFunciones.activarmailEmpleado,iSizeTabla,this,true,"mailEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarmailEmpleado,this.empleadoConstantesFunciones.activarmailEmpleado,this,true,"mailEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_DIRECCION));

		if(this.empleadoConstantesFunciones.mostrardireccionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltardireccionEmpleado,this.empleadoConstantesFunciones.activardireccionEmpleado,iSizeTabla,this,true,"direccionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltardireccionEmpleado,this.empleadoConstantesFunciones.activardireccionEmpleado,this,true,"direccionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_SUELDO));

		if(this.empleadoConstantesFunciones.mostrarsueldoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_SUELDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.empleadoConstantesFunciones.resaltarsueldoEmpleado,this.empleadoConstantesFunciones.activarsueldoEmpleado,iSizeTabla,this,true,"sueldoEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarsueldoEmpleado,this.empleadoConstantesFunciones.activarsueldoEmpleado,this,true,"sueldoEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_TELEFONO));

		if(this.empleadoConstantesFunciones.mostrartelefonoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltartelefonoEmpleado,this.empleadoConstantesFunciones.activartelefonoEmpleado,iSizeTabla,this,true,"telefonoEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltartelefonoEmpleado,this.empleadoConstantesFunciones.activartelefonoEmpleado,this,true,"telefonoEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL));

		if(this.empleadoConstantesFunciones.mostrarid_tipo_cuenta_banco_globalEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCuentaBancoGlobalTableCell(this.tipocuentabancoglobalsForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_cuenta_banco_globalEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_cuenta_banco_globalEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new TipoCuentaBancoGlobalTableCell(this.tipocuentabancoglobalsForeignKey,this.empleadoConstantesFunciones.resaltarid_tipo_cuenta_banco_globalEmpleado,this,this.empleadoConstantesFunciones.activarid_tipo_cuenta_banco_globalEmpleado,true,"id_tipo_cuenta_banco_globalEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA));

		if(this.empleadoConstantesFunciones.mostrarnumero_cuentaEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.empleadoConstantesFunciones.resaltarnumero_cuentaEmpleado,this.empleadoConstantesFunciones.activarnumero_cuentaEmpleado,iSizeTabla,this,true,"numero_cuentaEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.empleadoConstantesFunciones.resaltarnumero_cuentaEmpleado,this.empleadoConstantesFunciones.activarnumero_cuentaEmpleado,this,true,"numero_cuentaEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_TIENECASA));

		if(this.empleadoConstantesFunciones.mostrartiene_casaEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_TIENECASA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.empleadoConstantesFunciones.resaltartiene_casaEmpleado,this.empleadoConstantesFunciones.activartiene_casaEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.empleadoConstantesFunciones.resaltartiene_casaEmpleado,this.empleadoConstantesFunciones.activartiene_casaEmpleado,this,true,"tiene_casaEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO));

		if(this.empleadoConstantesFunciones.mostrartiene_vehiculoEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.empleadoConstantesFunciones.resaltartiene_vehiculoEmpleado,this.empleadoConstantesFunciones.activartiene_vehiculoEmpleado,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.empleadoConstantesFunciones.resaltartiene_vehiculoEmpleado,this.empleadoConstantesFunciones.activartiene_vehiculoEmpleado,this,true,"tiene_vehiculoEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.empleadoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosCargaFamiliar_NM && this.empleadoConstantesFunciones.mostrarCargaFamiliar_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Carga Familiar_ N Mes");
				tableColumn.setHeaderValue("Carga Familiar_ N Mes");
				tableColumn.setCellRenderer(new CargaFamiliar_NMTableCell(empleadoConstantesFunciones.resaltarCargaFamiliar_NMEmpleado,this,this.empleadoConstantesFunciones.activarCargaFamiliar_NMEmpleado));
				tableColumn.setCellEditor(new CargaFamiliar_NMTableCell(empleadoConstantesFunciones.resaltarCargaFamiliar_NMEmpleado,this,this.empleadoConstantesFunciones.activarCargaFamiliar_NMEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosCurso && this.empleadoConstantesFunciones.mostrarCursoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cursos");
				tableColumn.setHeaderValue("Cursos");
				tableColumn.setCellRenderer(new CursoTableCell(empleadoConstantesFunciones.resaltarCursoEmpleado,this,this.empleadoConstantesFunciones.activarCursoEmpleado));
				tableColumn.setCellEditor(new CursoTableCell(empleadoConstantesFunciones.resaltarCursoEmpleado,this,this.empleadoConstantesFunciones.activarCursoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosPrestamo && this.empleadoConstantesFunciones.mostrarPrestamoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Prestamos");
				tableColumn.setHeaderValue("Prestamos");
				tableColumn.setCellRenderer(new PrestamoTableCell(empleadoConstantesFunciones.resaltarPrestamoEmpleado,this,this.empleadoConstantesFunciones.activarPrestamoEmpleado));
				tableColumn.setCellEditor(new PrestamoTableCell(empleadoConstantesFunciones.resaltarPrestamoEmpleado,this,this.empleadoConstantesFunciones.activarPrestamoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoIdioma && this.empleadoConstantesFunciones.mostrarEmpleadoIdiomaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Idiomas");
				tableColumn.setHeaderValue("Empleado Idiomas");
				tableColumn.setCellRenderer(new EmpleadoIdiomaTableCell(empleadoConstantesFunciones.resaltarEmpleadoIdiomaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoIdiomaEmpleado));
				tableColumn.setCellEditor(new EmpleadoIdiomaTableCell(empleadoConstantesFunciones.resaltarEmpleadoIdiomaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoIdiomaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosHistorialPagoMesNomi && this.empleadoConstantesFunciones.mostrarHistorialPagoMesNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Historial Pago Mes Nomis");
				tableColumn.setHeaderValue("Historial Pago Mes Nomis");
				tableColumn.setCellRenderer(new HistorialPagoMesNomiTableCell(empleadoConstantesFunciones.resaltarHistorialPagoMesNomiEmpleado,this,this.empleadoConstantesFunciones.activarHistorialPagoMesNomiEmpleado));
				tableColumn.setCellEditor(new HistorialPagoMesNomiTableCell(empleadoConstantesFunciones.resaltarHistorialPagoMesNomiEmpleado,this,this.empleadoConstantesFunciones.activarHistorialPagoMesNomiEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoImpuestoRenta && this.empleadoConstantesFunciones.mostrarEmpleadoImpuestoRentaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Impuesto Rentas");
				tableColumn.setHeaderValue("Empleado Impuesto Rentas");
				tableColumn.setCellRenderer(new EmpleadoImpuestoRentaTableCell(empleadoConstantesFunciones.resaltarEmpleadoImpuestoRentaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoImpuestoRentaEmpleado));
				tableColumn.setCellEditor(new EmpleadoImpuestoRentaTableCell(empleadoConstantesFunciones.resaltarEmpleadoImpuestoRentaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoImpuestoRentaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosDatoGeneralEmpleado && this.empleadoConstantesFunciones.mostrarDatoGeneralEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Dato General Empleados");
				tableColumn.setHeaderValue("Dato General Empleados");
				tableColumn.setCellRenderer(new DatoGeneralEmpleadoTableCell(empleadoConstantesFunciones.resaltarDatoGeneralEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarDatoGeneralEmpleadoEmpleado));
				tableColumn.setCellEditor(new DatoGeneralEmpleadoTableCell(empleadoConstantesFunciones.resaltarDatoGeneralEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarDatoGeneralEmpleadoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosArea && this.empleadoConstantesFunciones.mostrarAreaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Areas");
				tableColumn.setHeaderValue("Areas");
				tableColumn.setCellRenderer(new AreaTableCell(empleadoConstantesFunciones.resaltarAreaEmpleado,this,this.empleadoConstantesFunciones.activarAreaEmpleado));
				tableColumn.setCellEditor(new AreaTableCell(empleadoConstantesFunciones.resaltarAreaEmpleado,this,this.empleadoConstantesFunciones.activarAreaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosGastoEmpleado && this.empleadoConstantesFunciones.mostrarGastoEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Gasto Empleados");
				tableColumn.setHeaderValue("Gasto Empleados");
				tableColumn.setCellRenderer(new GastoEmpleadoTableCell(empleadoConstantesFunciones.resaltarGastoEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarGastoEmpleadoEmpleado));
				tableColumn.setCellEditor(new GastoEmpleadoTableCell(empleadoConstantesFunciones.resaltarGastoEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarGastoEmpleadoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoHobby && this.empleadoConstantesFunciones.mostrarEmpleadoHobbyEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Hobbyes");
				tableColumn.setHeaderValue("Empleado Hobbyes");
				tableColumn.setCellRenderer(new EmpleadoHobbyTableCell(empleadoConstantesFunciones.resaltarEmpleadoHobbyEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoHobbyEmpleado));
				tableColumn.setCellEditor(new EmpleadoHobbyTableCell(empleadoConstantesFunciones.resaltarEmpleadoHobbyEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoHobbyEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoEMail && this.empleadoConstantesFunciones.mostrarEmpleadoEMailEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Emails");
				tableColumn.setHeaderValue("Empleado Emails");
				tableColumn.setCellRenderer(new EmpleadoEMailTableCell(empleadoConstantesFunciones.resaltarEmpleadoEMailEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoEMailEmpleado));
				tableColumn.setCellEditor(new EmpleadoEMailTableCell(empleadoConstantesFunciones.resaltarEmpleadoEMailEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoEMailEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosRasgoPersonal && this.empleadoConstantesFunciones.mostrarRasgoPersonalEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rasgo Personales");
				tableColumn.setHeaderValue("Rasgo Personales");
				tableColumn.setCellRenderer(new RasgoPersonalTableCell(empleadoConstantesFunciones.resaltarRasgoPersonalEmpleado,this,this.empleadoConstantesFunciones.activarRasgoPersonalEmpleado));
				tableColumn.setCellEditor(new RasgoPersonalTableCell(empleadoConstantesFunciones.resaltarRasgoPersonalEmpleado,this,this.empleadoConstantesFunciones.activarRasgoPersonalEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosReferencia && this.empleadoConstantesFunciones.mostrarReferenciaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Referencias");
				tableColumn.setHeaderValue("Referencias");
				tableColumn.setCellRenderer(new ReferenciaTableCell(empleadoConstantesFunciones.resaltarReferenciaEmpleado,this,this.empleadoConstantesFunciones.activarReferenciaEmpleado));
				tableColumn.setCellEditor(new ReferenciaTableCell(empleadoConstantesFunciones.resaltarReferenciaEmpleado,this,this.empleadoConstantesFunciones.activarReferenciaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosTelefono_NM && this.empleadoConstantesFunciones.mostrarTelefono_NMEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Telefono_ N Mes");
				tableColumn.setHeaderValue("Telefono_ N Mes");
				tableColumn.setCellRenderer(new Telefono_NMTableCell(empleadoConstantesFunciones.resaltarTelefono_NMEmpleado,this,this.empleadoConstantesFunciones.activarTelefono_NMEmpleado));
				tableColumn.setCellEditor(new Telefono_NMTableCell(empleadoConstantesFunciones.resaltarTelefono_NMEmpleado,this,this.empleadoConstantesFunciones.activarTelefono_NMEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosNovedad && this.empleadoConstantesFunciones.mostrarNovedadEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Novedades");
				tableColumn.setHeaderValue("Novedades");
				tableColumn.setCellRenderer(new NovedadTableCell(empleadoConstantesFunciones.resaltarNovedadEmpleado,this,this.empleadoConstantesFunciones.activarNovedadEmpleado));
				tableColumn.setCellEditor(new NovedadTableCell(empleadoConstantesFunciones.resaltarNovedadEmpleado,this,this.empleadoConstantesFunciones.activarNovedadEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoHerra && this.empleadoConstantesFunciones.mostrarEmpleadoHerraEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Herras");
				tableColumn.setHeaderValue("Empleado Herras");
				tableColumn.setCellRenderer(new EmpleadoHerraTableCell(empleadoConstantesFunciones.resaltarEmpleadoHerraEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoHerraEmpleado));
				tableColumn.setCellEditor(new EmpleadoHerraTableCell(empleadoConstantesFunciones.resaltarEmpleadoHerraEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoHerraEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoEnfer && this.empleadoConstantesFunciones.mostrarEmpleadoEnferEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Enferes");
				tableColumn.setHeaderValue("Empleado Enferes");
				tableColumn.setCellRenderer(new EmpleadoEnferTableCell(empleadoConstantesFunciones.resaltarEmpleadoEnferEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoEnferEmpleado));
				tableColumn.setCellEditor(new EmpleadoEnferTableCell(empleadoConstantesFunciones.resaltarEmpleadoEnferEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoEnferEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosVisa && this.empleadoConstantesFunciones.mostrarVisaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Visas");
				tableColumn.setHeaderValue("Visas");
				tableColumn.setCellRenderer(new VisaTableCell(empleadoConstantesFunciones.resaltarVisaEmpleado,this,this.empleadoConstantesFunciones.activarVisaEmpleado));
				tableColumn.setCellEditor(new VisaTableCell(empleadoConstantesFunciones.resaltarVisaEmpleado,this,this.empleadoConstantesFunciones.activarVisaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosSeguro && this.empleadoConstantesFunciones.mostrarSeguroEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Seguros");
				tableColumn.setHeaderValue("Seguros");
				tableColumn.setCellRenderer(new SeguroTableCell(empleadoConstantesFunciones.resaltarSeguroEmpleado,this,this.empleadoConstantesFunciones.activarSeguroEmpleado));
				tableColumn.setCellEditor(new SeguroTableCell(empleadoConstantesFunciones.resaltarSeguroEmpleado,this,this.empleadoConstantesFunciones.activarSeguroEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosAsistenciaMensual && this.empleadoConstantesFunciones.mostrarAsistenciaMensualEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Asistencia Mensuales");
				tableColumn.setHeaderValue("Asistencia Mensuales");
				tableColumn.setCellRenderer(new AsistenciaMensualTableCell(empleadoConstantesFunciones.resaltarAsistenciaMensualEmpleado,this,this.empleadoConstantesFunciones.activarAsistenciaMensualEmpleado));
				tableColumn.setCellEditor(new AsistenciaMensualTableCell(empleadoConstantesFunciones.resaltarAsistenciaMensualEmpleado,this,this.empleadoConstantesFunciones.activarAsistenciaMensualEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoDisca && this.empleadoConstantesFunciones.mostrarEmpleadoDiscaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Discas");
				tableColumn.setHeaderValue("Empleado Discas");
				tableColumn.setCellRenderer(new EmpleadoDiscaTableCell(empleadoConstantesFunciones.resaltarEmpleadoDiscaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoDiscaEmpleado));
				tableColumn.setCellEditor(new EmpleadoDiscaTableCell(empleadoConstantesFunciones.resaltarEmpleadoDiscaEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoDiscaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosProfesionEmplea && this.empleadoConstantesFunciones.mostrarProfesionEmpleaEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Profesion Empleas");
				tableColumn.setHeaderValue("Profesion Empleas");
				tableColumn.setCellRenderer(new ProfesionEmpleaTableCell(empleadoConstantesFunciones.resaltarProfesionEmpleaEmpleado,this,this.empleadoConstantesFunciones.activarProfesionEmpleaEmpleado));
				tableColumn.setCellEditor(new ProfesionEmpleaTableCell(empleadoConstantesFunciones.resaltarProfesionEmpleaEmpleado,this,this.empleadoConstantesFunciones.activarProfesionEmpleaEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEmpleado && this.empleadoConstantesFunciones.mostrarRubroEmpleadoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Empleados");
				tableColumn.setHeaderValue("Rubro Empleados");
				tableColumn.setCellRenderer(new RubroEmpleadoTableCell(empleadoConstantesFunciones.resaltarRubroEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarRubroEmpleadoEmpleado));
				tableColumn.setCellEditor(new RubroEmpleadoTableCell(empleadoConstantesFunciones.resaltarRubroEmpleadoEmpleado,this,this.empleadoConstantesFunciones.activarRubroEmpleadoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoConstante && this.empleadoConstantesFunciones.mostrarEmpleadoConstanteEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Constantes");
				tableColumn.setHeaderValue("Empleado Constantes");
				tableColumn.setCellRenderer(new EmpleadoConstanteTableCell(empleadoConstantesFunciones.resaltarEmpleadoConstanteEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoConstanteEmpleado));
				tableColumn.setCellEditor(new EmpleadoConstanteTableCell(empleadoConstantesFunciones.resaltarEmpleadoConstanteEmpleado,this,this.empleadoConstantesFunciones.activarEmpleadoConstanteEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosTallaVestido && this.empleadoConstantesFunciones.mostrarTallaVestidoEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Talla Vestidos");
				tableColumn.setHeaderValue("Talla Vestidos");
				tableColumn.setCellRenderer(new TallaVestidoTableCell(empleadoConstantesFunciones.resaltarTallaVestidoEmpleado,this,this.empleadoConstantesFunciones.activarTallaVestidoEmpleado));
				tableColumn.setCellEditor(new TallaVestidoTableCell(empleadoConstantesFunciones.resaltarTallaVestidoEmpleado,this,this.empleadoConstantesFunciones.activarTallaVestidoEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}

			if(this.isTienePermisosNovedadNomi && this.empleadoConstantesFunciones.mostrarNovedadNomiEmpleado && !EmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Novedad Nomis");
				tableColumn.setHeaderValue("Novedad Nomis");
				tableColumn.setCellRenderer(new NovedadNomiTableCell(empleadoConstantesFunciones.resaltarNovedadNomiEmpleado,this,this.empleadoConstantesFunciones.activarNovedadNomiEmpleado));
				tableColumn.setCellEditor(new NovedadNomiTableCell(empleadoConstantesFunciones.resaltarNovedadNomiEmpleado,this,this.empleadoConstantesFunciones.activarNovedadNomiEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEmpleado.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEmpleado.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEmpleado.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarEmpleado && this.isPermisoGuardarCambiosEmpleado) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.empleadoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosEmpleado.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.empleadoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosEmpleado.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosEmpleado.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEmpleado && this.isPermisoGuardarCambiosEmpleado) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.empleadoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEmpleado && this.isPermisoGuardarCambiosEmpleado) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosEmpleado.moveColumn(this.jTableDatosEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosEmpleado.moveColumn(this.jTableDatosEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.empleadoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosEmpleado.moveColumn(this.jTableDatosEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosEmpleado.moveColumn(this.jTableDatosEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosEmpleado.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosEmpleado.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosEmpleado,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosEmpleado.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosEmpleado.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosEmpleado.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosEmpleado.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosEmpleado.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=empleadoLogic.getEmpleados().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=empleados.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosEmpleado.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosEmpleado();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoEmpleado=false;
					
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEmpleado.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.empleado.getsType().equals("DUPLICADO")
				   || this.empleado.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoEmpleado=true;
				
				} else {
					this.isEsNuevoEmpleado=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.empleadoSessionBean.getEsGuardarRelacionado()) {
					if(this.empleado.getId()>=0 && !this.empleado.getIsNew()) {						
						this.isEsNuevoEmpleado=false;
						
					} else {
						this.isEsNuevoEmpleado=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoEmpleado(esRelaciones);						
				
				this.seleccionarEmpleado(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.empleado.getId()<0) {
					this.isEsNuevoEmpleado=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarEmpleado(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarEmpleado(evt,rowIndex);
				}	
				
				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Empleado: " + this.dDif); 
					}
				}								
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarEmpleado(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.empleado)) {
					if(this.empleado.getId()>0) {
						this.empleado.setIsDeleted(true);
						
						this.empleadosEliminados.add(this.empleado);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.empleadoLogic.getEmpleados().remove(this.empleado);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.empleados.remove(this.empleado);				
					}
					
					
					((EmpleadoModel) this.jTableDatosEmpleado.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaEmpleado(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarEmpleado(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoEmpleado) {
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEmpleado.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEmpleado.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioEmpleado(this.empleado);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.empleadoConstantesFunciones.cargarid_empresaEmpleado || this.empleadoConstantesFunciones.event_dependid_empresaEmpleado) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.empleado.getid_empresa());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(empleado.getEmpresa()!=null) {
							this.empresasForeignKey.add(empleado.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.empleado.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.empleadoConstantesFunciones.cargarid_sucursalEmpleado || this.empleadoConstantesFunciones.event_dependid_sucursalEmpleado) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.empleado.getid_sucursal());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(empleado.getSucursal()!=null) {
							this.sucursalsForeignKey.add(empleado.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.empleado.getid_sucursal(),false,"Formulario");

					//Pais
					if(!this.empleadoConstantesFunciones.cargarid_paisEmpleado || this.empleadoConstantesFunciones.event_dependid_paisEmpleado) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.empleado.getid_pais());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(empleado.getPais()!=null) {
							this.paissForeignKey.add(empleado.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.empleado.getid_pais(),false,"Formulario");

					//Provincia
					if(!this.empleadoConstantesFunciones.cargarid_provinciaEmpleado || this.empleadoConstantesFunciones.event_dependid_provinciaEmpleado) {
						//this.cargarCombosProvinciasForeignKeyLista(" where id="+this.empleado.getid_provincia());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.provinciasForeignKey=new ArrayList<Provincia>();

						if(empleado.getProvincia()!=null) {
							this.provinciasForeignKey.add(empleado.getProvincia());
						}

						this.addItemDefectoCombosForeignKeyProvincia();
						this.cargarCombosFrameProvinciasForeignKey("Todos");
					}
					this.setActualProvinciaForeignKey(this.empleado.getid_provincia(),false,"Formulario");

					//Ciudad
					if(!this.empleadoConstantesFunciones.cargarid_ciudadEmpleado || this.empleadoConstantesFunciones.event_dependid_ciudadEmpleado) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.empleado.getid_ciudad());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(empleado.getCiudad()!=null) {
							this.ciudadsForeignKey.add(empleado.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.empleado.getid_ciudad(),false,"Formulario");

					//CentroCosto
					if(!this.empleadoConstantesFunciones.cargarid_centro_costoEmpleado || this.empleadoConstantesFunciones.event_dependid_centro_costoEmpleado) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.empleado.getid_centro_costo());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(empleado.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(empleado.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.empleado.getid_centro_costo(),false,"Formulario");

					//Religion
					if(!this.empleadoConstantesFunciones.cargarid_religionEmpleado || this.empleadoConstantesFunciones.event_dependid_religionEmpleado) {
						//this.cargarCombosReligionsForeignKeyLista(" where id="+this.empleado.getid_religion());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.religionsForeignKey=new ArrayList<Religion>();

						if(empleado.getReligion()!=null) {
							this.religionsForeignKey.add(empleado.getReligion());
						}

						this.addItemDefectoCombosForeignKeyReligion();
						this.cargarCombosFrameReligionsForeignKey("Todos");
					}
					this.setActualReligionForeignKey(this.empleado.getid_religion(),false,"Formulario");

					//EstadoCivil
					if(!this.empleadoConstantesFunciones.cargarid_estado_civilEmpleado || this.empleadoConstantesFunciones.event_dependid_estado_civilEmpleado) {
						//this.cargarCombosEstadoCivilsForeignKeyLista(" where id="+this.empleado.getid_estado_civil());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

						if(empleado.getEstadoCivil()!=null) {
							this.estadocivilsForeignKey.add(empleado.getEstadoCivil());
						}

						this.addItemDefectoCombosForeignKeyEstadoCivil();
						this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
					}
					this.setActualEstadoCivilForeignKey(this.empleado.getid_estado_civil(),false,"Formulario");

					//TipoGenero
					if(!this.empleadoConstantesFunciones.cargarid_tipo_generoEmpleado || this.empleadoConstantesFunciones.event_dependid_tipo_generoEmpleado) {
						//this.cargarCombosTipoGenerosForeignKeyLista(" where id="+this.empleado.getid_tipo_genero());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

						if(empleado.getTipoGenero()!=null) {
							this.tipogenerosForeignKey.add(empleado.getTipoGenero());
						}

						this.addItemDefectoCombosForeignKeyTipoGenero();
						this.cargarCombosFrameTipoGenerosForeignKey("Todos");
					}
					this.setActualTipoGeneroForeignKey(this.empleado.getid_tipo_genero(),false,"Formulario");

					//TipoEmpleado
					if(!this.empleadoConstantesFunciones.cargarid_tipo_empleadoEmpleado || this.empleadoConstantesFunciones.event_dependid_tipo_empleadoEmpleado) {
						//this.cargarCombosTipoEmpleadosForeignKeyLista(" where id="+this.empleado.getid_tipo_empleado());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.tipoempleadosForeignKey=new ArrayList<TipoEmpleado>();

						if(empleado.getTipoEmpleado()!=null) {
							this.tipoempleadosForeignKey.add(empleado.getTipoEmpleado());
						}

						this.addItemDefectoCombosForeignKeyTipoEmpleado();
						this.cargarCombosFrameTipoEmpleadosForeignKey("Todos");
					}
					this.setActualTipoEmpleadoForeignKey(this.empleado.getid_tipo_empleado(),false,"Formulario");

					//TipoInstruccion
					if(!this.empleadoConstantesFunciones.cargarid_tipo_instruccionEmpleado || this.empleadoConstantesFunciones.event_dependid_tipo_instruccionEmpleado) {
						//this.cargarCombosTipoInstruccionsForeignKeyLista(" where id="+this.empleado.getid_tipo_instruccion());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.tipoinstruccionsForeignKey=new ArrayList<TipoInstruccion>();

						if(empleado.getTipoInstruccion()!=null) {
							this.tipoinstruccionsForeignKey.add(empleado.getTipoInstruccion());
						}

						this.addItemDefectoCombosForeignKeyTipoInstruccion();
						this.cargarCombosFrameTipoInstruccionsForeignKey("Todos");
					}
					this.setActualTipoInstruccionForeignKey(this.empleado.getid_tipo_instruccion(),false,"Formulario");

					//Cargo
					if(!this.empleadoConstantesFunciones.cargarid_cargoEmpleado || this.empleadoConstantesFunciones.event_dependid_cargoEmpleado) {
						//this.cargarCombosCargosForeignKeyLista(" where id="+this.empleado.getid_cargo());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.cargosForeignKey=new ArrayList<Cargo>();

						if(empleado.getCargo()!=null) {
							this.cargosForeignKey.add(empleado.getCargo());
						}

						this.addItemDefectoCombosForeignKeyCargo();
						this.cargarCombosFrameCargosForeignKey("Todos");
					}
					this.setActualCargoForeignKey(this.empleado.getid_cargo(),false,"Formulario");

					//Estructura
					if(!this.empleadoConstantesFunciones.cargarid_estructuraEmpleado || this.empleadoConstantesFunciones.event_dependid_estructuraEmpleado) {
						//this.cargarCombosEstructurasForeignKeyLista(" where id="+this.empleado.getid_estructura());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.estructurasForeignKey=new ArrayList<Estructura>();

						if(empleado.getEstructura()!=null) {
							this.estructurasForeignKey.add(empleado.getEstructura());
						}

						this.addItemDefectoCombosForeignKeyEstructura();
						this.cargarCombosFrameEstructurasForeignKey("Todos");
					}
					this.setActualEstructuraForeignKey(this.empleado.getid_estructura(),false,"Formulario");

					//EstructuraSeccion
					if(!this.empleadoConstantesFunciones.cargarid_estructura_seccionEmpleado || this.empleadoConstantesFunciones.event_dependid_estructura_seccionEmpleado) {
						//this.cargarCombosEstructuraSeccionsForeignKeyLista(" where id="+this.empleado.getid_estructura_seccion());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.estructuraseccionsForeignKey=new ArrayList<Estructura>();

						if(empleado.getEstructuraSeccion()!=null) {
							this.estructuraseccionsForeignKey.add(empleado.getEstructuraSeccion());
						}

						this.addItemDefectoCombosForeignKeyEstructuraSeccion();
						this.cargarCombosFrameEstructuraSeccionsForeignKey("Todos");
					}
					this.setActualEstructuraSeccionForeignKey(this.empleado.getid_estructura_seccion(),false,"Formulario");

					//EstadoEmpleado
					if(!this.empleadoConstantesFunciones.cargarid_estado_empleadoEmpleado || this.empleadoConstantesFunciones.event_dependid_estado_empleadoEmpleado) {
						//this.cargarCombosEstadoEmpleadosForeignKeyLista(" where id="+this.empleado.getid_estado_empleado());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.estadoempleadosForeignKey=new ArrayList<EstadoEmpleado>();

						if(empleado.getEstadoEmpleado()!=null) {
							this.estadoempleadosForeignKey.add(empleado.getEstadoEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEstadoEmpleado();
						this.cargarCombosFrameEstadoEmpleadosForeignKey("Todos");
					}
					this.setActualEstadoEmpleadoForeignKey(this.empleado.getid_estado_empleado(),false,"Formulario");

					//TipoContrato
					if(!this.empleadoConstantesFunciones.cargarid_tipo_contratoEmpleado || this.empleadoConstantesFunciones.event_dependid_tipo_contratoEmpleado) {
						//this.cargarCombosTipoContratosForeignKeyLista(" where id="+this.empleado.getid_tipo_contrato());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.tipocontratosForeignKey=new ArrayList<TipoContrato>();

						if(empleado.getTipoContrato()!=null) {
							this.tipocontratosForeignKey.add(empleado.getTipoContrato());
						}

						this.addItemDefectoCombosForeignKeyTipoContrato();
						this.cargarCombosFrameTipoContratosForeignKey("Todos");
					}
					this.setActualTipoContratoForeignKey(this.empleado.getid_tipo_contrato(),false,"Formulario");

					//TipoCuentaBancoGlobal
					if(!this.empleadoConstantesFunciones.cargarid_tipo_cuenta_banco_globalEmpleado || this.empleadoConstantesFunciones.event_dependid_tipo_cuenta_banco_globalEmpleado) {
						//this.cargarCombosTipoCuentaBancoGlobalsForeignKeyLista(" where id="+this.empleado.getid_tipo_cuenta_banco_global());
									//this.inicializarActualizarBindingEmpleado(false,false);
						this.tipocuentabancoglobalsForeignKey=new ArrayList<TipoCuentaBancoGlobal>();

						if(empleado.getTipoCuentaBancoGlobal()!=null) {
							this.tipocuentabancoglobalsForeignKey.add(empleado.getTipoCuentaBancoGlobal());
						}

						this.addItemDefectoCombosForeignKeyTipoCuentaBancoGlobal();
						this.cargarCombosFrameTipoCuentaBancoGlobalsForeignKey("Todos");
					}
					this.setActualTipoCuentaBancoGlobalForeignKey(this.empleado.getid_tipo_cuenta_banco_global(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesEmpleado("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesEmpleado(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEmpleado() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoEmpleado(Empleado empleado) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoEmpleado(empleado,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoEmpleado(Empleado empleado,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioEmpleado(empleado);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyEmpleado(empleado,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyEmpleado(empleado);
	}
	
	public void setVariablesObjetoActualToFormularioEmpleado(Empleado empleado) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setText(empleado.getId().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setText(empleado.getcodigo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setText(empleado.getnombre());
			this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setText(empleado.getapellido());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setText(empleado.getnombre_completo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setText(empleado.getmail());
			this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setText(empleado.getdireccion());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setText(empleado.getsueldo().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setText(empleado.gettelefono());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setText(empleado.getnumero_cuenta());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setSelected(empleado.gettiene_casa());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setSelected(empleado.gettiene_vehiculo());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Empleado empleadoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,empleadoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Empleado empleadoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				empleadoLocal=this.empleado;
			} else {
				empleadoLocal=this.empleadoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(empleadoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoLocal,true);
					
					if(empleadoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(empleadoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(empleadoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoEmpleado(Empleado empleado,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEmpleado(empleado,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(empleado);
	}
	
	public void setVariablesFormularioToObjetoActualEmpleado(Empleado empleado,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEmpleado(empleado,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualEmpleado(Empleado empleado,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.getText()==null || this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.getText()=="" || this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.getText()=="Id") {
				this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setText("0");
			}

			if(conColumnasBase) {empleado.setId(Long.parseLong(this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelIdEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setcodigo(this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelcodigoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setnombre(this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnombreEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setapellido(this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_APELLIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelapellidoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setnombre_completo(this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnombre_completoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setmail(this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_MAIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelmailEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setdireccion(this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeldireccionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setsueldo(Double.parseDouble(this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_SUELDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelsueldoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.settelefono(this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltelefonoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.setnumero_cuenta(this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabelnumero_cuentaEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.settiene_casa(this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_TIENECASA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_casaEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			empleado.settiene_vehiculo(this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEmpleado.jLabeltiene_vehiculoEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEmpleado(Empleado empleadoBean,Empleado empleado,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && empleadoBean.getid_pais()!=null && !empleadoBean.getid_pais().equals(-1L))) {empleado.setid_pais(empleadoBean.getid_pais());}
			if(conDefault || (!conDefault && empleadoBean.getid_provincia()!=null && !empleadoBean.getid_provincia().equals(-1L))) {empleado.setid_provincia(empleadoBean.getid_provincia());}
			if(conDefault || (!conDefault && empleadoBean.getid_ciudad()!=null && !empleadoBean.getid_ciudad().equals(-1L))) {empleado.setid_ciudad(empleadoBean.getid_ciudad());}
			if(conDefault || (!conDefault && empleadoBean.getid_centro_costo()!=null && !empleadoBean.getid_centro_costo().equals(null))) {empleado.setid_centro_costo(empleadoBean.getid_centro_costo());}
			if(conDefault || (!conDefault && empleadoBean.getid_religion()!=null && !empleadoBean.getid_religion().equals(-1L))) {empleado.setid_religion(empleadoBean.getid_religion());}
			if(conDefault || (!conDefault && empleadoBean.getid_estado_civil()!=null && !empleadoBean.getid_estado_civil().equals(-1L))) {empleado.setid_estado_civil(empleadoBean.getid_estado_civil());}
			if(conDefault || (!conDefault && empleadoBean.getid_tipo_genero()!=null && !empleadoBean.getid_tipo_genero().equals(-1L))) {empleado.setid_tipo_genero(empleadoBean.getid_tipo_genero());}
			if(conDefault || (!conDefault && empleadoBean.getid_tipo_empleado()!=null && !empleadoBean.getid_tipo_empleado().equals(-1L))) {empleado.setid_tipo_empleado(empleadoBean.getid_tipo_empleado());}
			if(conDefault || (!conDefault && empleadoBean.getid_tipo_instruccion()!=null && !empleadoBean.getid_tipo_instruccion().equals(-1L))) {empleado.setid_tipo_instruccion(empleadoBean.getid_tipo_instruccion());}
			if(conDefault || (!conDefault && empleadoBean.getid_cargo()!=null && !empleadoBean.getid_cargo().equals(-1L))) {empleado.setid_cargo(empleadoBean.getid_cargo());}
			if(conDefault || (!conDefault && empleadoBean.getid_estructura()!=null && !empleadoBean.getid_estructura().equals(-1L))) {empleado.setid_estructura(empleadoBean.getid_estructura());}
			if(conDefault || (!conDefault && empleadoBean.getid_estructura_seccion()!=null && !empleadoBean.getid_estructura_seccion().equals(-1L))) {empleado.setid_estructura_seccion(empleadoBean.getid_estructura_seccion());}
			if(conDefault || (!conDefault && empleadoBean.getid_estado_empleado()!=null && !empleadoBean.getid_estado_empleado().equals(-1L))) {empleado.setid_estado_empleado(empleadoBean.getid_estado_empleado());}
			if(conDefault || (!conDefault && empleadoBean.getid_tipo_contrato()!=null && !empleadoBean.getid_tipo_contrato().equals(-1L))) {empleado.setid_tipo_contrato(empleadoBean.getid_tipo_contrato());}
			if(conDefault || (!conDefault && empleadoBean.getid_tipo_cuenta_banco_global()!=null && !empleadoBean.getid_tipo_cuenta_banco_global().equals(-1L))) {empleado.setid_tipo_cuenta_banco_global(empleadoBean.getid_tipo_cuenta_banco_global());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosEmpleado(Empleado empleadoOrigen,Empleado empleado,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && empleadoOrigen.getId()!=null && !empleadoOrigen.getId().equals(0L))) {empleado.setId(empleadoOrigen.getId());}}
			if(conDefault || (!conDefault && empleadoOrigen.getid_pais()!=null && !empleadoOrigen.getid_pais().equals(-1L))) {empleado.setid_pais(empleadoOrigen.getid_pais());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_provincia()!=null && !empleadoOrigen.getid_provincia().equals(-1L))) {empleado.setid_provincia(empleadoOrigen.getid_provincia());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_ciudad()!=null && !empleadoOrigen.getid_ciudad().equals(-1L))) {empleado.setid_ciudad(empleadoOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_centro_costo()!=null && !empleadoOrigen.getid_centro_costo().equals(null))) {empleado.setid_centro_costo(empleadoOrigen.getid_centro_costo());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_religion()!=null && !empleadoOrigen.getid_religion().equals(-1L))) {empleado.setid_religion(empleadoOrigen.getid_religion());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_estado_civil()!=null && !empleadoOrigen.getid_estado_civil().equals(-1L))) {empleado.setid_estado_civil(empleadoOrigen.getid_estado_civil());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_tipo_genero()!=null && !empleadoOrigen.getid_tipo_genero().equals(-1L))) {empleado.setid_tipo_genero(empleadoOrigen.getid_tipo_genero());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_tipo_empleado()!=null && !empleadoOrigen.getid_tipo_empleado().equals(-1L))) {empleado.setid_tipo_empleado(empleadoOrigen.getid_tipo_empleado());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_tipo_instruccion()!=null && !empleadoOrigen.getid_tipo_instruccion().equals(-1L))) {empleado.setid_tipo_instruccion(empleadoOrigen.getid_tipo_instruccion());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_cargo()!=null && !empleadoOrigen.getid_cargo().equals(-1L))) {empleado.setid_cargo(empleadoOrigen.getid_cargo());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_estructura()!=null && !empleadoOrigen.getid_estructura().equals(-1L))) {empleado.setid_estructura(empleadoOrigen.getid_estructura());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_estructura_seccion()!=null && !empleadoOrigen.getid_estructura_seccion().equals(-1L))) {empleado.setid_estructura_seccion(empleadoOrigen.getid_estructura_seccion());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_estado_empleado()!=null && !empleadoOrigen.getid_estado_empleado().equals(-1L))) {empleado.setid_estado_empleado(empleadoOrigen.getid_estado_empleado());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_tipo_contrato()!=null && !empleadoOrigen.getid_tipo_contrato().equals(-1L))) {empleado.setid_tipo_contrato(empleadoOrigen.getid_tipo_contrato());}
			if(conDefault || (!conDefault && empleadoOrigen.getcodigo()!=null && !empleadoOrigen.getcodigo().equals(""))) {empleado.setcodigo(empleadoOrigen.getcodigo());}
			if(conDefault || (!conDefault && empleadoOrigen.getnombre()!=null && !empleadoOrigen.getnombre().equals(""))) {empleado.setnombre(empleadoOrigen.getnombre());}
			if(conDefault || (!conDefault && empleadoOrigen.getapellido()!=null && !empleadoOrigen.getapellido().equals(""))) {empleado.setapellido(empleadoOrigen.getapellido());}
			if(conDefault || (!conDefault && empleadoOrigen.getnombre_completo()!=null && !empleadoOrigen.getnombre_completo().equals(""))) {empleado.setnombre_completo(empleadoOrigen.getnombre_completo());}
			if(conDefault || (!conDefault && empleadoOrigen.getmail()!=null && !empleadoOrigen.getmail().equals(""))) {empleado.setmail(empleadoOrigen.getmail());}
			if(conDefault || (!conDefault && empleadoOrigen.getdireccion()!=null && !empleadoOrigen.getdireccion().equals(""))) {empleado.setdireccion(empleadoOrigen.getdireccion());}
			if(conDefault || (!conDefault && empleadoOrigen.getsueldo()!=null && !empleadoOrigen.getsueldo().equals(0.0))) {empleado.setsueldo(empleadoOrigen.getsueldo());}
			if(conDefault || (!conDefault && empleadoOrigen.gettelefono()!=null && !empleadoOrigen.gettelefono().equals(""))) {empleado.settelefono(empleadoOrigen.gettelefono());}
			if(conDefault || (!conDefault && empleadoOrigen.getid_tipo_cuenta_banco_global()!=null && !empleadoOrigen.getid_tipo_cuenta_banco_global().equals(-1L))) {empleado.setid_tipo_cuenta_banco_global(empleadoOrigen.getid_tipo_cuenta_banco_global());}
			if(conDefault || (!conDefault && empleadoOrigen.getnumero_cuenta()!=null && !empleadoOrigen.getnumero_cuenta().equals(""))) {empleado.setnumero_cuenta(empleadoOrigen.getnumero_cuenta());}
			if(conDefault || (!conDefault && empleadoOrigen.gettiene_casa()!=null && !empleadoOrigen.gettiene_casa().equals(false))) {empleado.settiene_casa(empleadoOrigen.gettiene_casa());}
			if(conDefault || (!conDefault && empleadoOrigen.gettiene_vehiculo()!=null && !empleadoOrigen.gettiene_vehiculo().equals(false))) {empleado.settiene_vehiculo(empleadoOrigen.gettiene_vehiculo());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEmpleado(Empleado empleado) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setText(empleado.getId().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setText(empleado.getcodigo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setText(empleado.getnombre());
			this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setText(empleado.getapellido());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setText(empleado.getnombre_completo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setText(empleado.getmail());
			this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setText(empleado.getdireccion());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setText(empleado.getsueldo().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setText(empleado.gettelefono());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setText(empleado.getnumero_cuenta());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setSelected(empleado.gettiene_casa());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setSelected(empleado.gettiene_vehiculo());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEmpleado(EmpleadoBean empleadoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setText(empleadoBean.getId().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setText(empleadoBean.getcodigo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setText(empleadoBean.getnombre());
			this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setText(empleadoBean.getapellido());
			this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setText(empleadoBean.getnombre_completo());
			this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setText(empleadoBean.getmail());
			this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setText(empleadoBean.getdireccion());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setText(empleadoBean.getsueldo().toString());
			this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setText(empleadoBean.gettelefono());
			this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setText(empleadoBean.getnumero_cuenta());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setSelected(empleadoBean.gettiene_casa());
			this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setSelected(empleadoBean.gettiene_vehiculo());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanEmpleado(EmpleadoParameterReturnGeneral empleadoReturnGeneral,EmpleadoBean empleadoBean,Boolean conDefault) throws Exception { 
		try {
			Empleado empleadoLocal=new Empleado();
			
			empleadoLocal=empleadoReturnGeneral.getEmpleado();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && empleadoLocal.getId()!=null && !empleadoLocal.getId().equals(0L))) {empleadoBean.setId(empleadoLocal.getId());}}
			if(conDefault || (!conDefault && empleadoLocal.getid_pais()!=null && !empleadoLocal.getid_pais().equals(-1L))) {empleadoBean.setid_pais(empleadoLocal.getid_pais());}
			if(conDefault || (!conDefault && empleadoLocal.getid_provincia()!=null && !empleadoLocal.getid_provincia().equals(-1L))) {empleadoBean.setid_provincia(empleadoLocal.getid_provincia());}
			if(conDefault || (!conDefault && empleadoLocal.getid_ciudad()!=null && !empleadoLocal.getid_ciudad().equals(-1L))) {empleadoBean.setid_ciudad(empleadoLocal.getid_ciudad());}
			if(conDefault || (!conDefault && empleadoLocal.getid_centro_costo()!=null && !empleadoLocal.getid_centro_costo().equals(null))) {empleadoBean.setid_centro_costo(empleadoLocal.getid_centro_costo());}
			if(conDefault || (!conDefault && empleadoLocal.getid_religion()!=null && !empleadoLocal.getid_religion().equals(-1L))) {empleadoBean.setid_religion(empleadoLocal.getid_religion());}
			if(conDefault || (!conDefault && empleadoLocal.getid_estado_civil()!=null && !empleadoLocal.getid_estado_civil().equals(-1L))) {empleadoBean.setid_estado_civil(empleadoLocal.getid_estado_civil());}
			if(conDefault || (!conDefault && empleadoLocal.getid_tipo_genero()!=null && !empleadoLocal.getid_tipo_genero().equals(-1L))) {empleadoBean.setid_tipo_genero(empleadoLocal.getid_tipo_genero());}
			if(conDefault || (!conDefault && empleadoLocal.getid_tipo_empleado()!=null && !empleadoLocal.getid_tipo_empleado().equals(-1L))) {empleadoBean.setid_tipo_empleado(empleadoLocal.getid_tipo_empleado());}
			if(conDefault || (!conDefault && empleadoLocal.getid_tipo_instruccion()!=null && !empleadoLocal.getid_tipo_instruccion().equals(-1L))) {empleadoBean.setid_tipo_instruccion(empleadoLocal.getid_tipo_instruccion());}
			if(conDefault || (!conDefault && empleadoLocal.getid_cargo()!=null && !empleadoLocal.getid_cargo().equals(-1L))) {empleadoBean.setid_cargo(empleadoLocal.getid_cargo());}
			if(conDefault || (!conDefault && empleadoLocal.getid_estructura()!=null && !empleadoLocal.getid_estructura().equals(-1L))) {empleadoBean.setid_estructura(empleadoLocal.getid_estructura());}
			if(conDefault || (!conDefault && empleadoLocal.getid_estructura_seccion()!=null && !empleadoLocal.getid_estructura_seccion().equals(-1L))) {empleadoBean.setid_estructura_seccion(empleadoLocal.getid_estructura_seccion());}
			if(conDefault || (!conDefault && empleadoLocal.getid_estado_empleado()!=null && !empleadoLocal.getid_estado_empleado().equals(-1L))) {empleadoBean.setid_estado_empleado(empleadoLocal.getid_estado_empleado());}
			if(conDefault || (!conDefault && empleadoLocal.getid_tipo_contrato()!=null && !empleadoLocal.getid_tipo_contrato().equals(-1L))) {empleadoBean.setid_tipo_contrato(empleadoLocal.getid_tipo_contrato());}
			if(conDefault || (!conDefault && empleadoLocal.getcodigo()!=null && !empleadoLocal.getcodigo().equals(""))) {empleadoBean.setcodigo(empleadoLocal.getcodigo());}
			if(conDefault || (!conDefault && empleadoLocal.getnombre()!=null && !empleadoLocal.getnombre().equals(""))) {empleadoBean.setnombre(empleadoLocal.getnombre());}
			if(conDefault || (!conDefault && empleadoLocal.getapellido()!=null && !empleadoLocal.getapellido().equals(""))) {empleadoBean.setapellido(empleadoLocal.getapellido());}
			if(conDefault || (!conDefault && empleadoLocal.getnombre_completo()!=null && !empleadoLocal.getnombre_completo().equals(""))) {empleadoBean.setnombre_completo(empleadoLocal.getnombre_completo());}
			if(conDefault || (!conDefault && empleadoLocal.getmail()!=null && !empleadoLocal.getmail().equals(""))) {empleadoBean.setmail(empleadoLocal.getmail());}
			if(conDefault || (!conDefault && empleadoLocal.getdireccion()!=null && !empleadoLocal.getdireccion().equals(""))) {empleadoBean.setdireccion(empleadoLocal.getdireccion());}
			if(conDefault || (!conDefault && empleadoLocal.getsueldo()!=null && !empleadoLocal.getsueldo().equals(0.0))) {empleadoBean.setsueldo(empleadoLocal.getsueldo());}
			if(conDefault || (!conDefault && empleadoLocal.gettelefono()!=null && !empleadoLocal.gettelefono().equals(""))) {empleadoBean.settelefono(empleadoLocal.gettelefono());}
			if(conDefault || (!conDefault && empleadoLocal.getid_tipo_cuenta_banco_global()!=null && !empleadoLocal.getid_tipo_cuenta_banco_global().equals(-1L))) {empleadoBean.setid_tipo_cuenta_banco_global(empleadoLocal.getid_tipo_cuenta_banco_global());}
			if(conDefault || (!conDefault && empleadoLocal.getnumero_cuenta()!=null && !empleadoLocal.getnumero_cuenta().equals(""))) {empleadoBean.setnumero_cuenta(empleadoLocal.getnumero_cuenta());}
			if(conDefault || (!conDefault && empleadoLocal.gettiene_casa()!=null && !empleadoLocal.gettiene_casa().equals(false))) {empleadoBean.settiene_casa(empleadoLocal.gettiene_casa());}
			if(conDefault || (!conDefault && empleadoLocal.gettiene_vehiculo()!=null && !empleadoLocal.gettiene_vehiculo().equals(false))) {empleadoBean.settiene_vehiculo(empleadoLocal.gettiene_vehiculo());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxEmpleadoGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxEmpleado,List<Empleado> empleadosLocal)throws Exception {
		try {
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosLocal) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			jComboBoxEmpleado.setSelectedItem(empleadoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxEmpleadoGenerico(JComboBox jComboBoxEmpleado,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEmpleado.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxEmpleado.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEmpleado.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxEmpleado.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("CargaFamiliar_NM")) {
			jButtonCargaFamiliar_NMActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Curso")) {
			jButtonCursoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Prestamo")) {
			jButtonPrestamoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoIdioma")) {
			jButtonEmpleadoIdiomaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("HistorialPagoMesNomi")) {
			jButtonHistorialPagoMesNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoImpuestoRenta")) {
			jButtonEmpleadoImpuestoRentaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DatoGeneralEmpleado")) {
			jButtonDatoGeneralEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Area")) {
			jButtonAreaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GastoEmpleado")) {
			jButtonGastoEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoHobby")) {
			jButtonEmpleadoHobbyActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoEMail")) {
			jButtonEmpleadoEMailActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RasgoPersonal")) {
			jButtonRasgoPersonalActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Referencia")) {
			jButtonReferenciaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Telefono_NM")) {
			jButtonTelefono_NMActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Novedad")) {
			jButtonNovedadActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoHerra")) {
			jButtonEmpleadoHerraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoEnfer")) {
			jButtonEmpleadoEnferActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Visa")) {
			jButtonVisaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Seguro")) {
			jButtonSeguroActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("AsistenciaMensual")) {
			jButtonAsistenciaMensualActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoDisca")) {
			jButtonEmpleadoDiscaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProfesionEmplea")) {
			jButtonProfesionEmpleaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEmpleado")) {
			jButtonRubroEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoConstante")) {
			jButtonEmpleadoConstanteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("TallaVestido")) {
			jButtonTallaVestidoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("NovedadNomi")) {
			jButtonNovedadNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			empleado=(Empleado) empleadoLogic.getEmpleados().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			empleado =(Empleado) empleados.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getpais_descripcion();
			}
		}

		if(sTipo.equals("Provincia")) {
			//sDescripcion=this.getActualProvinciaForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getprovincia_descripcion();
			} else {
				//sDescripcion=this.getActualProvinciaForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getprovincia_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getciudad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=empleado.getciudad_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Religion")) {
			//sDescripcion=this.getActualReligionForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getreligion_descripcion();
			} else {
				//sDescripcion=this.getActualReligionForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getreligion_descripcion();
			}
		}

		if(sTipo.equals("EstadoCivil")) {
			//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getestadocivil_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getestadocivil_descripcion();
			}
		}

		if(sTipo.equals("TipoGenero")) {
			//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.gettipogenero_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.gettipogenero_descripcion();
			}
		}

		if(sTipo.equals("TipoEmpleado")) {
			//sDescripcion=this.getActualTipoEmpleadoForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.gettipoempleado_descripcion();
			} else {
				//sDescripcion=this.getActualTipoEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.gettipoempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoInstruccion")) {
			//sDescripcion=this.getActualTipoInstruccionForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.gettipoinstruccion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoInstruccionForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.gettipoinstruccion_descripcion();
			}
		}

		if(sTipo.equals("Cargo")) {
			//sDescripcion=this.getActualCargoForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getcargo_descripcion();
			} else {
				//sDescripcion=this.getActualCargoForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getcargo_descripcion();
			}
		}

		if(sTipo.equals("Estructura")) {
			//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getestructura_descripcion();
			} else {
				//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getestructura_descripcion();
			}
		}

		if(sTipo.equals("EstructuraSeccion")) {
			//sDescripcion=this.getActualEstructuraSeccionForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getestructuraseccion_descripcion();
			} else {
				//sDescripcion=this.getActualEstructuraSeccionForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getestructuraseccion_descripcion();
			}
		}

		if(sTipo.equals("EstadoEmpleado")) {
			//sDescripcion=this.getActualEstadoEmpleadoForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.getestadoempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.getestadoempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoContrato")) {
			//sDescripcion=this.getActualTipoContratoForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.gettipocontrato_descripcion();
			} else {
				//sDescripcion=this.getActualTipoContratoForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.gettipocontrato_descripcion();
			}
		}

		if(sTipo.equals("TipoCuentaBancoGlobal")) {
			//sDescripcion=this.getActualTipoCuentaBancoGlobalForeignKeyDescripcion((Long)value);
			if(!empleado.getIsNew() && !empleado.getIsChanged() && !empleado.getIsDeleted()) {
				sDescripcion=empleado.gettipocuentabancoglobal_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCuentaBancoGlobalForeignKeyDescripcion((Long)value);
				sDescripcion=empleado.gettipocuentabancoglobal_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Empleado empleadoRow=new Empleado();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			empleadoRow=(Empleado) empleadoLogic.getEmpleados().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			empleadoRow=(Empleado) empleados.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonCargaFamiliar_NMActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosCargaFamiliar_NM && this.permiteMantenimiento(this.empleado)) {
					CargaFamiliar_NMBeanSwingJInternalFrame cargafamiliar_nmBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup=new CargaFamiliar_NMBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cargafamiliar_nmBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup;
					} else {
						cargafamiliar_nmBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.setConGuardarRelaciones(false);
						//cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cargafamiliar_nmBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarCargaFamiliar_NMBeanSwingJInternalFrame(empleados,this.empleado,cargafamiliar_nmBeanSwingJInternalFrame,/*conInicializar,*/cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.getConGuardarRelaciones(),cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmSessionBean.getEsGuardarRelacionado());
					cargafamiliar_nmBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cargafamiliar_nmBeanSwingJInternalFrame.actualizarEstadoPanelsCargaFamiliar_NM("no_relacionado");

						cargafamiliar_nmBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CargaFamiliar_NMConstantesFunciones.ITAMANIOFILATABLA + (CargaFamiliar_NMConstantesFunciones.ITAMANIOFILATABLA/2));

						cargafamiliar_nmBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderCargaFamiliar_NM=(TitledBorder)cargafamiliar_nmBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar_NM.getBorder();

						titledBorderCargaFamiliar_NM.setTitle(titledBorderEmpleado.getTitle() + " -> Carga Familiar_ N M");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cargafamiliar_nmBeanSwingJInternalFrame);
						}

						cargafamiliar_nmBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cargafamiliar_nmBeanSwingJInternalFrame);

						cargafamiliar_nmBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Carga Familiar_ N M",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonCursoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosCurso && this.permiteMantenimiento(this.empleado)) {
					CursoBeanSwingJInternalFrame cursoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup=new CursoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cursoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup;
					} else {
						cursoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//cursoBeanSwingJInternalFrame.cursoSessionBean.setConGuardarRelaciones(false);
						//cursoBeanSwingJInternalFrame.cursoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cursoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarCursoBeanSwingJInternalFrame(empleados,this.empleado,cursoBeanSwingJInternalFrame,/*conInicializar,*/cursoBeanSwingJInternalFrame.cursoSessionBean.getConGuardarRelaciones(),cursoBeanSwingJInternalFrame.cursoSessionBean.getEsGuardarRelacionado());
					cursoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cursoBeanSwingJInternalFrame.actualizarEstadoPanelsCurso("no_relacionado");

						cursoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CursoConstantesFunciones.ITAMANIOFILATABLA + (CursoConstantesFunciones.ITAMANIOFILATABLA/2));

						cursoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderCurso=(TitledBorder)cursoBeanSwingJInternalFrame.jScrollPanelDatosCurso.getBorder();

						titledBorderCurso.setTitle(titledBorderEmpleado.getTitle() + " -> Curso");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cursoBeanSwingJInternalFrame);
						}

						cursoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cursoBeanSwingJInternalFrame);

						cursoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Curso",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPrestamoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosPrestamo && this.permiteMantenimiento(this.empleado)) {
					PrestamoBeanSwingJInternalFrame prestamoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup=new PrestamoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						prestamoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup;
					} else {
						prestamoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//prestamoBeanSwingJInternalFrame.prestamoSessionBean.setConGuardarRelaciones(false);
						//prestamoBeanSwingJInternalFrame.prestamoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					prestamoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarPrestamoBeanSwingJInternalFrame(empleados,this.empleado,prestamoBeanSwingJInternalFrame,/*conInicializar,*/prestamoBeanSwingJInternalFrame.prestamoSessionBean.getConGuardarRelaciones(),prestamoBeanSwingJInternalFrame.prestamoSessionBean.getEsGuardarRelacionado());
					prestamoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						prestamoBeanSwingJInternalFrame.actualizarEstadoPanelsPrestamo("no_relacionado");

						prestamoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PrestamoConstantesFunciones.ITAMANIOFILATABLA + (PrestamoConstantesFunciones.ITAMANIOFILATABLA/2));

						prestamoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderPrestamo=(TitledBorder)prestamoBeanSwingJInternalFrame.jScrollPanelDatosPrestamo.getBorder();

						titledBorderPrestamo.setTitle(titledBorderEmpleado.getTitle() + " -> Prestamo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,prestamoBeanSwingJInternalFrame);
						}

						prestamoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(prestamoBeanSwingJInternalFrame);

						prestamoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Prestamo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoIdiomaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoIdioma && this.permiteMantenimiento(this.empleado)) {
					EmpleadoIdiomaBeanSwingJInternalFrame empleadoidiomaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup=new EmpleadoIdiomaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoidiomaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup;
					} else {
						empleadoidiomaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.setConGuardarRelaciones(false);
						//empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoidiomaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoIdiomaBeanSwingJInternalFrame(empleados,this.empleado,empleadoidiomaBeanSwingJInternalFrame,/*conInicializar,*/empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.getConGuardarRelaciones(),empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaSessionBean.getEsGuardarRelacionado());
					empleadoidiomaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoidiomaBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoIdioma("no_relacionado");

						empleadoidiomaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoIdiomaConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoIdiomaConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoidiomaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoIdioma=(TitledBorder)empleadoidiomaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoIdioma.getBorder();

						titledBorderEmpleadoIdioma.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Idioma");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoidiomaBeanSwingJInternalFrame);
						}

						empleadoidiomaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoidiomaBeanSwingJInternalFrame);

						empleadoidiomaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Idioma",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonHistorialPagoMesNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosHistorialPagoMesNomi && this.permiteMantenimiento(this.empleado)) {
					HistorialPagoMesNomiBeanSwingJInternalFrame historialpagomesnomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup=new HistorialPagoMesNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						historialpagomesnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup;
					} else {
						historialpagomesnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setConGuardarRelaciones(false);
						//historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					historialpagomesnomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarHistorialPagoMesNomiBeanSwingJInternalFrame(empleados,this.empleado,historialpagomesnomiBeanSwingJInternalFrame,/*conInicializar,*/historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getConGuardarRelaciones(),historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado());
					historialpagomesnomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						historialpagomesnomiBeanSwingJInternalFrame.actualizarEstadoPanelsHistorialPagoMesNomi("no_relacionado");

						historialpagomesnomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(HistorialPagoMesNomiConstantesFunciones.ITAMANIOFILATABLA + (HistorialPagoMesNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						historialpagomesnomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderHistorialPagoMesNomi=(TitledBorder)historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.getBorder();

						titledBorderHistorialPagoMesNomi.setTitle(titledBorderEmpleado.getTitle() + " -> Historial Pago Mes Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,historialpagomesnomiBeanSwingJInternalFrame);
						}

						historialpagomesnomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(historialpagomesnomiBeanSwingJInternalFrame);

						historialpagomesnomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Historial Pago Mes Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoImpuestoRentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoImpuestoRenta && this.permiteMantenimiento(this.empleado)) {
					EmpleadoImpuestoRentaBeanSwingJInternalFrame empleadoimpuestorentaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup=new EmpleadoImpuestoRentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoimpuestorentaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup;
					} else {
						empleadoimpuestorentaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setConGuardarRelaciones(false);
						//empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoimpuestorentaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoImpuestoRentaBeanSwingJInternalFrame(empleados,this.empleado,empleadoimpuestorentaBeanSwingJInternalFrame,/*conInicializar,*/empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getConGuardarRelaciones(),empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado());
					empleadoimpuestorentaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoimpuestorentaBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoImpuestoRenta("no_relacionado");

						empleadoimpuestorentaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoImpuestoRentaConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoImpuestoRentaConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoimpuestorentaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoImpuestoRenta=(TitledBorder)empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.getBorder();

						titledBorderEmpleadoImpuestoRenta.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Impuesto Renta");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoimpuestorentaBeanSwingJInternalFrame);
						}

						empleadoimpuestorentaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoimpuestorentaBeanSwingJInternalFrame);

						empleadoimpuestorentaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Impuesto Renta",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDatoGeneralEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosDatoGeneralEmpleado && this.permiteMantenimiento(this.empleado)) {
					DatoGeneralEmpleadoBeanSwingJInternalFrame datogeneralempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup=new DatoGeneralEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						datogeneralempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup;
					} else {
						datogeneralempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.setConGuardarRelaciones(false);
						//datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					datogeneralempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarDatoGeneralEmpleadoBeanSwingJInternalFrame(empleados,this.empleado,datogeneralempleadoBeanSwingJInternalFrame,/*conInicializar,*/datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.getConGuardarRelaciones(),datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoSessionBean.getEsGuardarRelacionado());
					datogeneralempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						datogeneralempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsDatoGeneralEmpleado("no_relacionado");

						datogeneralempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DatoGeneralEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (DatoGeneralEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						datogeneralempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderDatoGeneralEmpleado=(TitledBorder)datogeneralempleadoBeanSwingJInternalFrame.jScrollPanelDatosDatoGeneralEmpleado.getBorder();

						titledBorderDatoGeneralEmpleado.setTitle(titledBorderEmpleado.getTitle() + " -> Dato General Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,datogeneralempleadoBeanSwingJInternalFrame);
						}

						datogeneralempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(datogeneralempleadoBeanSwingJInternalFrame);

						datogeneralempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Dato General Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonAreaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosArea && this.permiteMantenimiento(this.empleado)) {
					AreaBeanSwingJInternalFrame areaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup=new AreaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						areaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup;
					} else {
						areaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//areaBeanSwingJInternalFrame.areaSessionBean.setConGuardarRelaciones(false);
						//areaBeanSwingJInternalFrame.areaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					areaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarAreaBeanSwingJInternalFrame(empleados,this.empleado,areaBeanSwingJInternalFrame,/*conInicializar,*/areaBeanSwingJInternalFrame.areaSessionBean.getConGuardarRelaciones(),areaBeanSwingJInternalFrame.areaSessionBean.getEsGuardarRelacionado());
					areaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						areaBeanSwingJInternalFrame.actualizarEstadoPanelsArea("no_relacionado");

						areaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(AreaConstantesFunciones.ITAMANIOFILATABLA + (AreaConstantesFunciones.ITAMANIOFILATABLA/2));

						areaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderArea=(TitledBorder)areaBeanSwingJInternalFrame.jScrollPanelDatosArea.getBorder();

						titledBorderArea.setTitle(titledBorderEmpleado.getTitle() + " -> Area");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,areaBeanSwingJInternalFrame);
						}

						areaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(areaBeanSwingJInternalFrame);

						areaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Area",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGastoEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosGastoEmpleado && this.permiteMantenimiento(this.empleado)) {
					GastoEmpleadoBeanSwingJInternalFrame gastoempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup=new GastoEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						gastoempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup;
					} else {
						gastoempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.setConGuardarRelaciones(false);
						//gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					gastoempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarGastoEmpleadoBeanSwingJInternalFrame(empleados,this.empleado,gastoempleadoBeanSwingJInternalFrame,/*conInicializar,*/gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.getConGuardarRelaciones(),gastoempleadoBeanSwingJInternalFrame.gastoempleadoSessionBean.getEsGuardarRelacionado());
					gastoempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						gastoempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsGastoEmpleado("no_relacionado");

						gastoempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GastoEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (GastoEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						gastoempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderGastoEmpleado=(TitledBorder)gastoempleadoBeanSwingJInternalFrame.jScrollPanelDatosGastoEmpleado.getBorder();

						titledBorderGastoEmpleado.setTitle(titledBorderEmpleado.getTitle() + " -> Gasto Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,gastoempleadoBeanSwingJInternalFrame);
						}

						gastoempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(gastoempleadoBeanSwingJInternalFrame);

						gastoempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Gasto Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoHobbyActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoHobby && this.permiteMantenimiento(this.empleado)) {
					EmpleadoHobbyBeanSwingJInternalFrame empleadohobbyBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup=new EmpleadoHobbyBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadohobbyBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup;
					} else {
						empleadohobbyBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.setConGuardarRelaciones(false);
						//empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadohobbyBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoHobbyBeanSwingJInternalFrame(empleados,this.empleado,empleadohobbyBeanSwingJInternalFrame,/*conInicializar,*/empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.getConGuardarRelaciones(),empleadohobbyBeanSwingJInternalFrame.empleadohobbySessionBean.getEsGuardarRelacionado());
					empleadohobbyBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadohobbyBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoHobby("no_relacionado");

						empleadohobbyBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoHobbyConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoHobbyConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadohobbyBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoHobby=(TitledBorder)empleadohobbyBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHobby.getBorder();

						titledBorderEmpleadoHobby.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Hobby");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadohobbyBeanSwingJInternalFrame);
						}

						empleadohobbyBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadohobbyBeanSwingJInternalFrame);

						empleadohobbyBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Hobby",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoEMailActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoEMail && this.permiteMantenimiento(this.empleado)) {
					EmpleadoEMailBeanSwingJInternalFrame empleadoemailBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup=new EmpleadoEMailBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoemailBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup;
					} else {
						empleadoemailBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.setConGuardarRelaciones(false);
						//empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoemailBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoEMailBeanSwingJInternalFrame(empleados,this.empleado,empleadoemailBeanSwingJInternalFrame,/*conInicializar,*/empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.getConGuardarRelaciones(),empleadoemailBeanSwingJInternalFrame.empleadoemailSessionBean.getEsGuardarRelacionado());
					empleadoemailBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoemailBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoEMail("no_relacionado");

						empleadoemailBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoEMailConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoEMailConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoemailBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoEMail=(TitledBorder)empleadoemailBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEMail.getBorder();

						titledBorderEmpleadoEMail.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Email");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoemailBeanSwingJInternalFrame);
						}

						empleadoemailBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoemailBeanSwingJInternalFrame);

						empleadoemailBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Email",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRasgoPersonalActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosRasgoPersonal && this.permiteMantenimiento(this.empleado)) {
					RasgoPersonalBeanSwingJInternalFrame rasgopersonalBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup=new RasgoPersonalBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rasgopersonalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup;
					} else {
						rasgopersonalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.setConGuardarRelaciones(false);
						//rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rasgopersonalBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarRasgoPersonalBeanSwingJInternalFrame(empleados,this.empleado,rasgopersonalBeanSwingJInternalFrame,/*conInicializar,*/rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.getConGuardarRelaciones(),rasgopersonalBeanSwingJInternalFrame.rasgopersonalSessionBean.getEsGuardarRelacionado());
					rasgopersonalBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rasgopersonalBeanSwingJInternalFrame.actualizarEstadoPanelsRasgoPersonal("no_relacionado");

						rasgopersonalBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RasgoPersonalConstantesFunciones.ITAMANIOFILATABLA + (RasgoPersonalConstantesFunciones.ITAMANIOFILATABLA/2));

						rasgopersonalBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderRasgoPersonal=(TitledBorder)rasgopersonalBeanSwingJInternalFrame.jScrollPanelDatosRasgoPersonal.getBorder();

						titledBorderRasgoPersonal.setTitle(titledBorderEmpleado.getTitle() + " -> Rasgo Personal");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rasgopersonalBeanSwingJInternalFrame);
						}

						rasgopersonalBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rasgopersonalBeanSwingJInternalFrame);

						rasgopersonalBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rasgo Personal",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonReferenciaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosReferencia && this.permiteMantenimiento(this.empleado)) {
					ReferenciaBeanSwingJInternalFrame referenciaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup=new ReferenciaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						referenciaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup;
					} else {
						referenciaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//referenciaBeanSwingJInternalFrame.referenciaSessionBean.setConGuardarRelaciones(false);
						//referenciaBeanSwingJInternalFrame.referenciaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					referenciaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarReferenciaBeanSwingJInternalFrame(empleados,this.empleado,referenciaBeanSwingJInternalFrame,/*conInicializar,*/referenciaBeanSwingJInternalFrame.referenciaSessionBean.getConGuardarRelaciones(),referenciaBeanSwingJInternalFrame.referenciaSessionBean.getEsGuardarRelacionado());
					referenciaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						referenciaBeanSwingJInternalFrame.actualizarEstadoPanelsReferencia("no_relacionado");

						referenciaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ReferenciaConstantesFunciones.ITAMANIOFILATABLA + (ReferenciaConstantesFunciones.ITAMANIOFILATABLA/2));

						referenciaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderReferencia=(TitledBorder)referenciaBeanSwingJInternalFrame.jScrollPanelDatosReferencia.getBorder();

						titledBorderReferencia.setTitle(titledBorderEmpleado.getTitle() + " -> Referencia");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,referenciaBeanSwingJInternalFrame);
						}

						referenciaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(referenciaBeanSwingJInternalFrame);

						referenciaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Referencia",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTelefono_NMActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosTelefono_NM && this.permiteMantenimiento(this.empleado)) {
					Telefono_NMBeanSwingJInternalFrame telefono_nmBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup=new Telefono_NMBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						telefono_nmBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup;
					} else {
						telefono_nmBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.setConGuardarRelaciones(false);
						//telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					telefono_nmBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarTelefono_NMBeanSwingJInternalFrame(empleados,this.empleado,telefono_nmBeanSwingJInternalFrame,/*conInicializar,*/telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.getConGuardarRelaciones(),telefono_nmBeanSwingJInternalFrame.telefono_nmSessionBean.getEsGuardarRelacionado());
					telefono_nmBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						telefono_nmBeanSwingJInternalFrame.actualizarEstadoPanelsTelefono_NM("no_relacionado");

						telefono_nmBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(Telefono_NMConstantesFunciones.ITAMANIOFILATABLA + (Telefono_NMConstantesFunciones.ITAMANIOFILATABLA/2));

						telefono_nmBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderTelefono_NM=(TitledBorder)telefono_nmBeanSwingJInternalFrame.jScrollPanelDatosTelefono_NM.getBorder();

						titledBorderTelefono_NM.setTitle(titledBorderEmpleado.getTitle() + " -> Telefono_ N M");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,telefono_nmBeanSwingJInternalFrame);
						}

						telefono_nmBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(telefono_nmBeanSwingJInternalFrame);

						telefono_nmBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Telefono_ N M",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNovedadActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosNovedad && this.permiteMantenimiento(this.empleado)) {
					NovedadBeanSwingJInternalFrame novedadBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup=new NovedadBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						novedadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup;
					} else {
						novedadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//novedadBeanSwingJInternalFrame.novedadSessionBean.setConGuardarRelaciones(false);
						//novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					novedadBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarNovedadBeanSwingJInternalFrame(empleados,this.empleado,novedadBeanSwingJInternalFrame,/*conInicializar,*/novedadBeanSwingJInternalFrame.novedadSessionBean.getConGuardarRelaciones(),novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado());
					novedadBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						novedadBeanSwingJInternalFrame.actualizarEstadoPanelsNovedad("no_relacionado");

						novedadBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NovedadConstantesFunciones.ITAMANIOFILATABLA + (NovedadConstantesFunciones.ITAMANIOFILATABLA/2));

						novedadBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderNovedad=(TitledBorder)novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.getBorder();

						titledBorderNovedad.setTitle(titledBorderEmpleado.getTitle() + " -> Novedad");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,novedadBeanSwingJInternalFrame);
						}

						novedadBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(novedadBeanSwingJInternalFrame);

						novedadBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Novedad",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoHerraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoHerra && this.permiteMantenimiento(this.empleado)) {
					EmpleadoHerraBeanSwingJInternalFrame empleadoherraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup=new EmpleadoHerraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoherraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup;
					} else {
						empleadoherraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.setConGuardarRelaciones(false);
						//empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoherraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoHerraBeanSwingJInternalFrame(empleados,this.empleado,empleadoherraBeanSwingJInternalFrame,/*conInicializar,*/empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.getConGuardarRelaciones(),empleadoherraBeanSwingJInternalFrame.empleadoherraSessionBean.getEsGuardarRelacionado());
					empleadoherraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoherraBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoHerra("no_relacionado");

						empleadoherraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoHerraConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoHerraConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoherraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoHerra=(TitledBorder)empleadoherraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoHerra.getBorder();

						titledBorderEmpleadoHerra.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Herra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoherraBeanSwingJInternalFrame);
						}

						empleadoherraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoherraBeanSwingJInternalFrame);

						empleadoherraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Herra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoEnferActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoEnfer && this.permiteMantenimiento(this.empleado)) {
					EmpleadoEnferBeanSwingJInternalFrame empleadoenferBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup=new EmpleadoEnferBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoenferBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup;
					} else {
						empleadoenferBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.setConGuardarRelaciones(false);
						//empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoenferBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoEnferBeanSwingJInternalFrame(empleados,this.empleado,empleadoenferBeanSwingJInternalFrame,/*conInicializar,*/empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.getConGuardarRelaciones(),empleadoenferBeanSwingJInternalFrame.empleadoenferSessionBean.getEsGuardarRelacionado());
					empleadoenferBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoenferBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoEnfer("no_relacionado");

						empleadoenferBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoEnferConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoEnferConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoenferBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoEnfer=(TitledBorder)empleadoenferBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEnfer.getBorder();

						titledBorderEmpleadoEnfer.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Enfer");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoenferBeanSwingJInternalFrame);
						}

						empleadoenferBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoenferBeanSwingJInternalFrame);

						empleadoenferBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Enfer",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonVisaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosVisa && this.permiteMantenimiento(this.empleado)) {
					VisaBeanSwingJInternalFrame visaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup=new VisaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						visaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup;
					} else {
						visaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//visaBeanSwingJInternalFrame.visaSessionBean.setConGuardarRelaciones(false);
						//visaBeanSwingJInternalFrame.visaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					visaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarVisaBeanSwingJInternalFrame(empleados,this.empleado,visaBeanSwingJInternalFrame,/*conInicializar,*/visaBeanSwingJInternalFrame.visaSessionBean.getConGuardarRelaciones(),visaBeanSwingJInternalFrame.visaSessionBean.getEsGuardarRelacionado());
					visaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						visaBeanSwingJInternalFrame.actualizarEstadoPanelsVisa("no_relacionado");

						visaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(VisaConstantesFunciones.ITAMANIOFILATABLA + (VisaConstantesFunciones.ITAMANIOFILATABLA/2));

						visaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderVisa=(TitledBorder)visaBeanSwingJInternalFrame.jScrollPanelDatosVisa.getBorder();

						titledBorderVisa.setTitle(titledBorderEmpleado.getTitle() + " -> Visa");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,visaBeanSwingJInternalFrame);
						}

						visaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(visaBeanSwingJInternalFrame);

						visaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Visa",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSeguroActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosSeguro && this.permiteMantenimiento(this.empleado)) {
					SeguroBeanSwingJInternalFrame seguroBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup=new SeguroBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						seguroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup;
					} else {
						seguroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//seguroBeanSwingJInternalFrame.seguroSessionBean.setConGuardarRelaciones(false);
						//seguroBeanSwingJInternalFrame.seguroSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					seguroBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarSeguroBeanSwingJInternalFrame(empleados,this.empleado,seguroBeanSwingJInternalFrame,/*conInicializar,*/seguroBeanSwingJInternalFrame.seguroSessionBean.getConGuardarRelaciones(),seguroBeanSwingJInternalFrame.seguroSessionBean.getEsGuardarRelacionado());
					seguroBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						seguroBeanSwingJInternalFrame.actualizarEstadoPanelsSeguro("no_relacionado");

						seguroBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SeguroConstantesFunciones.ITAMANIOFILATABLA + (SeguroConstantesFunciones.ITAMANIOFILATABLA/2));

						seguroBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderSeguro=(TitledBorder)seguroBeanSwingJInternalFrame.jScrollPanelDatosSeguro.getBorder();

						titledBorderSeguro.setTitle(titledBorderEmpleado.getTitle() + " -> Seguro");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,seguroBeanSwingJInternalFrame);
						}

						seguroBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(seguroBeanSwingJInternalFrame);

						seguroBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Seguro",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonAsistenciaMensualActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosAsistenciaMensual && this.permiteMantenimiento(this.empleado)) {
					AsistenciaMensualBeanSwingJInternalFrame asistenciamensualBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup=new AsistenciaMensualBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						asistenciamensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup;
					} else {
						asistenciamensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setConGuardarRelaciones(false);
						//asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					asistenciamensualBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarAsistenciaMensualBeanSwingJInternalFrame(empleados,this.empleado,asistenciamensualBeanSwingJInternalFrame,/*conInicializar,*/asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getConGuardarRelaciones(),asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado());
					asistenciamensualBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						asistenciamensualBeanSwingJInternalFrame.actualizarEstadoPanelsAsistenciaMensual("no_relacionado");

						asistenciamensualBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(AsistenciaMensualConstantesFunciones.ITAMANIOFILATABLA + (AsistenciaMensualConstantesFunciones.ITAMANIOFILATABLA/2));

						asistenciamensualBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderAsistenciaMensual=(TitledBorder)asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.getBorder();

						titledBorderAsistenciaMensual.setTitle(titledBorderEmpleado.getTitle() + " -> Asistencia Mensual");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,asistenciamensualBeanSwingJInternalFrame);
						}

						asistenciamensualBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(asistenciamensualBeanSwingJInternalFrame);

						asistenciamensualBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Asistencia Mensual",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoDiscaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoDisca && this.permiteMantenimiento(this.empleado)) {
					EmpleadoDiscaBeanSwingJInternalFrame empleadodiscaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup=new EmpleadoDiscaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadodiscaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup;
					} else {
						empleadodiscaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.setConGuardarRelaciones(false);
						//empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadodiscaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoDiscaBeanSwingJInternalFrame(empleados,this.empleado,empleadodiscaBeanSwingJInternalFrame,/*conInicializar,*/empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.getConGuardarRelaciones(),empleadodiscaBeanSwingJInternalFrame.empleadodiscaSessionBean.getEsGuardarRelacionado());
					empleadodiscaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadodiscaBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoDisca("no_relacionado");

						empleadodiscaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoDiscaConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoDiscaConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadodiscaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoDisca=(TitledBorder)empleadodiscaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoDisca.getBorder();

						titledBorderEmpleadoDisca.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Disca");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadodiscaBeanSwingJInternalFrame);
						}

						empleadodiscaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadodiscaBeanSwingJInternalFrame);

						empleadodiscaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Disca",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProfesionEmpleaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosProfesionEmplea && this.permiteMantenimiento(this.empleado)) {
					ProfesionEmpleaBeanSwingJInternalFrame profesionempleaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup=new ProfesionEmpleaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						profesionempleaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup;
					} else {
						profesionempleaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.setConGuardarRelaciones(false);
						//profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					profesionempleaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarProfesionEmpleaBeanSwingJInternalFrame(empleados,this.empleado,profesionempleaBeanSwingJInternalFrame,/*conInicializar,*/profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.getConGuardarRelaciones(),profesionempleaBeanSwingJInternalFrame.profesionempleaSessionBean.getEsGuardarRelacionado());
					profesionempleaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						profesionempleaBeanSwingJInternalFrame.actualizarEstadoPanelsProfesionEmplea("no_relacionado");

						profesionempleaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProfesionEmpleaConstantesFunciones.ITAMANIOFILATABLA + (ProfesionEmpleaConstantesFunciones.ITAMANIOFILATABLA/2));

						profesionempleaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderProfesionEmplea=(TitledBorder)profesionempleaBeanSwingJInternalFrame.jScrollPanelDatosProfesionEmplea.getBorder();

						titledBorderProfesionEmplea.setTitle(titledBorderEmpleado.getTitle() + " -> Profesion Emplea");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,profesionempleaBeanSwingJInternalFrame);
						}

						profesionempleaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(profesionempleaBeanSwingJInternalFrame);

						profesionempleaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Profesion Emplea",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosRubroEmpleado && this.permiteMantenimiento(this.empleado)) {
					RubroEmpleadoBeanSwingJInternalFrame rubroempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup=new RubroEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup;
					} else {
						rubroempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setConGuardarRelaciones(false);
						//rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarRubroEmpleadoBeanSwingJInternalFrame(empleados,this.empleado,rubroempleadoBeanSwingJInternalFrame,/*conInicializar,*/rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getConGuardarRelaciones(),rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado());
					rubroempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEmpleado("no_relacionado");

						rubroempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (RubroEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderRubroEmpleado=(TitledBorder)rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.getBorder();

						titledBorderRubroEmpleado.setTitle(titledBorderEmpleado.getTitle() + " -> Rubro Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroempleadoBeanSwingJInternalFrame);
						}

						rubroempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroempleadoBeanSwingJInternalFrame);

						rubroempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoConstanteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosEmpleadoConstante && this.permiteMantenimiento(this.empleado)) {
					EmpleadoConstanteBeanSwingJInternalFrame empleadoconstanteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup=new EmpleadoConstanteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoconstanteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup;
					} else {
						empleadoconstanteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.setConGuardarRelaciones(false);
						//empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoconstanteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarEmpleadoConstanteBeanSwingJInternalFrame(empleados,this.empleado,empleadoconstanteBeanSwingJInternalFrame,/*conInicializar,*/empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.getConGuardarRelaciones(),empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteSessionBean.getEsGuardarRelacionado());
					empleadoconstanteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoconstanteBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoConstante("no_relacionado");

						empleadoconstanteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoConstanteConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoConstanteConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoconstanteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderEmpleadoConstante=(TitledBorder)empleadoconstanteBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoConstante.getBorder();

						titledBorderEmpleadoConstante.setTitle(titledBorderEmpleado.getTitle() + " -> Empleado Constante");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoconstanteBeanSwingJInternalFrame);
						}

						empleadoconstanteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoconstanteBeanSwingJInternalFrame);

						empleadoconstanteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Constante",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTallaVestidoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosTallaVestido && this.permiteMantenimiento(this.empleado)) {
					TallaVestidoBeanSwingJInternalFrame tallavestidoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup=new TallaVestidoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						tallavestidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup;
					} else {
						tallavestidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.setConGuardarRelaciones(false);
						//tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					tallavestidoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarTallaVestidoBeanSwingJInternalFrame(empleados,this.empleado,tallavestidoBeanSwingJInternalFrame,/*conInicializar,*/tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.getConGuardarRelaciones(),tallavestidoBeanSwingJInternalFrame.tallavestidoSessionBean.getEsGuardarRelacionado());
					tallavestidoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						tallavestidoBeanSwingJInternalFrame.actualizarEstadoPanelsTallaVestido("no_relacionado");

						tallavestidoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TallaVestidoConstantesFunciones.ITAMANIOFILATABLA + (TallaVestidoConstantesFunciones.ITAMANIOFILATABLA/2));

						tallavestidoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderTallaVestido=(TitledBorder)tallavestidoBeanSwingJInternalFrame.jScrollPanelDatosTallaVestido.getBorder();

						titledBorderTallaVestido.setTitle(titledBorderEmpleado.getTitle() + " -> Talla Vestido");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,tallavestidoBeanSwingJInternalFrame);
						}

						tallavestidoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(tallavestidoBeanSwingJInternalFrame);

						tallavestidoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Talla Vestido",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNovedadNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Empleado empleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado = (Empleado)this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.empleado = (Empleado)this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(empleado!=null) {
						this.empleado = empleado;
					} else {
						this.empleado = new Empleado();
					}
				}

				if(this.isTienePermisosNovedadNomi && this.permiteMantenimiento(this.empleado)) {
					NovedadNomiBeanSwingJInternalFrame novedadnomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup=new NovedadNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						novedadnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup;
					} else {
						novedadnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame;
					}

					List<Empleado> empleados=new ArrayList<Empleado>();
					empleados.add(this.empleado);
					if(!esRelacionado) {
						//novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.setConGuardarRelaciones(false);
						//novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					novedadnomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEmpleado.cargarNovedadNomiBeanSwingJInternalFrame(empleados,this.empleado,novedadnomiBeanSwingJInternalFrame,/*conInicializar,*/novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.getConGuardarRelaciones(),novedadnomiBeanSwingJInternalFrame.novedadnomiSessionBean.getEsGuardarRelacionado());
					novedadnomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						novedadnomiBeanSwingJInternalFrame.actualizarEstadoPanelsNovedadNomi("no_relacionado");

						novedadnomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NovedadNomiConstantesFunciones.ITAMANIOFILATABLA + (NovedadNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						novedadnomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
						TitledBorder titledBorderNovedadNomi=(TitledBorder)novedadnomiBeanSwingJInternalFrame.jScrollPanelDatosNovedadNomi.getBorder();

						titledBorderNovedadNomi.setTitle(titledBorderEmpleado.getTitle() + " -> Novedad Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,novedadnomiBeanSwingJInternalFrame);
						}

						novedadnomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(novedadnomiBeanSwingJInternalFrame);

						novedadnomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.empleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Novedad Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualEmpleado(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado));			
			this.jButtonDuplicarEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEmpleado && this.isPermisoDuplicarEmpleado));			
			this.jButtonCopiarEmpleado.setVisible((this.isVisibilidadCeldaCopiarEmpleado && this.isPermisoCopiarEmpleado));
			this.jButtonVerFormEmpleado.setVisible((this.isVisibilidadCeldaVerFormEmpleado && this.isPermisoVerFormEmpleado));
			
			this.jButtonAbrirOrderByEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));			
			
			this.jButtonNuevoRelacionesEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEmpleado && this.isPermisoNuevoEmpleado));			
			this.jButtonNuevoGuardarCambiosEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado && this.isPermisoGuardarCambiosEmpleado));
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.jButtonModificarEmpleado.setVisible((this.isVisibilidadCeldaModificarEmpleado && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.setVisible((this.isVisibilidadCeldaActualizarEmpleado && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.setVisible((this.isVisibilidadCeldaEliminarEmpleado && this.isPermisoEliminarEmpleado));
			this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.setVisible(this.isVisibilidadCeldaCancelarEmpleado);							
			this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.setVisible((this.isVisibilidadCeldaGuardarEmpleado && this.isPermisoGuardarCambiosEmpleado));			
			
			}
						
			this.jButtonGuardarCambiosTablaEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEmpleado && this.isPermisoGuardarCambiosEmpleado));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado));						
			this.jButtonDuplicarToolBarEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEmpleado && this.isPermisoDuplicarEmpleado));						
			this.jButtonCopiarToolBarEmpleado.setVisible((this.isVisibilidadCeldaCopiarEmpleado && this.isPermisoCopiarEmpleado));			
			this.jButtonVerFormToolBarEmpleado.setVisible((this.isVisibilidadCeldaVerFormEmpleado && this.isPermisoVerFormEmpleado));			
			this.jButtonAbrirOrderByToolBarEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));
			this.jButtonNuevoRelacionesToolBarEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEmpleado && this.isPermisoNuevoEmpleado));			
			this.jButtonNuevoGuardarCambiosToolBarEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado && this.isPermisoGuardarCambiosEmpleado));			
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.jButtonModificarToolBarEmpleado.setVisible((this.isVisibilidadCeldaModificarEmpleado && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jButtonActualizarToolBarEmpleado.setVisible((this.isVisibilidadCeldaActualizarEmpleado  && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jButtonEliminarToolBarEmpleado.setVisible((this.isVisibilidadCeldaEliminarEmpleado && this.isPermisoEliminarEmpleado));
			this.jInternalFrameDetalleFormEmpleado.jButtonCancelarToolBarEmpleado.setVisible(this.isVisibilidadCeldaCancelarEmpleado);				
			this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosToolBarEmpleado.setVisible((this.isVisibilidadCeldaGuardarEmpleado && this.isPermisoGuardarCambiosEmpleado));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEmpleado && this.isPermisoGuardarCambiosEmpleado));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado));			
			this.jMenuItemDuplicarEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEmpleado && this.isPermisoDuplicarEmpleado));			
			this.jMenuItemCopiarEmpleado.setVisible((this.isVisibilidadCeldaCopiarEmpleado && this.isPermisoCopiarEmpleado));			
			this.jMenuItemVerFormEmpleado.setVisible((this.isVisibilidadCeldaVerFormEmpleado && this.isPermisoVerFormEmpleado));			
			this.jMenuItemAbrirOrderByEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));			
			//this.jMenuItemMostrarOcultarEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));
			this.jMenuItemDetalleAbrirOrderByEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));			
			//this.jMenuItemDetalleMostrarOcultarEmpleado.setVisible((this.isVisibilidadCeldaOrdenEmpleado && this.isPermisoOrdenEmpleado));			
			this.jMenuItemNuevoRelacionesEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEmpleado && this.isPermisoNuevoEmpleado));			
			this.jMenuItemNuevoGuardarCambiosEmpleado.setVisible((this.isVisibilidadCeldaNuevoEmpleado && this.isPermisoNuevoEmpleado && this.isPermisoGuardarCambiosEmpleado));									
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.jMenuItemModificarEmpleado.setVisible((this.isVisibilidadCeldaModificarEmpleado && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jMenuItemActualizarEmpleado.setVisible((this.isVisibilidadCeldaActualizarEmpleado && this.isPermisoActualizarEmpleado));	
			this.jInternalFrameDetalleFormEmpleado.jMenuItemEliminarEmpleado.setVisible((this.isVisibilidadCeldaEliminarEmpleado && this.isPermisoEliminarEmpleado));
			this.jInternalFrameDetalleFormEmpleado.jMenuItemCancelarEmpleado.setVisible(this.isVisibilidadCeldaCancelarEmpleado);				
			}
			
			this.jMenuItemGuardarCambiosEmpleado.setVisible((this.isVisibilidadCeldaGuardarEmpleado && this.isPermisoGuardarCambiosEmpleado));						
			this.jMenuItemGuardarCambiosTablaEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEmpleado && this.isPermisoGuardarCambiosEmpleado));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoEmpleado=this.jButtonNuevoEmpleado.isVisible();
			this.isVisibilidadCeldaDuplicarEmpleado=this.jButtonDuplicarEmpleado.isVisible();
			this.isVisibilidadCeldaCopiarEmpleado=this.jButtonCopiarEmpleado.isVisible();
			this.isVisibilidadCeldaVerFormEmpleado=this.jButtonVerFormEmpleado.isVisible();
			
			this.isVisibilidadCeldaOrdenEmpleado=this.jButtonAbrirOrderByEmpleado.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=this.jButtonNuevoRelacionesEmpleado.isVisible();
			this.isVisibilidadCeldaModificarEmpleado=this.jButtonModificarEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.isVisibilidadCeldaActualizarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosEmpleado=this.jButtonGuardarCambiosTablaEmpleado.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoEmpleado=this.jButtonNuevoToolBarEmpleado.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=this.jButtonNuevoRelacionesToolBarEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.isVisibilidadCeldaModificarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonModificarToolBarEmpleado.isVisible();
			this.isVisibilidadCeldaActualizarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonActualizarToolBarEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonEliminarToolBarEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEmpleado=this.jInternalFrameDetalleFormEmpleado.jButtonCancelarToolBarEmpleado.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEmpleado=this.jButtonGuardarCambiosToolBarEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEmpleado=this.jButtonGuardarCambiosTablaToolBarEmpleado.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoEmpleado=this.jMenuItemNuevoEmpleado.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=this.jMenuItemNuevoRelacionesEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.isVisibilidadCeldaModificarEmpleado=this.jInternalFrameDetalleFormEmpleado.jMenuItemModificarEmpleado.isVisible();
			this.isVisibilidadCeldaActualizarEmpleado=this.jInternalFrameDetalleFormEmpleado.jMenuItemActualizarEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEmpleado=this.jInternalFrameDetalleFormEmpleado.jMenuItemEliminarEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEmpleado=this.jInternalFrameDetalleFormEmpleado.jMenuItemCancelarEmpleado.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEmpleado=this.jMenuItemGuardarCambiosEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEmpleado=this.jMenuItemGuardarCambiosTablaEmpleado.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesEmpleado(Boolean esInicializar) {
		if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.empleadoSessionBean.getConGuardarRelaciones()) {
				//if(this.empleadoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesEmpleado();
			}
			
			this.inicializarActualizarBindingBotonesManualEmpleado(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualEmpleado() {
		this.jButtonNuevoEmpleado.setVisible(this.isPermisoNuevoEmpleado);			
		this.jButtonDuplicarEmpleado.setVisible(this.isPermisoDuplicarEmpleado);			
		this.jButtonCopiarEmpleado.setVisible(this.isPermisoCopiarEmpleado);			
		this.jButtonVerFormEmpleado.setVisible(this.isPermisoVerFormEmpleado);			
		
		this.jButtonAbrirOrderByEmpleado.setVisible(this.isPermisoOrdenEmpleado);					
		
		this.jButtonNuevoRelacionesEmpleado.setVisible(this.isPermisoNuevoEmpleado);			
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonModificarEmpleado.setVisible(this.isPermisoActualizarEmpleado);	
			this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.setVisible(this.isPermisoActualizarEmpleado);	
			this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.setVisible(this.isPermisoEliminarEmpleado);
			this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.setVisible(this.isVisibilidadCeldaCancelarEmpleado);						
			this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.setVisible(this.isPermisoGuardarCambiosEmpleado);							
		}
		
		this.jButtonGuardarCambiosTablaEmpleado.setVisible(this.isPermisoActualizarEmpleado);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleEmpleado() {
		this.jInternalFrameDetalleFormEmpleado.jButtonModificarEmpleado.setVisible(this.isPermisoActualizarEmpleado);	
		this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.setVisible(this.isPermisoActualizarEmpleado);	
		this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.setVisible(this.isPermisoEliminarEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.setVisible(this.isVisibilidadCeldaCancelarEmpleado);							
		this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.setVisible((this.isVisibilidadCeldaGuardarEmpleado && this.isPermisoGuardarCambiosEmpleado));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosEmpleado() {
		if(EmpleadoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualEmpleado();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesEmpleado() {
	}
	
	public void jTableDatosEmpleadoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarEmpleado(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.empleado.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebEmpleado(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.empleado.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderEmpleado.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.empleado.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebEmpleado(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.empleado.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderEmpleado.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.empleado.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebEmpleado(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.empleado.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderEmpleado.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.empleado.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_provinciaEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoprovincia=true;

			idTienePermisoprovincia=this.tienePermisosUsuarioEnPaginaWebEmpleado(ProvinciaConstantesFunciones.CLASSNAME);

			if(idTienePermisoprovincia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.provinciaBeanSwingJInternalFrame=new ProvinciaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.provinciaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.provinciaBeanSwingJInternalFrame.getProvinciaLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_provincia()!=null) {
					this.provinciaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.provinciaBeanSwingJInternalFrame.setIdActual(this.empleado.getid_provincia());
					this.provinciaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProvincia();
				}

				JInternalFrameBase jinternalFrame =this.provinciaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderprovincia=(TitledBorder)this.provinciaBeanSwingJInternalFrame.jScrollPanelDatosProvincia.getBorder();

				titledBorderprovincia.setTitle(titledBorderEmpleado.getTitle() + " -> Provincia");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_provinciaEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_provincia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_provincia = "+this.empleado.getid_provincia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebEmpleado(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.empleado.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderEmpleado.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.empleado.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderEmpleado=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosEmpleado.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderEmpleado.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebEmpleado(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.empleado.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderEmpleado.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.empleado.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_religionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoreligion=true;

			idTienePermisoreligion=this.tienePermisosUsuarioEnPaginaWebEmpleado(ReligionConstantesFunciones.CLASSNAME);

			if(idTienePermisoreligion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.religionBeanSwingJInternalFrame=new ReligionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.religionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.religionBeanSwingJInternalFrame.getReligionLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_religion()!=null) {
					this.religionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.religionBeanSwingJInternalFrame.setIdActual(this.empleado.getid_religion());
					this.religionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.religionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.religionBeanSwingJInternalFrame.inicializarActualizarBindingTablaReligion();
				}

				JInternalFrameBase jinternalFrame =this.religionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderreligion=(TitledBorder)this.religionBeanSwingJInternalFrame.jScrollPanelDatosReligion.getBorder();

				titledBorderreligion.setTitle(titledBorderEmpleado.getTitle() + " -> Religion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_religionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_religion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_religion = "+this.empleado.getid_religion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_civilEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadocivil=true;

			idTienePermisoestadocivil=this.tienePermisosUsuarioEnPaginaWebEmpleado(EstadoCivilConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadocivil) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.estadocivilBeanSwingJInternalFrame=new EstadoCivilBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadocivilBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadocivilBeanSwingJInternalFrame.getEstadoCivilLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_estado_civil()!=null) {
					this.estadocivilBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadocivilBeanSwingJInternalFrame.setIdActual(this.empleado.getid_estado_civil());
					this.estadocivilBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoCivil();
				}

				JInternalFrameBase jinternalFrame =this.estadocivilBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderestadocivil=(TitledBorder)this.estadocivilBeanSwingJInternalFrame.jScrollPanelDatosEstadoCivil.getBorder();

				titledBorderestadocivil.setTitle(titledBorderEmpleado.getTitle() + " -> Estado Civil");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_civilEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_estado_civil()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_civil = "+this.empleado.getid_estado_civil().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_generoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogenero=true;

			idTienePermisotipogenero=this.tienePermisosUsuarioEnPaginaWebEmpleado(TipoGeneroConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogenero) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.tipogeneroBeanSwingJInternalFrame=new TipoGeneroBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogeneroBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogeneroBeanSwingJInternalFrame.getTipoGeneroLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_tipo_genero()!=null) {
					this.tipogeneroBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogeneroBeanSwingJInternalFrame.setIdActual(this.empleado.getid_tipo_genero());
					this.tipogeneroBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGenero();
				}

				JInternalFrameBase jinternalFrame =this.tipogeneroBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordertipogenero=(TitledBorder)this.tipogeneroBeanSwingJInternalFrame.jScrollPanelDatosTipoGenero.getBorder();

				titledBordertipogenero.setTitle(titledBorderEmpleado.getTitle() + " -> Tipo Genero");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_generoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_tipo_genero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_genero = "+this.empleado.getid_tipo_genero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_empleadoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoempleado=true;

			idTienePermisotipoempleado=this.tienePermisosUsuarioEnPaginaWebEmpleado(TipoEmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.tipoempleadoBeanSwingJInternalFrame=new TipoEmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoempleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoempleadoBeanSwingJInternalFrame.getTipoEmpleadoLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_tipo_empleado()!=null) {
					this.tipoempleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoempleadoBeanSwingJInternalFrame.setIdActual(this.empleado.getid_tipo_empleado());
					this.tipoempleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoempleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.tipoempleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordertipoempleado=(TitledBorder)this.tipoempleadoBeanSwingJInternalFrame.jScrollPanelDatosTipoEmpleado.getBorder();

				titledBordertipoempleado.setTitle(titledBorderEmpleado.getTitle() + " -> Tipo Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_empleadoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_tipo_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_empleado = "+this.empleado.getid_tipo_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_instruccionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoinstruccion=true;

			idTienePermisotipoinstruccion=this.tienePermisosUsuarioEnPaginaWebEmpleado(TipoInstruccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoinstruccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.tipoinstruccionBeanSwingJInternalFrame=new TipoInstruccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoinstruccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoinstruccionBeanSwingJInternalFrame.getTipoInstruccionLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_tipo_instruccion()!=null) {
					this.tipoinstruccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoinstruccionBeanSwingJInternalFrame.setIdActual(this.empleado.getid_tipo_instruccion());
					this.tipoinstruccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoinstruccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoinstruccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoInstruccion();
				}

				JInternalFrameBase jinternalFrame =this.tipoinstruccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordertipoinstruccion=(TitledBorder)this.tipoinstruccionBeanSwingJInternalFrame.jScrollPanelDatosTipoInstruccion.getBorder();

				titledBordertipoinstruccion.setTitle(titledBorderEmpleado.getTitle() + " -> Tipo Instruccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_instruccionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_tipo_instruccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_instruccion = "+this.empleado.getid_tipo_instruccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cargoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocargo=true;

			idTienePermisocargo=this.tienePermisosUsuarioEnPaginaWebEmpleado(CargoConstantesFunciones.CLASSNAME);

			if(idTienePermisocargo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.cargoBeanSwingJInternalFrame=new CargoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cargoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cargoBeanSwingJInternalFrame.getCargoLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_cargo()!=null) {
					this.cargoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cargoBeanSwingJInternalFrame.setIdActual(this.empleado.getid_cargo());
					this.cargoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cargoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cargoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCargo();
				}

				JInternalFrameBase jinternalFrame =this.cargoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordercargo=(TitledBorder)this.cargoBeanSwingJInternalFrame.jScrollPanelDatosCargo.getBorder();

				titledBordercargo.setTitle(titledBorderEmpleado.getTitle() + " -> Cargo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cargoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_cargo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cargo = "+this.empleado.getid_cargo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estructuraEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestructura=true;

			idTienePermisoestructura=this.tienePermisosUsuarioEnPaginaWebEmpleado(EstructuraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestructura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estructuraBeanSwingJInternalFrame.getEstructuraLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_estructura()!=null) {
					this.estructuraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estructuraBeanSwingJInternalFrame.setIdActual(this.empleado.getid_estructura());
					this.estructuraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura();
				}

				JInternalFrameBase jinternalFrame =this.estructuraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderestructura=(TitledBorder)this.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

				titledBorderestructura.setTitle(titledBorderEmpleado.getTitle() + " -> Estructura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estructuraEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_estructura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estructura = "+this.empleado.getid_estructura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estructura_seccionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestructuraseccion=true;

			idTienePermisoestructuraseccion=this.tienePermisosUsuarioEnPaginaWebEmpleado(EstructuraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestructuraseccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.estructuraseccionBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estructuraseccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estructuraseccionBeanSwingJInternalFrame.getEstructuraLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_estructura_seccion()!=null) {
					this.estructuraseccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estructuraseccionBeanSwingJInternalFrame.setIdActual(this.empleado.getid_estructura_seccion());
					this.estructuraseccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estructuraseccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estructuraseccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura();
				}

				JInternalFrameBase jinternalFrame =this.estructuraseccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderestructuraseccion=(TitledBorder)this.estructuraseccionBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

				titledBorderestructuraseccion.setTitle(titledBorderEmpleado.getTitle() + " -> Estructura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estructura_seccionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_estructura_seccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estructura_seccion = "+this.empleado.getid_estructura_seccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_empleadoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoempleado=true;

			idTienePermisoestadoempleado=this.tienePermisosUsuarioEnPaginaWebEmpleado(EstadoEmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.estadoempleadoBeanSwingJInternalFrame=new EstadoEmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoempleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoempleadoBeanSwingJInternalFrame.getEstadoEmpleadoLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_estado_empleado()!=null) {
					this.estadoempleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoempleadoBeanSwingJInternalFrame.setIdActual(this.empleado.getid_estado_empleado());
					this.estadoempleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoempleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.estadoempleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBorderestadoempleado=(TitledBorder)this.estadoempleadoBeanSwingJInternalFrame.jScrollPanelDatosEstadoEmpleado.getBorder();

				titledBorderestadoempleado.setTitle(titledBorderEmpleado.getTitle() + " -> Estado Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_empleadoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_estado_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_empleado = "+this.empleado.getid_estado_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_contratoEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocontrato=true;

			idTienePermisotipocontrato=this.tienePermisosUsuarioEnPaginaWebEmpleado(TipoContratoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocontrato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.tipocontratoBeanSwingJInternalFrame=new TipoContratoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocontratoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocontratoBeanSwingJInternalFrame.getTipoContratoLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_tipo_contrato()!=null) {
					this.tipocontratoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocontratoBeanSwingJInternalFrame.setIdActual(this.empleado.getid_tipo_contrato());
					this.tipocontratoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocontratoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocontratoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoContrato();
				}

				JInternalFrameBase jinternalFrame =this.tipocontratoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordertipocontrato=(TitledBorder)this.tipocontratoBeanSwingJInternalFrame.jScrollPanelDatosTipoContrato.getBorder();

				titledBordertipocontrato.setTitle(titledBorderEmpleado.getTitle() + " -> Tipo Contrato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_contratoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_tipo_contrato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_contrato = "+this.empleado.getid_tipo_contrato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.empleado.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.empleado.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonapellidoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getapellido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where apellido like '%"+this.empleado.getapellido()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_completoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getnombre_completo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_completo like '%"+this.empleado.getnombre_completo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmailEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getmail()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where mail like '%"+this.empleado.getmail()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.empleado.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsueldoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getsueldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where sueldo = "+this.empleado.getsueldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.empleado.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cuenta_banco_globalEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocuentabancoglobal=true;

			idTienePermisotipocuentabancoglobal=this.tienePermisosUsuarioEnPaginaWebEmpleado(TipoCuentaBancoGlobalConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocuentabancoglobal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);

				this.tipocuentabancoglobalBeanSwingJInternalFrame=new TipoCuentaBancoGlobalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocuentabancoglobalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocuentabancoglobalBeanSwingJInternalFrame.getTipoCuentaBancoGlobalLogic().setConnexion(this.empleadoLogic.getConnexion());

				if(this.empleado.getid_tipo_cuenta_banco_global()!=null) {
					this.tipocuentabancoglobalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocuentabancoglobalBeanSwingJInternalFrame.setIdActual(this.empleado.getid_tipo_cuenta_banco_global());
					this.tipocuentabancoglobalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocuentabancoglobalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocuentabancoglobalBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCuentaBancoGlobal();
				}

				JInternalFrameBase jinternalFrame =this.tipocuentabancoglobalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEmpleado=(TitledBorder)this.jScrollPanelDatosEmpleado.getBorder();
				TitledBorder titledBordertipocuentabancoglobal=(TitledBorder)this.tipocuentabancoglobalBeanSwingJInternalFrame.jScrollPanelDatosTipoCuentaBancoGlobal.getBorder();

				titledBordertipocuentabancoglobal.setTitle(titledBorderEmpleado.getTitle() + " -> Tipo Cuenta Banco Global");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cuenta_banco_globalEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getid_tipo_cuenta_banco_global()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cuenta_banco_global = "+this.empleado.getid_tipo_cuenta_banco_global().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cuentaEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.getnumero_cuenta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_cuenta like '%"+this.empleado.getnumero_cuenta()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontiene_casaEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.gettiene_casa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where tiene_casa = "+this.empleado.gettiene_casa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontiene_vehiculoEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.getempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.empleado==null) {
						this.empleado = new Empleado();
					}

					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);
				}

				if(this.empleado.gettiene_vehiculo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where tiene_vehiculo = "+this.empleado.gettiene_vehiculo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCargoEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdCargo();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdCentroCosto();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCiudadEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdCiudad();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdEmpresa();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoCivilEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdEstadoCivil();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoEmpleadoEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdEstadoEmpleado();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstructuraEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdEstructura();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstructuraSeccionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdEstructuraSeccion();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdPais();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProvinciaEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdProvincia();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdReligionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdReligion();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdSucursal();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoContratoEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdTipoContrato();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCuentaBancoGlobalEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdTipoCuentaBancoGlobal();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoEmpleadoEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdTipoEmpleado();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGeneroEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdTipoGenero();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoInstruccionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEmpleado(false,false);

			this.getEmpleadosFK_IdTipoInstruccion();

			this.inicializarActualizarBindingEmpleado(false);

			//if(EmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.empleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameEmpleado() {
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
		

		if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.setVisible(false);	    			
			this.jInternalFrameDetalleFormEmpleado.dispose();
			this.jInternalFrameDetalleFormEmpleado=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
			this.jInternalFrameReporteDinamicoEmpleado.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoEmpleado.dispose();
			this.jInternalFrameReporteDinamicoEmpleado=null;
		}
		
		if(this.jInternalFrameImportacionEmpleado!=null) {
			this.jInternalFrameImportacionEmpleado.setVisible(false);	    			
			this.jInternalFrameImportacionEmpleado.dispose();
			this.jInternalFrameImportacionEmpleado=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessEmpleado();
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			
			if(sTipo.equals("NuevoEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarEmpleado")) {
				jButtonDuplicarEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarEmpleado")) {
				jButtonCopiarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("VerFormEmpleado")) {
				jButtonVerFormEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarEmpleado")) {
				jButtonDuplicarEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarEmpleado")) {
				jButtonDuplicarEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarEmpleado")) {
				jButtonModificarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarEmpleado")) {
				jButtonModificarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarEmpleado")) {
				jButtonModificarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarEmpleado")) {
				jButtonActualizarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarEmpleado")) {
				jButtonActualizarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarEmpleado")) {
				jButtonActualizarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("EliminarEmpleado")) {
				jButtonEliminarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarEmpleado")) {
				jButtonEliminarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarEmpleado")) {
				jButtonEliminarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CancelarEmpleado")) {
				jButtonCancelarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarEmpleado")) {
				jButtonCancelarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarEmpleado")) {
				jButtonCancelarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CerrarEmpleado")) {
				jButtonCerrarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarEmpleado")) {
				jButtonCerrarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarEmpleado")) {
				jButtonCerrarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarEmpleado")) {
				jButtonMostrarOcultarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarEmpleado")) {
				jButtonCancelarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarEmpleado")) {
				jButtonCopiarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarEmpleado")) {
				jButtonVerFormEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarEmpleado")) {
				jButtonCopiarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormEmpleado")) {
				jButtonVerFormEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionEmpleado")) {
				jButtonRecargarInformacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarEmpleado")) {
				jButtonRecargarInformacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionEmpleado")) {
				jButtonRecargarInformacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresEmpleado")) {
				jButtonAnterioresEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarEmpleado")) {
				jButtonAnterioresEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreEmpleado")) {
				jButtonAnterioresEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesEmpleado")) {
				jButtonSiguientesEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarEmpleado")) {
				jButtonSiguientesEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesEmpleado")) {
				jButtonSiguientesEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByEmpleado") || sTipo.equals("MenuItemDetalleAbrirOrderByEmpleado")) {
				jButtonAbrirOrderByEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarEmpleado") || sTipo.equals("MenuItemDetalleMostrarOcultarEmpleado")) {
				jButtonMostrarOcultarEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosEmpleado")) {
				jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarEmpleado")) {
				jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosEmpleado")) {
				jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoEmpleado")) {
				jButtonCerrarReporteDinamicoEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoEmpleado")) {
				jButtonGenerarReporteDinamicoEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoEmpleado")) {
				
				jButtonGenerarExcelReporteDinamicoEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionEmpleado")) {
				jButtonCerrarImportacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionEmpleado")) {
				
				jButtonGenerarImportacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionEmpleado")) {
				
				jButtonAbrirImportacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesEmpleado")) {
				jComboBoxTiposAccionesEmpleadoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesEmpleado")) {
				jComboBoxTiposRelacionesEmpleadoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioEmpleado")) {
				jComboBoxTiposAccionesEmpleadoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarEmpleado")) {
				
				jComboBoxTiposSeleccionarEmpleadoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralEmpleado")) {
				jTextFieldValorCampoGeneralEmpleadoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByEmpleado")) {
				jButtonAbrirOrderByEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarEmpleado")) {
				jButtonAbrirOrderByEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByEmpleado")) {
				jButtonCerrarOrderByEmpleadoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEmpleadoBusqueda")) {
				this.jButtonidEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEmpleadoUpdate")) {
				this.jButtonid_empresaEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEmpleadoBusqueda")) {
				this.jButtonid_empresaEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEmpleadoUpdate")) {
				this.jButtonid_sucursalEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEmpleadoBusqueda")) {
				this.jButtonid_sucursalEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisEmpleadoUpdate")) {
				this.jButtonid_paisEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisEmpleadoBusqueda")) {
				this.jButtonid_paisEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaEmpleadoUpdate")) {
				this.jButtonid_provinciaEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaEmpleadoBusqueda")) {
				this.jButtonid_provinciaEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadEmpleadoUpdate")) {
				this.jButtonid_ciudadEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadEmpleadoBusqueda")) {
				this.jButtonid_ciudadEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoEmpleado")) {
				this.jButtonid_centro_costoEmpleadoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoUpdate")) {
				this.jButtonid_centro_costoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoBusqueda")) {
				this.jButtonid_centro_costoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_religionEmpleadoUpdate")) {
				this.jButtonid_religionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_religionEmpleadoBusqueda")) {
				this.jButtonid_religionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilEmpleadoUpdate")) {
				this.jButtonid_estado_civilEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilEmpleadoBusqueda")) {
				this.jButtonid_estado_civilEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoEmpleadoUpdate")) {
				this.jButtonid_tipo_generoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoEmpleadoBusqueda")) {
				this.jButtonid_tipo_generoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_empleadoEmpleadoUpdate")) {
				this.jButtonid_tipo_empleadoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_empleadoEmpleadoBusqueda")) {
				this.jButtonid_tipo_empleadoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_instruccionEmpleadoUpdate")) {
				this.jButtonid_tipo_instruccionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_instruccionEmpleadoBusqueda")) {
				this.jButtonid_tipo_instruccionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cargoEmpleadoUpdate")) {
				this.jButtonid_cargoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cargoEmpleadoBusqueda")) {
				this.jButtonid_cargoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEmpleadoUpdate")) {
				this.jButtonid_estructuraEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEmpleadoBusqueda")) {
				this.jButtonid_estructuraEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructura_seccionEmpleadoUpdate")) {
				this.jButtonid_estructura_seccionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructura_seccionEmpleadoBusqueda")) {
				this.jButtonid_estructura_seccionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_empleadoEmpleadoUpdate")) {
				this.jButtonid_estado_empleadoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_empleadoEmpleadoBusqueda")) {
				this.jButtonid_estado_empleadoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_contratoEmpleadoUpdate")) {
				this.jButtonid_tipo_contratoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_contratoEmpleadoBusqueda")) {
				this.jButtonid_tipo_contratoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoEmpleadoBusqueda")) {
				this.jButtoncodigoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreEmpleadoBusqueda")) {
				this.jButtonnombreEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoEmpleadoBusqueda")) {
				this.jButtonapellidoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoEmpleadoBusqueda")) {
				this.jButtonnombre_completoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("mailEmpleadoBusqueda")) {
				this.jButtonmailEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionEmpleadoBusqueda")) {
				this.jButtondireccionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sueldoEmpleadoBusqueda")) {
				this.jButtonsueldoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoEmpleadoBusqueda")) {
				this.jButtontelefonoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cuenta_banco_globalEmpleadoUpdate")) {
				this.jButtonid_tipo_cuenta_banco_globalEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cuenta_banco_globalEmpleadoBusqueda")) {
				this.jButtonid_tipo_cuenta_banco_globalEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuentaEmpleadoBusqueda")) {
				this.jButtonnumero_cuentaEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tiene_casaEmpleadoBusqueda")) {
				this.jButtontiene_casaEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tiene_vehiculoEmpleadoBusqueda")) {
				this.jButtontiene_vehiculoEmpleadoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoEmpleado")) {
				this.jButtonid_centro_costoEmpleadoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCargoEmpleado")) {
				this.jButtonFK_IdCargoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoEmpleado")) {
				this.jButtonFK_IdCentroCostoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCiudadEmpleado")) {
				this.jButtonFK_IdCiudadEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoCivilEmpleado")) {
				this.jButtonFK_IdEstadoCivilEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoEmpleadoEmpleado")) {
				this.jButtonFK_IdEstadoEmpleadoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstructuraEmpleado")) {
				this.jButtonFK_IdEstructuraEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstructuraSeccionEmpleado")) {
				this.jButtonFK_IdEstructuraSeccionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisEmpleado")) {
				this.jButtonFK_IdPaisEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProvinciaEmpleado")) {
				this.jButtonFK_IdProvinciaEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdReligionEmpleado")) {
				this.jButtonFK_IdReligionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoContratoEmpleado")) {
				this.jButtonFK_IdTipoContratoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCuentaBancoGlobalEmpleado")) {
				this.jButtonFK_IdTipoCuentaBancoGlobalEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoEmpleadoEmpleado")) {
				this.jButtonFK_IdTipoEmpleadoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoGeneroEmpleado")) {
				this.jButtonFK_IdTipoGeneroEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoInstruccionEmpleado")) {
				this.jButtonFK_IdTipoInstruccionEmpleadoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("RelacionesFinformas_de_pagoEmpleado")) {
				this.jButtonRelacionesFinformas_de_pagoEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("RelacionesFinNormalEmpleado")) {
				this.jButtonRelacionesFinNormalEmpleadoActionPerformed(evt);
			};
			
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessEmpleado();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Empleado empleadoLocal=null;
			
			if(!this.getEsControlTabla()) {
				empleadoLocal=this.empleado;
			} else {
				empleadoLocal=this.empleadoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
							
				
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
								
						
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
								
				
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
							
				
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
								
				
				


				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosEmpleado")) {
					jCheckBoxSeleccionarTodosEmpleadoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosEmpleado")) {
					jCheckBoxSeleccionadosEmpleadoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarEmpleado")) {
					
				}
				
				


				
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
												
				
				


				
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_paisEmpleado")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado;
				}

				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					//classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormEmpleado(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisEmpleado")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
				//recargarFormEmpleadoPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEmpleadoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisEmpleado")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado;
				}

				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					//classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormEmpleado(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisEmpleado")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
				//recargarFormEmpleadoPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
			}
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.empleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.empleado);
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisEmpleado")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado;
				}

				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					//classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormEmpleado(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisEmpleado")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
				//recargarFormEmpleadoPais(jComboBoxid_paisFK_IdPaisEmpleado,"FK_IdPais");
			}
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Empleado.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Empleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.empleadoAnterior =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.empleadoAnterior =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarEmpleado")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosEmpleadoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosEmpleado.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.empleado =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.empleado =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.empleado);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarEmpleado")) {
				
				}
				
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarEmpleado")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosEmpleado.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarEmpleado")) {
			
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	
		public void jButtonRelacionesFinformas_de_pagoEmpleadoActionPerformed(ActionEvent evt) {
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setVisible(false);

			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.setVisible(true);
			}
		}

		public void jButtonRelacionesFinNormalEmpleadoActionPerformed(ActionEvent evt) {
			if(this.jInternalFrameDetalleFormEmpleado!=null) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.setVisible(false);
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setVisible(false);

			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.setVisible(true);
			}
		};
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessEmpleado();
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			if(sTipo.equals("NuevoEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarEmpleado")) {
				jButtonDuplicarEmpleadoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarEmpleado")) {
				jButtonCopiarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormEmpleado")) {
				jButtonVerFormEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesEmpleado")) {
				jButtonNuevoEmpleadoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarEmpleado")) {
				jButtonModificarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarEmpleado")) {
				jButtonActualizarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarEmpleado")) {
				jButtonEliminarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarEmpleado")) {
				jButtonCancelarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarEmpleado")) {
				jButtonCerrarEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosEmpleado")) {
				jButtonGuardarCambiosEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosEmpleado")) {
				jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByEmpleado")) {
				jButtonAbrirOrderByEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionEmpleado")) {
				jButtonRecargarInformacionEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresEmpleado")) {
				jButtonAnterioresEmpleadoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesEmpleado")) {
				jButtonSiguientesEmpleadoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEmpleadoBusqueda")) {
				this.jButtonidEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEmpleadoUpdate")) {
				this.jButtonid_empresaEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEmpleadoBusqueda")) {
				this.jButtonid_empresaEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEmpleadoUpdate")) {
				this.jButtonid_sucursalEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEmpleadoBusqueda")) {
				this.jButtonid_sucursalEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisEmpleadoUpdate")) {
				this.jButtonid_paisEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisEmpleadoBusqueda")) {
				this.jButtonid_paisEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaEmpleadoUpdate")) {
				this.jButtonid_provinciaEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaEmpleadoBusqueda")) {
				this.jButtonid_provinciaEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadEmpleadoUpdate")) {
				this.jButtonid_ciudadEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadEmpleadoBusqueda")) {
				this.jButtonid_ciudadEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoEmpleado")) {
				this.jButtonid_centro_costoEmpleadoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoUpdate")) {
				this.jButtonid_centro_costoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoEmpleadoBusqueda")) {
				this.jButtonid_centro_costoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_religionEmpleadoUpdate")) {
				this.jButtonid_religionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_religionEmpleadoBusqueda")) {
				this.jButtonid_religionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilEmpleadoUpdate")) {
				this.jButtonid_estado_civilEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilEmpleadoBusqueda")) {
				this.jButtonid_estado_civilEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoEmpleadoUpdate")) {
				this.jButtonid_tipo_generoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoEmpleadoBusqueda")) {
				this.jButtonid_tipo_generoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_empleadoEmpleadoUpdate")) {
				this.jButtonid_tipo_empleadoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_empleadoEmpleadoBusqueda")) {
				this.jButtonid_tipo_empleadoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_instruccionEmpleadoUpdate")) {
				this.jButtonid_tipo_instruccionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_instruccionEmpleadoBusqueda")) {
				this.jButtonid_tipo_instruccionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cargoEmpleadoUpdate")) {
				this.jButtonid_cargoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cargoEmpleadoBusqueda")) {
				this.jButtonid_cargoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEmpleadoUpdate")) {
				this.jButtonid_estructuraEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEmpleadoBusqueda")) {
				this.jButtonid_estructuraEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructura_seccionEmpleadoUpdate")) {
				this.jButtonid_estructura_seccionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructura_seccionEmpleadoBusqueda")) {
				this.jButtonid_estructura_seccionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_empleadoEmpleadoUpdate")) {
				this.jButtonid_estado_empleadoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_empleadoEmpleadoBusqueda")) {
				this.jButtonid_estado_empleadoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_contratoEmpleadoUpdate")) {
				this.jButtonid_tipo_contratoEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_contratoEmpleadoBusqueda")) {
				this.jButtonid_tipo_contratoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoEmpleadoBusqueda")) {
				this.jButtoncodigoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreEmpleadoBusqueda")) {
				this.jButtonnombreEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoEmpleadoBusqueda")) {
				this.jButtonapellidoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoEmpleadoBusqueda")) {
				this.jButtonnombre_completoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("mailEmpleadoBusqueda")) {
				this.jButtonmailEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionEmpleadoBusqueda")) {
				this.jButtondireccionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sueldoEmpleadoBusqueda")) {
				this.jButtonsueldoEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoEmpleadoBusqueda")) {
				this.jButtontelefonoEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cuenta_banco_globalEmpleadoUpdate")) {
				this.jButtonid_tipo_cuenta_banco_globalEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cuenta_banco_globalEmpleadoBusqueda")) {
				this.jButtonid_tipo_cuenta_banco_globalEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuentaEmpleadoBusqueda")) {
				this.jButtonnumero_cuentaEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tiene_casaEmpleadoBusqueda")) {
				this.jButtontiene_casaEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tiene_vehiculoEmpleadoBusqueda")) {
				this.jButtontiene_vehiculoEmpleadoBusquedaActionPerformed(evt);
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessEmpleado();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameEmpleado")) {
				closingInternalFrameEmpleado();
				
			} else if(sTipo.equals("jButtonCancelarEmpleado")) {
				JInternalFrameBase jInternalFrameDetalleFormEmpleado = (JInternalFrameBase)evt.getSource();
	            	
	            EmpleadoBeanSwingJInternalFrame jInternalFrameParent=(EmpleadoBeanSwingJInternalFrame)jInternalFrameDetalleFormEmpleado.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarEmpleadoActionPerformed(null);
			}
			
			EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.empleado,new Object(),this.empleadoParameterGeneral,this.empleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormEmpleado(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormEmpleado(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormEmpleado(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.empleado)) {
			if(!esControlTabla) {
				if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);			
				}
				
				if(this.empleadoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualEmpleado(this.empleado,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.empleadoReturnGeneral=empleadoLogic.procesarEventosEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.empleadoLogic.getEmpleados(),this.empleado,this.empleadoParameterGeneral,this.isEsNuevoEmpleado,classes);//this.empleadoLogic.getEmpleado()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanEmpleado(this.empleadoReturnGeneral,this.empleadoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.empleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanEmpleado(classes,this.empleadoReturnGeneral,this.empleadoBean,false);
					}
						
					if(this.empleadoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyEmpleado(this.empleadoReturnGeneral.getEmpleado());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioEmpleado(this.empleadoReturnGeneral.getEmpleado());	
					}
						
					if(this.empleadoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioEmpleado(this.empleadoReturnGeneral.getEmpleado(),classes);//this.empleadoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioEmpleado(this.empleado,classes);//this.empleadoBean);									
				}
			
				if(EmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualEmpleado(this.empleado,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEmpleado(this.empleado);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.empleadoAnterior!=null) {
						this.empleado=this.empleadoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.empleadoReturnGeneral=empleadoLogic.procesarEventosEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.empleadoLogic.getEmpleados(),this.empleado,this.empleadoParameterGeneral,this.isEsNuevoEmpleado,classes);//this.empleadoLogic.getEmpleado()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.empleadoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.empleadoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.empleadoReturnGeneral.getEmpleado(),empleadoLogic.getEmpleados());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.empleadoReturnGeneral.getEmpleado(),this.empleados);
				}
				//ARCHITECTURE
				
				//this.jTableDatosEmpleado.repaint();
				
				//((AbstractTableModel) this.jTableDatosEmpleado.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosEmpleado();
			}
		}
	}
	
	public void actualizarVisualTableDatosEmpleado() throws Exception {
		
		EmpleadoModel empleadoModel=(EmpleadoModel)this.jTableDatosEmpleado.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			empleadoModel.empleados=this.empleadoLogic.getEmpleados();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			empleadoModel.empleados=this.empleados;
		}
		
		
		((EmpleadoModel) this.jTableDatosEmpleado.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaEmpleado() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getempleadoAnterior(),this.empleadoLogic.getEmpleados());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getempleadoAnterior(),this.empleados);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosEmpleado();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioEmpleado(Empleado empleado,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar_NM.class)) {
					this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.setCargaFamiliar_NMs(empleado.getCargaFamiliar_NMs());
					this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.inicializarActualizarBindingTablaCargaFamiliar_NM(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Curso.class)) {
					this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.setCursos(empleado.getCursos());
					this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCurso(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Prestamo.class)) {
					this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.setPrestamos(empleado.getPrestamos());
					this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrestamo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoIdioma.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.setEmpleadoIdiomas(empleado.getEmpleadoIdiomas());
					this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoIdioma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(empleado.getHistorialPagoMesNomis());
					this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoMesNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(empleado.getEmpleadoImpuestoRentas());
					this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoImpuestoRenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoGeneralEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.setDatoGeneralEmpleado(empleado.getDatoGeneralEmpleado());
					this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDatoGeneralEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Area.class)) {
					this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.setAreas(empleado.getAreas());
					this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.inicializarActualizarBindingTablaArea(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.setGastoEmpleados(empleado.getGastoEmpleados());
					this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGastoEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHobby.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.setEmpleadoHobbys(empleado.getEmpleadoHobbys());
					this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoHobby(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEMail.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.setEmpleadoEMails(empleado.getEmpleadoEMails());
					this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEMail(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RasgoPersonal.class)) {
					this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.setRasgoPersonals(empleado.getRasgoPersonals());
					this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.inicializarActualizarBindingTablaRasgoPersonal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Referencia.class)) {
					this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.setReferencias(empleado.getReferencias());
					this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferencia(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono_NM.class)) {
					this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.setTelefono_NMs(empleado.getTelefono_NMs());
					this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.inicializarActualizarBindingTablaTelefono_NM(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(empleado.getNovedads());
					this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHerra.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.setEmpleadoHerras(empleado.getEmpleadoHerras());
					this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoHerra(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEnfer.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.setEmpleadoEnfers(empleado.getEmpleadoEnfers());
					this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEnfer(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Visa.class)) {
					this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.setVisas(empleado.getVisas());
					this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.inicializarActualizarBindingTablaVisa(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Seguro.class)) {
					this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.setSeguros(empleado.getSeguros());
					this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.inicializarActualizarBindingTablaSeguro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(empleado.getAsistenciaMensuals());
					this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoDisca.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.setEmpleadoDiscas(empleado.getEmpleadoDiscas());
					this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoDisca(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProfesionEmplea.class)) {
					this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.setProfesionEmpleas(empleado.getProfesionEmpleas());
					this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProfesionEmplea(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(empleado.getRubroEmpleados());
					this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoConstante.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.setEmpleadoConstantes(empleado.getEmpleadoConstantes());
					this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoConstante(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TallaVestido.class)) {
					this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.setTallaVestidos(empleado.getTallaVestidos());
					this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTallaVestido(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NovedadNomi.class)) {
					this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.setNovedadNomis(empleado.getNovedadNomis());
					this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedadNomi(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.empleado,new Object(),generalEntityParameterGeneral,this.empleadoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.empleadoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=EmpleadoConstantesFunciones.getClassesRelationshipsOfEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=EmpleadoConstantesFunciones.getClassesRelationshipsFromStringsOfEmpleado(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormEmpleado(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				EmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.empleado,new Object(),generalEntityParameterGeneral,this.empleadoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioEmpleado(EmpleadoBean empleadoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar_NM.class)) {
					this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.setCargaFamiliar_NMs(empleado.getCargaFamiliar_NMs());
					this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.inicializarActualizarBindingTablaCargaFamiliar_NM(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Curso.class)) {
					this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.setCursos(empleado.getCursos());
					this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCurso(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Prestamo.class)) {
					this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.setPrestamos(empleado.getPrestamos());
					this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrestamo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoIdioma.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.setEmpleadoIdiomas(empleado.getEmpleadoIdiomas());
					this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoIdioma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(empleado.getHistorialPagoMesNomis());
					this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoMesNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(empleado.getEmpleadoImpuestoRentas());
					this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoImpuestoRenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoGeneralEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.setDatoGeneralEmpleado(empleado.getDatoGeneralEmpleado());
					this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDatoGeneralEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Area.class)) {
					this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.setAreas(empleado.getAreas());
					this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.inicializarActualizarBindingTablaArea(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.setGastoEmpleados(empleado.getGastoEmpleados());
					this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGastoEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHobby.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.setEmpleadoHobbys(empleado.getEmpleadoHobbys());
					this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoHobby(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEMail.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.setEmpleadoEMails(empleado.getEmpleadoEMails());
					this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEMail(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RasgoPersonal.class)) {
					this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.setRasgoPersonals(empleado.getRasgoPersonals());
					this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.inicializarActualizarBindingTablaRasgoPersonal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Referencia.class)) {
					this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.setReferencias(empleado.getReferencias());
					this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferencia(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono_NM.class)) {
					this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.setTelefono_NMs(empleado.getTelefono_NMs());
					this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.inicializarActualizarBindingTablaTelefono_NM(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(empleado.getNovedads());
					this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHerra.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.setEmpleadoHerras(empleado.getEmpleadoHerras());
					this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoHerra(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEnfer.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.setEmpleadoEnfers(empleado.getEmpleadoEnfers());
					this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEnfer(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Visa.class)) {
					this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.setVisas(empleado.getVisas());
					this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.inicializarActualizarBindingTablaVisa(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Seguro.class)) {
					this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.setSeguros(empleado.getSeguros());
					this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.inicializarActualizarBindingTablaSeguro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(empleado.getAsistenciaMensuals());
					this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoDisca.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.setEmpleadoDiscas(empleado.getEmpleadoDiscas());
					this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoDisca(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProfesionEmplea.class)) {
					this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.setProfesionEmpleas(empleado.getProfesionEmpleas());
					this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProfesionEmplea(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(empleado.getRubroEmpleados());
					this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoConstante.class)) {
					this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.setEmpleadoConstantes(empleado.getEmpleadoConstantes());
					this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoConstante(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TallaVestido.class)) {
					this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.setTallaVestidos(empleado.getTallaVestidos());
					this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTallaVestido(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NovedadNomi.class)) {
					this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.setNovedadNomis(empleado.getNovedadNomis());
					this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedadNomi(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanEmpleado(ArrayList<Classe> classes,EmpleadoReturnGeneral empleadoReturnGeneral,EmpleadoBean empleadoBean,Boolean conDefault) throws Exception {
		
			this.empleadoBean.setCargaFamiliar_NMs(empleadoReturnGeneral.getEmpleado().getCargaFamiliar_NMs());
			this.empleadoBean.setCursos(empleadoReturnGeneral.getEmpleado().getCursos());
			this.empleadoBean.setPrestamos(empleadoReturnGeneral.getEmpleado().getPrestamos());
			this.empleadoBean.setEmpleadoIdiomas(empleadoReturnGeneral.getEmpleado().getEmpleadoIdiomas());
			this.empleadoBean.setHistorialPagoMesNomis(empleadoReturnGeneral.getEmpleado().getHistorialPagoMesNomis());
			this.empleadoBean.setEmpleadoImpuestoRentas(empleadoReturnGeneral.getEmpleado().getEmpleadoImpuestoRentas());
			this.empleadoBean.setDatoGeneralEmpleado(empleadoReturnGeneral.getEmpleado().getDatoGeneralEmpleado());
			this.empleadoBean.setAreas(empleadoReturnGeneral.getEmpleado().getAreas());
			this.empleadoBean.setGastoEmpleados(empleadoReturnGeneral.getEmpleado().getGastoEmpleados());
			this.empleadoBean.setEmpleadoHobbys(empleadoReturnGeneral.getEmpleado().getEmpleadoHobbys());
			this.empleadoBean.setEmpleadoEMails(empleadoReturnGeneral.getEmpleado().getEmpleadoEMails());
			this.empleadoBean.setRasgoPersonals(empleadoReturnGeneral.getEmpleado().getRasgoPersonals());
			this.empleadoBean.setReferencias(empleadoReturnGeneral.getEmpleado().getReferencias());
			this.empleadoBean.setTelefono_NMs(empleadoReturnGeneral.getEmpleado().getTelefono_NMs());
			this.empleadoBean.setNovedads(empleadoReturnGeneral.getEmpleado().getNovedads());
			this.empleadoBean.setEmpleadoHerras(empleadoReturnGeneral.getEmpleado().getEmpleadoHerras());
			this.empleadoBean.setEmpleadoEnfers(empleadoReturnGeneral.getEmpleado().getEmpleadoEnfers());
			this.empleadoBean.setVisas(empleadoReturnGeneral.getEmpleado().getVisas());
			this.empleadoBean.setSeguros(empleadoReturnGeneral.getEmpleado().getSeguros());
			this.empleadoBean.setAsistenciaMensuals(empleadoReturnGeneral.getEmpleado().getAsistenciaMensuals());
			this.empleadoBean.setEmpleadoDiscas(empleadoReturnGeneral.getEmpleado().getEmpleadoDiscas());
			this.empleadoBean.setProfesionEmpleas(empleadoReturnGeneral.getEmpleado().getProfesionEmpleas());
			this.empleadoBean.setRubroEmpleados(empleadoReturnGeneral.getEmpleado().getRubroEmpleados());
			this.empleadoBean.setEmpleadoConstantes(empleadoReturnGeneral.getEmpleado().getEmpleadoConstantes());
			this.empleadoBean.setTallaVestidos(empleadoReturnGeneral.getEmpleado().getTallaVestidos());
			this.empleadoBean.setNovedadNomis(empleadoReturnGeneral.getEmpleado().getNovedadNomis());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualEmpleado(Empleado empleado,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar_NM.class)) {
					empleado.setCargaFamiliar_NMs(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmBeanSwingJInternalFrame.cargafamiliar_nmLogic.getCargaFamiliar_NMs());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Curso.class)) {
					empleado.setCursos(this.jInternalFrameDetalleFormEmpleado.cursoBeanSwingJInternalFrame.cursoLogic.getCursos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Prestamo.class)) {
					empleado.setPrestamos(this.jInternalFrameDetalleFormEmpleado.prestamoBeanSwingJInternalFrame.prestamoLogic.getPrestamos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoIdioma.class)) {
					empleado.setEmpleadoIdiomas(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaBeanSwingJInternalFrame.empleadoidiomaLogic.getEmpleadoIdiomas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					empleado.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					empleado.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoGeneralEmpleado.class)) {
				empleado.setDatoGeneralEmpleado(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoBeanSwingJInternalFrame.datogeneralempleadoLogic.getDatoGeneralEmpleado());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Area.class)) {
					empleado.setAreas(this.jInternalFrameDetalleFormEmpleado.areaBeanSwingJInternalFrame.areaLogic.getAreas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoEmpleado.class)) {
					empleado.setGastoEmpleados(this.jInternalFrameDetalleFormEmpleado.gastoempleadoBeanSwingJInternalFrame.gastoempleadoLogic.getGastoEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHobby.class)) {
					empleado.setEmpleadoHobbys(this.jInternalFrameDetalleFormEmpleado.empleadohobbyBeanSwingJInternalFrame.empleadohobbyLogic.getEmpleadoHobbys());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEMail.class)) {
					empleado.setEmpleadoEMails(this.jInternalFrameDetalleFormEmpleado.empleadoemailBeanSwingJInternalFrame.empleadoemailLogic.getEmpleadoEMails());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RasgoPersonal.class)) {
					empleado.setRasgoPersonals(this.jInternalFrameDetalleFormEmpleado.rasgopersonalBeanSwingJInternalFrame.rasgopersonalLogic.getRasgoPersonals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Referencia.class)) {
					empleado.setReferencias(this.jInternalFrameDetalleFormEmpleado.referenciaBeanSwingJInternalFrame.referenciaLogic.getReferencias());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono_NM.class)) {
					empleado.setTelefono_NMs(this.jInternalFrameDetalleFormEmpleado.telefono_nmBeanSwingJInternalFrame.telefono_nmLogic.getTelefono_NMs());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					empleado.setNovedads(this.jInternalFrameDetalleFormEmpleado.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoHerra.class)) {
					empleado.setEmpleadoHerras(this.jInternalFrameDetalleFormEmpleado.empleadoherraBeanSwingJInternalFrame.empleadoherraLogic.getEmpleadoHerras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEnfer.class)) {
					empleado.setEmpleadoEnfers(this.jInternalFrameDetalleFormEmpleado.empleadoenferBeanSwingJInternalFrame.empleadoenferLogic.getEmpleadoEnfers());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Visa.class)) {
					empleado.setVisas(this.jInternalFrameDetalleFormEmpleado.visaBeanSwingJInternalFrame.visaLogic.getVisas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Seguro.class)) {
					empleado.setSeguros(this.jInternalFrameDetalleFormEmpleado.seguroBeanSwingJInternalFrame.seguroLogic.getSeguros());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					empleado.setAsistenciaMensuals(this.jInternalFrameDetalleFormEmpleado.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoDisca.class)) {
					empleado.setEmpleadoDiscas(this.jInternalFrameDetalleFormEmpleado.empleadodiscaBeanSwingJInternalFrame.empleadodiscaLogic.getEmpleadoDiscas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProfesionEmplea.class)) {
					empleado.setProfesionEmpleas(this.jInternalFrameDetalleFormEmpleado.profesionempleaBeanSwingJInternalFrame.profesionempleaLogic.getProfesionEmpleas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					empleado.setRubroEmpleados(this.jInternalFrameDetalleFormEmpleado.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoConstante.class)) {
					empleado.setEmpleadoConstantes(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteBeanSwingJInternalFrame.empleadoconstanteLogic.getEmpleadoConstantes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TallaVestido.class)) {
					empleado.setTallaVestidos(this.jInternalFrameDetalleFormEmpleado.tallavestidoBeanSwingJInternalFrame.tallavestidoLogic.getTallaVestidos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NovedadNomi.class)) {
					empleado.setNovedadNomis(this.jInternalFrameDetalleFormEmpleado.novedadnomiBeanSwingJInternalFrame.novedadnomiLogic.getNovedadNomis());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.empleado)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormEmpleado = new EmpleadoDetalleFormJInternalFrame(jDesktopPane,this.empleadoSessionBean.getConGuardarRelaciones(),this.empleadoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormEmpleado);
		this.jInternalFrameDetalleFormEmpleado.setVisible(false);
		this.jInternalFrameDetalleFormEmpleado.setSelected(false);						
		
		this.jInternalFrameDetalleFormEmpleado.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormEmpleado.empleadoLogic=this.empleadoLogic;
		
		this.cargarCombosFrameForeignKeyEmpleado("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleEmpleado();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEmpleado();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyEmpleado("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyEmpleado();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormEmpleado.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEmpleado"));
		
		this.jInternalFrameDetalleFormEmpleado.jButtonModificarEmpleado.addActionListener(new ButtonActionListener(this,"ModificarEmpleado"));

		
		this.jInternalFrameDetalleFormEmpleado.jButtonModificarToolBarEmpleado.addActionListener(new ButtonActionListener(this,"ModificarToolBarEmpleado"));
					
		this.jInternalFrameDetalleFormEmpleado.jMenuItemModificarEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemModificarEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.addActionListener (new ButtonActionListener(this,"ActualizarEmpleado"));
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonActualizarToolBarEmpleado.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEmpleado"));
						
		this.jInternalFrameDetalleFormEmpleado.jMenuItemActualizarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.addActionListener (new ButtonActionListener(this,"EliminarEmpleado"));
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonEliminarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"EliminarToolBarEmpleado"));
								
		this.jInternalFrameDetalleFormEmpleado.jMenuItemEliminarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.addActionListener (new ButtonActionListener(this,"CancelarEmpleado"));
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonCancelarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"CancelarToolBarEmpleado"));
					
		this.jInternalFrameDetalleFormEmpleado.jMenuItemCancelarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEmpleado"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jMenuItemDetalleCerrarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosToolBarEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEmpleado"));
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosToolBarEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEmpleado"));
		
		
		
		this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEmpleado"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonidEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoBusqueda"));
		//jButtonid_centro_costoEmpleado.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoEmpleadoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleado.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleado"));
		//jButtonid_centro_costoEmpleadoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtoncodigoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"codigoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombreEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombreEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonapellidoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"apellidoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombre_completoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonmailEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"mailEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtondireccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"direccionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonsueldoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"sueldoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontelefonoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnumero_cuentaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_casaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_casaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_vehiculoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_vehiculoEmpleadoBusqueda"));
		
		
		
				this.jInternalFrameDetalleFormEmpleado.jButtonRelacionesFinformas_de_pagoEmpleado.addActionListener (new ButtonActionListener(this,"RelacionesFinformas_de_pagoEmpleado"));
				this.jInternalFrameDetalleFormEmpleado.jButtonRelacionesFinNormalEmpleado.addActionListener (new ButtonActionListener(this,"RelacionesFinNormalEmpleado"));;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEmpleado"));
		
		
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFinformas_de_pagoEmpleado"));;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameEmpleado"));
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEmpleado"));
		}
		
		this.jTableDatosEmpleado.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarEmpleado"));
		
		this.jTableDatosEmpleado.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarEmpleado"));
		
		this.jButtonNuevoEmpleado.addActionListener(new ButtonActionListener(this,"NuevoEmpleado"));
		
		this.jButtonDuplicarEmpleado.addActionListener(new ButtonActionListener(this,"DuplicarEmpleado"));
		
		this.jButtonCopiarEmpleado.addActionListener(new ButtonActionListener(this,"CopiarEmpleado"));
		
		this.jButtonVerFormEmpleado.addActionListener(new ButtonActionListener(this,"VerFormEmpleado"));
		
		
		this.jButtonNuevoToolBarEmpleado.addActionListener(new ButtonActionListener(this,"NuevoToolBarEmpleado"));
			
		this.jButtonDuplicarToolBarEmpleado.addActionListener(new ButtonActionListener(this,"DuplicarToolBarEmpleado"));
			
		this.jMenuItemNuevoEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemNuevoEmpleado"));
			
		this.jMenuItemDuplicarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarEmpleado"));		
		
		
		this.jButtonNuevoRelacionesEmpleado.addActionListener (new ButtonActionListener(this,"NuevoRelacionesEmpleado"));
		
		
		this.jButtonNuevoRelacionesToolBarEmpleado.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarEmpleado"));
			
		this.jMenuItemNuevoRelacionesEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesEmpleado"));		
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonModificarEmpleado.addActionListener(new ButtonActionListener(this,"ModificarEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonModificarToolBarEmpleado.addActionListener(new ButtonActionListener(this,"ModificarToolBarEmpleado"));
			
			this.jInternalFrameDetalleFormEmpleado.jMenuItemModificarEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemModificarEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormEmpleado.jButtonActualizarEmpleado.addActionListener (new ButtonActionListener(this,"ActualizarEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonActualizarToolBarEmpleado.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEmpleado"));
				
			this.jInternalFrameDetalleFormEmpleado.jMenuItemActualizarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonEliminarEmpleado.addActionListener (new ButtonActionListener(this,"EliminarEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonEliminarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"EliminarToolBarEmpleado"));
						
			this.jInternalFrameDetalleFormEmpleado.jMenuItemEliminarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonCancelarEmpleado.addActionListener (new ButtonActionListener(this,"CancelarEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonCancelarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"CancelarToolBarEmpleado"));
			
			this.jInternalFrameDetalleFormEmpleado.jMenuItemCancelarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEmpleado"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarEmpleado.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarEmpleado"));		
		
		
		this.jButtonCerrarEmpleado.addActionListener (new ButtonActionListener(this,"CerrarEmpleado"));
		
		
		this.jButtonCerrarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"CerrarToolBarEmpleado"));
			
		this.jMenuItemCerrarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCerrarEmpleado"));
			
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jMenuItemDetalleCerrarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosToolBarEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEmpleado"));
		}
		
		this.jButtonCopiarToolBarEmpleado.addActionListener (new ButtonActionListener(this,"CopiarToolBarEmpleado"));
			
		this.jButtonVerFormToolBarEmpleado.addActionListener (new ButtonActionListener(this,"VerFormToolBarEmpleado"));
		
		this.jMenuItemGuardarCambiosEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosEmpleado"));
			
		this.jMenuItemCopiarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCopiarEmpleado"));		
		
		this.jMenuItemVerFormEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemVerFormEmpleado"));		
		
		
		this.jButtonGuardarCambiosTablaEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEmpleado"));
		
		
		this.jButtonGuardarCambiosTablaToolBarEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarEmpleado"));
			
		this.jMenuItemGuardarCambiosTablaEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEmpleado"));		
		
		
		
		this.jButtonRecargarInformacionEmpleado.addActionListener (new ButtonActionListener(this,"RecargarInformacionEmpleado"));
					
		this.jButtonRecargarInformacionToolBarEmpleado.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarEmpleado"));
		
		this.jMenuItemRecargarInformacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionEmpleado"));		
		
		
		
		this.jButtonAnterioresEmpleado.addActionListener (new ButtonActionListener(this,"AnterioresEmpleado"));
		
		
		this.jButtonAnterioresToolBarEmpleado.addActionListener (new ButtonActionListener(this,"AnterioresToolBarEmpleado"));
		
		this.jMenuItemAnterioresEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresEmpleado"));		
		
		
		this.jButtonSiguientesEmpleado.addActionListener (new ButtonActionListener(this,"SiguientesEmpleado"));
		
		
		this.jButtonSiguientesToolBarEmpleado.addActionListener (new ButtonActionListener(this,"SiguientesToolBarEmpleado"));
			
		this.jMenuItemSiguientesEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesEmpleado"));
			
		this.jMenuItemAbrirOrderByEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByEmpleado"));
			
		this.jMenuItemMostrarOcultarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarEmpleado"));
			
		this.jMenuItemDetalleAbrirOrderByEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByEmpleado"));
			
		this.jMenuItemDetalleMostarOcultarEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarEmpleado"));		
		
		
		this.jButtonNuevoGuardarCambiosEmpleado.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosEmpleado"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarEmpleado.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarEmpleado"));
			
		this.jMenuItemNuevoGuardarCambiosEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosEmpleado"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosEmpleado.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosEmpleado"));

		this.jCheckBoxSeleccionadosEmpleado.addItemListener(new CheckBoxItemListener(this,"SeleccionadosEmpleado"));
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEmpleado"));
		}
		
		
		this.jComboBoxTiposRelacionesEmpleado.addActionListener (new ButtonActionListener(this,"TiposRelacionesEmpleado"));
			
		this.jComboBoxTiposAccionesEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesEmpleado"));
					
		this.jComboBoxTiposSeleccionarEmpleado.addActionListener (new ButtonActionListener(this,"TiposSeleccionarEmpleado"));
			
		this.jTextFieldValorCampoGeneralEmpleado.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralEmpleado"));		
		
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonidEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoBusqueda"));
		//jButtonid_centro_costoEmpleado.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoEmpleadoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleado.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleado"));
		//jButtonid_centro_costoEmpleadoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtoncodigoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"codigoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombreEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombreEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonapellidoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"apellidoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombre_completoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonmailEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"mailEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtondireccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"direccionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonsueldoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"sueldoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontelefonoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnumero_cuentaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_casaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_casaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_vehiculoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_vehiculoEmpleadoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCargoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCargoEmpleado"));

			this.jButtonFK_IdCentroCostoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoEmpleado"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoEmpleado.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleado"));

			this.jButtonFK_IdCiudadEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCiudadEmpleado"));

			this.jButtonFK_IdEstadoCivilEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilEmpleado"));

			this.jButtonFK_IdEstadoEmpleadoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstadoEmpleadoEmpleado"));

			this.jButtonFK_IdEstructuraEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEmpleado"));

			this.jButtonFK_IdEstructuraSeccionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraSeccionEmpleado"));

			this.jButtonFK_IdPaisEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdPaisEmpleado"));

			this.jButtonFK_IdProvinciaEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdProvinciaEmpleado"));

			this.jButtonFK_IdReligionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdReligionEmpleado"));

			this.jButtonFK_IdTipoContratoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoContratoEmpleado"));

			this.jButtonFK_IdTipoCuentaBancoGlobalEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoCuentaBancoGlobalEmpleado"));

			this.jButtonFK_IdTipoEmpleadoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoEmpleadoEmpleado"));

			this.jButtonFK_IdTipoGeneroEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoGeneroEmpleado"));

			this.jButtonFK_IdTipoInstruccionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoInstruccionEmpleado"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEmpleado"));
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEmpleado"));
				this.jInternalFrameReporteDinamicoEmpleado.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEmpleado"));
			}
			
			//this.jButtonCerrarReporteDinamicoEmpleado.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEmpleado"));				
			//this.jButtonGenerarReporteDinamicoEmpleado.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEmpleado"));
			//this.jButtonGenerarExcelReporteDinamicoEmpleado.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEmpleado"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionEmpleado!=null) {
				this.jInternalFrameImportacionEmpleado.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEmpleado"));
				this.jInternalFrameImportacionEmpleado.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEmpleado"));
				this.jInternalFrameImportacionEmpleado.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEmpleado"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByEmpleado.addActionListener (new ButtonActionListener(this,"AbrirOrderByEmpleado"));
			
			this.jButtonAbrirOrderByToolBarEmpleado.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarEmpleado"));			
			
			if(this.jInternalFrameOrderByEmpleado!=null) {
				this.jInternalFrameOrderByEmpleado.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEmpleado"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			
				this.jInternalFrameDetalleFormEmpleado.jButtonRelacionesFinformas_de_pagoEmpleado.addActionListener (new ButtonActionListener(this,"RelacionesFinformas_de_pagoEmpleado"));
				this.jInternalFrameDetalleFormEmpleado.jButtonRelacionesFinNormalEmpleado.addActionListener (new ButtonActionListener(this,"RelacionesFinNormalEmpleado"));;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEmpleado"));
		
		
			this.jInternalFrameDetalleFormEmpleado.jTabbedPaneRelacionesFinformas_de_pagoEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFinformas_de_pagoEmpleado"));;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameEmpleado();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormEmpleado.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormEmpleado = (JInternalFrameBase)event.getSource();
	            	
	            EmpleadoBeanSwingJInternalFrame jInternalFrameParent=(EmpleadoBeanSwingJInternalFrame)jInternalFrameDetalleFormEmpleado.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarEmpleadoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosEmpleado.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosEmpleadoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosEmpleado.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosEmpleado.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoEmpleado";
		inputMap = this.jButtonNuevoEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEmpleadoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesEmpleado";
		inputMap = this.jButtonNuevoRelacionesEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEmpleadoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarEmpleado";
		inputMap = this.jButtonModificarEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarEmpleado";
		inputMap = this.jButtonActualizarEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarEmpleado";
		inputMap = this.jButtonEliminarEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarEmpleado";
		inputMap = this.jButtonCancelarEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarEmpleado";
		inputMap = this.jButtonCerrarEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosEmpleado";
		inputMap = this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormEmpleado.jButtonGuardarCambiosEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosEmpleado.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosEmpleadoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonidEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_empresaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_sucursalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_paisEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_provinciaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_ciudadEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEmpleadoBusqueda"));
		//jButtonid_centro_costoEmpleado.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoEmpleadoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleado.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleado"));
		//jButtonid_centro_costoEmpleadoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_religionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_religionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_civilEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_generoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_instruccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_instruccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_cargoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_cargoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructuraEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estructura_seccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructura_seccionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_estado_empleadoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_empleadoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_contratoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_contratoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtoncodigoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"codigoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombreEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombreEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonapellidoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"apellidoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnombre_completoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonmailEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"mailEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtondireccionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"direccionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonsueldoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"sueldoEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontelefonoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonid_tipo_cuenta_banco_globalEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cuenta_banco_globalEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtonnumero_cuentaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_casaEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_casaEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEmpleado.jButtontiene_vehiculoEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"tiene_vehiculoEmpleadoBusqueda"));
		
		
		this.jButtonFK_IdCargoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCargoEmpleado"));

		this.jButtonFK_IdCentroCostoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoEmpleado"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoEmpleado.addActionListener(new ButtonActionListener(this,"id_centro_costoEmpleado"));

		this.jButtonFK_IdCiudadEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdCiudadEmpleado"));

		this.jButtonFK_IdEstadoCivilEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilEmpleado"));

		this.jButtonFK_IdEstadoEmpleadoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstadoEmpleadoEmpleado"));

		this.jButtonFK_IdEstructuraEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEmpleado"));

		this.jButtonFK_IdEstructuraSeccionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraSeccionEmpleado"));

		this.jButtonFK_IdPaisEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdPaisEmpleado"));

		this.jButtonFK_IdProvinciaEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdProvinciaEmpleado"));

		this.jButtonFK_IdReligionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdReligionEmpleado"));

		this.jButtonFK_IdTipoContratoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoContratoEmpleado"));

		this.jButtonFK_IdTipoCuentaBancoGlobalEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoCuentaBancoGlobalEmpleado"));

		this.jButtonFK_IdTipoEmpleadoEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoEmpleadoEmpleado"));

		this.jButtonFK_IdTipoGeneroEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoGeneroEmpleado"));

		this.jButtonFK_IdTipoInstruccionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoInstruccionEmpleado"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarEmpleadoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarEmpleado.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosEmpleado(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
					empleadoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Empleado empleadoAux:empleados) {
					empleadoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosEmpleadoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEmpleado(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
						empleadoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Empleado empleadoAux:empleados) {
						empleadoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
					
						if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENECASA)) {
							existe=true;
							empleadoAux.settiene_casa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO)) {
							existe=true;
							empleadoAux.settiene_vehiculo(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Empleado empleadoAux:empleados) {
						
						if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENECASA)) {
							existe=true;
							empleadoAux.settiene_casa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO)) {
							existe=true;
							empleadoAux.settiene_vehiculo(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaEmpleado(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEmpleado.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEmpleado.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosEmpleadoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEmpleado(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosEmpleado.getSelectedRows();
			
			Empleado empleadoLocal=new Empleado();
			
			//this.seleccionarTodosEmpleado(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLocal =(Empleado) this.empleadoLogic.getEmpleados().toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					empleadoLocal =(Empleado) this.empleados.toArray()[this.jTableDatosEmpleado.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				empleadoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
						empleadoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Empleado empleadoAux:empleados) {
						empleadoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaEmpleado(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEmpleado.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEmpleado.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEmpleado,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualEmpleadoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarEmpleadoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralEmpleadoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingEmpleado(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralEmpleado.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Empleado empleadoAux:this.empleadoLogic.getEmpleados()) {
				
						if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							empleadoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							empleadoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							empleadoAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							empleadoAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_MAIL)) {
							existe=true;
							empleadoAux.setmail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							empleadoAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_SUELDO)) {
							existe=true;
							empleadoAux.setsueldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							empleadoAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA)) {
							existe=true;
							empleadoAux.setnumero_cuenta(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Empleado empleadoAux:empleados) {
					
						if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							empleadoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							empleadoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							empleadoAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							empleadoAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_MAIL)) {
							existe=true;
							empleadoAux.setmail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							empleadoAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_SUELDO)) {
							existe=true;
							empleadoAux.setsueldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							empleadoAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA)) {
							existe=true;
							empleadoAux.setnumero_cuenta(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaEmpleado(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesEmpleadoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingEmpleado(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioEmpleado=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesEmpleado.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteEmpleado) {				
					conSplash=true;//false;										
					
					//this.startProcessEmpleado(conSplash);
				
					this.generarReporteEmpleadosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoEmpleadosSeleccionados();
				//this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEmpleadosSeleccionados(false);
				//this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEmpleadosSeleccionados(true);
				//this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEmpleado();
				
				this.exportarEmpleadosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionEmpleados();
				//this.importarEmpleados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEmpleado();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelEmpleadosSeleccionados();
				//this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessEmpleado();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoEmpleado)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyEmpleado(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
				}	
			} 			
			else if(EmpleadoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteEmpleado) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessEmpleado(conSplash);
					
						//this.actualizarParametrosGeneralEmpleado();
						
						this.generarReporteProcesoAccionEmpleadosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(EmpleadoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO EmpleadoS SELECCIONADOS?", "MANTENIMIENTO DE Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessEmpleado();
				
						this.actualizarParametrosGeneralEmpleado();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.empleadoReturnGeneral=empleadoLogic.procesarAccionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.empleadoLogic.getEmpleados(),this.empleadoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarEmpleadoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralEmpleado();
					
					EmpleadoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarEmpleadoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEmpleado.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEmpleado.jComboBoxTiposAccionesFormularioEmpleado.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessEmpleado(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesEmpleadoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessEmpleado();
			
			if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
			Empleado empleado=new Empleado();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingEmpleado(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesEmpleado.getSelectedItem();
			
			
			
			
			empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
			//this.sTipoAccion;
			
			if(empleadosSeleccionados.size()==1) {
				for(Empleado empleadoAux:empleadosSeleccionados) {
					empleado=empleadoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Carga Familiar_ N M")) {
					jButtonCargaFamiliar_NMActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Curso")) {
					jButtonCursoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Prestamo")) {
					jButtonPrestamoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Idioma")) {
					jButtonEmpleadoIdiomaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Historial Pago Mes Nomi")) {
					jButtonHistorialPagoMesNomiActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Impuesto Renta")) {
					jButtonEmpleadoImpuestoRentaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Dato General Empleado")) {
					jButtonDatoGeneralEmpleadoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Area")) {
					jButtonAreaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Gasto Empleado")) {
					jButtonGastoEmpleadoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Hobby")) {
					jButtonEmpleadoHobbyActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Email")) {
					jButtonEmpleadoEMailActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Rasgo Personal")) {
					jButtonRasgoPersonalActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Referencia")) {
					jButtonReferenciaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Telefono_ N M")) {
					jButtonTelefono_NMActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Novedad")) {
					jButtonNovedadActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Herra")) {
					jButtonEmpleadoHerraActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Enfer")) {
					jButtonEmpleadoEnferActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Visa")) {
					jButtonVisaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Seguro")) {
					jButtonSeguroActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Asistencia Mensual")) {
					jButtonAsistenciaMensualActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Disca")) {
					jButtonEmpleadoDiscaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Profesion Emplea")) {
					jButtonProfesionEmpleaActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Rubro Empleado")) {
					jButtonRubroEmpleadoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Empleado Constante")) {
					jButtonEmpleadoConstanteActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Talla Vestido")) {
					jButtonTallaVestidoActionPerformed(null,rowIndex,true,false,empleado);
				}
				else if(this.sTipoRelacion.equals("Novedad Nomi")) {
					jButtonNovedadNomiActionPerformed(null,rowIndex,true,false,empleado);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessEmpleado();
			
      		//this.finishProcessEmpleado(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarEmpleadoReturnGeneral() throws Exception {
		if(this.empleadoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.empleadoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.empleadoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.empleadoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.empleadoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.empleadoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingEmpleado(false);
		}
		
		if(this.empleadoReturnGeneral.getConRetornoLista() || this.empleadoReturnGeneral.getConRetornoObjeto()) {
			if(this.empleadoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.empleadoLogic.setEmpleados(this.empleadoReturnGeneral.getEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.empleadoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.empleadoLogic.setEmpleado(this.empleadoReturnGeneral.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingEmpleado(false);
		}
	}
	
	public void actualizarParametrosGeneralEmpleado() throws Exception {
		
		
	}
	
	public ArrayList<Empleado> getEmpleadosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioEmpleado) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Empleado empleadoAux:empleadoLogic.getEmpleados()) {
					if(empleadoAux.getIsSelected()) {
						empleadosSeleccionados.add(empleadoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Empleado empleadoAux:this.empleados) {
					if(empleadoAux.getIsSelected()) {
						empleadosSeleccionados.add(empleadoAux);				
					}
				}
			}
			
			if(empleadosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						empleadosSeleccionados.addAll(this.empleadoLogic.getEmpleados());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						empleadosSeleccionados.addAll(this.empleados);				
					}
				}
			}
		} else {
			empleadosSeleccionados.add(this.empleado);
		}
		
		return empleadosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteEmpleadosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalEmpleadosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoEmpleadosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEmpleadosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEmpleadosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesEmpleadosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Empleado",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteEmpleados("Todos",empleadosSeleccionados);
		
	}	
	
	public void generarReporteNormalEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteEmpleados("Todos",empleadosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionEmpleadosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteEmpleados("Todos",empleadosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		
		this.abrirInicializarFrameReporteDinamicoEmpleado();
		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoEmpleado();
		
		
		//this.generarReporteEmpleados("Todos",empleadosSeleccionados ,empleadoImplementable,empleadoImplementableHome);
	}
	
	public void mostrarImportacionEmpleados() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionEmpleado();
		
		this.abrirFrameImportacionEmpleado();		
		
			
		//this.generarReporteEmpleados("Todos",empleadosSeleccionados ,empleadoImplementable,empleadoImplementableHome);
	}
	
	public void importarEmpleados() throws Exception {		
	
	}
	
	public void exportarEmpleadosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelEmpleadosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoEmpleadosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlEmpleadosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Empleado",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarEmpleado(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Empleado empleadoAux:empleadosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarEmpleado(empleadoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//empleadoAux.setsDetalleGeneralEntityReporte(empleadoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarEmpleado(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDPROVINCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDRELIGION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDCARGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_APELLIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_MAIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_SUELDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_TIENECASA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarEmpleado(Empleado empleado,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=empleado.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getprovincia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getreligion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getestadocivil_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettipogenero_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettipoempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettipoinstruccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getcargo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getestructura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getestructuraseccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getestadoempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettipocontrato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getapellido();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getnombre_completo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getmail();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getsueldo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettipocuentabancoglobal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.getnumero_cuenta();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettiene_casa().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=empleado.gettiene_vehiculo().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Empleados");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelEmpleado(row);				
				iRow++;
			}				
			
			for(Empleado empleadoAux:empleadosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelEmpleado(empleadoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlEmpleadosSeleccionados() throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();		
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"empleado.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("empleados");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("empleado");
			//elementRoot.appendChild(element);
		
			for(Empleado empleadoAux:empleadosSeleccionados) {
				element = document.createElement("empleado");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlEmpleado(empleadoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.empleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelEmpleado(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDPROVINCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDRELIGION);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDCARGO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_APELLIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_MAIL);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_SUELDO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENECASA);
		cell = row.createCell(iColumn++);cell.setCellValue(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelEmpleado(Empleado empleado,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getprovincia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getreligion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getestadocivil_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettipogenero_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettipoempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettipoinstruccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getcargo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getestructura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getestructuraseccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getestadoempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettipocontrato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getapellido());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getnombre_completo());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getmail());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getsueldo());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettipocuentabancoglobal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.getnumero_cuenta());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettiene_casa());
		cell = row.createCell(iColumn++);cell.setCellValue(empleado.gettiene_vehiculo());				
	}
	
	public void setFilaDatosExportarXmlEmpleado(Empleado empleado,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(EmpleadoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(empleado.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(EmpleadoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(empleado.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(EmpleadoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(empleado.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(EmpleadoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(empleado.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementpais_descripcion = document.createElement(EmpleadoConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(empleado.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementprovincia_descripcion = document.createElement(EmpleadoConstantesFunciones.IDPROVINCIA);
		elementprovincia_descripcion.appendChild(document.createTextNode(empleado.getprovincia_descripcion()));
		element.appendChild(elementprovincia_descripcion);

		Element elementciudad_descripcion = document.createElement(EmpleadoConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(empleado.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(EmpleadoConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(empleado.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementreligion_descripcion = document.createElement(EmpleadoConstantesFunciones.IDRELIGION);
		elementreligion_descripcion.appendChild(document.createTextNode(empleado.getreligion_descripcion()));
		element.appendChild(elementreligion_descripcion);

		Element elementestadocivil_descripcion = document.createElement(EmpleadoConstantesFunciones.IDESTADOCIVIL);
		elementestadocivil_descripcion.appendChild(document.createTextNode(empleado.getestadocivil_descripcion()));
		element.appendChild(elementestadocivil_descripcion);

		Element elementtipogenero_descripcion = document.createElement(EmpleadoConstantesFunciones.IDTIPOGENERO);
		elementtipogenero_descripcion.appendChild(document.createTextNode(empleado.gettipogenero_descripcion()));
		element.appendChild(elementtipogenero_descripcion);

		Element elementtipoempleado_descripcion = document.createElement(EmpleadoConstantesFunciones.IDTIPOEMPLEADO);
		elementtipoempleado_descripcion.appendChild(document.createTextNode(empleado.gettipoempleado_descripcion()));
		element.appendChild(elementtipoempleado_descripcion);

		Element elementtipoinstruccion_descripcion = document.createElement(EmpleadoConstantesFunciones.IDTIPOINSTRUCCION);
		elementtipoinstruccion_descripcion.appendChild(document.createTextNode(empleado.gettipoinstruccion_descripcion()));
		element.appendChild(elementtipoinstruccion_descripcion);

		Element elementcargo_descripcion = document.createElement(EmpleadoConstantesFunciones.IDCARGO);
		elementcargo_descripcion.appendChild(document.createTextNode(empleado.getcargo_descripcion()));
		element.appendChild(elementcargo_descripcion);

		Element elementestructura_descripcion = document.createElement(EmpleadoConstantesFunciones.IDESTRUCTURA);
		elementestructura_descripcion.appendChild(document.createTextNode(empleado.getestructura_descripcion()));
		element.appendChild(elementestructura_descripcion);

		Element elementestructuraseccion_descripcion = document.createElement(EmpleadoConstantesFunciones.IDESTRUCTURASECCION);
		elementestructuraseccion_descripcion.appendChild(document.createTextNode(empleado.getestructuraseccion_descripcion()));
		element.appendChild(elementestructuraseccion_descripcion);

		Element elementestadoempleado_descripcion = document.createElement(EmpleadoConstantesFunciones.IDESTADOEMPLEADO);
		elementestadoempleado_descripcion.appendChild(document.createTextNode(empleado.getestadoempleado_descripcion()));
		element.appendChild(elementestadoempleado_descripcion);

		Element elementtipocontrato_descripcion = document.createElement(EmpleadoConstantesFunciones.IDTIPOCONTRATO);
		elementtipocontrato_descripcion.appendChild(document.createTextNode(empleado.gettipocontrato_descripcion()));
		element.appendChild(elementtipocontrato_descripcion);

		Element elementcodigo = document.createElement(EmpleadoConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(empleado.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(EmpleadoConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(empleado.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementapellido = document.createElement(EmpleadoConstantesFunciones.APELLIDO);
		elementapellido.appendChild(document.createTextNode(empleado.getapellido().trim()));
		element.appendChild(elementapellido);

		Element elementnombre_completo = document.createElement(EmpleadoConstantesFunciones.NOMBRECOMPLETO);
		elementnombre_completo.appendChild(document.createTextNode(empleado.getnombre_completo().trim()));
		element.appendChild(elementnombre_completo);

		Element elementmail = document.createElement(EmpleadoConstantesFunciones.MAIL);
		elementmail.appendChild(document.createTextNode(empleado.getmail().trim()));
		element.appendChild(elementmail);

		Element elementdireccion = document.createElement(EmpleadoConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(empleado.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementsueldo = document.createElement(EmpleadoConstantesFunciones.SUELDO);
		elementsueldo.appendChild(document.createTextNode(empleado.getsueldo().toString().trim()));
		element.appendChild(elementsueldo);

		Element elementtelefono = document.createElement(EmpleadoConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(empleado.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementtipocuentabancoglobal_descripcion = document.createElement(EmpleadoConstantesFunciones.IDTIPOCUENTABANCOGLOBAL);
		elementtipocuentabancoglobal_descripcion.appendChild(document.createTextNode(empleado.gettipocuentabancoglobal_descripcion()));
		element.appendChild(elementtipocuentabancoglobal_descripcion);

		Element elementnumero_cuenta = document.createElement(EmpleadoConstantesFunciones.NUMEROCUENTA);
		elementnumero_cuenta.appendChild(document.createTextNode(empleado.getnumero_cuenta().trim()));
		element.appendChild(elementnumero_cuenta);

		Element elementtiene_casa = document.createElement(EmpleadoConstantesFunciones.TIENECASA);
		elementtiene_casa.appendChild(document.createTextNode(empleado.gettiene_casa().toString().trim()));
		element.appendChild(elementtiene_casa);

		Element elementtiene_vehiculo = document.createElement(EmpleadoConstantesFunciones.TIENEVEHICULO);
		elementtiene_vehiculo.appendChild(document.createTextNode(empleado.gettiene_vehiculo().toString().trim()));
		element.appendChild(elementtiene_vehiculo);
	}
	
	public void generarReporteGroupGenericoEmpleadosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Empleado> empleadosSeleccionados=new ArrayList<Empleado>();
		
		empleadosSeleccionados=this.getEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoEmpleado(empleadosSeleccionados);
		
		this.generarReporteEmpleados("Todos",empleadosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoEmpleado(ArrayList<Empleado> empleadosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Empleado empleadoAux:empleadosSeleccionados) {
				empleadoAux.setsDetalleGeneralEntityReporte(empleadoAux.toString());
			
				if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDPROVINCIA)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getprovincia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDRELIGION)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getreligion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDESTADOCIVIL)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getestadocivil_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDTIPOGENERO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettipogenero_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDTIPOEMPLEADO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettipoempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDTIPOINSTRUCCION)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettipoinstruccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDCARGO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getcargo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURA)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getestructura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDESTRUCTURASECCION)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getestructuraseccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDESTADOEMPLEADO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getestadoempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDTIPOCONTRATO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettipocontrato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_APELLIDO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getapellido());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getnombre_completo());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_MAIL)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getmail());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_IDTIPOCUENTABANCOGLOBAL)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.gettipocuentabancoglobal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_NUMEROCUENTA)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(empleadoAux.getnumero_cuenta());
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENECASA)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(empleadoAux.gettiene_casa()));
				}
				 else if(sTipoSeleccionar.equals(EmpleadoConstantesFunciones.LABEL_TIENEVEHICULO)) {
					existe=true;
					empleadoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(empleadoAux.gettiene_vehiculo()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesEmpleado(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoEmpleado=true;
				this.isVisibilidadCeldaNuevoRelacionesEmpleado=true;
				this.isVisibilidadCeldaGuardarCambiosEmpleado=true;
			}
			
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=true;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=true;
			this.isVisibilidadCeldaEliminarEmpleado=true;
			this.isVisibilidadCeldaCancelarEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=true;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=true;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=true;
			this.isVisibilidadCeldaModificarEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
			this.isVisibilidadCeldaModificarEmpleado=true;
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
			this.isVisibilidadCeldaCancelarEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEmpleado=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(EmpleadoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=true;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=true;
		} else {
			this.actualizarEstadoPanelsEmpleado(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarEmpleado=false;
			//this.isVisibilidadCeldaVerFormEmpleado=false;
			this.isVisibilidadCeldaDuplicarEmpleado=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!empleadoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
		} else {
			this.isVisibilidadCeldaNuevoEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(empleadoSessionBean.getEsGuardarRelacionado()) {
			if(!empleadoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;												
			}
			
			this.jButtonCerrarEmpleado.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesEmpleado=false;
		}
		
		if(!this.permiteMantenimiento(this.empleado)) {
			this.isVisibilidadCeldaActualizarEmpleado=false;
			this.isVisibilidadCeldaEliminarEmpleado=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesEmpleado() {
		this.isVisibilidadCeldaNuevoEmpleado=false;
		this.isVisibilidadCeldaGuardarCambiosEmpleado=false;
	}
	
	public void actualizarEstadoPanelsEmpleado(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEmpleado.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEmpleado!=null) {
				this.jScrollPanelDatosEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEmpleado!=null) {
				this.jPanelPaginacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.empleadoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasEmpleado!=null) {
					this.jTabbedPaneBusquedasEmpleado.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.empleadoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEmpleado!=null) {
				this.jTabbedPaneBusquedasEmpleado.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesEmpleado!=null) {
				this.jPanelParametrosReportesEmpleado.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCargo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCargo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCargo=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaProvincia(Boolean isParaProvincia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProvinciaNegation=!isParaProvincia;

			this.isVisibilidadFK_IdCargo=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaProvincia;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadFK_IdCargo=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaCiudad;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdCargo=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaReligion(Boolean isParaReligion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaReligionNegation=!isParaReligion;

			this.isVisibilidadFK_IdCargo=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaReligion;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaReligionNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoCivil(Boolean isParaEstadoCivil){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoCivilNegation=!isParaEstadoCivil;

			this.isVisibilidadFK_IdCargo=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoCivil;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGenero(Boolean isParaTipoGenero){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGeneroNegation=!isParaTipoGenero;

			this.isVisibilidadFK_IdCargo=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoGenero;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoEmpleado(Boolean isParaTipoEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoEmpleadoNegation=!isParaTipoEmpleado;

			this.isVisibilidadFK_IdCargo=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaTipoEmpleado;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaTipoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoInstruccion(Boolean isParaTipoInstruccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoInstruccionNegation=!isParaTipoInstruccion;

			this.isVisibilidadFK_IdCargo=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoInstruccionNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaTipoInstruccion;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaCargo(Boolean isParaCargo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCargoNegation=!isParaCargo;

			this.isVisibilidadFK_IdCargo=isParaCargo;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaCargoNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstructura(Boolean isParaEstructura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstructuraNegation=!isParaEstructura;

			this.isVisibilidadFK_IdCargo=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEstructura;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstructuraSeccion(Boolean isParaEstructuraSeccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstructuraSeccionNegation=!isParaEstructuraSeccion;

			this.isVisibilidadFK_IdCargo=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaEstructuraSeccion;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaEstructuraSeccionNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoEmpleado(Boolean isParaEstadoEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoEmpleadoNegation=!isParaEstadoEmpleado;

			this.isVisibilidadFK_IdCargo=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaEstadoEmpleado;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaEstadoEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoContrato(Boolean isParaTipoContrato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoContratoNegation=!isParaTipoContrato;

			this.isVisibilidadFK_IdCargo=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaTipoContrato;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaTipoContratoNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCuentaBancoGlobal(Boolean isParaTipoCuentaBancoGlobal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCuentaBancoGlobalNegation=!isParaTipoCuentaBancoGlobal;

			this.isVisibilidadFK_IdCargo=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdCargo) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCargoEmpleado);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCentroCostoEmpleado);}

			this.isVisibilidadFK_IdCiudad=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdCiudadEmpleado);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoCivilEmpleado);}

			this.isVisibilidadFK_IdEstadoEmpleado=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdEstadoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstadoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraEmpleado);}

			this.isVisibilidadFK_IdEstructuraSeccion=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdEstructuraSeccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdEstructuraSeccionEmpleado);}

			this.isVisibilidadFK_IdPais=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdPaisEmpleado);}

			this.isVisibilidadFK_IdProvincia=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdProvinciaEmpleado);}

			this.isVisibilidadFK_IdReligion=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdReligion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdReligionEmpleado);}

			this.isVisibilidadFK_IdTipoContrato=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdTipoContrato) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoContratoEmpleado);}

			this.isVisibilidadFK_IdTipoCuentaBancoGlobal=isParaTipoCuentaBancoGlobal;
			if(!this.isVisibilidadFK_IdTipoCuentaBancoGlobal) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoCuentaBancoGlobalEmpleado);}

			this.isVisibilidadFK_IdTipoEmpleado=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdTipoEmpleado) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoEmpleadoEmpleado);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoGeneroEmpleado);}

			this.isVisibilidadFK_IdTipoInstruccion=isParaTipoCuentaBancoGlobalNegation;
			if(!this.isVisibilidadFK_IdTipoInstruccion) {this.jTabbedPaneBusquedasEmpleado.remove(jPanelFK_IdTipoInstruccionEmpleado);}
		}
		
	}
	
	

	public String registrarSesionEmpleadoParaCargaFamiliar_NMes() throws Exception {
		Boolean isPaginaPopupCargaFamiliar_NM=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean=new CargaFamiliar_NMSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CargaFamiliar_NMConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCargaFamiliar_NM=this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCargaFamiliar_NM(true);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCargaFamiliar_NM(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.cargafamiliar_nmSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaCursos() throws Exception {
		Boolean isPaginaPopupCurso=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.cursoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.cursoSessionBean=new CursoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CursoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCurso=this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCurso(true);
			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCurso(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.cursoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaPrestamos() throws Exception {
		Boolean isPaginaPopupPrestamo=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean=new PrestamoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PrestamoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPrestamo=this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePrestamo(true);
			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePrestamo(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.prestamoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoIdiomas() throws Exception {
		Boolean isPaginaPopupEmpleadoIdioma=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean=new EmpleadoIdiomaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoIdiomaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoIdioma=this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoIdioma(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoIdioma(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoidiomaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaHistorialPagoMesNomis() throws Exception {
		Boolean isPaginaPopupHistorialPagoMesNomi=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean=new HistorialPagoMesNomiSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupHistorialPagoMesNomi=this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeHistorialPagoMesNomi(true);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeHistorialPagoMesNomi(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.historialpagomesnomiSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoImpuestoRentas() throws Exception {
		Boolean isPaginaPopupEmpleadoImpuestoRenta=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean=new EmpleadoImpuestoRentaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoImpuestoRenta=this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoImpuestoRenta(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoImpuestoRenta(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoimpuestorentaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaDatoGeneralEmpleados() throws Exception {
		Boolean isPaginaPopupDatoGeneralEmpleado=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean=new DatoGeneralEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DatoGeneralEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDatoGeneralEmpleado=this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDatoGeneralEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDatoGeneralEmpleado(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.datogeneralempleadoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaAreas() throws Exception {
		Boolean isPaginaPopupArea=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.areaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.areaSessionBean=new AreaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AreaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupArea=this.jInternalFrameDetalleFormEmpleado.areaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeArea(true);
			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeArea(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.areaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaGastoEmpleados() throws Exception {
		Boolean isPaginaPopupGastoEmpleado=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean=new GastoEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GastoEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGastoEmpleado=this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGastoEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGastoEmpleado(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.gastoempleadoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoHobbyes() throws Exception {
		Boolean isPaginaPopupEmpleadoHobby=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean=new EmpleadoHobbySessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoHobbyConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoHobby=this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoHobby(true);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoHobby(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadohobbySessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoEMails() throws Exception {
		Boolean isPaginaPopupEmpleadoEMail=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean=new EmpleadoEMailSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoEMailConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoEMail=this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoEMail(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoEMail(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoemailSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaRasgoPersonales() throws Exception {
		Boolean isPaginaPopupRasgoPersonal=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean=new RasgoPersonalSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RasgoPersonalConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRasgoPersonal=this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRasgoPersonal(true);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRasgoPersonal(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.rasgopersonalSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaReferencias() throws Exception {
		Boolean isPaginaPopupReferencia=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean=new ReferenciaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ReferenciaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupReferencia=this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeReferencia(true);
			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeReferencia(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.referenciaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaTelefono_NMes() throws Exception {
		Boolean isPaginaPopupTelefono_NM=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean=new Telefono_NMSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+Telefono_NMConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTelefono_NM=this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTelefono_NM(true);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTelefono_NM(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.telefono_nmSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaNovedades() throws Exception {
		Boolean isPaginaPopupNovedad=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.novedadSessionBean=new NovedadSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NovedadConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNovedad=this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNovedad(true);
			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNovedad(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.novedadSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoHerras() throws Exception {
		Boolean isPaginaPopupEmpleadoHerra=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean=new EmpleadoHerraSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoHerraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoHerra=this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoHerra(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoHerra(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoherraSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoEnferes() throws Exception {
		Boolean isPaginaPopupEmpleadoEnfer=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean=new EmpleadoEnferSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoEnferConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoEnfer=this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoEnfer(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoEnfer(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoenferSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaVisas() throws Exception {
		Boolean isPaginaPopupVisa=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.visaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.visaSessionBean=new VisaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VisaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupVisa=this.jInternalFrameDetalleFormEmpleado.visaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVisa(true);
			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVisa(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.visaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaSeguros() throws Exception {
		Boolean isPaginaPopupSeguro=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.seguroSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.seguroSessionBean=new SeguroSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SeguroConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSeguro=this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSeguro(true);
			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSeguro(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.seguroSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaAsistenciaMensuales() throws Exception {
		Boolean isPaginaPopupAsistenciaMensual=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean=new AsistenciaMensualSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupAsistenciaMensual=this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsistenciaMensual(true);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsistenciaMensual(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.asistenciamensualSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoDiscas() throws Exception {
		Boolean isPaginaPopupEmpleadoDisca=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean=new EmpleadoDiscaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoDiscaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoDisca=this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoDisca(true);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoDisca(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadodiscaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaProfesionEmpleas() throws Exception {
		Boolean isPaginaPopupProfesionEmplea=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean=new ProfesionEmpleaSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProfesionEmpleaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProfesionEmplea=this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProfesionEmplea(true);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProfesionEmplea(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.profesionempleaSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaRubroEmpleados() throws Exception {
		Boolean isPaginaPopupRubroEmpleado=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean=new RubroEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEmpleado=this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEmpleado(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.rubroempleadoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaEmpleadoConstantes() throws Exception {
		Boolean isPaginaPopupEmpleadoConstante=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean=new EmpleadoConstanteSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstanteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoConstante=this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoConstante(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoConstante(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.empleadoconstanteSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaTallaVestidos() throws Exception {
		Boolean isPaginaPopupTallaVestido=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean=new TallaVestidoSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TallaVestidoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTallaVestido=this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTallaVestido(true);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTallaVestido(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.tallavestidoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEmpleadoParaNovedadNomis() throws Exception {
		Boolean isPaginaPopupNovedadNomi=false;

		try {

			if(this.empleadoSessionBean==null) {
				this.empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean==null) {
				this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean=new NovedadNomiSessionBean();
			}

			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NovedadNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNovedadNomi=this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNovedadNomi(true);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNovedadNomi(EmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			this.jInternalFrameDetalleFormEmpleado.novedadnomiSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionEmpleadoParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(empleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.empleadoFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(EmpleadoConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionEmpleado(true);
			//centrocostoSessionBean.setlidEmpleadoActual(this.idEmpleadoActual);

			empleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEmpleado(true);
			empleadoSessionBean.setlIdEmpleadoActualForeignKey(this.idEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//EmpleadoSessionBean empleadoSessionBean=new EmpleadoSessionBean();
		
		if(this.empleadoSessionBean==null) {
			this.empleadoSessionBean=new EmpleadoSessionBean();
		}
		
		this.empleadoSessionBean.setsUltimaBusquedaEmpleado(this.getsAccionBusqueda());
		this.empleadoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.empleadoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCargo")) {
			empleadoSessionBean.setid_cargo(this.getid_cargoFK_IdCargo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			empleadoSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
			empleadoSessionBean.setid_ciudad(this.getid_ciudadFK_IdCiudad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			empleadoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
			empleadoSessionBean.setid_estado_civil(this.getid_estado_civilFK_IdEstadoCivil());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoEmpleado")) {
			empleadoSessionBean.setid_estado_empleado(this.getid_estado_empleadoFK_IdEstadoEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
			empleadoSessionBean.setid_estructura(this.getid_estructuraFK_IdEstructura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstructuraSeccion")) {
			empleadoSessionBean.setid_estructura_seccion(this.getid_estructura_seccionFK_IdEstructuraSeccion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			empleadoSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProvincia")) {
			empleadoSessionBean.setid_provincia(this.getid_provinciaFK_IdProvincia());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdReligion")) {
			empleadoSessionBean.setid_religion(this.getid_religionFK_IdReligion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			empleadoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoContrato")) {
			empleadoSessionBean.setid_tipo_contrato(this.getid_tipo_contratoFK_IdTipoContrato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCuentaBancoGlobal")) {
			empleadoSessionBean.setid_tipo_cuenta_banco_global(this.getid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoEmpleado")) {
			empleadoSessionBean.setid_tipo_empleado(this.getid_tipo_empleadoFK_IdTipoEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoGenero")) {
			empleadoSessionBean.setid_tipo_genero(this.getid_tipo_generoFK_IdTipoGenero());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoInstruccion")) {
			empleadoSessionBean.setid_tipo_instruccion(this.getid_tipo_instruccionFK_IdTipoInstruccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//EmpleadoSessionBean empleadoSessionBean=new EmpleadoSessionBean();
		
		if(this.empleadoSessionBean==null) {
			this.empleadoSessionBean=new EmpleadoSessionBean();
		}
		
		if(this.empleadoSessionBean.getsUltimaBusquedaEmpleado()!=null&&!this.empleadoSessionBean.getsUltimaBusquedaEmpleado().equals("")) {
			this.setsAccionBusqueda(empleadoSessionBean.getsUltimaBusquedaEmpleado());
			this.setiNumeroPaginacion(empleadoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(empleadoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCargo")) {
				this.setid_cargoFK_IdCargo(empleadoSessionBean.getid_cargo());
				empleadoSessionBean.setid_cargo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(empleadoSessionBean.getid_centro_costo());
				empleadoSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
				this.setid_ciudadFK_IdCiudad(empleadoSessionBean.getid_ciudad());
				empleadoSessionBean.setid_ciudad(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(empleadoSessionBean.getid_empresa());
				empleadoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
				this.setid_estado_civilFK_IdEstadoCivil(empleadoSessionBean.getid_estado_civil());
				empleadoSessionBean.setid_estado_civil(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoEmpleado")) {
				this.setid_estado_empleadoFK_IdEstadoEmpleado(empleadoSessionBean.getid_estado_empleado());
				empleadoSessionBean.setid_estado_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
				this.setid_estructuraFK_IdEstructura(empleadoSessionBean.getid_estructura());
				empleadoSessionBean.setid_estructura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstructuraSeccion")) {
				this.setid_estructura_seccionFK_IdEstructuraSeccion(empleadoSessionBean.getid_estructura_seccion());
				empleadoSessionBean.setid_estructura_seccion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(empleadoSessionBean.getid_pais());
				empleadoSessionBean.setid_pais(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProvincia")) {
				this.setid_provinciaFK_IdProvincia(empleadoSessionBean.getid_provincia());
				empleadoSessionBean.setid_provincia(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdReligion")) {
				this.setid_religionFK_IdReligion(empleadoSessionBean.getid_religion());
				empleadoSessionBean.setid_religion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(empleadoSessionBean.getid_sucursal());
				empleadoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoContrato")) {
				this.setid_tipo_contratoFK_IdTipoContrato(empleadoSessionBean.getid_tipo_contrato());
				empleadoSessionBean.setid_tipo_contrato(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCuentaBancoGlobal")) {
				this.setid_tipo_cuenta_banco_globalFK_IdTipoCuentaBancoGlobal(empleadoSessionBean.getid_tipo_cuenta_banco_global());
				empleadoSessionBean.setid_tipo_cuenta_banco_global(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoEmpleado")) {
				this.setid_tipo_empleadoFK_IdTipoEmpleado(empleadoSessionBean.getid_tipo_empleado());
				empleadoSessionBean.setid_tipo_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoGenero")) {
				this.setid_tipo_generoFK_IdTipoGenero(empleadoSessionBean.getid_tipo_genero());
				empleadoSessionBean.setid_tipo_genero(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoInstruccion")) {
				this.setid_tipo_instruccionFK_IdTipoInstruccion(empleadoSessionBean.getid_tipo_instruccion());
				empleadoSessionBean.setid_tipo_instruccion(-1L);
			}
		}
		
		this.empleadoSessionBean.setsUltimaBusquedaEmpleado("");
		this.empleadoSessionBean.setiNumeroPaginacion(EmpleadoConstantesFunciones.INUMEROPAGINACION);
		this.empleadoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaEmpleado(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioEmpleado() {
		this.updateBorderResaltarBusquedasFormularioEmpleado();
		this.updateVisibilidadBusquedasFormularioEmpleado();
		this.updateHabilitarBusquedasFormularioEmpleado();
	}
	
	public void updateBorderResaltarBusquedasFormularioEmpleado() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasEmpleado.getComponents().length>0) {
	

		if(this.empleadoConstantesFunciones.resaltarFK_IdCargoEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCargoEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCargoEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdCentroCostoEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCentroCostoEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCentroCostoEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdCiudadEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCiudadEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCiudadEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdEstadoCivilEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoCivilEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstadoCivilEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdEstadoEmpleadoEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoEmpleadoEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstadoEmpleadoEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraSeccionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraSeccionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraSeccionEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdPaisEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdPaisEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdPaisEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdProvinciaEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdProvinciaEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdProvinciaEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdReligionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdReligionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdReligionEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdTipoContratoEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoContratoEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoContratoEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdTipoCuentaBancoGlobalEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoCuentaBancoGlobalEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoCuentaBancoGlobalEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdTipoEmpleadoEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoEmpleadoEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoEmpleadoEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdTipoGeneroEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoGeneroEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoGeneroEmpleado);
			}
		}

		if(this.empleadoConstantesFunciones.resaltarFK_IdTipoInstruccionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoInstruccionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoInstruccionEmpleado);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioEmpleado() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasEmpleado.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCargoEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdCargoEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdCargoEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCentroCostoEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdCentroCostoEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdCentroCostoEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCiudadEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdCiudadEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdCiudadEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoCivilEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdEstadoCivilEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdEstadoCivilEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoEmpleadoEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdEstadoEmpleadoEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdEstadoEmpleadoEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdEstructuraEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdEstructuraEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraSeccionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdEstructuraSeccionEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdEstructuraSeccionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdPaisEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdPaisEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdPaisEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdProvinciaEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdProvinciaEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdProvinciaEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdReligionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdReligionEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdReligionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoContratoEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdTipoContratoEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdTipoContratoEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoCuentaBancoGlobalEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdTipoCuentaBancoGlobalEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdTipoCuentaBancoGlobalEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoEmpleadoEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdTipoEmpleadoEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdTipoEmpleadoEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoGeneroEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdTipoGeneroEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdTipoGeneroEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoInstruccionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.empleadoConstantesFunciones.mostrarFK_IdTipoInstruccionEmpleado);
			if(!this.empleadoConstantesFunciones.mostrarFK_IdTipoInstruccionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEmpleado.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioEmpleado() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasEmpleado.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCargoEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdCargoEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdCargoEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCentroCostoEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdCentroCostoEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdCentroCostoEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCiudadEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdCiudadEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdCiudadEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoCivilEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdEstadoCivilEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdEstadoCivilEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoEmpleadoEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdEstadoEmpleadoEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdEstadoEmpleadoEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdEstructuraEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdEstructuraEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraSeccionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdEstructuraSeccionEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdEstructuraSeccionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdPaisEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdPaisEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdPaisEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdProvinciaEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdProvinciaEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdProvinciaEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdReligionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdReligionEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdReligionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoContratoEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdTipoContratoEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdTipoContratoEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoCuentaBancoGlobalEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdTipoCuentaBancoGlobalEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdTipoCuentaBancoGlobalEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoEmpleadoEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdTipoEmpleadoEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdTipoEmpleadoEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoGeneroEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdTipoGeneroEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdTipoGeneroEmpleado);
			}

			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoInstruccionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.empleadoConstantesFunciones.activarFK_IdTipoInstruccionEmpleado);
				this.jTabbedPaneBusquedasEmpleado.setEnabledAt(index,this.empleadoConstantesFunciones.activarFK_IdTipoInstruccionEmpleado);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaEmpleado(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCargo")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCargoEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdCargoEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCargoEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCentroCostoEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdCentroCostoEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCentroCostoEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCiudad")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdCiudadEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdCiudadEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdCiudadEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoCivil")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoCivilEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdEstadoCivilEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstadoCivilEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoEmpleado")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstadoEmpleadoEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdEstadoEmpleadoEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstadoEmpleadoEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstructura")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdEstructuraEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstructuraSeccion")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraSeccionEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdEstructuraSeccionEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdEstructuraSeccionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdPaisEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdPaisEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdPaisEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProvincia")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdProvinciaEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdProvinciaEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdProvinciaEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdReligion")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdReligionEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdReligionEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdReligionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoContrato")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoContratoEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdTipoContratoEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoContratoEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCuentaBancoGlobal")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoCuentaBancoGlobalEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdTipoCuentaBancoGlobalEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoCuentaBancoGlobalEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoEmpleado")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoEmpleadoEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdTipoEmpleadoEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoEmpleadoEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoGenero")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoGeneroEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdTipoGeneroEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoGeneroEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoInstruccion")) {
			index= this.jTabbedPaneBusquedasEmpleado.indexOfComponent(this.jPanelFK_IdTipoInstruccionEmpleado);

			this.jTabbedPaneBusquedasEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEmpleado.getComponent(index);

			this.empleadoConstantesFunciones.setResaltarFK_IdTipoInstruccionEmpleado(resaltar);

			jPanel.setBorder(this.empleadoConstantesFunciones.resaltarFK_IdTipoInstruccionEmpleado);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarEmpleado.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioEmpleado() throws Exception {

		if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioEmpleado();
		this.updateVisibilidadResaltarControlesFormularioEmpleado();
		this.updateHabilitarResaltarControlesFormularioEmpleado();
		
	}
	
	public void updateBorderResaltarControlesFormularioEmpleado() throws Exception {
		if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.empleadoConstantesFunciones.resaltaridEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setBorder(this.empleadoConstantesFunciones.resaltaridEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_empresaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_empresaEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_sucursalEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_sucursalEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_paisEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_paisEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_provinciaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_provinciaEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_ciudadEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_ciudadEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_centro_costoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_centro_costoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_religionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_religionEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_estado_civilEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_estado_civilEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_tipo_generoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_tipo_generoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_tipo_empleadoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_tipo_empleadoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_tipo_instruccionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_tipo_instruccionEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_cargoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_cargoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_estructuraEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_estructuraEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_estructura_seccionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_estructura_seccionEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_estado_empleadoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_estado_empleadoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_tipo_contratoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_tipo_contratoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarcodigoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarcodigoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarnombreEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarnombreEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarapellidoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarapellidoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarnombre_completoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarnombre_completoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarmailEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarmailEmpleado);}
		if(this.empleadoConstantesFunciones.resaltardireccionEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setBorder(this.empleadoConstantesFunciones.resaltardireccionEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarsueldoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarsueldoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltartelefonoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltartelefonoEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarid_tipo_cuenta_banco_globalEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarid_tipo_cuenta_banco_globalEmpleado);}
		if(this.empleadoConstantesFunciones.resaltarnumero_cuentaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setBorder(this.empleadoConstantesFunciones.resaltarnumero_cuentaEmpleado);}
		if(this.empleadoConstantesFunciones.resaltartiene_casaEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setBorderPainted(true);this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setBorder(this.empleadoConstantesFunciones.resaltartiene_casaEmpleado);}
		if(this.empleadoConstantesFunciones.resaltartiene_vehiculoEmpleado!=null && this.jInternalFrameDetalleFormEmpleado!=null) {this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setBorderPainted(true);this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setBorder(this.empleadoConstantesFunciones.resaltartiene_vehiculoEmpleado);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioEmpleado() throws Exception {		
		if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
	
		//this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setVisible(this.empleadoConstantesFunciones.mostraridEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelidEmpleado.setVisible(this.empleadoConstantesFunciones.mostraridEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_empresaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_empresaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_empresaEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_sucursalEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_sucursalEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_sucursalEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_paisEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_paisEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_paisEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_provinciaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_provinciaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_provinciaEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_ciudadEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_ciudadEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_ciudadEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_centro_costoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_centro_costoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_centro_costoEmpleado);
			this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_centro_costoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_religionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_religionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_religionEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estado_civilEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_estado_civilEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estado_civilEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_generoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_tipo_generoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_generoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_tipo_empleadoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_empleadoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_instruccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_tipo_instruccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_instruccionEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_cargoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_cargoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_cargoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estructuraEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_estructuraEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estructuraEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estructura_seccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_estructura_seccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estructura_seccionEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estado_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_estado_empleadoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_estado_empleadoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_contratoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_tipo_contratoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_contratoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarcodigoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelcodigoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarcodigoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnombreEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelnombreEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnombreEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarapellidoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelapellidoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarapellidoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnombre_completoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelnombre_completoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnombre_completoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarmailEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelmailEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarmailEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrardireccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPaneldireccionEmpleado.setVisible(this.empleadoConstantesFunciones.mostrardireccionEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarsueldoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelsueldoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarsueldoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartelefonoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPaneltelefonoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartelefonoEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_cuenta_banco_globalEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelid_tipo_cuenta_banco_globalEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarid_tipo_cuenta_banco_globalEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnumero_cuentaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPanelnumero_cuentaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrarnumero_cuentaEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartiene_casaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPaneltiene_casaEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartiene_casaEmpleado);
		//this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartiene_vehiculoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jPaneltiene_vehiculoEmpleado.setVisible(this.empleadoConstantesFunciones.mostrartiene_vehiculoEmpleado);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioEmpleado() throws Exception {
		if(this.jInternalFrameDetalleFormEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEmpleado!=null) {
	
		this.jInternalFrameDetalleFormEmpleado.jLabelidEmpleado.setEnabled(this.empleadoConstantesFunciones.activaridEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_empresaEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_empresaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_sucursalEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_sucursalEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_paisEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_paisEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_provinciaEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_provinciaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_ciudadEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_ciudadEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_centro_costoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_centro_costoEmpleado);
			this.jInternalFrameDetalleFormEmpleado.jButtonid_centro_costoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_centro_costoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_religionEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_religionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_civilEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_estado_civilEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_generoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_tipo_generoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_empleadoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_tipo_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_instruccionEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_tipo_instruccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_cargoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_cargoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructuraEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_estructuraEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estructura_seccionEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_estructura_seccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_estado_empleadoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_estado_empleadoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_contratoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_tipo_contratoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextFieldcodigoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarcodigoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreanombreEmpleado.setEnabled(this.empleadoConstantesFunciones.activarnombreEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreaapellidoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarapellidoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreanombre_completoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarnombre_completoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreamailEmpleado.setEnabled(this.empleadoConstantesFunciones.activarmailEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreadireccionEmpleado.setEnabled(this.empleadoConstantesFunciones.activardireccionEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextFieldsueldoEmpleado.setEnabled(this.empleadoConstantesFunciones.activarsueldoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextAreatelefonoEmpleado.setEnabled(this.empleadoConstantesFunciones.activartelefonoEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jComboBoxid_tipo_cuenta_banco_globalEmpleado.setEnabled(this.empleadoConstantesFunciones.activarid_tipo_cuenta_banco_globalEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jTextFieldnumero_cuentaEmpleado.setEnabled(this.empleadoConstantesFunciones.activarnumero_cuentaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_casaEmpleado.setEnabled(this.empleadoConstantesFunciones.activartiene_casaEmpleado);
		this.jInternalFrameDetalleFormEmpleado.jCheckBoxtiene_vehiculoEmpleado.setEnabled(this.empleadoConstantesFunciones.activartiene_vehiculoEmpleado);
		}
	}
	
		
}