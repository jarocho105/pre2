/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.tesoreria.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.tesoreria.util.FormaPagoConstantesFunciones;
import com.bydan.erp.tesoreria.util.FormaPagoParameterReturnGeneral;
//import com.bydan.erp.tesoreria.util.FormaPagoParameterGeneral;
//import com.bydan.erp.tesoreria.presentation.report.source.FormaPagoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.tesoreria.resources.reportes.AuxiliarReportes;


import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.tesoreria.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.tesoreria.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class FormaPagoBeanSwingJInternalFrame extends FormaPagoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(FormaPagoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<FormaPago> formapagoValidator = new ClassValidator<FormaPago>(FormaPago.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public FormaPago formapago;	
	public FormaPago formapagoAux;
	public FormaPago formapagoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public FormaPago formapagoTotales;
	public Long idFormaPagoActual;
	public Long iIdNuevoFormaPago=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboTipoFormaPago="";

	public List<TipoFormaPago> tipoformapagosForeignKey;

	public List<TipoFormaPago> gettipoformapagosForeignKey() {
		return tipoformapagosForeignKey;
	}

	public void settipoformapagosForeignKey(List<TipoFormaPago> tipoformapagosForeignKey) {
		this.tipoformapagosForeignKey = tipoformapagosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFormaPago tipoformapagoForeignKey;

	public TipoFormaPago gettipoformapagoForeignKey() {
		return tipoformapagoForeignKey;
	}

	public void settipoformapagoForeignKey(TipoFormaPago tipoformapagoForeignKey) {
		this.tipoformapagoForeignKey = tipoformapagoForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboCuentaContableRete="";

	public List<CuentaContable> cuentacontableretesForeignKey;

	public List<CuentaContable> getcuentacontableretesForeignKey() {
		return cuentacontableretesForeignKey;
	}

	public void setcuentacontableretesForeignKey(List<CuentaContable> cuentacontableretesForeignKey) {
		this.cuentacontableretesForeignKey = cuentacontableretesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablereteForeignKey;

	public CuentaContable getcuentacontablereteForeignKey() {
		return cuentacontablereteForeignKey;
	}

	public void setcuentacontablereteForeignKey(CuentaContable cuentacontablereteForeignKey) {
		this.cuentacontablereteForeignKey = cuentacontablereteForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	public Long idCuentaContableReteActual=0L;

	public Long getidCuentaContableReteActual() {
		return idCuentaContableReteActual;
	}

	public void setidCuentaContableReteActual(Long idCuentaContableReteActual) {
		this.idCuentaContableReteActual= idCuentaContableReteActual;
	}
	
	

	public Boolean isTienePermisosFormularioRentaExtra=false;

	public Boolean getIsTienePermisosFormularioRentaExtra() {
		return isTienePermisosFormularioRentaExtra;
	}

	public void setIsTienePermisosFormularioRentaExtra(Boolean isTienePermisosFormularioRentaExtra) {
		this.isTienePermisosFormularioRentaExtra= isTienePermisosFormularioRentaExtra;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoFormaPago;
	public Boolean isPermisoNuevoFormaPago;
	public Boolean isPermisoActualizarFormaPago;
	public Boolean isPermisoActualizarOriginalFormaPago;
	public Boolean isPermisoEliminarFormaPago;
	public Boolean isPermisoGuardarCambiosFormaPago;
	public Boolean isPermisoConsultaFormaPago;
	public Boolean isPermisoBusquedaFormaPago;
	public Boolean isPermisoReporteFormaPago;
	public Boolean isPermisoPaginacionMedioFormaPago;
	public Boolean isPermisoPaginacionAltoFormaPago;
	public Boolean isPermisoPaginacionTodoFormaPago;
	public Boolean isPermisoCopiarFormaPago;
	public Boolean isPermisoVerFormFormaPago;
	public Boolean isPermisoDuplicarFormaPago;
	public Boolean isPermisoOrdenFormaPago;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public FormaPagoParameterReturnGeneral formapagoReturnGeneral;
	public FormaPagoParameterReturnGeneral formapagoParameterGeneral;
	
	

	public FormularioRentaExtraLogic formulariorentaextraLogic=null;

	public FormularioRentaExtraLogic getFormularioRentaExtraLogic() {
		return formulariorentaextraLogic;
	}

	public void setFormularioRentaExtraLogic(FormularioRentaExtraLogic formulariorentaextraLogic) {
		this.formulariorentaextraLogic = formulariorentaextraLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoFormaPago=false;
	public Boolean esParaAccionDesdeFormularioFormaPago=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected FormaPagoSessionBeanAdditional formapagoSessionBeanAdditional=null;
	
	public FormaPagoSessionBeanAdditional getFormaPagoSessionBeanAdditional() {
		return this.formapagoSessionBeanAdditional;
	}
	
	public void setFormaPagoSessionBeanAdditional(FormaPagoSessionBeanAdditional formapagoSessionBeanAdditional) {
		try {
			this.formapagoSessionBeanAdditional=formapagoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected FormaPagoBeanSwingJInternalFrameAdditional formapagoBeanSwingJInternalFrameAdditional=null;
	//public class FormaPagoBeanSwingJInternalFrame
	
	public FormaPagoBeanSwingJInternalFrameAdditional getFormaPagoBeanSwingJInternalFrameAdditional() {
		return this.formapagoBeanSwingJInternalFrameAdditional;
	}
	
	public void setFormaPagoBeanSwingJInternalFrameAdditional(FormaPagoBeanSwingJInternalFrameAdditional formapagoBeanSwingJInternalFrameAdditional) {
		try {
			this.formapagoBeanSwingJInternalFrameAdditional=formapagoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public FormaPagoLogic formapagoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public FormaPago formapagoBean;
	public FormaPagoConstantesFunciones formapagoConstantesFunciones;
	//public FormaPagoParameterReturnGeneral formapagoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public TipoFormaPagoLogic tipoformapagoLogic;
	public TransaccionLogic transaccionLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public CuentaContableLogic cuentacontableLogic;
	public CuentaContableLogic cuentacontablereteLogic;
	
	//PARAMETROS
	
	
	//public List<FormaPago> formapagos;	
	//public List<FormaPago> formapagosEliminados;
	//public List<FormaPago> formapagosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoFormaPago=false;
	public Boolean isVisibilidadCeldaDuplicarFormaPago=true;
	public Boolean isVisibilidadCeldaCopiarFormaPago=true;
	public Boolean isVisibilidadCeldaVerFormFormaPago=true;
	public Boolean isVisibilidadCeldaOrdenFormaPago=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesFormaPago=false;
	public Boolean isVisibilidadCeldaModificarFormaPago=false;
	public Boolean isVisibilidadCeldaActualizarFormaPago=false;
	public Boolean isVisibilidadCeldaEliminarFormaPago=false;
	public Boolean isVisibilidadCeldaCancelarFormaPago=false;
	public Boolean isVisibilidadCeldaGuardarFormaPago=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosFormaPago=false;	
	
	
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadBusquedaPorSiglas=false;
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdCuentaContableRete=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoFormaPago() {
		return this.iIdNuevoFormaPago;
	}

	public void setiIdNuevoFormaPago(Long iIdNuevoFormaPago) {
		this.iIdNuevoFormaPago = iIdNuevoFormaPago;
	}
	
	public Long getidFormaPagoActual() {
		return this.idFormaPagoActual;
	}

	public void setidFormaPagoActual(Long idFormaPagoActual) {
		this.idFormaPagoActual = idFormaPagoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public FormaPago getformapago() {
		return this.formapago;
	}

	public void setformapago(FormaPago formapago) {
		this.formapago = formapago;
	}
	
	public FormaPago getformapagoAux() {
		return this.formapagoAux;
	}

	public void setformapagoAux(FormaPago formapagoAux) {
		this.formapagoAux = formapagoAux;
	}				
	
	public FormaPago getformapagoAnterior() {
		return this.formapagoAnterior;
	}

	public void setformapagoAnterior(FormaPago formapagoAnterior) {
		this.formapagoAnterior = formapagoAnterior;
	}	
	
	public FormaPago getformapagoTotales() {
		return this.formapagoTotales;
	}

	public void setformapagoTotales(FormaPago formapagoTotales) {
		this.formapagoTotales = formapagoTotales;
	}	
	
	public FormaPago getformapagoBean() {
		return this.formapagoBean;
	}

	public void setformapagoBean(FormaPago formapagoBean) {
		this.formapagoBean = formapagoBean;
	}	
	
	public FormaPagoParameterReturnGeneral getformapagoReturnGeneral() {
		return this.formapagoReturnGeneral;
	}

	public void setformapagoReturnGeneral(FormaPagoParameterReturnGeneral formapagoReturnGeneral) {
		this.formapagoReturnGeneral = formapagoReturnGeneral;
	}	
	
	
	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public String siglasBusquedaPorSiglas="";

	public String getsiglasBusquedaPorSiglas() {
		return this.siglasBusquedaPorSiglas;
	}

	public void setsiglasBusquedaPorSiglas(String siglasBusquedaPorSiglas) {
		this.siglasBusquedaPorSiglas = siglasBusquedaPorSiglas;
	}

	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_cuenta_contable_reteFK_IdCuentaContableRete=null;

	public Long getid_cuenta_contable_reteFK_IdCuentaContableRete() {
		return this.id_cuenta_contable_reteFK_IdCuentaContableRete;
	}

	public void setid_cuenta_contable_reteFK_IdCuentaContableRete(Long id_cuenta_contable_reteFK_IdCuentaContableRete) {
		this.id_cuenta_contable_reteFK_IdCuentaContableRete = id_cuenta_contable_reteFK_IdCuentaContableRete;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_forma_pagoFK_IdTipoFormaPago=-1L;

	public Long getid_tipo_forma_pagoFK_IdTipoFormaPago() {
		return this.id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public void setid_tipo_forma_pagoFK_IdTipoFormaPago(Long id_tipo_forma_pagoFK_IdTipoFormaPago) {
		this.id_tipo_forma_pagoFK_IdTipoFormaPago = id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public FormaPagoLogic getFormaPagoLogic()	{		
		return formapagoLogic;
	}

	public void setFormaPagoLogic(FormaPagoLogic formapagoLogic) {
		this.formapagoLogic = formapagoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoFormaPago() {
		return isEsNuevoFormaPago;
	}

	public void setIsEsNuevoFormaPago(Boolean isEsNuevoFormaPago) {
		this.isEsNuevoFormaPago = isEsNuevoFormaPago;
	}

	public Boolean getEsParaAccionDesdeFormularioFormaPago() {
		return esParaAccionDesdeFormularioFormaPago;
	}
	
	public void setEsParaAccionDesdeFormularioFormaPago(Boolean esParaAccionDesdeFormularioFormaPago) {
		this.esParaAccionDesdeFormularioFormaPago = esParaAccionDesdeFormularioFormaPago;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(formapagoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(formapagoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(formapagoSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(formapagoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(formapagoSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(formapagoSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(formapagoSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFormaPagosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFormaPagoLogic tipoformapagoLogic=new TipoFormaPagoLogic();

			//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

					tipoformapagoLogic.getTodosTipoFormaPagosWithConnection(sFinalQuery,new Pagination());

					this.tipoformapagosForeignKey=tipoformapagoLogic.getTipoFormaPagos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFormaPago(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getEntityWithConnection(formapagoSessionBean.getlidTipoFormaPagoActual());
					this.tipoformapagosForeignKey.add(tipoformapagoLogic.getTipoFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(formapagoSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(formapagoSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(formapagoSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableRetesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableretesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontablereteNulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRete()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablereteLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableretesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableretesForeignKey.add(0, cuentacontablereteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableRete(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(formapagoSessionBean.getlidCuentaContableReteActual());
					this.cuentacontableretesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaFormaPago.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaFormaPagoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaFormaPagoGenerico!=null && jComboBoxid_empresaFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_empresaFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalFormaPago.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalFormaPagoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalFormaPagoGenerico!=null && jComboBoxid_sucursalFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloFormaPago.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloFormaPagoGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloFormaPagoGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloFormaPagoGenerico!=null && jComboBoxid_moduloFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_moduloFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioFormaPago.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioFormaPagoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioFormaPagoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioFormaPagoGenerico!=null && jComboBoxid_ejercicioFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoFormaPago.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoFormaPagoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoFormaPagoGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoFormaPagoGenerico!=null && jComboBoxid_periodoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_periodoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioFormaPago.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioFormaPagoGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioFormaPagoGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioFormaPagoGenerico!=null && jComboBoxid_anioFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_anioFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesFormaPago.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesFormaPagoGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesFormaPagoGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesFormaPagoGenerico!=null && jComboBoxid_mesFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_mesFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFormaPagoForeignKey(Long idTipoFormaPagoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoformapagoTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setTipoFormaPago(tipoformapagoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setSelectedItem(tipoformapagoTemp);
					}
				} else {
					//jComboBoxid_tipo_forma_pagoFormaPago.setSelectedItem(tipoformapagoTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoformapagoTemp!=null && jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago!=null) {
						jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.setSelectedItem(tipoformapagoTemp);
					} else {
						if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago!=null) {
							//jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.setSelectedItem(tipoformapagoTemp);
							if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFormaPagoForeignKeyDescripcion(Long idTipoFormaPagoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}


			sDescripcion=TipoFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFormaPagoForeignKeyGenerico(Long idTipoFormaPagoSeleccionado,JComboBox jComboBoxid_tipo_forma_pagoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(tipoformapagoTemp!=null) {
				jComboBoxid_tipo_forma_pagoFormaPagoGenerico.setSelectedItem(tipoformapagoTemp);
			} else {
				if(jComboBoxid_tipo_forma_pagoFormaPagoGenerico!=null && jComboBoxid_tipo_forma_pagoFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_forma_pagoFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionFormaPago.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionFormaPago!=null) {
						jComboBoxid_transaccionFK_IdTransaccionFormaPago.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionFormaPago!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionFormaPago.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionFormaPago.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionFormaPagoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionFormaPagoGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionFormaPagoGenerico!=null && jComboBoxid_transaccionFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_transaccionFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico!=null && jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableFormaPago.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableFormaPagoGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableFormaPagoGenerico!=null && jComboBoxid_cuenta_contableFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableReteForeignKey(Long idCuentaContableReteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablereteTemp=null;

			for(CuentaContable cuentacontablereteAux:cuentacontableretesForeignKey) {
				if(cuentacontablereteAux.getId()!=null && cuentacontablereteAux.getId().equals(idCuentaContableReteSeleccionado)) {
					cuentacontablereteTemp=cuentacontablereteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablereteTemp!=null) {

					if(this.formapago!=null) {
						this.formapago.setCuentaContableRete(cuentacontablereteTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setSelectedItem(cuentacontablereteTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_reteFormaPago.setSelectedItem(cuentacontablereteTemp);
					if(this.jInternalFrameDetalleFormFormaPago!=null) {
						if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableRete") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablereteTemp!=null && jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago!=null) {
						jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.setSelectedItem(cuentacontablereteTemp);
					} else {
						if(jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago!=null) {
							//jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.setSelectedItem(cuentacontablereteTemp);
							if(jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.getItemCount()>0) {
								jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableReteForeignKeyDescripcion(Long idCuentaContableReteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablereteTemp=null;

			for(CuentaContable cuentacontablereteAux:cuentacontableretesForeignKey) {
				if(cuentacontablereteAux.getId()!=null && cuentacontablereteAux.getId().equals(idCuentaContableReteSeleccionado)) {
					cuentacontablereteTemp=cuentacontablereteAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablereteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableReteForeignKeyGenerico(Long idCuentaContableReteSeleccionado,JComboBox jComboBoxid_cuenta_contable_reteFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablereteTemp=null;

			for(CuentaContable cuentacontablereteAux:cuentacontableretesForeignKey) {
				if(cuentacontablereteAux.getId()!=null && cuentacontablereteAux.getId().equals(idCuentaContableReteSeleccionado)) {
					cuentacontablereteTemp=cuentacontablereteAux;
					break;
				}
			}

			if(cuentacontablereteTemp!=null) {
				jComboBoxid_cuenta_contable_reteFormaPagoGenerico.setSelectedItem(cuentacontablereteTemp);
			} else {
				if(jComboBoxid_cuenta_contable_reteFormaPagoGenerico!=null && jComboBoxid_cuenta_contable_reteFormaPagoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_reteFormaPagoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(FormaPago formapago,JComboBox jComboBoxid_empresaFormaPagoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaFormaPagoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaFormaPagoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				formapago.setid_empresa(empresaAux.getId());
				formapago.setempresa_descripcion(FormaPagoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				formapago.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(FormaPago formapago,JComboBox jComboBoxid_sucursalFormaPagoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalFormaPagoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalFormaPagoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				formapago.setid_sucursal(sucursalAux.getId());
				formapago.setsucursal_descripcion(FormaPagoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				formapago.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(FormaPago formapago,JComboBox jComboBoxid_moduloFormaPagoGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloFormaPagoGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloFormaPagoGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				formapago.setid_modulo(moduloAux.getId());
				formapago.setmodulo_descripcion(FormaPagoConstantesFunciones.getModuloDescripcion(moduloAux));
				formapago.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(FormaPago formapago,JComboBox jComboBoxid_ejercicioFormaPagoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioFormaPagoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioFormaPagoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				formapago.setid_ejercicio(ejercicioAux.getId());
				formapago.setejercicio_descripcion(FormaPagoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				formapago.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(FormaPago formapago,JComboBox jComboBoxid_periodoFormaPagoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoFormaPagoGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoFormaPagoGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				formapago.setid_periodo(periodoAux.getId());
				formapago.setperiodo_descripcion(FormaPagoConstantesFunciones.getPeriodoDescripcion(periodoAux));
				formapago.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(FormaPago formapago,JComboBox jComboBoxid_anioFormaPagoGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioFormaPagoGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioFormaPagoGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				formapago.setid_anio(anioAux.getId());
				formapago.setanio_descripcion(FormaPagoConstantesFunciones.getAnioDescripcion(anioAux));
				formapago.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(FormaPago formapago,JComboBox jComboBoxid_mesFormaPagoGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesFormaPagoGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesFormaPagoGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				formapago.setid_mes(mesAux.getId());
				formapago.setmes_descripcion(FormaPagoConstantesFunciones.getMesDescripcion(mesAux));
				formapago.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFormaPagoForeignKey(FormaPago formapago,JComboBox jComboBoxid_tipo_forma_pagoFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoAux=new TipoFormaPago();

			if(jComboBoxid_tipo_forma_pagoFormaPagoGenerico==null) {
				tipoformapagoAux=(TipoFormaPago)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.getSelectedItem();
			} else {
				tipoformapagoAux=(TipoFormaPago)jComboBoxid_tipo_forma_pagoFormaPagoGenerico.getSelectedItem();
			}

			if(tipoformapagoAux!=null && tipoformapagoAux.getId()!=null) {
				formapago.setid_tipo_forma_pago(tipoformapagoAux.getId());
				formapago.settipoformapago_descripcion(FormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoAux));
				formapago.setTipoFormaPago(tipoformapagoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(FormaPago formapago,JComboBox jComboBoxid_transaccionFormaPagoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionFormaPagoGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionFormaPagoGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				formapago.setid_transaccion(transaccionAux.getId());
				formapago.settransaccion_descripcion(FormaPagoConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				formapago.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(FormaPago formapago,JComboBox jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloFormaPagoGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				formapago.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				formapago.settipotransaccionmodulo_descripcion(FormaPagoConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				formapago.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(FormaPago formapago,JComboBox jComboBoxid_cuenta_contableFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableFormaPagoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableFormaPagoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				formapago.setid_cuenta_contable(cuentacontableAux.getId());
				formapago.setcuentacontable_descripcion(FormaPagoConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				formapago.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableReteForeignKey(FormaPago formapago,JComboBox jComboBoxid_cuenta_contable_reteFormaPagoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_reteFormaPagoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_reteFormaPagoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				formapago.setid_cuenta_contable_rete(cuentacontableAux.getId());
				formapago.setcuentacontablerete_descripcion(FormaPagoConstantesFunciones.getCuentaContableReteDescripcion(cuentacontableAux));
				formapago.setCuentaContableRete(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFormaPagosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFormaPago=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.addItem(tipoformapago);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.addItem(tipoformapago);
							}
						}

						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.addItem(transaccion);
							}
						}

						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.addItem(tipotransaccionmodulo);
							}
						}

						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.addItem(cuentacontable);
							}
						}

						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableRetesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) { 
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.removeAllItems();

							for(CuentaContable cuentacontablerete:this.cuentacontableretesForeignKey) {
								this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.addItem(cuentacontablerete);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPago!=null) { 
					}

					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableRete") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.removeAllItems();

							for(CuentaContable cuentacontablerete:this.cuentacontableretesForeignKey) {
								this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.addItem(cuentacontablerete);
							}
						}

						if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFormaPagoForeignKey(TipoFormaPago tipoformapago,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setSelectedItem(tipoformapago);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.setSelectedItem(tipoformapago);
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableReteForeignKey(CuentaContable cuentacontablerete,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setSelectedItem(cuentacontablerete);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPago!=null) {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.setSelectedItem(cuentacontablerete);
						} else {
							this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesFormaPago() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			FormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesFormaPago(this.formapagoLogic.getFormaPagos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			FormaPagoConstantesFunciones.refrescarForeignKeysDescripcionesFormaPago(this.formapagos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(TipoFormaPago.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//formapagoLogic.setFormaPagos(this.formapagos);
			formapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public FormaPagoParameterReturnGeneral getFormaPagoParameterGeneral() {
		return this.formapagoParameterGeneral;
	}
	
	public void setFormaPagoParameterGeneral(FormaPagoParameterReturnGeneral formapagoParameterGeneral) {
		this.formapagoParameterGeneral = formapagoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoFormaPago() {
		return isPermisoTodoFormaPago;
	}

	public void setIsPermisoTodoFormaPago(Boolean isPermisoTodoFormaPago) {
		this.isPermisoTodoFormaPago = isPermisoTodoFormaPago;
	}

	public Boolean getIsPermisoNuevoFormaPago() {
		return isPermisoNuevoFormaPago;
	}

	public void setIsPermisoNuevoFormaPago(Boolean isPermisoNuevoFormaPago) {
		this.isPermisoNuevoFormaPago = isPermisoNuevoFormaPago;
	}

	public Boolean getIsPermisoActualizarFormaPago() {
		return isPermisoActualizarFormaPago;
	}

	public void setIsPermisoActualizarFormaPago(Boolean isPermisoActualizarFormaPago) {
		this.isPermisoActualizarFormaPago = isPermisoActualizarFormaPago;
	}

	public Boolean getIsPermisoEliminarFormaPago() {
		return isPermisoEliminarFormaPago;
	}

	public void setIsPermisoEliminarFormaPago(Boolean isPermisoEliminarFormaPago) {
		this.isPermisoEliminarFormaPago = isPermisoEliminarFormaPago;
	}

	public Boolean getIsPermisoGuardarCambiosFormaPago() {
		return isPermisoGuardarCambiosFormaPago;
	}

	public void setIsPermisoGuardarCambiosFormaPago(Boolean isPermisoGuardarCambiosFormaPago) {
		this.isPermisoGuardarCambiosFormaPago = isPermisoGuardarCambiosFormaPago;
	}
	
	public Boolean getIsPermisoConsultaFormaPago() {
		return isPermisoConsultaFormaPago;
	}

	public void setIsPermisoConsultaFormaPago(Boolean isPermisoConsultaFormaPago) {
		this.isPermisoConsultaFormaPago = isPermisoConsultaFormaPago;
	}

	public Boolean getIsPermisoBusquedaFormaPago() {
		return isPermisoBusquedaFormaPago;
	}

	public void setIsPermisoBusquedaFormaPago(Boolean isPermisoBusquedaFormaPago) {
		this.isPermisoBusquedaFormaPago = isPermisoBusquedaFormaPago;
	}

	public Boolean getIsPermisoReporteFormaPago() {
		return isPermisoReporteFormaPago;
	}

	public void setIsPermisoReporteFormaPago(Boolean isPermisoReporteFormaPago) {
		this.isPermisoReporteFormaPago = isPermisoReporteFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionMedioFormaPago() {
		return isPermisoPaginacionMedioFormaPago;
	}

	public void setIsPermisoPaginacionMedioFormaPago(Boolean isPermisoPaginacionMedioFormaPago) {
		this.isPermisoPaginacionMedioFormaPago = isPermisoPaginacionMedioFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionTodoFormaPago() {
		return isPermisoPaginacionTodoFormaPago;
	}

	public void setIsPermisoPaginacionTodoFormaPago(Boolean isPermisoPaginacionTodoFormaPago) {
		this.isPermisoPaginacionTodoFormaPago = isPermisoPaginacionTodoFormaPago;
	}
	
	public Boolean getIsPermisoPaginacionAltoFormaPago() {
		return isPermisoPaginacionAltoFormaPago;
	}

	public void setIsPermisoPaginacionAltoFormaPago(Boolean isPermisoPaginacionAltoFormaPago) {
		this.isPermisoPaginacionAltoFormaPago = isPermisoPaginacionAltoFormaPago;
	}
	
	public Boolean getIsPermisoCopiarFormaPago() {
		return isPermisoCopiarFormaPago;
	}

	public void setIsPermisoCopiarFormaPago(Boolean isPermisoCopiarFormaPago) {
		this.isPermisoCopiarFormaPago = isPermisoCopiarFormaPago;
	}
	
	public Boolean getIsPermisoVerFormFormaPago() {
		return isPermisoVerFormFormaPago;
	}

	public void setIsPermisoVerFormFormaPago(Boolean isPermisoVerFormFormaPago) {
		this.isPermisoVerFormFormaPago = isPermisoVerFormFormaPago;
	}
	
	public Boolean getIsPermisoDuplicarFormaPago() {
		return isPermisoDuplicarFormaPago;
	}

	public void setIsPermisoDuplicarFormaPago(Boolean isPermisoDuplicarFormaPago) {
		this.isPermisoDuplicarFormaPago = isPermisoDuplicarFormaPago;
	}
	
	public Boolean getIsPermisoOrdenFormaPago() {
		return isPermisoOrdenFormaPago;
	}

	public void setIsPermisoOrdenFormaPago(Boolean isPermisoOrdenFormaPago) {
		this.isPermisoOrdenFormaPago = isPermisoOrdenFormaPago;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoFormaPago() {
		return isVisibilidadCeldaNuevoFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoFormaPago(Boolean isVisibilidadCeldaNuevoFormaPago) {
		this.isVisibilidadCeldaNuevoFormaPago = isVisibilidadCeldaNuevoFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarFormaPago() {
		return isVisibilidadCeldaDuplicarFormaPago;
	}

	public void setIsVisibilidadCeldaDuplicarFormaPago(Boolean isVisibilidadCeldaDuplicarFormaPago) {
		this.isVisibilidadCeldaDuplicarFormaPago = isVisibilidadCeldaDuplicarFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarFormaPago() {
		return isVisibilidadCeldaCopiarFormaPago;
	}

	public void setIsVisibilidadCeldaCopiarFormaPago(Boolean isVisibilidadCeldaCopiarFormaPago) {
		this.isVisibilidadCeldaCopiarFormaPago = isVisibilidadCeldaCopiarFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormFormaPago() {
		return isVisibilidadCeldaVerFormFormaPago;
	}

	public void setIsVisibilidadCeldaVerFormFormaPago(Boolean isVisibilidadCeldaVerFormFormaPago) {
		this.isVisibilidadCeldaVerFormFormaPago = isVisibilidadCeldaVerFormFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenFormaPago() {
		return isVisibilidadCeldaOrdenFormaPago;
	}

	public void setIsVisibilidadCeldaOrdenFormaPago(Boolean isVisibilidadCeldaOrdenFormaPago) {
		this.isVisibilidadCeldaOrdenFormaPago = isVisibilidadCeldaOrdenFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesFormaPago() {
		return isVisibilidadCeldaNuevoRelacionesFormaPago;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesFormaPago(Boolean isVisibilidadCeldaNuevoRelacionesFormaPago) {
		this.isVisibilidadCeldaNuevoRelacionesFormaPago = isVisibilidadCeldaNuevoRelacionesFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaModificarFormaPago() {
		return isVisibilidadCeldaModificarFormaPago;
	}

	public void setIsVisibilidadCeldaModificarFormaPago(Boolean isVisibilidadCeldaModificarFormaPago) {
		this.isVisibilidadCeldaModificarFormaPago = isVisibilidadCeldaModificarFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarFormaPago() {
		return isVisibilidadCeldaActualizarFormaPago;
	}

	public void setIsVisibilidadCeldaActualizarFormaPago(Boolean isVisibilidadCeldaActualizarFormaPago) {
		this.isVisibilidadCeldaActualizarFormaPago = isVisibilidadCeldaActualizarFormaPago;
	}

	public Boolean getIsVisibilidadCeldaEliminarFormaPago() {
		return isVisibilidadCeldaEliminarFormaPago;
	}

	public void setIsVisibilidadCeldaEliminarFormaPago(Boolean isVisibilidadCeldaEliminarFormaPago) {
		this.isVisibilidadCeldaEliminarFormaPago = isVisibilidadCeldaEliminarFormaPago;
	}

	public Boolean getIsVisibilidadCeldaCancelarFormaPago() {
		return isVisibilidadCeldaCancelarFormaPago;
	}

	public void setIsVisibilidadCeldaCancelarFormaPago(Boolean isVisibilidadCeldaCancelarFormaPago) {
		this.isVisibilidadCeldaCancelarFormaPago = isVisibilidadCeldaCancelarFormaPago;
	}

	public Boolean getIsVisibilidadCeldaGuardarFormaPago() {
		return isVisibilidadCeldaGuardarFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarFormaPago(Boolean isVisibilidadCeldaGuardarFormaPago) {
		this.isVisibilidadCeldaGuardarFormaPago = isVisibilidadCeldaGuardarFormaPago;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosFormaPago() {
		return isVisibilidadCeldaGuardarCambiosFormaPago;
	}

	public void setIsVisibilidadCeldaGuardarCambiosFormaPago(Boolean isVisibilidadCeldaGuardarCambiosFormaPago) {
		this.isVisibilidadCeldaGuardarCambiosFormaPago = isVisibilidadCeldaGuardarCambiosFormaPago;
	}
		
	public FormaPagoSessionBean getformapagoSessionBean() {
		return this.formapagoSessionBean;
	}
	
	public void setformapagoSessionBean(FormaPagoSessionBean formapagoSessionBean) {
		this.formapagoSessionBean=formapagoSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadBusquedaPorSiglas() {
		return this.isVisibilidadBusquedaPorSiglas;
	}

	public void setisVisibilidadBusquedaPorSiglas(Boolean isVisibilidadBusquedaPorSiglas) {
		this.isVisibilidadBusquedaPorSiglas=isVisibilidadBusquedaPorSiglas;
	}

	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableRete() {
		return this.isVisibilidadFK_IdCuentaContableRete;
	}

	public void setisVisibilidadFK_IdCuentaContableRete(Boolean isVisibilidadFK_IdCuentaContableRete) {
		this.isVisibilidadFK_IdCuentaContableRete=isVisibilidadFK_IdCuentaContableRete;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoFormaPago() {
		return this.isVisibilidadFK_IdTipoFormaPago;
	}

	public void setisVisibilidadFK_IdTipoFormaPago(Boolean isVisibilidadFK_IdTipoFormaPago) {
		this.isVisibilidadFK_IdTipoFormaPago=isVisibilidadFK_IdTipoFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysFormaPago(FormaPago formapago)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(formapago,null);
				this.setActualParaGuardarSucursalForeignKey(formapago,null);
				this.setActualParaGuardarModuloForeignKey(formapago,null);
				this.setActualParaGuardarEjercicioForeignKey(formapago,null);
				this.setActualParaGuardarPeriodoForeignKey(formapago,null);
				this.setActualParaGuardarAnioForeignKey(formapago,null);
				this.setActualParaGuardarMesForeignKey(formapago,null);
				this.setActualParaGuardarTipoFormaPagoForeignKey(formapago,null);
				this.setActualParaGuardarTransaccionForeignKey(formapago,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(formapago,null);
				this.setActualParaGuardarCuentaContableForeignKey(formapago,null);
				this.setActualParaGuardarCuentaContableReteForeignKey(formapago,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(FormaPago formapago,FormaPago formapagoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalFormaPago(formapago);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		formapagoAux.setId(formapago.getId());
		formapagoAux.setVersionRow(formapago.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessFormaPago();
		
			int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = formapagoValidator.getInvalidValues(this.formapago);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			formapagoLogic.setDatosCliente(datosCliente);
			formapagoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				formapagoAux=new  FormaPago();
				
				formapagoAux.setIsNew(true);
				formapagoAux.setIsChanged(true);
				
				formapagoAux.setFormaPagoOriginal(this.formapago);
				
				formapagoAux.setId(this.formapago.getId());	
				formapagoAux.setVersionRow(this.formapago.getVersionRow());	
				formapagoAux.setid_empresa(this.formapago.getid_empresa());	
				formapagoAux.setid_sucursal(this.formapago.getid_sucursal());	
				formapagoAux.setid_modulo(this.formapago.getid_modulo());	
				formapagoAux.setid_ejercicio(this.formapago.getid_ejercicio());	
				formapagoAux.setid_periodo(this.formapago.getid_periodo());	
				formapagoAux.setid_anio(this.formapago.getid_anio());	
				formapagoAux.setid_mes(this.formapago.getid_mes());	
				formapagoAux.setid_tipo_forma_pago(this.formapago.getid_tipo_forma_pago());	
				formapagoAux.setnombre(this.formapago.getnombre());	
				formapagoAux.setsiglas(this.formapago.getsiglas());	
				formapagoAux.setnumero_dias(this.formapago.getnumero_dias());	
				formapagoAux.setporcentaje(this.formapago.getporcentaje());	
				formapagoAux.setvalor(this.formapago.getvalor());	
				formapagoAux.setcon_detalle(this.formapago.getcon_detalle());	
				formapagoAux.setcon_remesa(this.formapago.getcon_remesa());	
				formapagoAux.setcon_maneja_cuotas(this.formapago.getcon_maneja_cuotas());	
				formapagoAux.setfecha(this.formapago.getfecha());	
				formapagoAux.setfecha_fin(this.formapago.getfecha_fin());	
				formapagoAux.setid_transaccion(this.formapago.getid_transaccion());	
				formapagoAux.setid_tipo_transaccion_modulo(this.formapago.getid_tipo_transaccion_modulo());	
				formapagoAux.setid_cuenta_contable(this.formapago.getid_cuenta_contable());	
				
				if(this.formapago.getid_cuenta_contable_rete()!=null && this.formapago.getid_cuenta_contable_rete()>0L) {
					formapagoAux.setid_cuenta_contable_rete(this.formapago.getid_cuenta_contable_rete());
				} else {
					formapagoAux.setid_cuenta_contable_rete(null);
				}	
				formapagoAux.setporcentaje_rete(this.formapago.getporcentaje_rete());	
				formapagoAux.setbase_retencion(this.formapago.getbase_retencion());	
				formapagoAux.setvalor_retencion(this.formapago.getvalor_retencion());	
				formapagoAux.setnumero_retencion(this.formapago.getnumero_retencion());	
				formapagoAux.setnombre_retencion(this.formapago.getnombre_retencion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.formapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagoAux,formapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.saveFormaPagos();//WithConnection
						//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.formapago,formapagoAux);
					
					this.refrescarForeignKeysDescripcionesFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras().addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras.addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagoLogic.saveFormaPagoRelaciones(formapagoAux,this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());//WithConnection
								//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.formapago,formapagoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.setFormularioRentaExtras(new ArrayList<FormularioRentaExtra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras= new ArrayList<FormularioRentaExtra>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();}
							formapagoAux.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.formapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(formapagoAux,formapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.formapago,formapagoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				formapagoAux=new  FormaPago();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.formapagoSessionBean.getEsGuardarRelacionado() 
					|| (this.formapagoSessionBean.getEsGuardarRelacionado() && this.formapago.getId()>=0)) {
						
					formapagoAux.setIsNew(false);
				}
				
				formapagoAux.setIsDeleted(false);
			
				formapagoAux.setId(this.formapago.getId());	
				formapagoAux.setVersionRow(this.formapago.getVersionRow());	
				formapagoAux.setid_empresa(this.formapago.getid_empresa());	
				formapagoAux.setid_sucursal(this.formapago.getid_sucursal());	
				formapagoAux.setid_modulo(this.formapago.getid_modulo());	
				formapagoAux.setid_ejercicio(this.formapago.getid_ejercicio());	
				formapagoAux.setid_periodo(this.formapago.getid_periodo());	
				formapagoAux.setid_anio(this.formapago.getid_anio());	
				formapagoAux.setid_mes(this.formapago.getid_mes());	
				formapagoAux.setid_tipo_forma_pago(this.formapago.getid_tipo_forma_pago());	
				formapagoAux.setnombre(this.formapago.getnombre());	
				formapagoAux.setsiglas(this.formapago.getsiglas());	
				formapagoAux.setnumero_dias(this.formapago.getnumero_dias());	
				formapagoAux.setporcentaje(this.formapago.getporcentaje());	
				formapagoAux.setvalor(this.formapago.getvalor());	
				formapagoAux.setcon_detalle(this.formapago.getcon_detalle());	
				formapagoAux.setcon_remesa(this.formapago.getcon_remesa());	
				formapagoAux.setcon_maneja_cuotas(this.formapago.getcon_maneja_cuotas());	
				formapagoAux.setfecha(this.formapago.getfecha());	
				formapagoAux.setfecha_fin(this.formapago.getfecha_fin());	
				formapagoAux.setid_transaccion(this.formapago.getid_transaccion());	
				formapagoAux.setid_tipo_transaccion_modulo(this.formapago.getid_tipo_transaccion_modulo());	
				formapagoAux.setid_cuenta_contable(this.formapago.getid_cuenta_contable());	
				
				if(this.formapago.getid_cuenta_contable_rete()!=null && this.formapago.getid_cuenta_contable_rete()>0L) {
					formapagoAux.setid_cuenta_contable_rete(this.formapago.getid_cuenta_contable_rete());
				} else {
					formapagoAux.setid_cuenta_contable_rete(null);
				}	
				formapagoAux.setporcentaje_rete(this.formapago.getporcentaje_rete());	
				formapagoAux.setbase_retencion(this.formapago.getbase_retencion());	
				formapagoAux.setvalor_retencion(this.formapago.getvalor_retencion());	
				formapagoAux.setnumero_retencion(this.formapago.getnumero_retencion());	
				formapagoAux.setnombre_retencion(this.formapago.getnombre_retencion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagoAux,formapagos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.saveFormaPagos();//WithConnection
						//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.formapago,formapagoAux);
					
					this.refrescarForeignKeysDescripcionesFormaPago();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras().addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras.addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagoLogic.saveFormaPagoRelaciones(formapagoAux,this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());//WithConnection
								//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.formapago,formapagoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.setFormularioRentaExtras(new ArrayList<FormularioRentaExtra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras= new ArrayList<FormularioRentaExtra>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();}
							formapagoAux.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.formapagoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(formapagoAux,formapagos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.formapago,formapagoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				formapagoAux=new  FormaPago();
				
				formapagoAux.setIsNew(false);
				formapagoAux.setIsChanged(false);
				
				formapagoAux.setIsDeleted(true);
				
				formapagoAux.setId(this.formapago.getId());	
				formapagoAux.setVersionRow(this.formapago.getVersionRow());	
				formapagoAux.setid_empresa(this.formapago.getid_empresa());	
				formapagoAux.setid_sucursal(this.formapago.getid_sucursal());	
				formapagoAux.setid_modulo(this.formapago.getid_modulo());	
				formapagoAux.setid_ejercicio(this.formapago.getid_ejercicio());	
				formapagoAux.setid_periodo(this.formapago.getid_periodo());	
				formapagoAux.setid_anio(this.formapago.getid_anio());	
				formapagoAux.setid_mes(this.formapago.getid_mes());	
				formapagoAux.setid_tipo_forma_pago(this.formapago.getid_tipo_forma_pago());	
				formapagoAux.setnombre(this.formapago.getnombre());	
				formapagoAux.setsiglas(this.formapago.getsiglas());	
				formapagoAux.setnumero_dias(this.formapago.getnumero_dias());	
				formapagoAux.setporcentaje(this.formapago.getporcentaje());	
				formapagoAux.setvalor(this.formapago.getvalor());	
				formapagoAux.setcon_detalle(this.formapago.getcon_detalle());	
				formapagoAux.setcon_remesa(this.formapago.getcon_remesa());	
				formapagoAux.setcon_maneja_cuotas(this.formapago.getcon_maneja_cuotas());	
				formapagoAux.setfecha(this.formapago.getfecha());	
				formapagoAux.setfecha_fin(this.formapago.getfecha_fin());	
				formapagoAux.setid_transaccion(this.formapago.getid_transaccion());	
				formapagoAux.setid_tipo_transaccion_modulo(this.formapago.getid_tipo_transaccion_modulo());	
				formapagoAux.setid_cuenta_contable(this.formapago.getid_cuenta_contable());	
				
				if(this.formapago.getid_cuenta_contable_rete()!=null && this.formapago.getid_cuenta_contable_rete()>0L) {
					formapagoAux.setid_cuenta_contable_rete(this.formapago.getid_cuenta_contable_rete());
				} else {
					formapagoAux.setid_cuenta_contable_rete(null);
				}	
				formapagoAux.setporcentaje_rete(this.formapago.getporcentaje_rete());	
				formapagoAux.setbase_retencion(this.formapago.getbase_retencion());	
				formapagoAux.setvalor_retencion(this.formapago.getvalor_retencion());	
				formapagoAux.setnumero_retencion(this.formapago.getnumero_retencion());	
				formapagoAux.setnombre_retencion(this.formapago.getnombre_retencion());	
				
				if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.formapagoAux.getId()>=0) {	
						this.formapagosEliminados.add(formapagoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagoAux,formapagos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.saveFormaPagos();//WithConnection
						//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras().addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras.addAll(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextrasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagoLogic.saveFormaPagoRelaciones(formapagoAux,this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());//WithConnection
								//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.setFormularioRentaExtras(new ArrayList<FormularioRentaExtra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras= new ArrayList<FormularioRentaExtra>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.quitarFilaTotales();}
							formapagoAux.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.formapagoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(formapagoAux,formapagoLogic.getFormaPagos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(formapagoAux,formapagos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getFormaPagos().addAll(this.formapagosEliminados);
					
					formapagoLogic.saveFormaPagos();//WithConnection
					//formapagoLogic.getSetVersionRowFormaPagos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesFormaPago();
				
				this.formapagosEliminados= new ArrayList<FormaPago>();		
			}
			
			if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Forma Pago GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.formapago=formapagoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessFormaPago();
      	}
		
	}	
	
	public void actualizarRelaciones(FormaPago formapagoLocal) throws Exception {
		
		if(this.formapagoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				formapagoLocal.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());
			
			} else {
			
				formapagoLocal.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextras);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(FormaPago formapagoLocal) throws Exception {	
		if(this.formapagoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				formapagoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				formapagoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				formapagoLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				formapagoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				formapagoLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				formapagoLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				formapagoLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFormaPagoDetalleFormJInternalFrame.class)) {
				TipoFormaPagoBeanSwingJInternalFrame tipoformapagoBeanSwingJInternalFrameLocal=(TipoFormaPagoBeanSwingJInternalFrame) ((TipoFormaPagoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoformapagoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.gettipoformapago(),true);
				tipoformapagoBeanSwingJInternalFrameLocal.actualizarLista(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago,this.tipoformapagosForeignKey);

				tipoformapagoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				formapagoLocal.setTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey("Formulario");
				this.setActualTipoFormaPagoForeignKey(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				formapagoLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				formapagoLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				formapagoLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablereteBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablereteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablereteBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablereteBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablereteBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableretesForeignKey);

				cuentacontablereteBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablereteBeanSwingJInternalFrameLocal.cuentacontable);

				formapagoLocal.setCuentaContableRete(cuentacontablereteBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableRete();
				this.cargarCombosFrameCuentaContableRetesForeignKey("Formulario");
				this.setActualCuentaContableReteForeignKey(cuentacontablereteBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarFormaPagoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = formapagoValidator.getInvalidValues(this.formapago);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(FormaPago formapago,List<FormaPago> formapagos) throws Exception {
		try	{		
			FormaPagoConstantesFunciones.actualizarLista(formapago,formapagos,this.formapagoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(FormaPago formapago,List<FormaPago> formapagos) throws Exception {
		try	{			
			FormaPagoConstantesFunciones.actualizarSelectedLista(formapago,formapagos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<FormaPago> formapagosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				formapagosLocal=this.formapagoLogic.getFormaPagos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				formapagosLocal=this.formapagos;
			}
			//ARCHITECTURE
		
			for(FormaPago formapagoLocal:formapagosLocal) {
				if(this.permiteMantenimiento(formapagoLocal) && formapagoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+FormaPagoConstantesFunciones.getFormaPagoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_empresaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_sucursalFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_moduloFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_ejercicioFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_periodoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_anioFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_mesFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDTIPOFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_tipo_forma_pagoFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnombreFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.SIGLAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelsiglasFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.NUMERODIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_diasFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelporcentajeFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelvalorFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.CONDETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_detalleFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.CONREMESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_remesaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.CONMANEJACUOTAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_maneja_cuotasFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelfechaFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.FECHAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelfecha_finFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_transaccionFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_tipo_transaccion_moduloFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_cuenta_contableFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.IDCUENTACONTABLERETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelid_cuenta_contable_reteFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.PORCENTAJERETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelporcentaje_reteFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.BASERETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelbase_retencionFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.VALORRETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelvalor_retencionFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.NUMERORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_retencionFormaPago,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoConstantesFunciones.NOMBRERETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnombre_retencionFormaPago,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_empresaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_sucursalFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_moduloFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_ejercicioFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_periodoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_anioFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_mesFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_tipo_forma_pagoFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelnombreFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelsiglasFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_diasFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelporcentajeFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelvalorFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelcon_detalleFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelcon_remesaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelcon_maneja_cuotasFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelfechaFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelfecha_finFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_transaccionFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_tipo_transaccion_moduloFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_cuenta_contableFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelid_cuenta_contable_reteFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelporcentaje_reteFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelbase_retencionFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelvalor_retencionFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_retencionFormaPago,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPago.jLabelnombre_retencionFormaPago,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("FormularioRentaExtra")) {
			if(this.formapago==null) {
				this.formapago= new FormaPago();
			}

			if(this.formapagoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoFormaPago
				this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.getformulariorentaextra().setFormaPago(this.formapago);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoFormaPago--;	
		
		
		this.formapagoAux=new FormaPago();
		
		this.formapagoAux.setId(this.iIdNuevoFormaPago);
		this.formapagoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.formapagoLogic.getFormaPagos().add(this.formapagoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.formapagos.add(this.formapagoAux);
		}
		//ARCHITECTURE
		
		this.formapago=this.formapagoAux;
		
		if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioFormaPago(this.formapago);
			this.setVariablesObjetoActualToFormularioForeignKeyFormaPago(this.formapago);
		}
				
		//this.setDefaultControlesFormaPago();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyFormaPago();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyFormaPago();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPago();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualFormaPago(this.formapagoBean,this.formapago,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(FormaPagoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.formapagoSessionBean.getConGuardarRelaciones()) {
			classes=FormaPagoConstantesFunciones.getClassesRelationshipsOfFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.formapagoReturnGeneral=formapagoLogic.procesarEventosFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapagoLogic.getFormaPagos(),this.formapago,this.formapagoParameterGeneral,this.isEsNuevoFormaPago,classes);//this.formapagoLogic.getFormaPago()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanFormaPago(this.formapagoReturnGeneral,this.formapagoBean,false);
		
		if(this.formapagoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyFormaPago(this.formapagoReturnGeneral.getFormaPago());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioFormaPago(this.formapagoReturnGeneral.getFormaPago());
		}
		
		if(this.formapagoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioFormaPago(this.formapagoReturnGeneral.getFormaPago(),classes);//this.formapagoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyFormaPago();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyFormaPago();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			FormaPagoBeanSwingJInternalFrameAdditional.RecargarFormFormaPago(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingFormaPago(false);
						
			if(formapagoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.getEsGuardarRelacionado() && FormularioRentaExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormularioRentaExtraActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPago();
			}
			
			this.actualizarVisualTableDatosFormaPago();
			
			this.jTableDatosFormaPago.setRowSelectionInterval(this.getIndiceNuevoFormaPago(), this.getIndiceNuevoFormaPago());
			
			this.seleccionarFilaTablaFormaPagoActual();
						
			this.actualizarEstadoCeldasBotonesFormaPago("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesFormaPago(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarnombreFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarsiglasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarnumero_diasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarporcentajeFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarvalorFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarcon_detalleFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarcon_remesaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarcon_maneja_cuotasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarfechaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarfecha_finFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarporcentaje_reteFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarbase_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarvalor_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarnumero_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarnombre_retencionFormaPago);	
		//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_empresaFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_sucursalFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_moduloFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_ejercicioFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_periodoFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_anioFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_mesFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_tipo_forma_pagoFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_transaccionFormaPago);//
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_tipo_transaccion_moduloFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_cuenta_contableFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setEnabled(isHabilitar && this.formapagoConstantesFunciones.activarid_cuenta_contable_reteFormaPago);
	};
	
	public void setDefaultControlesFormaPago() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoFormaPago(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.formapagoSessionBean.setConGuardarRelaciones(true);			
			this.formapagoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.formapagoSessionBean.setConGuardarRelaciones(false);			
			this.formapagoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoFormaPago() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
				if(formapagoAux.getId().equals(this.iIdNuevoFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPago formapagoAux:this.formapagos) {
				if(formapagoAux.getId().equals(this.iIdNuevoFormaPago)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualFormaPago(FormaPago formapago,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
				if(formapagoAux.getId().equals(formapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPago formapagoAux:this.formapagos) {
				if(formapagoAux.getId().equals(formapago.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalFormaPago(FormaPago formapagoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
				if(formapagoAux.getFormaPagoOriginal().getId().equals(formapagoOriginal.getId())) {
					existe=true;
					formapagoOriginal.setId(formapagoAux.getId());
					formapagoOriginal.setVersionRow(formapagoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPago formapagoAux:this.formapagos) {
				if(formapagoAux.getFormaPagoOriginal().getId().equals(formapagoOriginal.getId())) {
					existe=true;
					formapagoOriginal.setId(formapagoAux.getId());
					formapagoOriginal.setVersionRow(formapagoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosFormaPago(Boolean esParaCancelar) throws Exception {
		formapagosAux=new ArrayList<FormaPago>();
		formapagoAux=new FormaPago();
		
		if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
					if(formapagoAux.getId()<0) {
						formapagosAux.add(formapagoAux);
					}		
				}
				this.iIdNuevoFormaPago=0L;
				this.formapagoLogic.getFormaPagos().removeAll(formapagosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPago formapagoAux:this.formapagos) {
					if(formapagoAux.getId()<0) {
						formapagosAux.add(formapagoAux);
					}		
				}
				this.iIdNuevoFormaPago=0L;
				this.formapagos.removeAll(formapagosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoFormaPago 
					&& this.formapagoLogic.getFormaPagos().size()>0
					) {
					formapagoAux=this.formapagoLogic.getFormaPagos().get(this.formapagoLogic.getFormaPagos().size() - 1);
				
					if(formapagoAux.getId()<0) {
						this.formapagoLogic.getFormaPagos().remove(formapagoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoFormaPago && this.formapagos.size()>0) {
					formapagoAux=this.formapagos.get(this.formapagos.size() - 1);
				
					if(formapagoAux.getId()<0) {
						this.formapagos.remove(formapagoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoFormaPago(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(formapago.getId()<0) {
				this.formapagoLogic.getFormaPagos().remove(this.formapago);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(formapago.getId()<0) {
				this.formapagos.remove(this.formapago);
			}
		}			
	}
	
	public void setEstadosInicialesFormaPago(List<FormaPago> formapagosAux) throws Exception {
		FormaPagoConstantesFunciones.setEstadosInicialesFormaPago(formapagosAux);
	}
	
	public void setEstadosInicialesFormaPago(FormaPago formapagoAux) throws Exception {
		FormaPagoConstantesFunciones.setEstadosInicialesFormaPago(formapagoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarFormaPagoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarFormaPagoActual()) {
				if(!this.isEsNuevoFormaPago) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoFormaPago=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarFormaPagoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Forma Pago ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(FormaPago formapago) throws Exception {
		FormaPagoConstantesFunciones.seleccionarAsignar(this.formapago,formapago);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarFormaPago=this.isPermisoActualizarOriginalFormaPago;
			
			
			this.seleccionarAsignar(formapago);
			
			

			idCuentaContableActual=formapago.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();

			idCuentaContableReteActual=formapago.getid_cuenta_contable_rete();
			this.seleccionarCuentaContableReteActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			FormaPagoConstantesFunciones.quitarEspaciosFormaPago(this.formapago,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.formapagoSessionBean.setsFuncionBusquedaRapida(this.formapagoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableReteActual() throws Exception {
		try	{
			CuentaContable cuentacontablereteAux=new CuentaContable();

			if(this.idCuentaContableReteActual != null && this.idCuentaContableReteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablereteLogic.getEntityWithConnection(this.idCuentaContableReteActual);
					cuentacontablereteAux= cuentacontablereteLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableretesForeignKey=new ArrayList<CuentaContable>();
				cuentacontableretesForeignKey.add(cuentacontablereteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoFormaPago) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosFormaPago(esParaCancelar);				
				this.cancelarNuevoFormaPago(esParaCancelar);								
			}
			
			this.formapago=new FormaPago();
			
			this.inicializarFormaPago();
			
			this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarFormaPago() throws Exception {
		try {
			FormaPagoConstantesFunciones.inicializarFormaPago(this.formapago);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.formapagoLogic.getFormaPagos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteFormaPagos(String sAccionBusqueda,List<FormaPago> formapagosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="FormaPago"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="FormaPagoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("FormaPagoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="FormaPago"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Forma Pagos");		
		parameters.put("busquedapor", FormaPagoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(FormularioRentaExtra.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					FormaPagoLogic formapagoLogicAuxiliar=new FormaPagoLogic();
					formapagoLogicAuxiliar.setDatosCliente(formapagoLogic.getDatosCliente());				
					formapagoLogicAuxiliar.setFormaPagos(formapagosParaReportes);
					
					formapagoLogicAuxiliar.cargarRelacionesLoteForeignKeyFormaPagoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					formapagosParaReportes=formapagoLogicAuxiliar.getFormaPagos();
					
					//formapagoLogic.getNewConnexionToDeep();
					
					//for (FormaPago formapago:formapagosParaReportes) {
					//	formapagoLogic.deepLoad(formapago, false, DeepLoadType.INCLUDE, classes);
					//}						
					//formapagoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//formapagoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileFormularioRentaExtra = AuxiliarReportes.class.getResourceAsStream("FormularioRentaExtraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formulariorentaextra", reportFileFormularioRentaExtra);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceFormaPago=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			FormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			FormaPagoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceFormaPago=new JRBeanArrayDataSource(FormaPagoJInternalFrame.TraerFormaPagoBeans(formapagosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceFormaPago);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+FormaPagoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+FormaPagoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(FormaPagoBean.TraerFormaPagoBeans(formapagosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoFormaPagoActionPerformed(null);
					//this.generarExcelReporteFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesFormaPagos(sAccionBusqueda,sTipoArchivoReporte,formapagosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPago> formapagosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderFormaPago("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(FormaPago formapago : formapagosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			FormaPagoConstantesFunciones.generarExcelReporteDataFormaPago("NORMAL",row,workbook,formapago,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderFormaPago(String sTipo,Row row,Workbook workbook) {
		
		FormaPagoConstantesFunciones.generarExcelReporteHeaderFormaPago(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPago> formapagosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(FormaPago formapago : formapagosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(FormaPagoConstantesFunciones.getFormaPagoDescripcion(formapago));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.gettipoformapago_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_SIGLAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_SIGLAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getsiglas());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_NUMERODIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERODIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getnumero_dias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_CONDETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONDETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(formapago.getcon_detalle()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_CONREMESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONREMESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(formapago.getcon_remesa()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(formapago.getcon_maneja_cuotas()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_FECHAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getfecha_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getcuentacontablerete_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getporcentaje_rete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_BASERETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_BASERETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getbase_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_VALORRETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALORRETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getvalor_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getnumero_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapago.getnombre_retencion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesFormaPagos(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPago> formapagosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<FormaPago> formapagosRespaldo=null;
		
		classes=FormaPagoConstantesFunciones.getClassesRelationshipsOfFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.formapagoLogic.setDatosCliente(this.datosCliente);
		this.formapagoLogic.setDatosDeep(this.datosDeep);
		this.formapagoLogic.setIsConDeep(true);
		
		formapagosRespaldo=this.formapagoLogic.getFormaPagos();
		
		this.formapagoLogic.setFormaPagos(formapagosParaReportes);	
		this.formapagoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		formapagosParaReportes=this.formapagoLogic.getFormaPagos();
		this.formapagoLogic.setFormaPagos(formapagosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderFormaPago("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(FormaPago formapago : formapagosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderFormaPago("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			FormaPagoConstantesFunciones.generarExcelReporteDataFormaPago("NORMAL",row,workbook,formapago,cellStyleDataAux);
		
			
			


				//FormularioRentaExtra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormularioRentaExtraConstantesFunciones.SCLASSWEBTITULO))) {

				if(formapago.getFormularioRentaExtras()!=null && formapago.getFormularioRentaExtras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormularioRentaExtraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormularioRentaExtraConstantesFunciones.generarExcelReporteHeaderFormularioRentaExtra("RELACIONADO",row,workbook);
				}

				if(formapago.getFormularioRentaExtras()!=null) {
					i2=0;
					for(FormularioRentaExtra formulariorentaextra : formapago.getFormularioRentaExtras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormularioRentaExtraConstantesFunciones.generarExcelReporteDataFormularioRentaExtra("RELACIONADO",row,workbook,formulariorentaextra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(FormaPagoConstantesFunciones.getFormaPagoDescripcion(formapago));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoFormaPago.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessFormaPago() throws Exception {		
		this.startProcessFormaPago(true);
	}
	
	public void startProcessFormaPago(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasFormaPago ,this.jPanelParametrosReportesFormaPago, this.jScrollPanelDatosFormaPago,this.jPanelPaginacionFormaPago, this.jScrollPanelDatosEdicionFormaPago, this.jPanelAccionesFormaPago,this.jPanelAccionesFormularioFormaPago,this.jmenuBarFormaPago,this.jmenuBarDetalleFormaPago,this.jTtoolBarFormaPago,this.jTtoolBarDetalleFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasFormaPago=this.jTabbedPaneBusquedasFormaPago; 
		
		final JPanel jPanelParametrosReportesFormaPago=this.jPanelParametrosReportesFormaPago;
		//final JScrollPane jScrollPanelDatosFormaPago=this.jScrollPanelDatosFormaPago;
		final JTable jTableDatosFormaPago=this.jTableDatosFormaPago;		
		final JPanel jPanelPaginacionFormaPago=this.jPanelPaginacionFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionFormaPago=this.jScrollPanelDatosEdicionFormaPago;
		final JPanel jPanelAccionesFormaPago=this.jPanelAccionesFormaPago;
		
		JPanel jPanelCamposAuxiliarFormaPago=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarFormaPago=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
			jPanelCamposAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jPanelCamposFormaPago;
			jPanelAccionesFormularioAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jPanelAccionesFormularioFormaPago;
		}
		
		final JPanel jPanelCamposFormaPago=jPanelCamposAuxiliarFormaPago;
		final JPanel jPanelAccionesFormularioFormaPago=jPanelAccionesFormularioAuxiliarFormaPago;
		
		
		final JMenuBar jmenuBarFormaPago=this.jmenuBarFormaPago;
		final JToolBar jTtoolBarFormaPago=this.jTtoolBarFormaPago;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarFormaPago=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
			jmenuBarDetalleAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jmenuBarDetalleFormaPago;
			jTtoolBarDetalleAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jTtoolBarDetalleFormaPago;
		}
		
		final JMenuBar jmenuBarDetalleFormaPago=jmenuBarDetalleAuxiliarFormaPago;
		final JToolBar jTtoolBarDetalleFormaPago=jTtoolBarDetalleAuxiliarFormaPago;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesFormaPago;
			processRunnable.jTableDatos=jTableDatosFormaPago;
			processRunnable.jPanelCampos=jPanelCamposFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleFormaPago;
			processRunnable.jTtoolBar=jTtoolBarFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasFormaPago ,jPanelParametrosReportesFormaPago,jTableDatosFormaPago, /*jScrollPanelDatosFormaPago,*/jPanelCamposFormaPago,jPanelPaginacionFormaPago, /*jScrollPanelDatosEdicionFormaPago,*/ jPanelAccionesFormaPago,jPanelAccionesFormularioFormaPago,jmenuBarFormaPago,jmenuBarDetalleFormaPago,jTtoolBarFormaPago,jTtoolBarDetalleFormaPago);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasFormaPago ,jPanelParametrosReportesFormaPago, jScrollPanelDatosFormaPago,jPanelPaginacionFormaPago, jScrollPanelDatosEdicionFormaPago, jPanelAccionesFormaPago,jPanelAccionesFormularioFormaPago,jmenuBarFormaPago,jmenuBarDetalleFormaPago,jTtoolBarFormaPago,jTtoolBarDetalleFormaPago);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessFormaPago() {// throws Exception 
		this.finishProcessFormaPago(true);
	}
	
	public void finishProcessFormaPago(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasFormaPago ,this.jPanelParametrosReportesFormaPago, this.jScrollPanelDatosFormaPago,this.jPanelPaginacionFormaPago, this.jScrollPanelDatosEdicionFormaPago, this.jPanelAccionesFormaPago,this.jPanelAccionesFormularioFormaPago,this.jmenuBarFormaPago,this.jmenuBarDetalleFormaPago,this.jTtoolBarFormaPago,this.jTtoolBarDetalleFormaPago);		
		
		final JTabbedPane jTabbedPaneBusquedasFormaPago=this.jTabbedPaneBusquedasFormaPago; 
		
		final JPanel jPanelParametrosReportesFormaPago=this.jPanelParametrosReportesFormaPago;
		//final JScrollPane jScrollPanelDatosFormaPago=this.jScrollPanelDatosFormaPago;
		final JTable jTableDatosFormaPago=this.jTableDatosFormaPago;		
		final JPanel jPanelPaginacionFormaPago=this.jPanelPaginacionFormaPago;
		//final JScrollPane jScrollPanelDatosEdicionFormaPago=this.jScrollPanelDatosEdicionFormaPago;
		final JPanel jPanelAccionesFormaPago=this.jPanelAccionesFormaPago;
		
		JPanel jPanelCamposAuxiliarFormaPago=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarFormaPago=new JPanel();
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
			jPanelCamposAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jPanelCamposFormaPago;
			jPanelAccionesFormularioAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jPanelAccionesFormularioFormaPago;
		}
		
		final JPanel jPanelCamposFormaPago=jPanelCamposAuxiliarFormaPago;
		final JPanel jPanelAccionesFormularioFormaPago=jPanelAccionesFormularioAuxiliarFormaPago;
		
		
		final JMenuBar jmenuBarFormaPago=this.jmenuBarFormaPago;		
		final JToolBar jTtoolBarFormaPago=this.jTtoolBarFormaPago;
				
		JMenuBar jmenuBarDetalleAuxiliarFormaPago=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarFormaPago=new JToolBar();
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
			jmenuBarDetalleAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jmenuBarDetalleFormaPago;
			jTtoolBarDetalleAuxiliarFormaPago=this.jInternalFrameDetalleFormFormaPago.jTtoolBarDetalleFormaPago;		
		}
		
		final JMenuBar jmenuBarDetalleFormaPago=jmenuBarDetalleAuxiliarFormaPago;
		final JToolBar jTtoolBarDetalleFormaPago=jTtoolBarDetalleAuxiliarFormaPago;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasFormaPago;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesFormaPago;
			processRunnable.jTableDatos=jTableDatosFormaPago;
			processRunnable.jPanelCampos=jPanelCamposFormaPago;
			processRunnable.jPanelPaginacion=jPanelPaginacionFormaPago;
			processRunnable.jPanelAcciones=jPanelAccionesFormaPago;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioFormaPago;
			
			
			processRunnable.jmenuBar=jmenuBarFormaPago;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleFormaPago;
			processRunnable.jTtoolBar=jTtoolBarFormaPago;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleFormaPago;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasFormaPago ,jPanelParametrosReportesFormaPago, jTableDatosFormaPago,/*jScrollPanelDatosFormaPago,*/jPanelCamposFormaPago,jPanelPaginacionFormaPago, /*jScrollPanelDatosEdicionFormaPago,*/ jPanelAccionesFormaPago,jPanelAccionesFormularioFormaPago,jmenuBarFormaPago,jmenuBarDetalleFormaPago,jTtoolBarFormaPago,jTtoolBarDetalleFormaPago));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarFormaPago(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuFormaPago(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleFormaPago,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuFormaPago(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarFormaPago,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleFormaPago,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.formapagoConstantesFunciones.getsFinalQueryFormaPago();
		String  finalQueryPaginacionTodos=this.formapagoConstantesFunciones.getsFinalQueryFormaPago();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=FormaPagoConstantesFunciones.getArrayColumnasGlobalesNoFormaPago(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=FormaPagoConstantesFunciones.getArrayColumnasGlobalesFormaPago(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,FormaPagoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.formapagosEliminados= new ArrayList<FormaPago>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessFormaPago();
		
				///*FormaPagoSessionBean*/this.formapagoSessionBean=new FormaPagoSessionBean();
			
			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=FormaPagoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=FormaPagoConstantesFunciones.getClassesForeignKeysOfFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/formapago."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			formapagosAux= new ArrayList<FormaPago>();
			
				
			formapagoLogic.setDatosCliente(this.datosCliente);
			formapagoLogic.setDatosDeep(this.datosDeep);
			formapagoLogic.setIsConDeep(true);
			
			
			formapagoLogic.getFormaPagoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					formapagoLogic.getTodosFormaPagos(finalQueryGlobal,pagination);
					
					//formapagoLogic.getTodosFormaPagosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(formapagoLogic.getFormaPagos()==null|| formapagoLogic.getFormaPagos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagosAux= new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagoLogic.getFormaPagos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux= new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagoLogic.getTodosFormaPagos(finalQueryGlobal+"",this.pagination);												
							
							//formapagoLogic.getTodosFormaPagosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteFormaPagos("Todos",formapagoLogic.getFormaPagos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());					
							formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idFormaPago=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idFormaPago=this.idActual;
				
				} else if(this.idFormaPagoActual!=null && this.idFormaPagoActual!=0L) {
					idFormaPago=idFormaPagoActual;
				}
				
					
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndicePorId(idFormaPago);
				
				this.formapagos=new ArrayList<FormaPago>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					formapagoLogic.getEntity(idFormaPago);
					
					//formapagoLogic.getEntityWithConnection(idFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
					formapagoLogic.getFormaPagos().add(formapagoLogic.getFormaPago());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagos=new ArrayList<FormaPago>();
					this.formapagos.add(formapago);
				}
				
				if(formapagoLogic.getFormaPago()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("BusquedaPorNombre",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("BusquedaPorNombre",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorSiglas")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosBusquedaPorSiglas(finalQueryGlobal,pagination,siglasBusquedaPorSiglas);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosBusquedaPorSiglas(finalQueryGlobal,pagination,siglasBusquedaPorSiglas);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceBusquedaPorSiglas(siglasBusquedaPorSiglas);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("BusquedaPorSiglas",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("BusquedaPorSiglas",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdCuentaContable",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdCuentaContable",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableRete")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableRete(id_cuenta_contable_reteFK_IdCuentaContableRete);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdCuentaContableRete(finalQueryGlobal,pagination,id_cuenta_contable_reteFK_IdCuentaContableRete);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableRete(id_cuenta_contable_reteFK_IdCuentaContableRete);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableRete(id_cuenta_contable_reteFK_IdCuentaContableRete);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdCuentaContableRete(finalQueryGlobal,pagination,id_cuenta_contable_reteFK_IdCuentaContableRete);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableRete(id_cuenta_contable_reteFK_IdCuentaContableRete);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableRete(id_cuenta_contable_reteFK_IdCuentaContableRete);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdCuentaContableRete",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdCuentaContableRete",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdEjercicio",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdEjercicio",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdEmpresa",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdEmpresa",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdModulo",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdModulo",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdPeriodo",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdPeriodo",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdSucursal",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdSucursal",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFormaPago")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdTipoFormaPago",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdTipoFormaPago",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdTipoTransaccionModulo",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdTipoTransaccionModulo",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagoLogic.getFormaPagosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagoLogic.getFormaPagos()==null||formapagoLogic.getFormaPagos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagos==null|| formapagos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagosAux=new ArrayList<FormaPago>();
						formapagosAux.addAll(formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagosAux=new ArrayList<FormaPago>();
							formapagosAux.addAll(formapagos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagoLogic.getFormaPagosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagos("FK_IdTransaccion",formapagoLogic.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagos("FK_IdTransaccion",formapagos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoLogic.setFormaPagos(new ArrayList<FormaPago>());
						formapagoLogic.getFormaPagos().addAll(formapagosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagos=new ArrayList<FormaPago>();
							formapagos.addAll(formapagosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesFormaPago();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessFormaPago();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=formapagoLogic.getFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=formapagos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=formapagoLogic.getFormaPagos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=formapagos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(FormaPago formapago) {
		Boolean permite=true;
		
		if(this.formapago.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=FormaPagoConstantesFunciones.getOrderByListaFormaPago();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=FormaPagoConstantesFunciones.getOrderByListaFormaPago();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPago formapago:formapagoLogic.getFormaPagos()) {
				if(formapago.getsType().equals(Constantes2.S_TOTALES)) {
					formapagoTotales=formapago;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPago formapago:this.formapagos) {
				if(formapago.getsType().equals(Constantes2.S_TOTALES)) {
					formapagoTotales=formapago;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.formapagoAux=new FormaPago();
			this.formapagoAux.setsType(Constantes2.S_TOTALES);
			this.formapagoAux.setIsNew(false);
			this.formapagoAux.setIsChanged(false);
			this.formapagoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				FormaPagoConstantesFunciones.TotalizarValoresFilaFormaPago(this.formapagoLogic.getFormaPagos(),this.formapagoAux);
				
				this.formapagoLogic.getFormaPagos().add(this.formapagoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				FormaPagoConstantesFunciones.TotalizarValoresFilaFormaPago(this.formapagos,this.formapagoAux);
				
				this.formapagos.add(this.formapagoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		formapagoTotales=new FormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.formapagoLogic.getFormaPagos().remove(formapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.formapagos.remove(formapagoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		formapagoTotales=new FormaPago();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPago formapago:formapagoLogic.getFormaPagos()) {
				if(formapago.getsType().equals(Constantes2.S_TOTALES)) {
					formapagoTotales=formapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				FormaPagoConstantesFunciones.TotalizarValoresFilaFormaPago(this.formapagoLogic.getFormaPagos(),formapagoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPago formapago:this.formapagos) {
				if(formapago.getsType().equals(Constantes2.S_TOTALES)) {
					formapagoTotales=formapago;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				FormaPagoConstantesFunciones.TotalizarValoresFilaFormaPago(this.formapagos,formapagoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getFormaPagosBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosBusquedaPorSiglas()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorSiglas";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdCuentaContableRete()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableRete";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdTipoFormaPago()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoFormaPago";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getFormaPagosFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getFormaPagosBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosBusquedaPorSiglas(String sFinalQuery,String siglas)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosBusquedaPorSiglas(sFinalQuery,this.pagination,siglas);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdCuentaContableRete(String sFinalQuery,Long id_cuenta_contable_rete)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdCuentaContableRete(sFinalQuery,this.pagination,id_cuenta_contable_rete);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdTipoFormaPago(String sFinalQuery,Long id_tipo_forma_pago)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdTipoFormaPago(sFinalQuery,this.pagination,id_tipo_forma_pago);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getFormaPagosFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLogic.getFormaPagosFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosFormaPago() {
		this.isPermisoTodoFormaPago=false;
		this.isPermisoNuevoFormaPago=false;
		this.isPermisoActualizarFormaPago=false;
		this.isPermisoActualizarOriginalFormaPago=false;
		this.isPermisoEliminarFormaPago=false;
		this.isPermisoGuardarCambiosFormaPago=false;
		this.isPermisoConsultaFormaPago=false;
		this.isPermisoBusquedaFormaPago=false;
		this.isPermisoReporteFormaPago=false;		
		this.isPermisoOrdenFormaPago=false;		
		this.isPermisoPaginacionMedioFormaPago=false;		
		this.isPermisoPaginacionAltoFormaPago=false;
		this.isPermisoPaginacionTodoFormaPago=false;
		this.isPermisoCopiarFormaPago=false;		
		this.isPermisoVerFormFormaPago=false;		
		this.isPermisoDuplicarFormaPago=false;		
		this.isPermisoOrdenFormaPago=false;		
	}
	
	public void setPermisosUsuarioFormaPago(Boolean isPermiso) {
		this.isPermisoTodoFormaPago=isPermiso;
		this.isPermisoNuevoFormaPago=isPermiso;
		this.isPermisoActualizarFormaPago=isPermiso;
		this.isPermisoActualizarOriginalFormaPago=isPermiso;
		this.isPermisoEliminarFormaPago=isPermiso;
		this.isPermisoGuardarCambiosFormaPago=isPermiso;
		this.isPermisoConsultaFormaPago=isPermiso;
		this.isPermisoBusquedaFormaPago=isPermiso;
		this.isPermisoReporteFormaPago=isPermiso;
		this.isPermisoOrdenFormaPago=isPermiso;		
		this.isPermisoPaginacionMedioFormaPago=isPermiso;		
		this.isPermisoPaginacionAltoFormaPago=isPermiso;		
		this.isPermisoPaginacionTodoFormaPago=isPermiso;		
		this.isPermisoCopiarFormaPago=isPermiso;		
		this.isPermisoVerFormFormaPago=isPermiso;		
		this.isPermisoDuplicarFormaPago=isPermiso;
		this.isPermisoOrdenFormaPago=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioFormaPago(Boolean isPermiso) {
		//this.isPermisoTodoFormaPago=isPermiso;
		this.isPermisoNuevoFormaPago=isPermiso;
		this.isPermisoActualizarFormaPago=isPermiso;
		this.isPermisoActualizarOriginalFormaPago=isPermiso;
		this.isPermisoEliminarFormaPago=isPermiso;
		this.isPermisoGuardarCambiosFormaPago=isPermiso;
		//this.isPermisoConsultaFormaPago=isPermiso;
		//this.isPermisoBusquedaFormaPago=isPermiso;
		//this.isPermisoReporteFormaPago=isPermiso;
		//this.isPermisoOrdenFormaPago=isPermiso;		
		//this.isPermisoPaginacionMedioFormaPago=isPermiso;		
		//this.isPermisoPaginacionAltoFormaPago=isPermiso;		
		//this.isPermisoPaginacionTodoFormaPago=isPermiso;		
		//this.isPermisoCopiarFormaPago=isPermiso;		
		//this.isPermisoDuplicarFormaPago=isPermiso;
		//this.isPermisoOrdenFormaPago=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioFormaPagoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(FormularioRentaExtraConstantesFunciones.SNOMBREOPCION);
		
		if(FormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosFormularioRentaExtra=false;
		this.isTienePermisosFormularioRentaExtra=this.verificarGetPermisosUsuarioOpcionFormaPagoClaseRelacionada(this.opcionsRelacionadas,FormularioRentaExtraConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebFormaPago(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioFormaPagoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosFormularioRentaExtra=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioFormaPagoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionFormaPagoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioFormaPagoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosFormularioRentaExtra && this.jInternalFrameDetalleFormFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.remove(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioFormaPago() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(FormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, FormaPagoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoFormaPago=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarFormaPago=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalFormaPago=this.isPermisoActualizarFormaPago;
			this.isPermisoEliminarFormaPago=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosFormaPago=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaFormaPago=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaFormaPago=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoFormaPago=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteFormaPago=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioFormaPago=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoFormaPago=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoFormaPago=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarFormaPago=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormFormaPago=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarFormaPago=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenFormaPago=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosFormaPago.setToolTipText(this.jTableDatosFormaPago.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioFormaPago(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioFormaPago(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(FormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(FormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioFormaPago() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosFormularioRentaExtra && this.formapagoConstantesFunciones.mostrarFormularioRentaExtraFormaPago && !FormaPagoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Formulario Renta Extra");
			reporte.setsDescripcion("Formulario Renta Extra");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyFormaPagoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.tipoformapagosForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.cuentacontableretesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(FormaPagoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyFormaPagoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableReteListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPagoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableReteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableretesForeignKey==null||this.cuentacontableretesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableRetesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyFormaPagoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			FormaPagoParameterReturnGeneral formapagoReturnGeneral=new FormaPagoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_empresaFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_empresaFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_sucursalFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_sucursalFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_moduloFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_moduloFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_ejercicioFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_ejercicioFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_periodoFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_periodoFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_anioFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_anioFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_mesFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_mesFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalTipoFormaPago="";

				if(((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_tipo_forma_pagoFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_tipo_forma_pagoFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFormaPago=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFormaPago=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFormaPago, "");
						finalQueryGlobalTipoFormaPago+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFormaPago=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidTipoFormaPagoActual();
					}
				} else {
					finalQueryGlobalTipoFormaPago="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_transaccionFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_transaccionFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_tipo_transaccion_moduloFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_tipo_transaccion_moduloFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_cuenta_contableFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_cuenta_contableFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalCuentaContableRete="";

				if(((this.cuentacontableretesForeignKey==null||this.cuentacontableretesForeignKey.size()<=0) && this.formapagoConstantesFunciones.cargarid_cuenta_contable_reteFormaPago)
					 || (this.esRecargarFks && this.formapagoConstantesFunciones.cargarid_cuenta_contable_reteFormaPago)) {

					if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRete()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableRete=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableRete=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableRete, "");
						finalQueryGlobalCuentaContableRete+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableRetesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableRete=" WHERE " + ConstantesSql.ID + "="+formapagoSessionBean.getlidCuentaContableReteActual();
					}
				} else {
					finalQueryGlobalCuentaContableRete="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				formapagoReturnGeneral=formapagoLogic.cargarCombosLoteForeignKeyFormaPago(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalTipoFormaPago,finalQueryGlobalTransaccion,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalCuentaContable,finalQueryGlobalCuentaContableRete);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=formapagoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=formapagoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=formapagoReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=formapagoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=formapagoReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=formapagoReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=formapagoReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalTipoFormaPago.equals("NONE")) {
				this.tipoformapagosForeignKey=formapagoReturnGeneral.gettipoformapagosForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=formapagoReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=formapagoReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=formapagoReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalCuentaContableRete.equals("NONE")) {
				this.cuentacontableretesForeignKey=formapagoReturnGeneral.getcuentacontableretesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyFormaPago()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyTipoFormaPago();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyCuentaContableRete();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFormaPago()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				TipoFormaPago tipoformapago=new TipoFormaPago();
				TipoFormaPagoConstantesFunciones.setTipoFormaPagoDescripcion(tipoformapago,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoformapago.setId(null);

				if(!TipoFormaPagoConstantesFunciones.ExisteEnLista(this.tipoformapagosForeignKey,tipoformapago,true)) {

					this.tipoformapagosForeignKey.add(0,tipoformapago);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableRete()throws Exception {
		try {

			if(!this.formapagoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableRete()) {
				CuentaContable cuentacontablerete=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablerete,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablerete.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableretesForeignKey,cuentacontablerete,true)) {

					this.cuentacontableretesForeignKey.add(0,cuentacontablerete);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyFormaPago()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyFormaPago()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.formapago.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.formapago.setfecha_fin(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPago();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyFormaPago(FormaPago formapago)throws Exception {	
		try {
			
			this.setActualTipoFormaPagoForeignKey(formapago.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualTransaccionForeignKey(formapago.getid_transaccion(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(formapago.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualCuentaContableForeignKey(formapago.getid_cuenta_contable(),false,"Formulario");
			this.setActualCuentaContableReteForeignKey(formapago.getid_cuenta_contable_rete(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyFormaPago(FormaPago formapago,String sTipoEvento)throws Exception {	
		try {
			
			

				if(formapago.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableFormaPago")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(formapago.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				if(formapago.getCuentaContableRete()!=null && !sTipoEvento.equals("id_cuenta_contable_reteFormaPago")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableretesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableretesForeignKey.add(formapago.getCuentaContableRete());

					this.addItemDefectoCombosForeignKeyCuentaContableRete();
					this.cargarCombosFrameCuentaContableRetesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyFormaPago()throws Exception {	
		try {
			
			this.setActualTipoFormaPagoForeignKey(this.formapagoConstantesFunciones.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.formapagoConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.formapagoConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.formapagoConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualCuentaContableReteForeignKey(this.formapagoConstantesFunciones.getid_cuenta_contable_rete(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPago()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormFormaPago!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormFormaPago!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyFormaPago()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroFormaPago()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyFormaPago()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameCuentaContableRetesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableRetesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyFormaPago()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago!=null && this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
























	
	

	public FormaPagoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public FormaPagoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public FormaPagoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.formapagoSessionBean=new FormaPagoSessionBean(); 
		this.formapagoConstantesFunciones=new FormaPagoConstantesFunciones(); 
		this.formapagoBean=new FormaPago();//(this.formapagoConstantesFunciones); 		
		this.formapagoReturnGeneral=new FormaPagoParameterReturnGeneral(); 
		
		this.formapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.formapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public FormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public FormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public FormaPagoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessFormaPago(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.formapagoConstantesFunciones=new FormaPagoConstantesFunciones(); 
			this.formapagoBean=new FormaPago();//this.formapagoConstantesFunciones); 			
			this.formapagoReturnGeneral=new FormaPagoParameterReturnGeneral(); 
		
			FormaPagoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Forma Pago Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.formapago=new FormaPago();
			this.formapagos = new ArrayList<FormaPago>();
			this.formapagosAux = new ArrayList<FormaPago>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic=new FormaPagoLogic();
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.formapagoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.formapagoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormFormaPago);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoFormaPago);	
					}
					
					if(this.jInternalFrameImportacionFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionFormaPago);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByFormaPago!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByFormaPago);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormFormaPago!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormFormaPago);
				this.jInternalFrameDetalleFormFormaPago.setVisible(false);
				this.jInternalFrameDetalleFormFormaPago.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoFormaPago);
					this.jInternalFrameReporteDinamicoFormaPago.setVisible(false);
					this.jInternalFrameReporteDinamicoFormaPago.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionFormaPago);
					this.jInternalFrameImportacionFormaPago.setVisible(false);
					this.jInternalFrameImportacionFormaPago.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByFormaPago!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByFormaPago);
					this.jInternalFrameOrderByFormaPago.setVisible(false);
					this.jInternalFrameOrderByFormaPago.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idFormaPagoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=FormaPagoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.formapagoReturnGeneral=new FormaPagoParameterReturnGeneral();
			
			this.formapagoParameterGeneral=new FormaPagoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.formapagoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(FormaPagoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(FormularioRentaExtraConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,FormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.formapagoSessionBean.getEsGuardarRelacionado(),this.formapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,FormaPagoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.formapagoSessionBean.getEsGuardarRelacionado(),this.formapagoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaDuplicarFormaPago=true;
			this.isVisibilidadCeldaCopiarFormaPago=true;
			this.isVisibilidadCeldaVerFormFormaPago=true;
			this.isVisibilidadCeldaOrdenFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=false;
			this.isVisibilidadCeldaGuardarFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			
			
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadBusquedaPorSiglas=true;
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdCuentaContableRete=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoFormaPago=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosFormaPago();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioFormaPago(false);
			
			this.setPermisosUsuarioFormaPago();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagoSessionBean.getEsGuardarRelacionado() 
				|| (this.formapagoSessionBean.getEsGuardarRelacionado() && this.formapagoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioFormaPagoClasesRelacionadas();
			}
			
			if(this.formapagoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioFormaPagoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosFormaPago();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualFormaPago();
			}
			
			if(!this.isPermisoBusquedaFormaPago) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasFormaPago.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioFormaPago,this.isPermisoPaginacionMedioFormaPago,this.isPermisoPaginacionTodoFormaPago);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(FormaPagoConstantesFunciones.getTiposSeleccionarFormaPago());
				
				this.tiposColumnasSelect=FormaPagoConstantesFunciones.getTiposSeleccionarFormaPago(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectFormaPago();				
				//this.tiposRelacionesSelect=FormaPagoConstantesFunciones.getTiposRelacionesFormaPago(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioFormaPago();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioFormaPago(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioFormaPago(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPago() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.formulariorentaextraLogic=new FormularioRentaExtraLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.tipoformapagoLogic=new TipoFormaPagoLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.cuentacontablereteLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				formapagoImplementable= (FormaPagoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+FormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				formapagoImplementableHome= (FormaPagoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+FormaPagoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.formapagos= new ArrayList<FormaPago>();
			this.formapagosEliminados= new ArrayList<FormaPago>();
						
			this.isEsNuevoFormaPago=false;
			this.esParaAccionDesdeFormularioFormaPago=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			this.idCuentaContableReteActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableretesForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyFormaPago(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroFormaPago();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			FormaPagoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=FormaPagoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesFormaPago("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingFormaPago(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormFormaPago!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioFormaPago();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioFormaPago();
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasFormaPago.getTabCount(); i++) {
					this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessFormaPago(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga FormaPago: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectFormaPago() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(FormularioRentaExtraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormularioRentaExtraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesFormaPago")) {
				iIndex=this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();	
				
				

				if(sTitle.equals("Formulario Renta Extras")) {
					if(!FormularioRentaExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessFormaPago();

						this.cargarParteTabPanelRelacionadaFormularioRentaExtra(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessFormaPago();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaFormularioRentaExtra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormFormaPago.cargarSessionConBeanSwingJInternalFrameFormularioRentaExtra(false,true,iIndex);
		this.jButtonFormularioRentaExtraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormularioRentaExtra();

		//this.jTabbedPaneRelacionesFormaPago.updateUI();
		//this.jTabbedPaneRelacionesFormaPago.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesFormaPago.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("FormularioRentaExtra")) {
				int row=this.jTableDatosFormaPago.getSelectedRow();
				jButtonFormularioRentaExtraActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Formulario Renta Extra")) {

					if(this.isTienePermisosFormularioRentaExtra && this.formapagoConstantesFunciones.mostrarFormularioRentaExtraFormaPago && !FormaPagoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Formulario Renta Extras"+"("+FormularioRentaExtraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Formulario Renta Extras");

						if(formapagoConstantesFunciones.resaltarFormularioRentaExtraFormaPago!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(formapagoConstantesFunciones.resaltarFormularioRentaExtraFormaPago);
						}

						jmenuItem.setEnabled(this.formapagoConstantesFunciones.activarFormularioRentaExtraFormaPago);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormularioRentaExtra"));

						

						this.jInternalFrameDetalleFormFormaPago.jmenuDetalleFormaPago.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyFormaPago(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyFormaPago(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyFormaPagoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyFormaPago();
		
		this.cargarCombosFrameForeignKeyFormaPago();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyFormaPago();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyFormaPago();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoFormaPago(this.tipoformapagosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableRete(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableReteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableRete();
				this.cargarCombosFrameCuentaContableRetesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableRete(this.cuentacontableretesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.formapagoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			
			if(jTableDatosFormaPago.getRowCount()>=1) {
				jTableDatosFormaPago.removeRowSelectionInterval(0, jTableDatosFormaPago.getRowCount()-1);						
			}
			
			this.isEsNuevoFormaPago=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoFormaPago(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesFormaPago(true);			
			//this.formapago=new FormaPago();
			//this.formapago.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPago(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPago() ;
			
			if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPago(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.formapago);	
			this.actualizarInformacion("INFO_PADRE",false,this.formapago);				
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			if(this.formapagoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar FormaPago: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarFormaPagoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosFormaPago.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosFormaPago.getSelectedRows().length;			
			}
			
			formapagosSeleccionados=this.getFormaPagosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoFormaPago--;			
				//FormaPago formapagoAux= new FormaPago();			
				//formapagoAux.setId(this.iIdNuevoFormaPago);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//FormaPago formapagoOrigen=new FormaPago();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(FormaPago formapagoOrigen : formapagosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							formapagoOrigen =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagoOrigen =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaFormaPago();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.formapago.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosFormaPago(formapagoOrigen,this.formapago,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.formapagoLogic.getFormaPagos().add(this.formapagoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.formapagos.add(this.formapagoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaFormaPago(false);
				
				this.jTableDatosFormaPago.setRowSelectionInterval(this.getIndiceNuevoFormaPago(), this.getIndiceNuevoFormaPago());
				
				int iLastRow =  this.jTableDatosFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPago(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();									
		
			FormaPago formapagoOrigen=new FormaPago();
			FormaPago formapagoDestino=new FormaPago();
				
			formapagosSeleccionados=this.getFormaPagosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosFormaPago.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || formapagosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosFormaPago.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoOrigen =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						formapagoOrigen =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagoDestino =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						formapagoDestino =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				formapagoOrigen =formapagosSeleccionados.get(0);
				formapagoDestino =formapagosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosFormaPago(formapagoOrigen,formapagoDestino,true,false);
				
				formapagoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(formapagoDestino,formapagoLogic.getFormaPagos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagoDestino,formapagos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaFormaPago(false);
				
				//this.jTableDatosFormaPago.setRowSelectionInterval(this.getIndiceNuevoFormaPago(), this.getIndiceNuevoFormaPago());
				
				int iLastRow =  this.jTableDatosFormaPago.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosFormaPago.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosFormaPago.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPago(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormFormaPago.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesFormaPago.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasFormaPago.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesFormaPago.setVisible(!isVisible);
			this.jPanelPaginacionFormaPago.setVisible(!isVisible);
			this.jPanelAccionesFormaPago.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameFormaPago();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByFormaPago();
			
			this.abrirFrameOrderByFormaPago();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByFormaPago();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleFormaPago(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormFormaPago);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormFormaPago.isMaximum()) {
					this.jInternalFrameDetalleFormFormaPago.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormFormaPago.setSize(this.jInternalFrameDetalleFormFormaPago.iWidthFormulario,this.jInternalFrameDetalleFormFormaPago.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormFormaPago.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormFormaPago.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormFormaPago.isMaximum()) {
						this.jInternalFrameDetalleFormFormaPago.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormFormaPago.jContentPaneDetalleFormaPago.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormFormaPago.jContentPaneDetalleFormaPago.getWidth(),FormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormFormaPago.jContentPaneDetalleFormaPago.getWidth(),FormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormFormaPago.jContentPaneDetalleFormaPago.getWidth(),FormaPagoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(FormularioRentaExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormularioRentaExtra();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormFormaPago.setVisible(true);
	        this.jInternalFrameDetalleFormFormaPago.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByFormaPago==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByFormaPago,false,this);
				} else {
					this.jInternalFrameOrderByFormaPago=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByFormaPago,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByFormaPago);
				this.jInternalFrameOrderByFormaPago.setVisible(false);
				this.jInternalFrameOrderByFormaPago.setSelected(false);
				
				this.jInternalFrameOrderByFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByFormaPago"));
				
				this.inicializarActualizarBindingTablaOrderByFormaPago();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionFormaPago() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionFormaPago==null) {
				
				this.jInternalFrameImportacionFormaPago=new ImportacionJInternalFrame(FormaPagoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionFormaPago);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionFormaPago);
				this.jInternalFrameImportacionFormaPago.setVisible(false);
				this.jInternalFrameImportacionFormaPago.setSelected(false);


				this.jInternalFrameImportacionFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionFormaPago"));
				this.jInternalFrameImportacionFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionFormaPago"));
				this.jInternalFrameImportacionFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionFormaPago"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoFormaPago() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoFormaPago==null) {
				this.jInternalFrameReporteDinamicoFormaPago=new ReporteDinamicoJInternalFrame(FormaPagoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoFormaPago);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoFormaPago);
				this.jInternalFrameReporteDinamicoFormaPago.setVisible(false);
				this.jInternalFrameReporteDinamicoFormaPago.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPago"));
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPago"));
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPago"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPago();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaFormularioRentaExtra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.jScrollPanelDatosFormularioRentaExtra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormFormaPago.jContentPaneDetalleFormaPago.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.jScrollPanelDatosFormularioRentaExtra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.jScrollPanelDatosFormularioRentaExtra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.jScrollPanelDatosFormularioRentaExtra.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleFormaPago() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormFormaPago);
			
	       	this.jInternalFrameDetalleFormFormaPago.setVisible(false);
	        this.jInternalFrameDetalleFormFormaPago.setSelected(false);
			
			//this.jInternalFrameDetalleFormFormaPago.dispose();
			//this.jInternalFrameDetalleFormFormaPago=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoFormaPago() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoFormaPago.setVisible(true);
	        this.jInternalFrameReporteDinamicoFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionFormaPago.setVisible(true);
	        this.jInternalFrameImportacionFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByFormaPago.setVisible(true);
	        this.jInternalFrameOrderByFormaPago.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByFormaPago() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByFormaPago.setVisible(false);
	        this.jInternalFrameOrderByFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoFormaPago() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoFormaPago.setVisible(false);
	        this.jInternalFrameReporteDinamicoFormaPago.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionFormaPago() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionFormaPago.setVisible(false);
	        this.jInternalFrameImportacionFormaPago.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableRete(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableRete";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
						TitledBorder titledBorderCuentaContableRete=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableRete.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableRete(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarFormaPago(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarFormaPago(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesFormaPago(true);
			//this.isEsNuevoFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPago(false) ;
			
			if(formapagoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.getEsGuardarRelacionado() && FormularioRentaExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormularioRentaExtraActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPago(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaFormaPagoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarFormaPago(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesFormaPago(true);
			//this.isEsNuevoFormaPago=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.formapago.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesFormaPago("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesFormaPago(false) ;
			
			if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPago(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPago(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.formapagoConstantesFunciones.cargarid_cuenta_contableFormaPago) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingFormaPago(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
			
			if(sType.equals("CuentaContableRete")) {
				if(!this.formapagoConstantesFunciones.cargarid_cuenta_contable_reteFormaPago) {
					this.cargarCombosCuentaContableRetesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingFormaPago(false,false);
					this.cargarCombosFrameCuentaContableRetesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_rete (id);

				this.recargarComboTablaCuentaContableRete(this.cuentacontableretesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFormaPago(List<TipoFormaPago> tipoformapagosForeignKey)throws Exception{
		TableColumn tableColumnTipoFormaPago=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO));
		TableCellEditor tableCellEditorTipoFormaPago =tableColumnTipoFormaPago.getCellEditor();

		TipoFormaPagoTableCell tipoformapagoTableCellFk=(TipoFormaPagoTableCell)tableCellEditorTipoFormaPago;

		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.settipoformapagosForeignKey(tipoformapagosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoformapagoTableCellFk.setRowActual(intSelectedRow);
			//tipoformapagoTableCellFk.settipoformapagosForeignKeyActual(tipoformapagosForeignKey);
		//}


		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.RecargarTipoFormaPagosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableRete(List<CuentaContable> cuentacontableretesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableRete=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE));
		TableCellEditor tableCellEditorCuentaContableRete =tableColumnCuentaContableRete.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableRete;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableretesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableretesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_rete (Long id) throws Exception {
		this.setActualCuentaContableReteForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesFormaPago(false);
			
			//if(!this.isEsNuevoFormaPago) {								
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				
			}
			
			if(this.permiteMantenimiento(this.formapago)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.formapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoFormaPago=true;
					this.inicializarActualizarBindingTablaFormaPago(false);
					this.isEsNuevoFormaPago=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoFormaPago=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoFormaPago=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPago(false);
				
				this.habilitarDeshabilitarControlesFormaPago(false);
			
												
				
				if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleFormaPago();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoFormaPagoActionPerformed(evt,formapagoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualFormaPago(this.formapago,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,formapagoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.formapago.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarFormaPagoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.formapago.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				this.formapago.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.formapago)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.formapagoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((FormaPagoModel) this.jTableDatosFormaPago.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoFormaPago=true;
				this.inicializarActualizarBindingTablaFormaPago(false);
				this.isEsNuevoFormaPago=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesFormaPago(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPago(false);
				
				this.habilitarDeshabilitarControlesFormaPago(false);
				
				
				
				if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleFormaPago();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarFormaPagoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosFormaPago.getRowCount()>=1) {
				jTableDatosFormaPago.removeRowSelectionInterval(0, jTableDatosFormaPago.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesFormaPago(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaFormaPago(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPago(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPago(false) ;
			
			this.isEsNuevoFormaPago=false;
			
			if(FormaPagoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleFormaPago();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingFormaPago(false);
				
				//SI ES MANUAL
				if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualFormaPago();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoFormaPago--;			
			//FormaPago formapagoAux= new FormaPago();			
			//formapagoAux.setId(this.iIdNuevoFormaPago);
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaFormaPago();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
			
			this.formapago.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.formapagoLogic.getFormaPagos().add(this.formapagoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.formapagos.add(this.formapagoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaFormaPago(false);
			
			this.jTableDatosFormaPago.setRowSelectionInterval(this.getIndiceNuevoFormaPago(), this.getIndiceNuevoFormaPago());
			
			int iLastRow =  this.jTableDatosFormaPago.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosFormaPago.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosFormaPago.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaFormaPago(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingFormaPago(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPago(false);
			
			//SI ES MANUAL
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPago();
			}
			
			//this.abrirFrameTreeFormaPago();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Forma PagoS ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionFormaPago.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralFormaPago();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.formapagoReturnGeneral=formapagoLogic.procesarImportacionFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.formapagoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarFormaPagoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionFormaPagoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionFormaPago.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionFormaPago.setFileImportacion(this.jInternalFrameImportacionFormaPago.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionFormaPago.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionFormaPago.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionFormaPago.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionFormaPago.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		

		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("FormaPagoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"FormaPagoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteFormaPagos("Todos",formapagosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case FormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_SIGLAS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_glas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_glas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_glas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_glas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDias_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDias_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDias_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDias_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_CONDETALLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nDetalle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nDetalle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nDetalle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nDetalle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_CONREMESA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nRemesa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nRemesa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nRemesa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nRemesa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nManejaCuotas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nManejaCuotas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nManejaCuotas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nManejaCuotas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_FECHAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableRete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableRete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableRete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableRete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeRete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeRete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeRete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeRete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_BASERETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_seRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_seRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_seRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_seRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoFormaPago.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case FormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoria="id_tipo_forma_pago";
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case FormaPagoConstantesFunciones.LABEL_SIGLAS:
					sNombreCampoCategoria="siglas";
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					sNombreCampoCategoria="numero_dias";
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case FormaPagoConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoria="con_detalle";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONREMESA:
					sNombreCampoCategoria="con_remesa";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS:
					sNombreCampoCategoria="con_maneja_cuotas";
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoria="fecha_fin";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE:
					sNombreCampoCategoria="id_cuenta_contable_rete";
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE:
					sNombreCampoCategoria="porcentaje_rete";
					break;

				case FormaPagoConstantesFunciones.LABEL_BASERETENCION:
					sNombreCampoCategoria="base_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoria="valor_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoria="numero_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION:
					sNombreCampoCategoria="nombre_retencion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case FormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoriaValor="id_tipo_forma_pago";
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case FormaPagoConstantesFunciones.LABEL_SIGLAS:
					sNombreCampoCategoriaValor="siglas";
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					sNombreCampoCategoriaValor="numero_dias";
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case FormaPagoConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONDETALLE:
					sNombreCampoCategoriaValor="con_detalle";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONREMESA:
					sNombreCampoCategoriaValor="con_remesa";
					break;

				case FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS:
					sNombreCampoCategoriaValor="con_maneja_cuotas";
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoriaValor="fecha_fin";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE:
					sNombreCampoCategoriaValor="id_cuenta_contable_rete";
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE:
					sNombreCampoCategoriaValor="porcentaje_rete";
					break;

				case FormaPagoConstantesFunciones.LABEL_BASERETENCION:
					sNombreCampoCategoriaValor="base_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoriaValor="valor_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoriaValor="numero_retencion";
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION:
					sNombreCampoCategoriaValor="nombre_retencion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case FormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_forma_pago");
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case FormaPagoConstantesFunciones.LABEL_SIGLAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Siglas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"siglas");
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Dias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_dias");
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case FormaPagoConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case FormaPagoConstantesFunciones.LABEL_CONDETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_detalle");
					break;

				case FormaPagoConstantesFunciones.LABEL_CONREMESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Remesa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_remesa");
					break;

				case FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Maneja Cuotas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_maneja_cuotas");
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_fin");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_rete");
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_rete");
					break;

				case FormaPagoConstantesFunciones.LABEL_BASERETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Base Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"base_retencion");
					break;

				case FormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_retencion");
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_retencion");
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_retencion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoFormaPagoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("FormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case FormaPagoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.gettipoformapago_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_SIGLAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_SIGLAS);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getsiglas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERODIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERODIAS);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getnumero_dias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_CONDETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONDETALLE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getcon_detalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_CONREMESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONREMESA);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getcon_remesa());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getcon_maneja_cuotas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_FECHAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHAFIN);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getfecha_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getcuentacontablerete_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getporcentaje_rete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_BASERETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_BASERETENCION);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getbase_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_VALORRETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALORRETENCION);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getvalor_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_NUMERORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getnumero_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION);
					iRow++;

					for(FormaPago formapago:formapagosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapago.getnombre_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelFormaPago(row);				
			//	iRow++;
			//}				
			
			//for(FormaPago formapagoAux:formapagosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelFormaPago(formapagoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPago(false);
			
			//SI ES MANUAL
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPago();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPago(false);
			
			//SI ES MANUAL
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualFormaPago();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesFormaPagoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPago(false);
			
			//SI ES MANUAL
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualFormaPago();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaFormaPago() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosFormaPago.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosFormaPago.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosFormaPago.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosFormaPago.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosFormaPago.setMinimumSize(dimensionMinimum);
		this.jTableDatosFormaPago.setMaximumSize(dimensionMaximum);
		this.jTableDatosFormaPago.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingFormaPago(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingFormaPago(esInicializar,true);
	}
	
	public void inicializarActualizarBindingFormaPago(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaFormaPago(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesFormaPago(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasFormaPago(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPago(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesFormaPago(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!FormaPagoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualFormaPago() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaFormaPago();
		
		this.inicializarActualizarBindingBotonesManualFormaPago(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualFormaPago();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPago() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPago(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPago(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosFormaPago.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosFormaPago.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteFormaPago.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormFormaPago!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionNuevoFormaPago.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionSinCerrarFormaPago.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionSinMensajeFormaPago.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosFormaPago.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosFormaPago.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteFormaPago.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormFormaPago!=null) {
				this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionNuevoFormaPago.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionSinCerrarFormaPago.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormFormaPago.jCheckBoxPostAccionSinMensajeFormaPago.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionFormaPago.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionFormaPago.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesFormaPago.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesFormaPago.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarFormaPago.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesFormaPago.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesFormaPago.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralFormaPago.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesFormaPago(Boolean esInicializar) throws Exception {
		try	{	
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPago(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesFormaPago() throws Exception {
		try	{
			if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormaPago();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleFormaPago() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormaPago() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesFormaPago.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesFormaPago.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesFormaPago.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionFormaPago.addItem(reporte);
			}
			
			
			if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionFormaPago.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesFormaPago.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarFormaPago.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarFormaPago.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarFormaPago.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPago();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPago() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
				
				if(this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoFormaPago.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPago.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=FormaPagoConstantesFunciones.getTiposSeleccionarFormaPago(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=FormaPagoConstantesFunciones.getTiposSeleccionarFormaPago(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=FormaPagoConstantesFunciones.getTiposSeleccionarFormaPago(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPago.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoFormaPago.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualFormaPago()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreFormaPago.getText();
		this.siglasBusquedaPorSiglas=this.jTextFieldsiglasBusquedaPorSiglasFormaPago.getText();
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.getSelectedItem()!=null){this.id_cuenta_contable_reteFK_IdCuentaContableRete=((CuentaContable)this.jComboBoxid_cuenta_contable_reteFK_IdCuentaContableReteFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.getSelectedItem()!=null){this.id_tipo_forma_pagoFK_IdTipoFormaPago=((TipoFormaPago)this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloFormaPago.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionFormaPago.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasFormaPago(Boolean esInicializar) throws Exception {				
		if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualFormaPago();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaFormaPago() throws Exception {
		this.inicializarActualizarBindingTablaFormaPago(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByFormaPago() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosFormaPagoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaFormaPago(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=formapagoLogic.getFormaPagos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=formapagos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosFormaPago.setModel(new FormaPagoModel(this.formapagoLogic.getFormaPagos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosFormaPago.setModel(new FormaPagoModel(this.formapagos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByFormaPago!=null && this.jInternalFrameOrderByFormaPago.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByFormaPago();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+FormaPagoConstantesFunciones.SCLASSWEBTITULO,formapagoConstantesFunciones.resaltarSeleccionarFormaPago,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+FormaPagoConstantesFunciones.SCLASSWEBTITULO,formapagoConstantesFunciones.resaltarSeleccionarFormaPago,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_ID));

		if(this.formapagoConstantesFunciones.mostraridFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltaridFormaPago,this.formapagoConstantesFunciones.activaridFormaPago,iSizeTabla,this,true,"idFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltaridFormaPago,this.formapagoConstantesFunciones.activaridFormaPago,this,true,"idFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.formapagoConstantesFunciones.mostrarid_empresaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.formapagoConstantesFunciones.resaltarid_empresaFormaPago,this,this.formapagoConstantesFunciones.activarid_empresaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.formapagoConstantesFunciones.resaltarid_empresaFormaPago,this,this.formapagoConstantesFunciones.activarid_empresaFormaPago,false,"id_empresaFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.formapagoConstantesFunciones.mostrarid_sucursalFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.formapagoConstantesFunciones.resaltarid_sucursalFormaPago,this,this.formapagoConstantesFunciones.activarid_sucursalFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.formapagoConstantesFunciones.resaltarid_sucursalFormaPago,this,this.formapagoConstantesFunciones.activarid_sucursalFormaPago,false,"id_sucursalFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDMODULO));

		if(this.formapagoConstantesFunciones.mostrarid_moduloFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.formapagoConstantesFunciones.resaltarid_moduloFormaPago,this,this.formapagoConstantesFunciones.activarid_moduloFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.formapagoConstantesFunciones.resaltarid_moduloFormaPago,this,this.formapagoConstantesFunciones.activarid_moduloFormaPago,false,"id_moduloFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.formapagoConstantesFunciones.mostrarid_ejercicioFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.formapagoConstantesFunciones.resaltarid_ejercicioFormaPago,this,this.formapagoConstantesFunciones.activarid_ejercicioFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.formapagoConstantesFunciones.resaltarid_ejercicioFormaPago,this,this.formapagoConstantesFunciones.activarid_ejercicioFormaPago,false,"id_ejercicioFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDPERIODO));

		if(this.formapagoConstantesFunciones.mostrarid_periodoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.formapagoConstantesFunciones.resaltarid_periodoFormaPago,this,this.formapagoConstantesFunciones.activarid_periodoFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.formapagoConstantesFunciones.resaltarid_periodoFormaPago,this,this.formapagoConstantesFunciones.activarid_periodoFormaPago,false,"id_periodoFormaPago","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDANIO));

		if(this.formapagoConstantesFunciones.mostrarid_anioFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.formapagoConstantesFunciones.resaltarid_anioFormaPago,this,this.formapagoConstantesFunciones.activarid_anioFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.formapagoConstantesFunciones.resaltarid_anioFormaPago,this,this.formapagoConstantesFunciones.activarid_anioFormaPago,true,"id_anioFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDMES));

		if(this.formapagoConstantesFunciones.mostrarid_mesFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.formapagoConstantesFunciones.resaltarid_mesFormaPago,this,this.formapagoConstantesFunciones.activarid_mesFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.formapagoConstantesFunciones.resaltarid_mesFormaPago,this,this.formapagoConstantesFunciones.activarid_mesFormaPago,true,"id_mesFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO));

		if(this.formapagoConstantesFunciones.mostrarid_tipo_forma_pagoFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.formapagoConstantesFunciones.resaltarid_tipo_forma_pagoFormaPago,this,this.formapagoConstantesFunciones.activarid_tipo_forma_pagoFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.formapagoConstantesFunciones.resaltarid_tipo_forma_pagoFormaPago,this,this.formapagoConstantesFunciones.activarid_tipo_forma_pagoFormaPago,true,"id_tipo_forma_pagoFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_NOMBRE));

		if(this.formapagoConstantesFunciones.mostrarnombreFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagoConstantesFunciones.resaltarnombreFormaPago,this.formapagoConstantesFunciones.activarnombreFormaPago,iSizeTabla,this,true,"nombreFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarnombreFormaPago,this.formapagoConstantesFunciones.activarnombreFormaPago,this,true,"nombreFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_SIGLAS));

		if(this.formapagoConstantesFunciones.mostrarsiglasFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_SIGLAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagoConstantesFunciones.resaltarsiglasFormaPago,this.formapagoConstantesFunciones.activarsiglasFormaPago,iSizeTabla,this,true,"siglasFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarsiglasFormaPago,this.formapagoConstantesFunciones.activarsiglasFormaPago,this,true,"siglasFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_NUMERODIAS));

		if(this.formapagoConstantesFunciones.mostrarnumero_diasFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_NUMERODIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarnumero_diasFormaPago,this.formapagoConstantesFunciones.activarnumero_diasFormaPago,iSizeTabla,this,true,"numero_diasFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarnumero_diasFormaPago,this.formapagoConstantesFunciones.activarnumero_diasFormaPago,this,true,"numero_diasFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_PORCENTAJE));

		if(this.formapagoConstantesFunciones.mostrarporcentajeFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarporcentajeFormaPago,this.formapagoConstantesFunciones.activarporcentajeFormaPago,iSizeTabla,this,true,"porcentajeFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarporcentajeFormaPago,this.formapagoConstantesFunciones.activarporcentajeFormaPago,this,true,"porcentajeFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_VALOR));

		if(this.formapagoConstantesFunciones.mostrarvalorFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarvalorFormaPago,this.formapagoConstantesFunciones.activarvalorFormaPago,iSizeTabla,this,true,"valorFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarvalorFormaPago,this.formapagoConstantesFunciones.activarvalorFormaPago,this,true,"valorFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_CONDETALLE));

		if(this.formapagoConstantesFunciones.mostrarcon_detalleFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_CONDETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.formapagoConstantesFunciones.resaltarcon_detalleFormaPago,this.formapagoConstantesFunciones.activarcon_detalleFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.formapagoConstantesFunciones.resaltarcon_detalleFormaPago,this.formapagoConstantesFunciones.activarcon_detalleFormaPago,this,true,"con_detalleFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_CONREMESA));

		if(this.formapagoConstantesFunciones.mostrarcon_remesaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_CONREMESA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.formapagoConstantesFunciones.resaltarcon_remesaFormaPago,this.formapagoConstantesFunciones.activarcon_remesaFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.formapagoConstantesFunciones.resaltarcon_remesaFormaPago,this.formapagoConstantesFunciones.activarcon_remesaFormaPago,this,true,"con_remesaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS));

		if(this.formapagoConstantesFunciones.mostrarcon_maneja_cuotasFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.formapagoConstantesFunciones.resaltarcon_maneja_cuotasFormaPago,this.formapagoConstantesFunciones.activarcon_maneja_cuotasFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.formapagoConstantesFunciones.resaltarcon_maneja_cuotasFormaPago,this.formapagoConstantesFunciones.activarcon_maneja_cuotasFormaPago,this,true,"con_maneja_cuotasFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_FECHA));

		if(this.formapagoConstantesFunciones.mostrarfechaFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.formapagoConstantesFunciones.resaltarfechaFormaPago,this.formapagoConstantesFunciones.activarfechaFormaPago,iSizeTabla,this,true,"fechaFormaPago","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.formapagoConstantesFunciones.resaltarfechaFormaPago,this.formapagoConstantesFunciones.activarfechaFormaPago,this,true,"fechaFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_FECHAFIN));

		if(this.formapagoConstantesFunciones.mostrarfecha_finFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_FECHAFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.formapagoConstantesFunciones.resaltarfecha_finFormaPago,this.formapagoConstantesFunciones.activarfecha_finFormaPago,iSizeTabla,this,true,"fecha_finFormaPago","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.formapagoConstantesFunciones.resaltarfecha_finFormaPago,this.formapagoConstantesFunciones.activarfecha_finFormaPago,this,true,"fecha_finFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.formapagoConstantesFunciones.mostrarid_transaccionFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.formapagoConstantesFunciones.resaltarid_transaccionFormaPago,this,this.formapagoConstantesFunciones.activarid_transaccionFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.formapagoConstantesFunciones.resaltarid_transaccionFormaPago,this,this.formapagoConstantesFunciones.activarid_transaccionFormaPago,true,"id_transaccionFormaPago","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.formapagoConstantesFunciones.mostrarid_cuenta_contableFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.formapagoConstantesFunciones.resaltarid_cuenta_contableFormaPago,this,this.formapagoConstantesFunciones.activarid_cuenta_contableFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.formapagoConstantesFunciones.resaltarid_cuenta_contableFormaPago,this,this.formapagoConstantesFunciones.activarid_cuenta_contableFormaPago,true,"id_cuenta_contableFormaPago","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE));

		if(this.formapagoConstantesFunciones.mostrarid_cuenta_contable_reteFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableretesForeignKey,this.formapagoConstantesFunciones.resaltarid_cuenta_contable_reteFormaPago,this,this.formapagoConstantesFunciones.activarid_cuenta_contable_reteFormaPago,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableretesForeignKey,this.formapagoConstantesFunciones.resaltarid_cuenta_contable_reteFormaPago,this,this.formapagoConstantesFunciones.activarid_cuenta_contable_reteFormaPago,true,"id_cuenta_contable_reteFormaPago","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE));

		if(this.formapagoConstantesFunciones.mostrarporcentaje_reteFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarporcentaje_reteFormaPago,this.formapagoConstantesFunciones.activarporcentaje_reteFormaPago,iSizeTabla,this,true,"porcentaje_reteFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarporcentaje_reteFormaPago,this.formapagoConstantesFunciones.activarporcentaje_reteFormaPago,this,true,"porcentaje_reteFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_BASERETENCION));

		if(this.formapagoConstantesFunciones.mostrarbase_retencionFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_BASERETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarbase_retencionFormaPago,this.formapagoConstantesFunciones.activarbase_retencionFormaPago,iSizeTabla,this,true,"base_retencionFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarbase_retencionFormaPago,this.formapagoConstantesFunciones.activarbase_retencionFormaPago,this,true,"base_retencionFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_VALORRETENCION));

		if(this.formapagoConstantesFunciones.mostrarvalor_retencionFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_VALORRETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagoConstantesFunciones.resaltarvalor_retencionFormaPago,this.formapagoConstantesFunciones.activarvalor_retencionFormaPago,iSizeTabla,this,true,"valor_retencionFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarvalor_retencionFormaPago,this.formapagoConstantesFunciones.activarvalor_retencionFormaPago,this,true,"valor_retencionFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_NUMERORETENCION));

		if(this.formapagoConstantesFunciones.mostrarnumero_retencionFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_NUMERORETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagoConstantesFunciones.resaltarnumero_retencionFormaPago,this.formapagoConstantesFunciones.activarnumero_retencionFormaPago,iSizeTabla,this,true,"numero_retencionFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarnumero_retencionFormaPago,this.formapagoConstantesFunciones.activarnumero_retencionFormaPago,this,true,"numero_retencionFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION));

		if(this.formapagoConstantesFunciones.mostrarnombre_retencionFormaPago && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagoConstantesFunciones.resaltarnombre_retencionFormaPago,this.formapagoConstantesFunciones.activarnombre_retencionFormaPago,iSizeTabla,this,true,"nombre_retencionFormaPago","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagoConstantesFunciones.resaltarnombre_retencionFormaPago,this.formapagoConstantesFunciones.activarnombre_retencionFormaPago,this,true,"nombre_retencionFormaPago","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.formapagoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosFormularioRentaExtra && this.formapagoConstantesFunciones.mostrarFormularioRentaExtraFormaPago && !FormaPagoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Formulario Renta Extras");
				tableColumn.setHeaderValue("Formulario Renta Extras");
				tableColumn.setCellRenderer(new FormularioRentaExtraTableCell(formapagoConstantesFunciones.resaltarFormularioRentaExtraFormaPago,this,this.formapagoConstantesFunciones.activarFormularioRentaExtraFormaPago));
				tableColumn.setCellEditor(new FormularioRentaExtraTableCell(formapagoConstantesFunciones.resaltarFormularioRentaExtraFormaPago,this,this.formapagoConstantesFunciones.activarFormularioRentaExtraFormaPago));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosFormaPago.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosFormaPago.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosFormaPago.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarFormaPago && this.isPermisoGuardarCambiosFormaPago) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.formapagoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosFormaPago.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.formapagoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosFormaPago.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosFormaPago.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarFormaPago && this.isPermisoGuardarCambiosFormaPago) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.formapagoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarFormaPago && this.isPermisoGuardarCambiosFormaPago) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosFormaPago.moveColumn(this.jTableDatosFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosFormaPago.moveColumn(this.jTableDatosFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.formapagoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosFormaPago.moveColumn(this.jTableDatosFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosFormaPago.moveColumn(this.jTableDatosFormaPago.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosFormaPago.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosFormaPago.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosFormaPago,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosFormaPago.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosFormaPago.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosFormaPago.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosFormaPago.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosFormaPago.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=formapagoLogic.getFormaPagos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=formapagos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosFormaPago.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosFormaPago.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosFormaPago();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoFormaPago=false;
					
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
				if(this.formapagoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormFormaPago==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.formapago.getsType().equals("DUPLICADO")
				   || this.formapago.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoFormaPago=true;
				
				} else {
					this.isEsNuevoFormaPago=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.formapagoSessionBean.getEsGuardarRelacionado()) {
					if(this.formapago.getId()>=0 && !this.formapago.getIsNew()) {						
						this.isEsNuevoFormaPago=false;
						
					} else {
						this.isEsNuevoFormaPago=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoFormaPago(esRelaciones);						
				
				this.seleccionarFormaPago(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.formapago.getId()<0) {
					this.isEsNuevoFormaPago=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarFormaPago(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarFormaPago(evt,rowIndex);
				}	
				
				if(this.formapagoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion FormaPago: " + this.dDif); 
					}
				}								
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarFormaPago(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.formapago)) {
					if(this.formapago.getId()>0) {
						this.formapago.setIsDeleted(true);
						
						this.formapagosEliminados.add(this.formapago);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.formapagoLogic.getFormaPagos().remove(this.formapago);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.formapagos.remove(this.formapago);				
					}
					
					
					((FormaPagoModel) this.jTableDatosFormaPago.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPago(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarFormaPago(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoFormaPago) {
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosFormaPago.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosFormaPago.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioFormaPago(this.formapago);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.formapagoConstantesFunciones.cargarid_empresaFormaPago || this.formapagoConstantesFunciones.event_dependid_empresaFormaPago) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.formapago.getid_empresa());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(formapago.getEmpresa()!=null) {
							this.empresasForeignKey.add(formapago.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.formapago.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.formapagoConstantesFunciones.cargarid_sucursalFormaPago || this.formapagoConstantesFunciones.event_dependid_sucursalFormaPago) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.formapago.getid_sucursal());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(formapago.getSucursal()!=null) {
							this.sucursalsForeignKey.add(formapago.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.formapago.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.formapagoConstantesFunciones.cargarid_moduloFormaPago || this.formapagoConstantesFunciones.event_dependid_moduloFormaPago) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.formapago.getid_modulo());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(formapago.getModulo()!=null) {
							this.modulosForeignKey.add(formapago.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.formapago.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.formapagoConstantesFunciones.cargarid_ejercicioFormaPago || this.formapagoConstantesFunciones.event_dependid_ejercicioFormaPago) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.formapago.getid_ejercicio());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(formapago.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(formapago.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.formapago.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.formapagoConstantesFunciones.cargarid_periodoFormaPago || this.formapagoConstantesFunciones.event_dependid_periodoFormaPago) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.formapago.getid_periodo());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(formapago.getPeriodo()!=null) {
							this.periodosForeignKey.add(formapago.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.formapago.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.formapagoConstantesFunciones.cargarid_anioFormaPago || this.formapagoConstantesFunciones.event_dependid_anioFormaPago) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.formapago.getid_anio());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(formapago.getAnio()!=null) {
							this.aniosForeignKey.add(formapago.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.formapago.getid_anio(),false,"Formulario");

					//Mes
					if(!this.formapagoConstantesFunciones.cargarid_mesFormaPago || this.formapagoConstantesFunciones.event_dependid_mesFormaPago) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.formapago.getid_mes());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(formapago.getMes()!=null) {
							this.messForeignKey.add(formapago.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.formapago.getid_mes(),false,"Formulario");

					//TipoFormaPago
					if(!this.formapagoConstantesFunciones.cargarid_tipo_forma_pagoFormaPago || this.formapagoConstantesFunciones.event_dependid_tipo_forma_pagoFormaPago) {
						//this.cargarCombosTipoFormaPagosForeignKeyLista(" where id="+this.formapago.getid_tipo_forma_pago());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

						if(formapago.getTipoFormaPago()!=null) {
							this.tipoformapagosForeignKey.add(formapago.getTipoFormaPago());
						}

						this.addItemDefectoCombosForeignKeyTipoFormaPago();
						this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
					}
					this.setActualTipoFormaPagoForeignKey(this.formapago.getid_tipo_forma_pago(),false,"Formulario");

					//Transaccion
					if(!this.formapagoConstantesFunciones.cargarid_transaccionFormaPago || this.formapagoConstantesFunciones.event_dependid_transaccionFormaPago) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.formapago.getid_transaccion());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(formapago.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(formapago.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.formapago.getid_transaccion(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.formapagoConstantesFunciones.cargarid_tipo_transaccion_moduloFormaPago || this.formapagoConstantesFunciones.event_dependid_tipo_transaccion_moduloFormaPago) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.formapago.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(formapago.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(formapago.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.formapago.getid_tipo_transaccion_modulo(),false,"Formulario");

					//CuentaContable
					if(!this.formapagoConstantesFunciones.cargarid_cuenta_contableFormaPago || this.formapagoConstantesFunciones.event_dependid_cuenta_contableFormaPago) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.formapago.getid_cuenta_contable());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(formapago.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(formapago.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.formapago.getid_cuenta_contable(),false,"Formulario");

					//CuentaContableRete
					if(!this.formapagoConstantesFunciones.cargarid_cuenta_contable_reteFormaPago || this.formapagoConstantesFunciones.event_dependid_cuenta_contable_reteFormaPago) {
						//this.cargarCombosCuentaContableRetesForeignKeyLista(" where id="+this.formapago.getid_cuenta_contable_rete());
									//this.inicializarActualizarBindingFormaPago(false,false);
						this.cuentacontableretesForeignKey=new ArrayList<CuentaContable>();

						if(formapago.getCuentaContableRete()!=null) {
							this.cuentacontableretesForeignKey.add(formapago.getCuentaContableRete());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableRete();
						this.cargarCombosFrameCuentaContableRetesForeignKey("Todos");
					}
					this.setActualCuentaContableReteForeignKey(this.formapago.getid_cuenta_contable_rete(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesFormaPago("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesFormaPago(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPago() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoFormaPago(FormaPago formapago) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoFormaPago(formapago,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoFormaPago(FormaPago formapago,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioFormaPago(formapago);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyFormaPago(formapago,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyFormaPago(formapago);
	}
	
	public void setVariablesObjetoActualToFormularioFormaPago(FormaPago formapago) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setText(formapago.getId().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setText(formapago.getnombre());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setText(formapago.getsiglas());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setText(formapago.getnumero_dias().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setText(formapago.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setText(formapago.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setSelected(formapago.getcon_detalle());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setSelected(formapago.getcon_remesa());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setSelected(formapago.getcon_maneja_cuotas());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setDate(formapago.getfecha());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setDate(formapago.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setText(formapago.getporcentaje_rete().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setText(formapago.getbase_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setText(formapago.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setText(formapago.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setText(formapago.getnombre_retencion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,FormaPago formapagoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,formapagoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,FormaPago formapagoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				formapagoLocal=this.formapago;
			} else {
				formapagoLocal=this.formapagoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(formapagoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoFormaPago(formapagoLocal,true);
					
					if(formapagoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(formapagoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(formapagoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoFormaPago(FormaPago formapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualFormaPago(formapago,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(formapago);
	}
	
	public void setVariablesFormularioToObjetoActualFormaPago(FormaPago formapago,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualFormaPago(formapago,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualFormaPago(FormaPago formapago,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.getText()==null || this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.getText()=="" || this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.getText()=="Id") {
				this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setText("0");
			}

			if(conColumnasBase) {formapago.setId(Long.parseLong(this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelIdFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setnombre(this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnombreFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setsiglas(this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_SIGLAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelsiglasFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setnumero_dias(Integer.parseInt(this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_NUMERODIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_diasFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelporcentajeFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelvalorFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setcon_detalle(this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_CONDETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_detalleFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setcon_remesa(this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_CONREMESA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_remesaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setcon_maneja_cuotas(this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelcon_maneja_cuotasFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setfecha(this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelfechaFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setfecha_fin(this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_FECHAFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelfecha_finFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setporcentaje_rete(Double.parseDouble(this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelporcentaje_reteFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setbase_retencion(Double.parseDouble(this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_BASERETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelbase_retencionFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setvalor_retencion(Double.parseDouble(this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_VALORRETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelvalor_retencionFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setnumero_retencion(this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_NUMERORETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnumero_retencionFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapago.setnombre_retencion(this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPago.jLabelnombre_retencionFormaPago,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualFormaPago(FormaPago formapagoBean,FormaPago formapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosFormaPago(FormaPago formapagoOrigen,FormaPago formapago,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && formapagoOrigen.getId()!=null && !formapagoOrigen.getId().equals(0L))) {formapago.setId(formapagoOrigen.getId());}}
			if(conDefault || (!conDefault && formapagoOrigen.getnombre()!=null && !formapagoOrigen.getnombre().equals(""))) {formapago.setnombre(formapagoOrigen.getnombre());}
			if(conDefault || (!conDefault && formapagoOrigen.getsiglas()!=null && !formapagoOrigen.getsiglas().equals(""))) {formapago.setsiglas(formapagoOrigen.getsiglas());}
			if(conDefault || (!conDefault && formapagoOrigen.getnumero_dias()!=null && !formapagoOrigen.getnumero_dias().equals(0))) {formapago.setnumero_dias(formapagoOrigen.getnumero_dias());}
			if(conDefault || (!conDefault && formapagoOrigen.getporcentaje()!=null && !formapagoOrigen.getporcentaje().equals(0.0))) {formapago.setporcentaje(formapagoOrigen.getporcentaje());}
			if(conDefault || (!conDefault && formapagoOrigen.getvalor()!=null && !formapagoOrigen.getvalor().equals(0.0))) {formapago.setvalor(formapagoOrigen.getvalor());}
			if(conDefault || (!conDefault && formapagoOrigen.getcon_detalle()!=null && !formapagoOrigen.getcon_detalle().equals(false))) {formapago.setcon_detalle(formapagoOrigen.getcon_detalle());}
			if(conDefault || (!conDefault && formapagoOrigen.getcon_remesa()!=null && !formapagoOrigen.getcon_remesa().equals(false))) {formapago.setcon_remesa(formapagoOrigen.getcon_remesa());}
			if(conDefault || (!conDefault && formapagoOrigen.getcon_maneja_cuotas()!=null && !formapagoOrigen.getcon_maneja_cuotas().equals(false))) {formapago.setcon_maneja_cuotas(formapagoOrigen.getcon_maneja_cuotas());}
			if(conDefault || (!conDefault && formapagoOrigen.getfecha()!=null && !formapagoOrigen.getfecha().equals(new Date()))) {formapago.setfecha(formapagoOrigen.getfecha());}
			if(conDefault || (!conDefault && formapagoOrigen.getfecha_fin()!=null && !formapagoOrigen.getfecha_fin().equals(new Date()))) {formapago.setfecha_fin(formapagoOrigen.getfecha_fin());}
			if(conDefault || (!conDefault && formapagoOrigen.getporcentaje_rete()!=null && !formapagoOrigen.getporcentaje_rete().equals(0.0))) {formapago.setporcentaje_rete(formapagoOrigen.getporcentaje_rete());}
			if(conDefault || (!conDefault && formapagoOrigen.getbase_retencion()!=null && !formapagoOrigen.getbase_retencion().equals(0.0))) {formapago.setbase_retencion(formapagoOrigen.getbase_retencion());}
			if(conDefault || (!conDefault && formapagoOrigen.getvalor_retencion()!=null && !formapagoOrigen.getvalor_retencion().equals(0.0))) {formapago.setvalor_retencion(formapagoOrigen.getvalor_retencion());}
			if(conDefault || (!conDefault && formapagoOrigen.getnumero_retencion()!=null && !formapagoOrigen.getnumero_retencion().equals(""))) {formapago.setnumero_retencion(formapagoOrigen.getnumero_retencion());}
			if(conDefault || (!conDefault && formapagoOrigen.getnombre_retencion()!=null && !formapagoOrigen.getnombre_retencion().equals(""))) {formapago.setnombre_retencion(formapagoOrigen.getnombre_retencion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioFormaPago(FormaPago formapago) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setText(formapago.getId().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setText(formapago.getnombre());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setText(formapago.getsiglas());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setText(formapago.getnumero_dias().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setText(formapago.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setText(formapago.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setSelected(formapago.getcon_detalle());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setSelected(formapago.getcon_remesa());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setSelected(formapago.getcon_maneja_cuotas());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setDate(formapago.getfecha());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setDate(formapago.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setText(formapago.getporcentaje_rete().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setText(formapago.getbase_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setText(formapago.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setText(formapago.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setText(formapago.getnombre_retencion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioFormaPago(FormaPagoBean formapagoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setText(formapagoBean.getId().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setText(formapagoBean.getnombre());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setText(formapagoBean.getsiglas());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setText(formapagoBean.getnumero_dias().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setText(formapagoBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setText(formapagoBean.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setSelected(formapagoBean.getcon_detalle());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setSelected(formapagoBean.getcon_remesa());
			this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setSelected(formapagoBean.getcon_maneja_cuotas());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setDate(formapagoBean.getfecha());
			this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setDate(formapagoBean.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setText(formapagoBean.getporcentaje_rete().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setText(formapagoBean.getbase_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setText(formapagoBean.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setText(formapagoBean.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setText(formapagoBean.getnombre_retencion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanFormaPago(FormaPagoParameterReturnGeneral formapagoReturnGeneral,FormaPagoBean formapagoBean,Boolean conDefault) throws Exception { 
		try {
			FormaPago formapagoLocal=new FormaPago();
			
			formapagoLocal=formapagoReturnGeneral.getFormaPago();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && formapagoLocal.getId()!=null && !formapagoLocal.getId().equals(0L))) {formapagoBean.setId(formapagoLocal.getId());}}
			if(conDefault || (!conDefault && formapagoLocal.getnombre()!=null && !formapagoLocal.getnombre().equals(""))) {formapagoBean.setnombre(formapagoLocal.getnombre());}
			if(conDefault || (!conDefault && formapagoLocal.getsiglas()!=null && !formapagoLocal.getsiglas().equals(""))) {formapagoBean.setsiglas(formapagoLocal.getsiglas());}
			if(conDefault || (!conDefault && formapagoLocal.getnumero_dias()!=null && !formapagoLocal.getnumero_dias().equals(0))) {formapagoBean.setnumero_dias(formapagoLocal.getnumero_dias());}
			if(conDefault || (!conDefault && formapagoLocal.getporcentaje()!=null && !formapagoLocal.getporcentaje().equals(0.0))) {formapagoBean.setporcentaje(formapagoLocal.getporcentaje());}
			if(conDefault || (!conDefault && formapagoLocal.getvalor()!=null && !formapagoLocal.getvalor().equals(0.0))) {formapagoBean.setvalor(formapagoLocal.getvalor());}
			if(conDefault || (!conDefault && formapagoLocal.getcon_detalle()!=null && !formapagoLocal.getcon_detalle().equals(false))) {formapagoBean.setcon_detalle(formapagoLocal.getcon_detalle());}
			if(conDefault || (!conDefault && formapagoLocal.getcon_remesa()!=null && !formapagoLocal.getcon_remesa().equals(false))) {formapagoBean.setcon_remesa(formapagoLocal.getcon_remesa());}
			if(conDefault || (!conDefault && formapagoLocal.getcon_maneja_cuotas()!=null && !formapagoLocal.getcon_maneja_cuotas().equals(false))) {formapagoBean.setcon_maneja_cuotas(formapagoLocal.getcon_maneja_cuotas());}
			if(conDefault || (!conDefault && formapagoLocal.getfecha()!=null && !formapagoLocal.getfecha().equals(new Date()))) {formapagoBean.setfecha(formapagoLocal.getfecha());}
			if(conDefault || (!conDefault && formapagoLocal.getfecha_fin()!=null && !formapagoLocal.getfecha_fin().equals(new Date()))) {formapagoBean.setfecha_fin(formapagoLocal.getfecha_fin());}
			if(conDefault || (!conDefault && formapagoLocal.getporcentaje_rete()!=null && !formapagoLocal.getporcentaje_rete().equals(0.0))) {formapagoBean.setporcentaje_rete(formapagoLocal.getporcentaje_rete());}
			if(conDefault || (!conDefault && formapagoLocal.getbase_retencion()!=null && !formapagoLocal.getbase_retencion().equals(0.0))) {formapagoBean.setbase_retencion(formapagoLocal.getbase_retencion());}
			if(conDefault || (!conDefault && formapagoLocal.getvalor_retencion()!=null && !formapagoLocal.getvalor_retencion().equals(0.0))) {formapagoBean.setvalor_retencion(formapagoLocal.getvalor_retencion());}
			if(conDefault || (!conDefault && formapagoLocal.getnumero_retencion()!=null && !formapagoLocal.getnumero_retencion().equals(""))) {formapagoBean.setnumero_retencion(formapagoLocal.getnumero_retencion());}
			if(conDefault || (!conDefault && formapagoLocal.getnombre_retencion()!=null && !formapagoLocal.getnombre_retencion().equals(""))) {formapagoBean.setnombre_retencion(formapagoLocal.getnombre_retencion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxFormaPagoGenerico(Long idFormaPagoSeleccionado,JComboBox jComboBoxFormaPago,List<FormaPago> formapagosLocal)throws Exception {
		try {
			FormaPago  formapagoTemp=null;

			for(FormaPago formapagoAux:formapagosLocal) {
				if(formapagoAux.getId()!=null && formapagoAux.getId().equals(idFormaPagoSeleccionado)) {
					formapagoTemp=formapagoAux;
					break;
				}
			}

			jComboBoxFormaPago.setSelectedItem(formapagoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxFormaPagoGenerico(JComboBox jComboBoxFormaPago,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxFormaPago.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxFormaPago.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxFormaPago.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxFormaPago.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxFormaPago.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("FormularioRentaExtra")) {
			jButtonFormularioRentaExtraActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapago=(FormaPago) formapagoLogic.getFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			formapago =(FormaPago) formapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getmes_descripcion();
			}
		}

		if(sTipo.equals("TipoFormaPago")) {
			//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.gettipoformapago_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.gettipoformapago_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableRete")) {
			//sDescripcion=this.getActualCuentaContableReteForeignKeyDescripcion((Long)value);
			if(!formapago.getIsNew() && !formapago.getIsChanged() && !formapago.getIsDeleted()) {
				sDescripcion=formapago.getcuentacontablerete_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableReteForeignKeyDescripcion((Long)value);
				sDescripcion=formapago.getcuentacontablerete_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		FormaPago formapagoRow=new FormaPago();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapagoRow=(FormaPago) formapagoLogic.getFormaPagos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			formapagoRow=(FormaPago) formapagos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonFormularioRentaExtraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,FormaPago formapago) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormFormaPago==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago = (FormaPago)this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.formapago = (FormaPago)this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(formapago!=null) {
						this.formapago = formapago;
					} else {
						this.formapago = new FormaPago();
					}
				}

				if(this.isTienePermisosFormularioRentaExtra && this.permiteMantenimiento(this.formapago)) {
					FormularioRentaExtraBeanSwingJInternalFrame formulariorentaextraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup=new FormularioRentaExtraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formulariorentaextraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup;
					} else {
						formulariorentaextraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame;
					}

					List<FormaPago> formapagos=new ArrayList<FormaPago>();
					formapagos.add(this.formapago);
					if(!esRelacionado) {
						//formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.setConGuardarRelaciones(false);
						//formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formulariorentaextraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormFormaPago.cargarFormularioRentaExtraBeanSwingJInternalFrame(formapagos,this.formapago,formulariorentaextraBeanSwingJInternalFrame,/*conInicializar,*/formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.getConGuardarRelaciones(),formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraSessionBean.getEsGuardarRelacionado());
					formulariorentaextraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formulariorentaextraBeanSwingJInternalFrame.actualizarEstadoPanelsFormularioRentaExtra("no_relacionado");

						formulariorentaextraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormularioRentaExtraConstantesFunciones.ITAMANIOFILATABLA + (FormularioRentaExtraConstantesFunciones.ITAMANIOFILATABLA/2));

						formulariorentaextraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
						TitledBorder titledBorderFormularioRentaExtra=(TitledBorder)formulariorentaextraBeanSwingJInternalFrame.jScrollPanelDatosFormularioRentaExtra.getBorder();

						titledBorderFormularioRentaExtra.setTitle(titledBorderFormaPago.getTitle() + " -> Formulario Renta Extra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formulariorentaextraBeanSwingJInternalFrame);
						}

						formulariorentaextraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formulariorentaextraBeanSwingJInternalFrame);

						formulariorentaextraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.formapagoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Formulario Renta Extra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualFormaPago(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago));			
			this.jButtonDuplicarFormaPago.setVisible((this.isVisibilidadCeldaDuplicarFormaPago && this.isPermisoDuplicarFormaPago));			
			this.jButtonCopiarFormaPago.setVisible((this.isVisibilidadCeldaCopiarFormaPago && this.isPermisoCopiarFormaPago));
			this.jButtonVerFormFormaPago.setVisible((this.isVisibilidadCeldaVerFormFormaPago && this.isPermisoVerFormFormaPago));
			
			this.jButtonAbrirOrderByFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));			
			
			this.jButtonNuevoRelacionesFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPago && this.isPermisoNuevoFormaPago));			
			this.jButtonNuevoGuardarCambiosFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago && this.isPermisoGuardarCambiosFormaPago));
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.jInternalFrameDetalleFormFormaPago.jButtonModificarFormaPago.setVisible((this.isVisibilidadCeldaModificarFormaPago && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.setVisible((this.isVisibilidadCeldaActualizarFormaPago && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.setVisible((this.isVisibilidadCeldaEliminarFormaPago && this.isPermisoEliminarFormaPago));
			this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.setVisible(this.isVisibilidadCeldaCancelarFormaPago);							
			this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.setVisible((this.isVisibilidadCeldaGuardarFormaPago && this.isPermisoGuardarCambiosFormaPago));			
			
			}
						
			this.jButtonGuardarCambiosTablaFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPago && this.isPermisoGuardarCambiosFormaPago));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago));						
			this.jButtonDuplicarToolBarFormaPago.setVisible((this.isVisibilidadCeldaDuplicarFormaPago && this.isPermisoDuplicarFormaPago));						
			this.jButtonCopiarToolBarFormaPago.setVisible((this.isVisibilidadCeldaCopiarFormaPago && this.isPermisoCopiarFormaPago));			
			this.jButtonVerFormToolBarFormaPago.setVisible((this.isVisibilidadCeldaVerFormFormaPago && this.isPermisoVerFormFormaPago));			
			this.jButtonAbrirOrderByToolBarFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));
			this.jButtonNuevoRelacionesToolBarFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPago && this.isPermisoNuevoFormaPago));			
			this.jButtonNuevoGuardarCambiosToolBarFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago && this.isPermisoGuardarCambiosFormaPago));			
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.jInternalFrameDetalleFormFormaPago.jButtonModificarToolBarFormaPago.setVisible((this.isVisibilidadCeldaModificarFormaPago && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jButtonActualizarToolBarFormaPago.setVisible((this.isVisibilidadCeldaActualizarFormaPago  && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jButtonEliminarToolBarFormaPago.setVisible((this.isVisibilidadCeldaEliminarFormaPago && this.isPermisoEliminarFormaPago));
			this.jInternalFrameDetalleFormFormaPago.jButtonCancelarToolBarFormaPago.setVisible(this.isVisibilidadCeldaCancelarFormaPago);				
			this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosToolBarFormaPago.setVisible((this.isVisibilidadCeldaGuardarFormaPago && this.isPermisoGuardarCambiosFormaPago));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPago && this.isPermisoGuardarCambiosFormaPago));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago));			
			this.jMenuItemDuplicarFormaPago.setVisible((this.isVisibilidadCeldaDuplicarFormaPago && this.isPermisoDuplicarFormaPago));			
			this.jMenuItemCopiarFormaPago.setVisible((this.isVisibilidadCeldaCopiarFormaPago && this.isPermisoCopiarFormaPago));			
			this.jMenuItemVerFormFormaPago.setVisible((this.isVisibilidadCeldaVerFormFormaPago && this.isPermisoVerFormFormaPago));			
			this.jMenuItemAbrirOrderByFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));			
			//this.jMenuItemMostrarOcultarFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));
			this.jMenuItemDetalleAbrirOrderByFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));			
			//this.jMenuItemDetalleMostrarOcultarFormaPago.setVisible((this.isVisibilidadCeldaOrdenFormaPago && this.isPermisoOrdenFormaPago));			
			this.jMenuItemNuevoRelacionesFormaPago.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPago && this.isPermisoNuevoFormaPago));			
			this.jMenuItemNuevoGuardarCambiosFormaPago.setVisible((this.isVisibilidadCeldaNuevoFormaPago && this.isPermisoNuevoFormaPago && this.isPermisoGuardarCambiosFormaPago));									
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.jInternalFrameDetalleFormFormaPago.jMenuItemModificarFormaPago.setVisible((this.isVisibilidadCeldaModificarFormaPago && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jMenuItemActualizarFormaPago.setVisible((this.isVisibilidadCeldaActualizarFormaPago && this.isPermisoActualizarFormaPago));	
			this.jInternalFrameDetalleFormFormaPago.jMenuItemEliminarFormaPago.setVisible((this.isVisibilidadCeldaEliminarFormaPago && this.isPermisoEliminarFormaPago));
			this.jInternalFrameDetalleFormFormaPago.jMenuItemCancelarFormaPago.setVisible(this.isVisibilidadCeldaCancelarFormaPago);				
			}
			
			this.jMenuItemGuardarCambiosFormaPago.setVisible((this.isVisibilidadCeldaGuardarFormaPago && this.isPermisoGuardarCambiosFormaPago));						
			this.jMenuItemGuardarCambiosTablaFormaPago.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPago && this.isPermisoGuardarCambiosFormaPago));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoFormaPago=this.jButtonNuevoFormaPago.isVisible();
			this.isVisibilidadCeldaDuplicarFormaPago=this.jButtonDuplicarFormaPago.isVisible();
			this.isVisibilidadCeldaCopiarFormaPago=this.jButtonCopiarFormaPago.isVisible();
			this.isVisibilidadCeldaVerFormFormaPago=this.jButtonVerFormFormaPago.isVisible();
			
			this.isVisibilidadCeldaOrdenFormaPago=this.jButtonAbrirOrderByFormaPago.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=this.jButtonNuevoRelacionesFormaPago.isVisible();
			this.isVisibilidadCeldaModificarFormaPago=this.jButtonModificarFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.isVisibilidadCeldaActualizarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosFormaPago=this.jButtonGuardarCambiosTablaFormaPago.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoFormaPago=this.jButtonNuevoToolBarFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=this.jButtonNuevoRelacionesToolBarFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.isVisibilidadCeldaModificarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonModificarToolBarFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonActualizarToolBarFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonEliminarToolBarFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarFormaPago=this.jInternalFrameDetalleFormFormaPago.jButtonCancelarToolBarFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarFormaPago=this.jButtonGuardarCambiosToolBarFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosFormaPago=this.jButtonGuardarCambiosTablaToolBarFormaPago.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoFormaPago=this.jMenuItemNuevoFormaPago.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=this.jMenuItemNuevoRelacionesFormaPago.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.isVisibilidadCeldaModificarFormaPago=this.jInternalFrameDetalleFormFormaPago.jMenuItemModificarFormaPago.isVisible();
			this.isVisibilidadCeldaActualizarFormaPago=this.jInternalFrameDetalleFormFormaPago.jMenuItemActualizarFormaPago.isVisible();
			this.isVisibilidadCeldaEliminarFormaPago=this.jInternalFrameDetalleFormFormaPago.jMenuItemEliminarFormaPago.isVisible();
			this.isVisibilidadCeldaCancelarFormaPago=this.jInternalFrameDetalleFormFormaPago.jMenuItemCancelarFormaPago.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarFormaPago=this.jMenuItemGuardarCambiosFormaPago.isVisible();
			this.isVisibilidadCeldaGuardarCambiosFormaPago=this.jMenuItemGuardarCambiosTablaFormaPago.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesFormaPago(Boolean esInicializar) {
		if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.formapagoSessionBean.getConGuardarRelaciones()) {
				//if(this.formapagoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesFormaPago();
			}
			
			this.inicializarActualizarBindingBotonesManualFormaPago(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualFormaPago() {
		this.jButtonNuevoFormaPago.setVisible(this.isPermisoNuevoFormaPago);			
		this.jButtonDuplicarFormaPago.setVisible(this.isPermisoDuplicarFormaPago);			
		this.jButtonCopiarFormaPago.setVisible(this.isPermisoCopiarFormaPago);			
		this.jButtonVerFormFormaPago.setVisible(this.isPermisoVerFormFormaPago);			
		
		this.jButtonAbrirOrderByFormaPago.setVisible(this.isPermisoOrdenFormaPago);					
		
		this.jButtonNuevoRelacionesFormaPago.setVisible(this.isPermisoNuevoFormaPago);			
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonModificarFormaPago.setVisible(this.isPermisoActualizarFormaPago);	
			this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.setVisible(this.isPermisoActualizarFormaPago);	
			this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.setVisible(this.isPermisoEliminarFormaPago);
			this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.setVisible(this.isVisibilidadCeldaCancelarFormaPago);						
			this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.setVisible(this.isPermisoGuardarCambiosFormaPago);							
		}
		
		this.jButtonGuardarCambiosTablaFormaPago.setVisible(this.isPermisoActualizarFormaPago);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleFormaPago() {
		this.jInternalFrameDetalleFormFormaPago.jButtonModificarFormaPago.setVisible(this.isPermisoActualizarFormaPago);	
		this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.setVisible(this.isPermisoActualizarFormaPago);	
		this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.setVisible(this.isPermisoEliminarFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.setVisible(this.isVisibilidadCeldaCancelarFormaPago);							
		this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.setVisible((this.isVisibilidadCeldaGuardarFormaPago && this.isPermisoGuardarCambiosFormaPago));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosFormaPago() {
		if(FormaPagoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualFormaPago();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesFormaPago() {
	}
	
	public void jTableDatosFormaPagoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarFormaPago(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.formapago.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebFormaPago(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.formapago.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderFormaPago.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.formapago.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebFormaPago(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.formapago.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderFormaPago.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.formapago.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebFormaPago(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.formapago.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderFormaPago.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.formapago.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebFormaPago(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.formapago.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderFormaPago.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.formapago.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebFormaPago(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.formapago.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderFormaPago.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.formapago.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebFormaPago(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.formapago.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderFormaPago.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.formapago.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebFormaPago(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.formapago.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderFormaPago.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.formapago.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_forma_pagoFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoformapago=true;

			idTienePermisotipoformapago=this.tienePermisosUsuarioEnPaginaWebFormaPago(TipoFormaPagoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoformapago) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.tipoformapagoBeanSwingJInternalFrame=new TipoFormaPagoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoformapagoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoformapagoBeanSwingJInternalFrame.getTipoFormaPagoLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_tipo_forma_pago()!=null) {
					this.tipoformapagoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoformapagoBeanSwingJInternalFrame.setIdActual(this.formapago.getid_tipo_forma_pago());
					this.tipoformapagoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFormaPago();
				}

				JInternalFrameBase jinternalFrame =this.tipoformapagoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordertipoformapago=(TitledBorder)this.tipoformapagoBeanSwingJInternalFrame.jScrollPanelDatosTipoFormaPago.getBorder();

				titledBordertipoformapago.setTitle(titledBorderFormaPago.getTitle() + " -> Tipo Forma Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_forma_pagoFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_tipo_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_forma_pago = "+this.formapago.getid_tipo_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.formapago.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsiglasFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getsiglas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where siglas like '%"+this.formapago.getsiglas()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_diasFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getnumero_dias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_dias = "+this.formapago.getnumero_dias().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.formapago.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.formapago.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_detalleFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getcon_detalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_detalle = "+this.formapago.getcon_detalle().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_remesaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getcon_remesa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_remesa = "+this.formapago.getcon_remesa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_maneja_cuotasFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getcon_maneja_cuotas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_maneja_cuotas = "+this.formapago.getcon_maneja_cuotas().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.formapago.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_finFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getfecha_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_fin = '"+Funciones2.getStringPostgresDate(this.formapago.getfecha_fin())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebFormaPago(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.formapago.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderFormaPago.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.formapago.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebFormaPago(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.formapago.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderFormaPago.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.formapago.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableFormaPagoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderFormaPago=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosFormaPago.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebFormaPago(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.formapago.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.formapago.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_reteFormaPagoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablereteBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablereteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablereteBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableRete";

			if(!this.sFinalQueryGeneral_cuentacontablerete.equals("")) {
				this.cuentacontablereteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablerete);
				this.cuentacontablereteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablereteBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablereteBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablereteBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableRete.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablereteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderFormaPago=null;
			TitledBorder titledBordercuentacontablerete=null;

			if(!this.jScrollPanelDatosFormaPago.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				titledBordercuentacontablerete=(TitledBorder)this.cuentacontablereteBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablerete.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_reteFormaPagoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablerete=true;

			idTienePermisocuentacontablerete=this.tienePermisosUsuarioEnPaginaWebFormaPago(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablerete) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPago.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPago.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);

				this.cuentacontablereteBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablereteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablereteBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.formapagoLogic.getConnexion());

				if(this.formapago.getid_cuenta_contable_rete()!=null) {
					this.cuentacontablereteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablereteBeanSwingJInternalFrame.setIdActual(this.formapago.getid_cuenta_contable_rete());
					this.cuentacontablereteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablereteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablereteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablereteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPago=(TitledBorder)this.jScrollPanelDatosFormaPago.getBorder();
				TitledBorder titledBordercuentacontablerete=(TitledBorder)this.cuentacontablereteBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablerete.setTitle(titledBorderFormaPago.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_reteFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getid_cuenta_contable_rete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_rete = "+this.formapago.getid_cuenta_contable_rete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_reteFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getporcentaje_rete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_rete = "+this.formapago.getporcentaje_rete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbase_retencionFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getbase_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where base_retencion = "+this.formapago.getbase_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_retencionFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getvalor_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_retencion = "+this.formapago.getvalor_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_retencionFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getnumero_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_retencion like '%"+this.formapago.getnumero_retencion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_retencionFormaPagoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.getformapago(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapago==null) {
						this.formapago = new FormaPago();
					}

					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);
				}

				if(this.formapago.getnombre_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_retencion like '%"+this.formapago.getnombre_retencion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPago(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorNombreFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosBusquedaPorNombre();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorSiglasFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosBusquedaPorSiglas();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAnioFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdAnio();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdCuentaContable();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableReteFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdCuentaContableRete();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdEjercicio();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdEmpresa();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdMes();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdModulo();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdPeriodo();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdSucursal();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoFormaPagoFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdTipoFormaPago();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionFormaPagoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingFormaPago(false,false);

			this.getFormaPagosFK_IdTransaccion();

			this.inicializarActualizarBindingFormaPago(false);

			//if(FormaPagoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingFormaPago(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameFormaPago() {
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
		

		if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
			this.jInternalFrameDetalleFormFormaPago.setVisible(false);	    			
			this.jInternalFrameDetalleFormFormaPago.dispose();
			this.jInternalFrameDetalleFormFormaPago=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
			this.jInternalFrameReporteDinamicoFormaPago.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoFormaPago.dispose();
			this.jInternalFrameReporteDinamicoFormaPago=null;
		}
		
		if(this.jInternalFrameImportacionFormaPago!=null) {
			this.jInternalFrameImportacionFormaPago.setVisible(false);	    			
			this.jInternalFrameImportacionFormaPago.dispose();
			this.jInternalFrameImportacionFormaPago=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessFormaPago();
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			
			if(sTipo.equals("NuevoFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarFormaPago")) {
				jButtonDuplicarFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarFormaPago")) {
				jButtonCopiarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormFormaPago")) {
				jButtonVerFormFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarFormaPago")) {
				jButtonDuplicarFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarFormaPago")) {
				jButtonDuplicarFormaPagoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarFormaPago")) {
				jButtonModificarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarFormaPago")) {
				jButtonModificarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarFormaPago")) {
				jButtonModificarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarFormaPago")) {
				jButtonActualizarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarFormaPago")) {
				jButtonActualizarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarFormaPago")) {
				jButtonActualizarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarFormaPago")) {
				jButtonEliminarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarFormaPago")) {
				jButtonEliminarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarFormaPago")) {
				jButtonEliminarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarFormaPago")) {
				jButtonCancelarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarFormaPago")) {
				jButtonCancelarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarFormaPago")) {
				jButtonCancelarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarFormaPago")) {
				jButtonCerrarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarFormaPago")) {
				jButtonCerrarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarFormaPago")) {
				jButtonCerrarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarFormaPago")) {
				jButtonMostrarOcultarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarFormaPago")) {
				jButtonCancelarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarFormaPago")) {
				jButtonCopiarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarFormaPago")) {
				jButtonVerFormFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarFormaPago")) {
				jButtonCopiarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormFormaPago")) {
				jButtonVerFormFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionFormaPago")) {
				jButtonRecargarInformacionFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarFormaPago")) {
				jButtonRecargarInformacionFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionFormaPago")) {
				jButtonRecargarInformacionFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresFormaPago")) {
				jButtonAnterioresFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarFormaPago")) {
				jButtonAnterioresFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreFormaPago")) {
				jButtonAnterioresFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesFormaPago")) {
				jButtonSiguientesFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarFormaPago")) {
				jButtonSiguientesFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesFormaPago")) {
				jButtonSiguientesFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByFormaPago") || sTipo.equals("MenuItemDetalleAbrirOrderByFormaPago")) {
				jButtonAbrirOrderByFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarFormaPago") || sTipo.equals("MenuItemDetalleMostrarOcultarFormaPago")) {
				jButtonMostrarOcultarFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosFormaPago")) {
				jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarFormaPago")) {
				jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosFormaPago")) {
				jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoFormaPago")) {
				jButtonCerrarReporteDinamicoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoFormaPago")) {
				jButtonGenerarReporteDinamicoFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoFormaPago")) {
				
				jButtonGenerarExcelReporteDinamicoFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionFormaPago")) {
				jButtonCerrarImportacionFormaPagoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionFormaPago")) {
				
				jButtonGenerarImportacionFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionFormaPago")) {
				
				jButtonAbrirImportacionFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesFormaPago")) {
				jComboBoxTiposAccionesFormaPagoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesFormaPago")) {
				jComboBoxTiposRelacionesFormaPagoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioFormaPago")) {
				jComboBoxTiposAccionesFormaPagoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarFormaPago")) {
				
				jComboBoxTiposSeleccionarFormaPagoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralFormaPago")) {
				jTextFieldValorCampoGeneralFormaPagoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByFormaPago")) {
				jButtonAbrirOrderByFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarFormaPago")) {
				jButtonAbrirOrderByFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByFormaPago")) {
				jButtonCerrarOrderByFormaPagoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idFormaPagoBusqueda")) {
				this.jButtonidFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaFormaPagoUpdate")) {
				this.jButtonid_empresaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaFormaPagoBusqueda")) {
				this.jButtonid_empresaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoUpdate")) {
				this.jButtonid_sucursalFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoBusqueda")) {
				this.jButtonid_sucursalFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloFormaPagoUpdate")) {
				this.jButtonid_moduloFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloFormaPagoBusqueda")) {
				this.jButtonid_moduloFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoUpdate")) {
				this.jButtonid_ejercicioFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoBusqueda")) {
				this.jButtonid_ejercicioFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoFormaPagoUpdate")) {
				this.jButtonid_periodoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoFormaPagoBusqueda")) {
				this.jButtonid_periodoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioFormaPagoUpdate")) {
				this.jButtonid_anioFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioFormaPagoBusqueda")) {
				this.jButtonid_anioFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesFormaPagoUpdate")) {
				this.jButtonid_mesFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesFormaPagoBusqueda")) {
				this.jButtonid_mesFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoUpdate")) {
				this.jButtonid_tipo_forma_pagoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoBusqueda")) {
				this.jButtonid_tipo_forma_pagoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreFormaPagoBusqueda")) {
				this.jButtonnombreFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("siglasFormaPagoBusqueda")) {
				this.jButtonsiglasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_diasFormaPagoBusqueda")) {
				this.jButtonnumero_diasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeFormaPagoBusqueda")) {
				this.jButtonporcentajeFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorFormaPagoBusqueda")) {
				this.jButtonvalorFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleFormaPagoBusqueda")) {
				this.jButtoncon_detalleFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_remesaFormaPagoBusqueda")) {
				this.jButtoncon_remesaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_maneja_cuotasFormaPagoBusqueda")) {
				this.jButtoncon_maneja_cuotasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaFormaPagoBusqueda")) {
				this.jButtonfechaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finFormaPagoBusqueda")) {
				this.jButtonfecha_finFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionFormaPagoUpdate")) {
				this.jButtonid_transaccionFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionFormaPagoBusqueda")) {
				this.jButtonid_transaccionFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloFormaPagoUpdate")) {
				this.jButtonid_tipo_transaccion_moduloFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloFormaPagoBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPago")) {
				this.jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPago")) {
				this.jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContableRete("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoUpdate")) {
				this.jButtonid_cuenta_contable_reteFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contable_reteFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_reteFormaPagoBusqueda")) {
				this.jButtonporcentaje_reteFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_retencionFormaPagoBusqueda")) {
				this.jButtonbase_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionFormaPagoBusqueda")) {
				this.jButtonvalor_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionFormaPagoBusqueda")) {
				this.jButtonnumero_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_retencionFormaPagoBusqueda")) {
				this.jButtonnombre_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contableFormaPago")) {
				this.jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_reteFormaPago")) {
				this.jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("BusquedaPorNombreFormaPago")) {
				this.jButtonBusquedaPorNombreFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorSiglasFormaPago")) {
				this.jButtonBusquedaPorSiglasFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableFormaPago")) {
				this.jButtonFK_IdCuentaContableFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableReteFormaPago")) {
				this.jButtonFK_IdCuentaContableReteFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoFormaPagoFormaPago")) {
				this.jButtonFK_IdTipoFormaPagoFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloFormaPago")) {
				this.jButtonFK_IdTipoTransaccionModuloFormaPagoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionFormaPago")) {
				this.jButtonFK_IdTransaccionFormaPagoActionPerformed(evt);
			}
			
			;
			
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessFormaPago();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			FormaPago formapagoLocal=null;
			
			if(!this.getEsControlTabla()) {
				formapagoLocal=this.formapago;
			} else {
				formapagoLocal=this.formapagoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
							
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
								
						
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
								
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
							
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
								
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosFormaPago")) {
					jCheckBoxSeleccionarTodosFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosFormaPago")) {
					jCheckBoxSeleccionadosFormaPagoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarFormaPago")) {
					
				}
				
				


				
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
												
				
				


				
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapago);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapago);
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPago.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPago.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagoAnterior =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagoAnterior =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarFormaPago")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosFormaPago.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.formapago =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.formapago =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.formapago);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarFormaPago")) {
				
				}
				
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarFormaPago")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosFormaPago.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarFormaPago")) {
			
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessFormaPago();
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			if(sTipo.equals("NuevoFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarFormaPago")) {
				jButtonDuplicarFormaPagoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarFormaPago")) {
				jButtonCopiarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormFormaPago")) {
				jButtonVerFormFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesFormaPago")) {
				jButtonNuevoFormaPagoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarFormaPago")) {
				jButtonModificarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarFormaPago")) {
				jButtonActualizarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarFormaPago")) {
				jButtonEliminarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarFormaPago")) {
				jButtonCancelarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarFormaPago")) {
				jButtonCerrarFormaPagoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosFormaPago")) {
				jButtonGuardarCambiosFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosFormaPago")) {
				jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByFormaPago")) {
				jButtonAbrirOrderByFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionFormaPago")) {
				jButtonRecargarInformacionFormaPagoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresFormaPago")) {
				jButtonAnterioresFormaPagoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesFormaPago")) {
				jButtonSiguientesFormaPagoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idFormaPagoBusqueda")) {
				this.jButtonidFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaFormaPagoUpdate")) {
				this.jButtonid_empresaFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaFormaPagoBusqueda")) {
				this.jButtonid_empresaFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoUpdate")) {
				this.jButtonid_sucursalFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoBusqueda")) {
				this.jButtonid_sucursalFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloFormaPagoUpdate")) {
				this.jButtonid_moduloFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloFormaPagoBusqueda")) {
				this.jButtonid_moduloFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoUpdate")) {
				this.jButtonid_ejercicioFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoBusqueda")) {
				this.jButtonid_ejercicioFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoFormaPagoUpdate")) {
				this.jButtonid_periodoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoFormaPagoBusqueda")) {
				this.jButtonid_periodoFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioFormaPagoUpdate")) {
				this.jButtonid_anioFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioFormaPagoBusqueda")) {
				this.jButtonid_anioFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesFormaPagoUpdate")) {
				this.jButtonid_mesFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesFormaPagoBusqueda")) {
				this.jButtonid_mesFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoUpdate")) {
				this.jButtonid_tipo_forma_pagoFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoBusqueda")) {
				this.jButtonid_tipo_forma_pagoFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreFormaPagoBusqueda")) {
				this.jButtonnombreFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("siglasFormaPagoBusqueda")) {
				this.jButtonsiglasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_diasFormaPagoBusqueda")) {
				this.jButtonnumero_diasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeFormaPagoBusqueda")) {
				this.jButtonporcentajeFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorFormaPagoBusqueda")) {
				this.jButtonvalorFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_detalleFormaPagoBusqueda")) {
				this.jButtoncon_detalleFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_remesaFormaPagoBusqueda")) {
				this.jButtoncon_remesaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_maneja_cuotasFormaPagoBusqueda")) {
				this.jButtoncon_maneja_cuotasFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaFormaPagoBusqueda")) {
				this.jButtonfechaFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finFormaPagoBusqueda")) {
				this.jButtonfecha_finFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionFormaPagoUpdate")) {
				this.jButtonid_transaccionFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionFormaPagoBusqueda")) {
				this.jButtonid_transaccionFormaPagoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloFormaPagoUpdate")) {
				this.jButtonid_tipo_transaccion_moduloFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloFormaPagoBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPago")) {
				this.jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoUpdate")) {
				this.jButtonid_cuenta_contableFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contableFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPago")) {
				this.jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoArbol")) {
				this.abrirFrameTreeCuentaContableRete("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoUpdate")) {
				this.jButtonid_cuenta_contable_reteFormaPagoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_reteFormaPagoBusqueda")) {
				this.jButtonid_cuenta_contable_reteFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_reteFormaPagoBusqueda")) {
				this.jButtonporcentaje_reteFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_retencionFormaPagoBusqueda")) {
				this.jButtonbase_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionFormaPagoBusqueda")) {
				this.jButtonvalor_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionFormaPagoBusqueda")) {
				this.jButtonnumero_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_retencionFormaPagoBusqueda")) {
				this.jButtonnombre_retencionFormaPagoBusquedaActionPerformed(evt);
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessFormaPago();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameFormaPago")) {
				closingInternalFrameFormaPago();
				
			} else if(sTipo.equals("jButtonCancelarFormaPago")) {
				JInternalFrameBase jInternalFrameDetalleFormFormaPago = (JInternalFrameBase)evt.getSource();
	            	
	            FormaPagoBeanSwingJInternalFrame jInternalFrameParent=(FormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormFormaPago.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarFormaPagoActionPerformed(null);
			}
			
			FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.formapago,new Object(),this.formapagoParameterGeneral,this.formapagoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormFormaPago(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.formapago)) {
			if(!esControlTabla) {
				if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);			
				}
				
				if(this.formapagoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualFormaPago(this.formapago,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.formapagoReturnGeneral=formapagoLogic.procesarEventosFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagoLogic.getFormaPagos(),this.formapago,this.formapagoParameterGeneral,this.isEsNuevoFormaPago,classes);//this.formapagoLogic.getFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanFormaPago(this.formapagoReturnGeneral,this.formapagoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.formapagoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanFormaPago(classes,this.formapagoReturnGeneral,this.formapagoBean,false);
					}
						
					if(this.formapagoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyFormaPago(this.formapagoReturnGeneral.getFormaPago());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioFormaPago(this.formapagoReturnGeneral.getFormaPago());	
					}
						
					if(this.formapagoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioFormaPago(this.formapagoReturnGeneral.getFormaPago(),classes);//this.formapagoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioFormaPago(this.formapago,classes);//this.formapagoBean);									
				}
			
				if(FormaPagoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualFormaPago(this.formapago,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPago(this.formapago);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.formapagoAnterior!=null) {
						this.formapago=this.formapagoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.formapagoReturnGeneral=formapagoLogic.procesarEventosFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagoLogic.getFormaPagos(),this.formapago,this.formapagoParameterGeneral,this.isEsNuevoFormaPago,classes);//this.formapagoLogic.getFormaPago()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.formapagoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.formapagoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.formapagoReturnGeneral.getFormaPago(),formapagoLogic.getFormaPagos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.formapagoReturnGeneral.getFormaPago(),this.formapagos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosFormaPago.repaint();
				
				//((AbstractTableModel) this.jTableDatosFormaPago.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosFormaPago();
			}
		}
	}
	
	public void actualizarVisualTableDatosFormaPago() throws Exception {
		
		FormaPagoModel formapagoModel=(FormaPagoModel)this.jTableDatosFormaPago.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapagoModel.formapagos=this.formapagoLogic.getFormaPagos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			formapagoModel.formapagos=this.formapagos;
		}
		
		
		((FormaPagoModel) this.jTableDatosFormaPago.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaFormaPago() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getformapagoAnterior(),this.formapagoLogic.getFormaPagos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getformapagoAnterior(),this.formapagos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosFormaPago();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioFormaPago(FormaPago formapago,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(FormularioRentaExtra.class)) {
					this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.setFormularioRentaExtras(formapago.getFormularioRentaExtras());
					this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormularioRentaExtra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapago,new Object(),generalEntityParameterGeneral,this.formapagoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.formapagoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=FormaPagoConstantesFunciones.getClassesRelationshipsOfFormaPago(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=FormaPagoConstantesFunciones.getClassesRelationshipsFromStringsOfFormaPago(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormFormaPago(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				FormaPagoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapago,new Object(),generalEntityParameterGeneral,this.formapagoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioFormaPago(FormaPagoBean formapagoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(FormularioRentaExtra.class)) {
					this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.setFormularioRentaExtras(formapago.getFormularioRentaExtras());
					this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormularioRentaExtra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanFormaPago(ArrayList<Classe> classes,FormaPagoReturnGeneral formapagoReturnGeneral,FormaPagoBean formapagoBean,Boolean conDefault) throws Exception {
		
			this.formapagoBean.setFormularioRentaExtras(formapagoReturnGeneral.getFormaPago().getFormularioRentaExtras());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualFormaPago(FormaPago formapago,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(FormularioRentaExtra.class)) {
					formapago.setFormularioRentaExtras(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraBeanSwingJInternalFrame.formulariorentaextraLogic.getFormularioRentaExtras());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.formapago)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormFormaPago = new FormaPagoDetalleFormJInternalFrame(jDesktopPane,this.formapagoSessionBean.getConGuardarRelaciones(),this.formapagoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormFormaPago);
		this.jInternalFrameDetalleFormFormaPago.setVisible(false);
		this.jInternalFrameDetalleFormFormaPago.setSelected(false);						
		
		this.jInternalFrameDetalleFormFormaPago.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormFormaPago.formapagoLogic=this.formapagoLogic;
		
		this.cargarCombosFrameForeignKeyFormaPago("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleFormaPago();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleFormaPago();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyFormaPago("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyFormaPago();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarFormaPago"));
		
		this.jInternalFrameDetalleFormFormaPago.jButtonModificarFormaPago.addActionListener(new ButtonActionListener(this,"ModificarFormaPago"));

		
		this.jInternalFrameDetalleFormFormaPago.jButtonModificarToolBarFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarFormaPago"));
					
		this.jInternalFrameDetalleFormFormaPago.jMenuItemModificarFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarFormaPago"));
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonActualizarToolBarFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarFormaPago"));
						
		this.jInternalFrameDetalleFormFormaPago.jMenuItemActualizarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.addActionListener (new ButtonActionListener(this,"EliminarFormaPago"));
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonEliminarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarFormaPago"));
								
		this.jInternalFrameDetalleFormFormaPago.jMenuItemEliminarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.addActionListener (new ButtonActionListener(this,"CancelarFormaPago"));
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonCancelarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarFormaPago"));
					
		this.jInternalFrameDetalleFormFormaPago.jMenuItemCancelarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarFormaPago"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jMenuItemDetalleCerrarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarFormaPago"));		
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosToolBarFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosToolBarFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPago"));
		
		
		
		this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioFormaPago"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonidFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombreFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonsiglasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_diasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentajeFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalorFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_detalleFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_remesaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_remesaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_maneja_cuotasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_maneja_cuotasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfechaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfecha_finFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoBusqueda"));
		//jButtonid_cuenta_contableFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPago"));
		//jButtonid_cuenta_contableFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoBusqueda"));
		//jButtonid_cuenta_contable_reteFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPago"));
		//jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRete("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentaje_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonbase_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalor_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombre_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_retencionFormaPagoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFormaPago"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameFormaPago"));
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarFormaPago"));
		}
		
		this.jTableDatosFormaPago.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarFormaPago"));
		
		this.jTableDatosFormaPago.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarFormaPago"));
		
		this.jButtonNuevoFormaPago.addActionListener(new ButtonActionListener(this,"NuevoFormaPago"));
		
		this.jButtonDuplicarFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarFormaPago"));
		
		this.jButtonCopiarFormaPago.addActionListener(new ButtonActionListener(this,"CopiarFormaPago"));
		
		this.jButtonVerFormFormaPago.addActionListener(new ButtonActionListener(this,"VerFormFormaPago"));
		
		
		this.jButtonNuevoToolBarFormaPago.addActionListener(new ButtonActionListener(this,"NuevoToolBarFormaPago"));
			
		this.jButtonDuplicarToolBarFormaPago.addActionListener(new ButtonActionListener(this,"DuplicarToolBarFormaPago"));
			
		this.jMenuItemNuevoFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoFormaPago"));
			
		this.jMenuItemDuplicarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarFormaPago"));		
		
		
		this.jButtonNuevoRelacionesFormaPago.addActionListener (new ButtonActionListener(this,"NuevoRelacionesFormaPago"));
		
		
		this.jButtonNuevoRelacionesToolBarFormaPago.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarFormaPago"));
			
		this.jMenuItemNuevoRelacionesFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonModificarFormaPago.addActionListener(new ButtonActionListener(this,"ModificarFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonModificarToolBarFormaPago.addActionListener(new ButtonActionListener(this,"ModificarToolBarFormaPago"));
			
			this.jInternalFrameDetalleFormFormaPago.jMenuItemModificarFormaPago.addActionListener(new ButtonActionListener(this,"MenuItemModificarFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormFormaPago.jButtonActualizarFormaPago.addActionListener (new ButtonActionListener(this,"ActualizarFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonActualizarToolBarFormaPago.addActionListener(new ButtonActionListener(this,"ActualizarToolBarFormaPago"));
				
			this.jInternalFrameDetalleFormFormaPago.jMenuItemActualizarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemActualizarFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonEliminarFormaPago.addActionListener (new ButtonActionListener(this,"EliminarFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonEliminarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"EliminarToolBarFormaPago"));
						
			this.jInternalFrameDetalleFormFormaPago.jMenuItemEliminarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemEliminarFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonCancelarFormaPago.addActionListener (new ButtonActionListener(this,"CancelarFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonCancelarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"CancelarToolBarFormaPago"));
			
			this.jInternalFrameDetalleFormFormaPago.jMenuItemCancelarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCancelarFormaPago"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarFormaPago.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarFormaPago"));		
		
		
		this.jButtonCerrarFormaPago.addActionListener (new ButtonActionListener(this,"CerrarFormaPago"));
		
		
		this.jButtonCerrarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"CerrarToolBarFormaPago"));
			
		this.jMenuItemCerrarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCerrarFormaPago"));
			
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jMenuItemDetalleCerrarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarFormaPago"));		
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosFormaPago"));
		}
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosToolBarFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPago"));
		}
		
		this.jButtonCopiarToolBarFormaPago.addActionListener (new ButtonActionListener(this,"CopiarToolBarFormaPago"));
			
		this.jButtonVerFormToolBarFormaPago.addActionListener (new ButtonActionListener(this,"VerFormToolBarFormaPago"));
		
		this.jMenuItemGuardarCambiosFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosFormaPago"));
			
		this.jMenuItemCopiarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemCopiarFormaPago"));		
		
		this.jMenuItemVerFormFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemVerFormFormaPago"));		
		
		
		this.jButtonGuardarCambiosTablaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaFormaPago"));
		
		
		this.jButtonGuardarCambiosTablaToolBarFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarFormaPago"));
			
		this.jMenuItemGuardarCambiosTablaFormaPago.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaFormaPago"));		
		
		
		
		this.jButtonRecargarInformacionFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionFormaPago"));
					
		this.jButtonRecargarInformacionToolBarFormaPago.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarFormaPago"));
		
		this.jMenuItemRecargarInformacionFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionFormaPago"));		
		
		
		
		this.jButtonAnterioresFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresFormaPago"));
		
		
		this.jButtonAnterioresToolBarFormaPago.addActionListener (new ButtonActionListener(this,"AnterioresToolBarFormaPago"));
		
		this.jMenuItemAnterioresFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresFormaPago"));		
		
		
		this.jButtonSiguientesFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesFormaPago"));
		
		
		this.jButtonSiguientesToolBarFormaPago.addActionListener (new ButtonActionListener(this,"SiguientesToolBarFormaPago"));
			
		this.jMenuItemSiguientesFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesFormaPago"));
			
		this.jMenuItemAbrirOrderByFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByFormaPago"));
			
		this.jMenuItemMostrarOcultarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarFormaPago"));
			
		this.jMenuItemDetalleAbrirOrderByFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByFormaPago"));
			
		this.jMenuItemDetalleMostarOcultarFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarFormaPago"));		
		
		
		this.jButtonNuevoGuardarCambiosFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosFormaPago"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarFormaPago.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarFormaPago"));
			
		this.jMenuItemNuevoGuardarCambiosFormaPago.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosFormaPago"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosFormaPago"));

		this.jCheckBoxSeleccionadosFormaPago.addItemListener(new CheckBoxItemListener(this,"SeleccionadosFormaPago"));
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioFormaPago"));
		}
		
		
		this.jComboBoxTiposRelacionesFormaPago.addActionListener (new ButtonActionListener(this,"TiposRelacionesFormaPago"));
			
		this.jComboBoxTiposAccionesFormaPago.addActionListener (new ButtonActionListener(this,"TiposAccionesFormaPago"));
					
		this.jComboBoxTiposSeleccionarFormaPago.addActionListener (new ButtonActionListener(this,"TiposSeleccionarFormaPago"));
			
		this.jTextFieldValorCampoGeneralFormaPago.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralFormaPago"));		
		
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonidFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombreFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonsiglasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_diasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentajeFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalorFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_detalleFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_remesaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_remesaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_maneja_cuotasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_maneja_cuotasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfechaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfecha_finFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoBusqueda"));
		//jButtonid_cuenta_contableFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPago"));
		//jButtonid_cuenta_contableFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoBusqueda"));
		//jButtonid_cuenta_contable_reteFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPago"));
		//jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRete("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentaje_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonbase_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalor_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombre_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_retencionFormaPagoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorNombreFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreFormaPago"));

			this.jButtonBusquedaPorSiglasFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorSiglasFormaPago"));

			this.jButtonFK_IdCuentaContableFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFormaPago"));

			this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPago"));

			this.jButtonFK_IdCuentaContableReteFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableReteFormaPago"));

			this.jButtonBuscarFK_IdCuentaContableReteid_cuenta_contable_reteFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPago"));

			this.jButtonFK_IdTipoFormaPagoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoFormaPago"));

			this.jButtonFK_IdTipoTransaccionModuloFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloFormaPago"));

			this.jButtonFK_IdTransaccionFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionFormaPago"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoFormaPago!=null) {
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPago"));
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPago"));
				this.jInternalFrameReporteDinamicoFormaPago.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPago"));
			}
			
			//this.jButtonCerrarReporteDinamicoFormaPago.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPago"));				
			//this.jButtonGenerarReporteDinamicoFormaPago.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPago"));
			//this.jButtonGenerarExcelReporteDinamicoFormaPago.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPago"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionFormaPago!=null) {
				this.jInternalFrameImportacionFormaPago.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionFormaPago"));
				this.jInternalFrameImportacionFormaPago.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionFormaPago"));
				this.jInternalFrameImportacionFormaPago.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionFormaPago"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByFormaPago"));
			
			this.jButtonAbrirOrderByToolBarFormaPago.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarFormaPago"));			
			
			if(this.jInternalFrameOrderByFormaPago!=null) {
				this.jInternalFrameOrderByFormaPago.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByFormaPago"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormFormaPago!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPago.jTabbedPaneRelacionesFormaPago.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFormaPago"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameFormaPago();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormFormaPago.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormFormaPago = (JInternalFrameBase)event.getSource();
	            	
	            FormaPagoBeanSwingJInternalFrame jInternalFrameParent=(FormaPagoBeanSwingJInternalFrame)jInternalFrameDetalleFormFormaPago.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarFormaPagoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosFormaPago.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosFormaPagoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosFormaPago.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosFormaPago.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoFormaPago";
		inputMap = this.jButtonNuevoFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoFormaPagoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesFormaPago";
		inputMap = this.jButtonNuevoRelacionesFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoFormaPagoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarFormaPago";
		inputMap = this.jButtonModificarFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarFormaPago";
		inputMap = this.jButtonActualizarFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarFormaPago";
		inputMap = this.jButtonEliminarFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarFormaPago";
		inputMap = this.jButtonCancelarFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarFormaPago";
		inputMap = this.jButtonCerrarFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosFormaPago";
		inputMap = this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormFormaPago.jButtonGuardarCambiosFormaPago.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosFormaPagoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosFormaPago.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosFormaPagoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralFormaPago.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralFormaPagoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonidFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_empresaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_sucursalFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_ejercicioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_periodoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_anioFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_mesFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_forma_pagoFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombreFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombreFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonsiglasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"siglasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_diasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_diasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentajeFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalorFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_detalleFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_detalleFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_remesaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_remesaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtoncon_maneja_cuotasFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"con_maneja_cuotasFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfechaFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonfecha_finFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_transaccionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionFormaPagoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_tipo_transaccion_moduloFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloFormaPagoBusqueda"));
		//jButtonid_cuenta_contableFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPago"));
		//jButtonid_cuenta_contableFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoBusqueda"));
		//jButtonid_cuenta_contable_reteFormaPago.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_reteFormaPagoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPago"));
		//jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableRete("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonporcentaje_reteFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_reteFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonbase_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"base_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonvalor_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnumero_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPago.jButtonnombre_retencionFormaPagoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_retencionFormaPagoBusqueda"));
		
		
		this.jButtonBusquedaPorNombreFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreFormaPago"));

		this.jButtonBusquedaPorSiglasFormaPago.addActionListener(new ButtonActionListener(this,"BusquedaPorSiglasFormaPago"));

		this.jButtonFK_IdCuentaContableFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFormaPago"));

		this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPago"));

		this.jButtonFK_IdCuentaContableReteFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableReteFormaPago"));

		this.jButtonBuscarFK_IdCuentaContableReteid_cuenta_contable_reteFormaPago.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_reteFormaPago"));

		this.jButtonFK_IdTipoFormaPagoFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoFormaPago"));

		this.jButtonFK_IdTipoTransaccionModuloFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloFormaPago"));

		this.jButtonFK_IdTransaccionFormaPago.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionFormaPago"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionFormaPago.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionFormaPagoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarFormaPago.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosFormaPago(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
					formapagoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPago formapagoAux:formapagos) {
					formapagoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
						formapagoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPago formapagoAux:formapagos) {
						formapagoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
					
						if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							formapagoAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONREMESA)) {
							existe=true;
							formapagoAux.setcon_remesa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS)) {
							existe=true;
							formapagoAux.setcon_maneja_cuotas(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPago formapagoAux:formapagos) {
						
						if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
							existe=true;
							formapagoAux.setcon_detalle(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONREMESA)) {
							existe=true;
							formapagoAux.setcon_remesa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS)) {
							existe=true;
							formapagoAux.setcon_maneja_cuotas(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosFormaPagoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingFormaPago(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosFormaPago.getSelectedRows();
			
			FormaPago formapagoLocal=new FormaPago();
			
			//this.seleccionarTodosFormaPago(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagoLocal =(FormaPago) this.formapagoLogic.getFormaPagos().toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					formapagoLocal =(FormaPago) this.formapagos.toArray()[this.jTableDatosFormaPago.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				formapagoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
						formapagoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPago formapagoAux:formapagos) {
						formapagoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaFormaPago(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosFormaPago.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosFormaPago.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosFormaPago,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualFormaPagoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarFormaPagoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralFormaPagoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingFormaPago(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralFormaPago.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(FormaPago formapagoAux:this.formapagoLogic.getFormaPagos()) {
				
						if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							formapagoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_SIGLAS)) {
							existe=true;
							formapagoAux.setsiglas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
							existe=true;
							formapagoAux.setnumero_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							formapagoAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							formapagoAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							formapagoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							formapagoAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE)) {
							existe=true;
							formapagoAux.setporcentaje_rete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_BASERETENCION)) {
							existe=true;
							formapagoAux.setbase_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							formapagoAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							formapagoAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION)) {
							existe=true;
							formapagoAux.setnombre_retencion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPago formapagoAux:formapagos) {
					
						if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							formapagoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_SIGLAS)) {
							existe=true;
							formapagoAux.setsiglas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
							existe=true;
							formapagoAux.setnumero_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							formapagoAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							formapagoAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							formapagoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							formapagoAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE)) {
							existe=true;
							formapagoAux.setporcentaje_rete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_BASERETENCION)) {
							existe=true;
							formapagoAux.setbase_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							formapagoAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							formapagoAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION)) {
							existe=true;
							formapagoAux.setnombre_retencion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaFormaPago(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesFormaPagoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioFormaPago=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesFormaPago.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteFormaPago) {				
					conSplash=true;//false;										
					
					//this.startProcessFormaPago(conSplash);
				
					this.generarReporteFormaPagosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoFormaPagosSeleccionados(false);
				//this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoFormaPagosSeleccionados(true);
				//this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessFormaPago();
				
				this.exportarFormaPagosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionFormaPagos();
				//this.importarFormaPagos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessFormaPago();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelFormaPagosSeleccionados();
				//this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessFormaPago();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoFormaPago)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyFormaPago(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
				}	
			} 			
			else if(FormaPagoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteFormaPago) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessFormaPago(conSplash);
					
						//this.actualizarParametrosGeneralFormaPago();
						
						this.generarReporteProcesoAccionFormaPagosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(FormaPagoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Forma PagoS SELECCIONADOS?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessFormaPago();
				
						this.actualizarParametrosGeneralFormaPago();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.formapagoReturnGeneral=formapagoLogic.procesarAccionFormaPagosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.formapagoLogic.getFormaPagos(),this.formapagoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralFormaPago();
					
					FormaPagoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarFormaPagoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesFormaPago.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormFormaPago.jComboBoxTiposAccionesFormularioFormaPago.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessFormaPago(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesFormaPagoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessFormaPago();
			
			if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
			FormaPago formapago=new FormaPago();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingFormaPago(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesFormaPago.getSelectedItem();
			
			
			
			
			formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
			//this.sTipoAccion;
			
			if(formapagosSeleccionados.size()==1) {
				for(FormaPago formapagoAux:formapagosSeleccionados) {
					formapago=formapagoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Formulario Renta Extra")) {
					jButtonFormularioRentaExtraActionPerformed(null,rowIndex,true,false,formapago);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessFormaPago();
			
      		//this.finishProcessFormaPago(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarFormaPagoReturnGeneral() throws Exception {
		if(this.formapagoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.formapagoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.formapagoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.formapagoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.formapagoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.formapagoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingFormaPago(false);
		}
		
		if(this.formapagoReturnGeneral.getConRetornoLista() || this.formapagoReturnGeneral.getConRetornoObjeto()) {
			if(this.formapagoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.formapagoLogic.setFormaPagos(this.formapagoReturnGeneral.getFormaPagos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.formapagoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.formapagoLogic.setFormaPago(this.formapagoReturnGeneral.getFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingFormaPago(false);
		}
	}
	
	public void actualizarParametrosGeneralFormaPago() throws Exception {
		
		
	}
	
	public ArrayList<FormaPago> getFormaPagosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioFormaPago) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(FormaPago formapagoAux:formapagoLogic.getFormaPagos()) {
					if(formapagoAux.getIsSelected()) {
						formapagosSeleccionados.add(formapagoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPago formapagoAux:this.formapagos) {
					if(formapagoAux.getIsSelected()) {
						formapagosSeleccionados.add(formapagoAux);				
					}
				}
			}
			
			if(formapagosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						formapagosSeleccionados.addAll(this.formapagoLogic.getFormaPagos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						formapagosSeleccionados.addAll(this.formapagos);				
					}
				}
			}
		} else {
			formapagosSeleccionados.add(this.formapago);
		}
		
		return formapagosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoFormaPagosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoFormaPagosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoFormaPagosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesFormaPagosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteFormaPagos("Todos",formapagosSeleccionados);
		
	}	
	
	public void generarReporteNormalFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteFormaPagos("Todos",formapagosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionFormaPagosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteFormaPagos("Todos",formapagosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		
		this.abrirInicializarFrameReporteDinamicoFormaPago();
		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoFormaPago();
		
		
		//this.generarReporteFormaPagos("Todos",formapagosSeleccionados ,formapagoImplementable,formapagoImplementableHome);
	}
	
	public void mostrarImportacionFormaPagos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionFormaPago();
		
		this.abrirFrameImportacionFormaPago();		
		
			
		//this.generarReporteFormaPagos("Todos",formapagosSeleccionados ,formapagoImplementable,formapagoImplementableHome);
	}
	
	public void importarFormaPagos() throws Exception {		
	
	}
	
	public void exportarFormaPagosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelFormaPagosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoFormaPagosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlFormaPagosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarFormaPago(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(FormaPago formapagoAux:formapagosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarFormaPago(formapagoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//formapagoAux.setsDetalleGeneralEntityReporte(formapagoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarFormaPago(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_SIGLAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_NUMERODIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_CONDETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_CONREMESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_FECHAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_BASERETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_VALORRETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_NUMERORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarFormaPago(FormaPago formapago,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=formapago.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.gettipoformapago_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getsiglas();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getnumero_dias().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getcon_detalle().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getcon_remesa().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getcon_maneja_cuotas().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getfecha_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getcuentacontablerete_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getporcentaje_rete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getbase_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getvalor_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getnumero_retencion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapago.getnombre_retencion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("FormaPagos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelFormaPago(row);				
				iRow++;
			}				
			
			for(FormaPago formapagoAux:formapagosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelFormaPago(formapagoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlFormaPagosSeleccionados() throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();		
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapago.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("formapagos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("formapago");
			//elementRoot.appendChild(element);
		
			for(FormaPago formapagoAux:formapagosSeleccionados) {
				element = document.createElement("formapago");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlFormaPago(formapagoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelFormaPago(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_SIGLAS);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERODIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONDETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONREMESA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_FECHAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_PORCENTAJERETE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_BASERETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_VALORRETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelFormaPago(FormaPago formapago,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.gettipoformapago_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getsiglas());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getnumero_dias());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getcon_detalle());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getcon_remesa());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getcon_maneja_cuotas());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getfecha_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getcuentacontablerete_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getporcentaje_rete());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getbase_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getvalor_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getnumero_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapago.getnombre_retencion());				
	}
	
	public void setFilaDatosExportarXmlFormaPago(FormaPago formapago,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(FormaPagoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(formapago.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(FormaPagoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(formapago.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(FormaPagoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(formapago.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(FormaPagoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(formapago.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(FormaPagoConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(formapago.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(FormaPagoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(formapago.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(FormaPagoConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(formapago.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(FormaPagoConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(formapago.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(FormaPagoConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(formapago.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementtipoformapago_descripcion = document.createElement(FormaPagoConstantesFunciones.IDTIPOFORMAPAGO);
		elementtipoformapago_descripcion.appendChild(document.createTextNode(formapago.gettipoformapago_descripcion()));
		element.appendChild(elementtipoformapago_descripcion);

		Element elementnombre = document.createElement(FormaPagoConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(formapago.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementsiglas = document.createElement(FormaPagoConstantesFunciones.SIGLAS);
		elementsiglas.appendChild(document.createTextNode(formapago.getsiglas().trim()));
		element.appendChild(elementsiglas);

		Element elementnumero_dias = document.createElement(FormaPagoConstantesFunciones.NUMERODIAS);
		elementnumero_dias.appendChild(document.createTextNode(formapago.getnumero_dias().toString().trim()));
		element.appendChild(elementnumero_dias);

		Element elementporcentaje = document.createElement(FormaPagoConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(formapago.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementvalor = document.createElement(FormaPagoConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(formapago.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementcon_detalle = document.createElement(FormaPagoConstantesFunciones.CONDETALLE);
		elementcon_detalle.appendChild(document.createTextNode(formapago.getcon_detalle().toString().trim()));
		element.appendChild(elementcon_detalle);

		Element elementcon_remesa = document.createElement(FormaPagoConstantesFunciones.CONREMESA);
		elementcon_remesa.appendChild(document.createTextNode(formapago.getcon_remesa().toString().trim()));
		element.appendChild(elementcon_remesa);

		Element elementcon_maneja_cuotas = document.createElement(FormaPagoConstantesFunciones.CONMANEJACUOTAS);
		elementcon_maneja_cuotas.appendChild(document.createTextNode(formapago.getcon_maneja_cuotas().toString().trim()));
		element.appendChild(elementcon_maneja_cuotas);

		Element elementfecha = document.createElement(FormaPagoConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(formapago.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_fin = document.createElement(FormaPagoConstantesFunciones.FECHAFIN);
		elementfecha_fin.appendChild(document.createTextNode(formapago.getfecha_fin().toString().trim()));
		element.appendChild(elementfecha_fin);

		Element elementtransaccion_descripcion = document.createElement(FormaPagoConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(formapago.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(FormaPagoConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(formapago.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(FormaPagoConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(formapago.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementcuentacontablerete_descripcion = document.createElement(FormaPagoConstantesFunciones.IDCUENTACONTABLERETE);
		elementcuentacontablerete_descripcion.appendChild(document.createTextNode(formapago.getcuentacontablerete_descripcion()));
		element.appendChild(elementcuentacontablerete_descripcion);

		Element elementporcentaje_rete = document.createElement(FormaPagoConstantesFunciones.PORCENTAJERETE);
		elementporcentaje_rete.appendChild(document.createTextNode(formapago.getporcentaje_rete().toString().trim()));
		element.appendChild(elementporcentaje_rete);

		Element elementbase_retencion = document.createElement(FormaPagoConstantesFunciones.BASERETENCION);
		elementbase_retencion.appendChild(document.createTextNode(formapago.getbase_retencion().toString().trim()));
		element.appendChild(elementbase_retencion);

		Element elementvalor_retencion = document.createElement(FormaPagoConstantesFunciones.VALORRETENCION);
		elementvalor_retencion.appendChild(document.createTextNode(formapago.getvalor_retencion().toString().trim()));
		element.appendChild(elementvalor_retencion);

		Element elementnumero_retencion = document.createElement(FormaPagoConstantesFunciones.NUMERORETENCION);
		elementnumero_retencion.appendChild(document.createTextNode(formapago.getnumero_retencion().trim()));
		element.appendChild(elementnumero_retencion);

		Element elementnombre_retencion = document.createElement(FormaPagoConstantesFunciones.NOMBRERETENCION);
		elementnombre_retencion.appendChild(document.createTextNode(formapago.getnombre_retencion().trim()));
		element.appendChild(elementnombre_retencion);
	}
	
	public void generarReporteGroupGenericoFormaPagosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<FormaPago> formapagosSeleccionados=new ArrayList<FormaPago>();
		
		formapagosSeleccionados=this.getFormaPagosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoFormaPago(formapagosSeleccionados);
		
		this.generarReporteFormaPagos("Todos",formapagosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoFormaPago(ArrayList<FormaPago> formapagosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(FormaPago formapagoAux:formapagosSeleccionados) {
				formapagoAux.setsDetalleGeneralEntityReporte(formapagoAux.toString());
			
				if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDTIPOFORMAPAGO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.gettipoformapago_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_SIGLAS)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getsiglas());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERODIAS)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getnumero_dias().toString());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONDETALLE)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(formapagoAux.getcon_detalle()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONREMESA)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(formapagoAux.getcon_remesa()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_CONMANEJACUOTAS)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(formapagoAux.getcon_maneja_cuotas()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(formapagoAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_FECHAFIN)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(formapagoAux.getfecha_fin()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_IDCUENTACONTABLERETE)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getcuentacontablerete_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NUMERORETENCION)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getnumero_retencion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoConstantesFunciones.LABEL_NOMBRERETENCION)) {
					existe=true;
					formapagoAux.setsDescripcionGeneralEntityReporte1(formapagoAux.getnombre_retencion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesFormaPago(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoFormaPago=true;
				this.isVisibilidadCeldaNuevoRelacionesFormaPago=true;
				this.isVisibilidadCeldaGuardarCambiosFormaPago=true;
			}
			
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=true;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=true;
			this.isVisibilidadCeldaEliminarFormaPago=true;
			this.isVisibilidadCeldaCancelarFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=true;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=true;
			this.isVisibilidadCeldaModificarFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
			this.isVisibilidadCeldaModificarFormaPago=true;
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
			this.isVisibilidadCeldaCancelarFormaPago=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPago=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(FormaPagoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoFormaPago=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=true;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=true;
		} else {
			this.actualizarEstadoPanelsFormaPago(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarFormaPago=false;
			//this.isVisibilidadCeldaVerFormFormaPago=false;
			this.isVisibilidadCeldaDuplicarFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!formapagoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
		} else {
			this.isVisibilidadCeldaNuevoFormaPago=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(formapagoSessionBean.getEsGuardarRelacionado()) {
			if(!formapagoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;												
			}
			
			this.jButtonCerrarFormaPago.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesFormaPago=false;
		}
		
		if(!this.permiteMantenimiento(this.formapago)) {
			this.isVisibilidadCeldaActualizarFormaPago=false;
			this.isVisibilidadCeldaEliminarFormaPago=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesFormaPago() {
		this.isVisibilidadCeldaNuevoFormaPago=false;
		this.isVisibilidadCeldaGuardarCambiosFormaPago=false;
	}
	
	public void actualizarEstadoPanelsFormaPago(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionFormaPago!=null) {
				this.jScrollPanelDatosEdicionFormaPago.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosFormaPago!=null) {
				this.jScrollPanelDatosFormaPago.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPago!=null) {
				this.jPanelPaginacionFormaPago.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.formapagoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasFormaPago!=null) {
					this.jTabbedPaneBusquedasFormaPago.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.formapagoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasFormaPago!=null) {
				this.jTabbedPaneBusquedasFormaPago.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesFormaPago!=null) {
				this.jPanelParametrosReportesFormaPago.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorNombre=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadBusquedaPorNombre=isParaModuloNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaModuloNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadBusquedaPorNombre=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadBusquedaPorNombre=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadBusquedaPorNombre=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadBusquedaPorNombre=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoFormaPago(Boolean isParaTipoFormaPago){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFormaPagoNegation=!isParaTipoFormaPago;

			this.isVisibilidadBusquedaPorNombre=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoFormaPago;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadBusquedaPorNombre=isParaTransaccionNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTransaccionNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadBusquedaPorNombre=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableRete(Boolean isParaCuentaContableRete){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableReteNegation=!isParaCuentaContableRete;

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorNombreFormaPago);}

			this.isVisibilidadBusquedaPorSiglas=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadBusquedaPorSiglas) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelBusquedaPorSiglasFormaPago);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableFormaPago);}

			this.isVisibilidadFK_IdCuentaContableRete=isParaCuentaContableRete;
			if(!this.isVisibilidadFK_IdCuentaContableRete) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdCuentaContableReteFormaPago);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoFormaPagoFormaPago);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTipoTransaccionModuloFormaPago);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaContableReteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasFormaPago.remove(jPanelFK_IdTransaccionFormaPago);}
		}
		
	}
	
	

	public String registrarSesionFormaPagoParaFormularioRentaExtras() throws Exception {
		Boolean isPaginaPopupFormularioRentaExtra=false;

		try {

			if(this.formapagoSessionBean==null) {
				this.formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean==null) {
				this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean=new FormularioRentaExtraSessionBean();
			}

			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setsPathNavegacionActual(formapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormularioRentaExtraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormularioRentaExtra=this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormularioRentaExtra(true);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormularioRentaExtra(FormaPagoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setisBusquedaDesdeForeignKeySesionFormaPago(true);
			this.jInternalFrameDetalleFormFormaPago.formulariorentaextraSessionBean.setlidFormaPagoActual(this.idFormaPagoActual);

			formapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyFormaPago(true);
			formapagoSessionBean.setlIdFormaPagoActualForeignKey(this.idFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionFormaPagoParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(formapagoSessionBean==null) {
				formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(formapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.formapagoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(FormaPagoConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionFormaPago(true);
			//cuentacontableSessionBean.setlidFormaPagoActual(this.idFormaPagoActual);

			formapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyFormaPago(true);
			formapagoSessionBean.setlIdFormaPagoActualForeignKey(this.idFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionFormaPagoParaBusquedaCuentaContableRetes() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(formapagoSessionBean==null) {
				formapagoSessionBean=new FormaPagoSessionBean();
			}

			if(cuentacontablereteSessionBean==null) {
				cuentacontablereteSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablereteSessionBean.setsPathNavegacionActual(formapagoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablereteSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablereteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablereteSessionBean.getisPaginaPopup();
			cuentacontablereteSessionBean.setisPaginaPopup(false);
			cuentacontablereteSessionBean.setEstaModoBusqueda(true);
			cuentacontablereteSessionBean.setsFuncionBusquedaRapida("window.opener.formapagoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_rete(TO_REPLACE);");
			cuentacontablereteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablereteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(FormaPagoConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionFormaPago(true);
			//cuentacontableSessionBean.setlidFormaPagoActual(this.idFormaPagoActual);

			formapagoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyFormaPago(true);
			formapagoSessionBean.setlIdFormaPagoActualForeignKey(this.idFormaPagoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//FormaPagoSessionBean formapagoSessionBean=new FormaPagoSessionBean();
		
		if(this.formapagoSessionBean==null) {
			this.formapagoSessionBean=new FormaPagoSessionBean();
		}
		
		this.formapagoSessionBean.setsUltimaBusquedaFormaPago(this.getsAccionBusqueda());
		this.formapagoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.formapagoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			formapagoSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorSiglas")) {
			formapagoSessionBean.setsiglas(this.getsiglasBusquedaPorSiglas());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			formapagoSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableRete")) {
			formapagoSessionBean.setid_cuenta_contable_rete(this.getid_cuenta_contable_reteFK_IdCuentaContableRete());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			formapagoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			formapagoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			formapagoSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			formapagoSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			formapagoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
			formapagoSessionBean.setid_tipo_forma_pago(this.getid_tipo_forma_pagoFK_IdTipoFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			formapagoSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			formapagoSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//FormaPagoSessionBean formapagoSessionBean=new FormaPagoSessionBean();
		
		if(this.formapagoSessionBean==null) {
			this.formapagoSessionBean=new FormaPagoSessionBean();
		}
		
		if(this.formapagoSessionBean.getsUltimaBusquedaFormaPago()!=null&&!this.formapagoSessionBean.getsUltimaBusquedaFormaPago().equals("")) {
			this.setsAccionBusqueda(formapagoSessionBean.getsUltimaBusquedaFormaPago());
			this.setiNumeroPaginacion(formapagoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(formapagoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(formapagoSessionBean.getnombre());
				formapagoSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorSiglas")) {
				this.setsiglasBusquedaPorSiglas(formapagoSessionBean.getsiglas());
				formapagoSessionBean.setsiglas("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(formapagoSessionBean.getid_cuenta_contable());
				formapagoSessionBean.setid_cuenta_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableRete")) {
				this.setid_cuenta_contable_reteFK_IdCuentaContableRete(formapagoSessionBean.getid_cuenta_contable_rete());
				formapagoSessionBean.setid_cuenta_contable_rete(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(formapagoSessionBean.getid_ejercicio());
				formapagoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(formapagoSessionBean.getid_empresa());
				formapagoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(formapagoSessionBean.getid_modulo());
				formapagoSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(formapagoSessionBean.getid_periodo());
				formapagoSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(formapagoSessionBean.getid_sucursal());
				formapagoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
				this.setid_tipo_forma_pagoFK_IdTipoFormaPago(formapagoSessionBean.getid_tipo_forma_pago());
				formapagoSessionBean.setid_tipo_forma_pago(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(formapagoSessionBean.getid_tipo_transaccion_modulo());
				formapagoSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(formapagoSessionBean.getid_transaccion());
				formapagoSessionBean.setid_transaccion(-1L);
			}
		}
		
		this.formapagoSessionBean.setsUltimaBusquedaFormaPago("");
		this.formapagoSessionBean.setiNumeroPaginacion(FormaPagoConstantesFunciones.INUMEROPAGINACION);
		this.formapagoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaFormaPago(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioFormaPago() {
		this.updateBorderResaltarBusquedasFormularioFormaPago();
		this.updateVisibilidadBusquedasFormularioFormaPago();
		this.updateHabilitarBusquedasFormularioFormaPago();
	}
	
	public void updateBorderResaltarBusquedasFormularioFormaPago() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasFormaPago.getComponents().length>0) {
	

		if(this.formapagoConstantesFunciones.resaltarBusquedaPorNombreFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarBusquedaPorNombreFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarBusquedaPorSiglasFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarBusquedaPorSiglasFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableReteFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableReteFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableReteFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloFormaPago);
			}
		}

		if(this.formapagoConstantesFunciones.resaltarFK_IdTransaccionFormaPago!=null) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionFormaPago);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTransaccionFormaPago);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioFormaPago() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarBusquedaPorNombreFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarBusquedaPorNombreFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarBusquedaPorSiglasFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarBusquedaPorSiglasFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarFK_IdCuentaContableFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarFK_IdCuentaContableFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableReteFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarFK_IdCuentaContableReteFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarFK_IdCuentaContableReteFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarFK_IdTipoFormaPagoFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarFK_IdTipoTransaccionModuloFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarFK_IdTipoTransaccionModuloFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionFormaPago);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagoConstantesFunciones.mostrarFK_IdTransaccionFormaPago);
			if(!this.formapagoConstantesFunciones.mostrarFK_IdTransaccionFormaPago && index>-1) {
				this.jTabbedPaneBusquedasFormaPago.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioFormaPago() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasFormaPago.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarBusquedaPorNombreFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarBusquedaPorNombreFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarBusquedaPorSiglasFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarBusquedaPorSiglasFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarFK_IdCuentaContableFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarFK_IdCuentaContableFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableReteFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarFK_IdCuentaContableReteFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarFK_IdCuentaContableReteFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarFK_IdTipoFormaPagoFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarFK_IdTipoFormaPagoFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarFK_IdTipoTransaccionModuloFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarFK_IdTipoTransaccionModuloFormaPago);
			}

			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionFormaPago);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagoConstantesFunciones.activarFK_IdTransaccionFormaPago);
				this.jTabbedPaneBusquedasFormaPago.setEnabledAt(index,this.formapagoConstantesFunciones.activarFK_IdTransaccionFormaPago);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaFormaPago(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorNombreFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarBusquedaPorNombreFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarBusquedaPorNombreFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorSiglas")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelBusquedaPorSiglasFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarBusquedaPorSiglasFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarBusquedaPorSiglasFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarFK_IdCuentaContableFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableRete")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdCuentaContableReteFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarFK_IdCuentaContableReteFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdCuentaContableReteFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFormaPago")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarFK_IdTipoFormaPagoFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTipoTransaccionModuloFormaPago);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasFormaPago.indexOfComponent(this.jPanelFK_IdTransaccionFormaPago);

			this.jTabbedPaneBusquedasFormaPago.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPago.getComponent(index);

			this.formapagoConstantesFunciones.setResaltarFK_IdTransaccionFormaPago(resaltar);

			jPanel.setBorder(this.formapagoConstantesFunciones.resaltarFK_IdTransaccionFormaPago);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarFormaPago.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioFormaPago() throws Exception {

		if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioFormaPago();
		this.updateVisibilidadResaltarControlesFormularioFormaPago();
		this.updateHabilitarResaltarControlesFormularioFormaPago();
		
	}
	
	public void updateBorderResaltarControlesFormularioFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.formapagoConstantesFunciones.resaltaridFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setBorder(this.formapagoConstantesFunciones.resaltaridFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_empresaFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_empresaFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_sucursalFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_sucursalFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_moduloFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_moduloFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_ejercicioFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_ejercicioFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_periodoFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_periodoFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_anioFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_anioFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_mesFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_mesFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_tipo_forma_pagoFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_tipo_forma_pagoFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarnombreFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarnombreFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarsiglasFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarsiglasFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarnumero_diasFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarnumero_diasFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarporcentajeFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarporcentajeFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarvalorFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarvalorFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarcon_detalleFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setBorderPainted(true);this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarcon_detalleFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarcon_remesaFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setBorderPainted(true);this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarcon_remesaFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarcon_maneja_cuotasFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setBorderPainted(true);this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarcon_maneja_cuotasFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarfechaFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarfechaFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarfecha_finFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarfecha_finFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_transaccionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_transaccionFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_tipo_transaccion_moduloFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_tipo_transaccion_moduloFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_cuenta_contableFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_cuenta_contableFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarid_cuenta_contable_reteFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarid_cuenta_contable_reteFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarporcentaje_reteFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarporcentaje_reteFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarbase_retencionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarbase_retencionFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarvalor_retencionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarvalor_retencionFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarnumero_retencionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarnumero_retencionFormaPago);}
		if(this.formapagoConstantesFunciones.resaltarnombre_retencionFormaPago!=null && this.jInternalFrameDetalleFormFormaPago!=null) {this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setBorder(this.formapagoConstantesFunciones.resaltarnombre_retencionFormaPago);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioFormaPago() throws Exception {		
		if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
	
		//this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setVisible(this.formapagoConstantesFunciones.mostraridFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelidFormaPago.setVisible(this.formapagoConstantesFunciones.mostraridFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_empresaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_empresaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_empresaFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_sucursalFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_sucursalFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_sucursalFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_moduloFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_moduloFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_moduloFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_ejercicioFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_ejercicioFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_ejercicioFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_periodoFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_periodoFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_periodoFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_anioFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_anioFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_anioFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_mesFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_mesFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_mesFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_tipo_forma_pagoFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_tipo_forma_pagoFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_tipo_forma_pagoFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnombreFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelnombreFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnombreFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarsiglasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelsiglasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarsiglasFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnumero_diasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelnumero_diasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnumero_diasFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarporcentajeFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelporcentajeFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarporcentajeFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarvalorFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelvalorFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarvalorFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_detalleFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelcon_detalleFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_detalleFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_remesaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelcon_remesaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_remesaFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_maneja_cuotasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelcon_maneja_cuotasFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarcon_maneja_cuotasFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarfechaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelfechaFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarfechaFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarfecha_finFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelfecha_finFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarfecha_finFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_transaccionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_transaccionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_transaccionFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_tipo_transaccion_moduloFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_tipo_transaccion_moduloFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_tipo_transaccion_moduloFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contableFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_cuenta_contableFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contableFormaPago);
			this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contableFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contable_reteFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelid_cuenta_contable_reteFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contable_reteFormaPago);
			this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarid_cuenta_contable_reteFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarporcentaje_reteFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelporcentaje_reteFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarporcentaje_reteFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarbase_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelbase_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarbase_retencionFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarvalor_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelvalor_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarvalor_retencionFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnumero_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelnumero_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnumero_retencionFormaPago);
		//this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnombre_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jPanelnombre_retencionFormaPago.setVisible(this.formapagoConstantesFunciones.mostrarnombre_retencionFormaPago);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioFormaPago() throws Exception {
		if(this.jInternalFrameDetalleFormFormaPago==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormFormaPago!=null) {
	
		this.jInternalFrameDetalleFormFormaPago.jLabelidFormaPago.setEnabled(this.formapagoConstantesFunciones.activaridFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_empresaFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_empresaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_sucursalFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_sucursalFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_moduloFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_moduloFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_ejercicioFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_ejercicioFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_periodoFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_periodoFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_anioFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_anioFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_mesFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_mesFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_forma_pagoFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_tipo_forma_pagoFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextAreanombreFormaPago.setEnabled(this.formapagoConstantesFunciones.activarnombreFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldsiglasFormaPago.setEnabled(this.formapagoConstantesFunciones.activarsiglasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_diasFormaPago.setEnabled(this.formapagoConstantesFunciones.activarnumero_diasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentajeFormaPago.setEnabled(this.formapagoConstantesFunciones.activarporcentajeFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldvalorFormaPago.setEnabled(this.formapagoConstantesFunciones.activarvalorFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_detalleFormaPago.setEnabled(this.formapagoConstantesFunciones.activarcon_detalleFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_remesaFormaPago.setEnabled(this.formapagoConstantesFunciones.activarcon_remesaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jCheckBoxcon_maneja_cuotasFormaPago.setEnabled(this.formapagoConstantesFunciones.activarcon_maneja_cuotasFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jDateChooserfechaFormaPago.setEnabled(this.formapagoConstantesFunciones.activarfechaFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jDateChooserfecha_finFormaPago.setEnabled(this.formapagoConstantesFunciones.activarfecha_finFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_transaccionFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_transaccionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_tipo_transaccion_moduloFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_tipo_transaccion_moduloFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contableFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_cuenta_contableFormaPago);
			this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contableFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_cuenta_contableFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jComboBoxid_cuenta_contable_reteFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_cuenta_contable_reteFormaPago);
			this.jInternalFrameDetalleFormFormaPago.jButtonid_cuenta_contable_reteFormaPago.setEnabled(this.formapagoConstantesFunciones.activarid_cuenta_contable_reteFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldporcentaje_reteFormaPago.setEnabled(this.formapagoConstantesFunciones.activarporcentaje_reteFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldbase_retencionFormaPago.setEnabled(this.formapagoConstantesFunciones.activarbase_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldvalor_retencionFormaPago.setEnabled(this.formapagoConstantesFunciones.activarvalor_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextFieldnumero_retencionFormaPago.setEnabled(this.formapagoConstantesFunciones.activarnumero_retencionFormaPago);
		this.jInternalFrameDetalleFormFormaPago.jTextAreanombre_retencionFormaPago.setEnabled(this.formapagoConstantesFunciones.activarnombre_retencionFormaPago);
		}
	}
	
		
}