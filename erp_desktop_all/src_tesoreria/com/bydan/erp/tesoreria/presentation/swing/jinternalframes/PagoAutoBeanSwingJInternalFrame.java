/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.tesoreria.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.tesoreria.util.PagoAutoConstantesFunciones;
import com.bydan.erp.tesoreria.util.PagoAutoParameterReturnGeneral;
//import com.bydan.erp.tesoreria.util.PagoAutoParameterGeneral;
//import com.bydan.erp.tesoreria.presentation.report.source.PagoAutoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.tesoreria.resources.reportes.AuxiliarReportes;


import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.tesoreria.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.tesoreria.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PagoAutoBeanSwingJInternalFrame extends PagoAutoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PagoAutoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PagoAuto> pagoautoValidator = new ClassValidator<PagoAuto>(PagoAuto.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PagoAuto pagoauto;	
	public PagoAuto pagoautoAux;
	public PagoAuto pagoautoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PagoAuto pagoautoTotales;
	public Long idPagoAutoActual;
	public Long iIdNuevoPagoAuto=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboCentroActividad="";

	public List<CentroActividad> centroactividadsForeignKey;

	public List<CentroActividad> getcentroactividadsForeignKey() {
		return centroactividadsForeignKey;
	}

	public void setcentroactividadsForeignKey(List<CentroActividad> centroactividadsForeignKey) {
		this.centroactividadsForeignKey = centroactividadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroActividad centroactividadForeignKey;

	public CentroActividad getcentroactividadForeignKey() {
		return centroactividadForeignKey;
	}

	public void setcentroactividadForeignKey(CentroActividad centroactividadForeignKey) {
		this.centroactividadForeignKey = centroactividadForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboDetalleProve="";

	public List<DetalleProve> detalleprovesForeignKey;

	public List<DetalleProve> getdetalleprovesForeignKey() {
		return detalleprovesForeignKey;
	}

	public void setdetalleprovesForeignKey(List<DetalleProve> detalleprovesForeignKey) {
		this.detalleprovesForeignKey = detalleprovesForeignKey;
	}

	//OBJETO FK ACTUAL
	public DetalleProve detalleproveForeignKey;

	public DetalleProve getdetalleproveForeignKey() {
		return detalleproveForeignKey;
	}

	public void setdetalleproveForeignKey(DetalleProve detalleproveForeignKey) {
		this.detalleproveForeignKey = detalleproveForeignKey;
	}

	public String sFinalQueryComboCuentaBanco="";

	public List<CuentaBanco> cuentabancosForeignKey;

	public List<CuentaBanco> getcuentabancosForeignKey() {
		return cuentabancosForeignKey;
	}

	public void setcuentabancosForeignKey(List<CuentaBanco> cuentabancosForeignKey) {
		this.cuentabancosForeignKey = cuentabancosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaBanco cuentabancoForeignKey;

	public CuentaBanco getcuentabancoForeignKey() {
		return cuentabancoForeignKey;
	}

	public void setcuentabancoForeignKey(CuentaBanco cuentabancoForeignKey) {
		this.cuentabancoForeignKey = cuentabancoForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboEstadoPagoAuto="";

	public List<EstadoPagoAuto> estadopagoautosForeignKey;

	public List<EstadoPagoAuto> getestadopagoautosForeignKey() {
		return estadopagoautosForeignKey;
	}

	public void setestadopagoautosForeignKey(List<EstadoPagoAuto> estadopagoautosForeignKey) {
		this.estadopagoautosForeignKey = estadopagoautosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPagoAuto estadopagoautoForeignKey;

	public EstadoPagoAuto getestadopagoautoForeignKey() {
		return estadopagoautoForeignKey;
	}

	public void setestadopagoautoForeignKey(EstadoPagoAuto estadopagoautoForeignKey) {
		this.estadopagoautoForeignKey = estadopagoautoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPagoAuto;
	public Boolean isPermisoNuevoPagoAuto;
	public Boolean isPermisoActualizarPagoAuto;
	public Boolean isPermisoActualizarOriginalPagoAuto;
	public Boolean isPermisoEliminarPagoAuto;
	public Boolean isPermisoGuardarCambiosPagoAuto;
	public Boolean isPermisoConsultaPagoAuto;
	public Boolean isPermisoBusquedaPagoAuto;
	public Boolean isPermisoReportePagoAuto;
	public Boolean isPermisoPaginacionMedioPagoAuto;
	public Boolean isPermisoPaginacionAltoPagoAuto;
	public Boolean isPermisoPaginacionTodoPagoAuto;
	public Boolean isPermisoCopiarPagoAuto;
	public Boolean isPermisoVerFormPagoAuto;
	public Boolean isPermisoDuplicarPagoAuto;
	public Boolean isPermisoOrdenPagoAuto;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PagoAutoParameterReturnGeneral pagoautoReturnGeneral;
	public PagoAutoParameterReturnGeneral pagoautoParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPagoAuto=false;
	public Boolean esParaAccionDesdeFormularioPagoAuto=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PagoAutoSessionBeanAdditional pagoautoSessionBeanAdditional=null;
	
	public PagoAutoSessionBeanAdditional getPagoAutoSessionBeanAdditional() {
		return this.pagoautoSessionBeanAdditional;
	}
	
	public void setPagoAutoSessionBeanAdditional(PagoAutoSessionBeanAdditional pagoautoSessionBeanAdditional) {
		try {
			this.pagoautoSessionBeanAdditional=pagoautoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PagoAutoBeanSwingJInternalFrameAdditional pagoautoBeanSwingJInternalFrameAdditional=null;
	//public class PagoAutoBeanSwingJInternalFrame
	
	public PagoAutoBeanSwingJInternalFrameAdditional getPagoAutoBeanSwingJInternalFrameAdditional() {
		return this.pagoautoBeanSwingJInternalFrameAdditional;
	}
	
	public void setPagoAutoBeanSwingJInternalFrameAdditional(PagoAutoBeanSwingJInternalFrameAdditional pagoautoBeanSwingJInternalFrameAdditional) {
		try {
			this.pagoautoBeanSwingJInternalFrameAdditional=pagoautoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PagoAutoLogic pagoautoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PagoAuto pagoautoBean;
	public PagoAutoConstantesFunciones pagoautoConstantesFunciones;
	//public PagoAutoParameterReturnGeneral pagoautoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public ClienteLogic clienteLogic;
	public AsientoContableLogic asientocontableLogic;
	public CentroCostoLogic centrocostoLogic;
	public CentroActividadLogic centroactividadLogic;
	public FacturaLogic facturaLogic;
	public DetalleProveLogic detalleproveLogic;
	public CuentaBancoLogic cuentabancoLogic;
	public TransaccionLogic transaccionLogic;
	public EstadoPagoAutoLogic estadopagoautoLogic;
	
	//PARAMETROS
	
	
	//public List<PagoAuto> pagoautos;	
	//public List<PagoAuto> pagoautosEliminados;
	//public List<PagoAuto> pagoautosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPagoAuto=false;
	public Boolean isVisibilidadCeldaDuplicarPagoAuto=true;
	public Boolean isVisibilidadCeldaCopiarPagoAuto=true;
	public Boolean isVisibilidadCeldaVerFormPagoAuto=true;
	public Boolean isVisibilidadCeldaOrdenPagoAuto=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
	public Boolean isVisibilidadCeldaModificarPagoAuto=false;
	public Boolean isVisibilidadCeldaActualizarPagoAuto=false;
	public Boolean isVisibilidadCeldaEliminarPagoAuto=false;
	public Boolean isVisibilidadCeldaCancelarPagoAuto=false;
	public Boolean isVisibilidadCeldaGuardarPagoAuto=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPagoAuto=false;	
	
	
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCentroActividad=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCuentaBanco=false;
	public Boolean isVisibilidadFK_IdDetalleProve=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPagoAuto=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoPagoAuto() {
		return this.iIdNuevoPagoAuto;
	}

	public void setiIdNuevoPagoAuto(Long iIdNuevoPagoAuto) {
		this.iIdNuevoPagoAuto = iIdNuevoPagoAuto;
	}
	
	public Long getidPagoAutoActual() {
		return this.idPagoAutoActual;
	}

	public void setidPagoAutoActual(Long idPagoAutoActual) {
		this.idPagoAutoActual = idPagoAutoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PagoAuto getpagoauto() {
		return this.pagoauto;
	}

	public void setpagoauto(PagoAuto pagoauto) {
		this.pagoauto = pagoauto;
	}
	
	public PagoAuto getpagoautoAux() {
		return this.pagoautoAux;
	}

	public void setpagoautoAux(PagoAuto pagoautoAux) {
		this.pagoautoAux = pagoautoAux;
	}				
	
	public PagoAuto getpagoautoAnterior() {
		return this.pagoautoAnterior;
	}

	public void setpagoautoAnterior(PagoAuto pagoautoAnterior) {
		this.pagoautoAnterior = pagoautoAnterior;
	}	
	
	public PagoAuto getpagoautoTotales() {
		return this.pagoautoTotales;
	}

	public void setpagoautoTotales(PagoAuto pagoautoTotales) {
		this.pagoautoTotales = pagoautoTotales;
	}	
	
	public PagoAuto getpagoautoBean() {
		return this.pagoautoBean;
	}

	public void setpagoautoBean(PagoAuto pagoautoBean) {
		this.pagoautoBean = pagoautoBean;
	}	
	
	public PagoAutoParameterReturnGeneral getpagoautoReturnGeneral() {
		return this.pagoautoReturnGeneral;
	}

	public void setpagoautoReturnGeneral(PagoAutoParameterReturnGeneral pagoautoReturnGeneral) {
		this.pagoautoReturnGeneral = pagoautoReturnGeneral;
	}	
	
	
	public Long id_asiento_contableFK_IdAsientoContable=-1L;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_centro_actividadFK_IdCentroActividad=null;

	public Long getid_centro_actividadFK_IdCentroActividad() {
		return this.id_centro_actividadFK_IdCentroActividad;
	}

	public void setid_centro_actividadFK_IdCentroActividad(Long id_centro_actividadFK_IdCentroActividad) {
		this.id_centro_actividadFK_IdCentroActividad = id_centro_actividadFK_IdCentroActividad;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cuenta_bancoFK_IdCuentaBanco=-1L;

	public Long getid_cuenta_bancoFK_IdCuentaBanco() {
		return this.id_cuenta_bancoFK_IdCuentaBanco;
	}

	public void setid_cuenta_bancoFK_IdCuentaBanco(Long id_cuenta_bancoFK_IdCuentaBanco) {
		this.id_cuenta_bancoFK_IdCuentaBanco = id_cuenta_bancoFK_IdCuentaBanco;
	}

	public Long id_detalle_proveFK_IdDetalleProve=-1L;

	public Long getid_detalle_proveFK_IdDetalleProve() {
		return this.id_detalle_proveFK_IdDetalleProve;
	}

	public void setid_detalle_proveFK_IdDetalleProve(Long id_detalle_proveFK_IdDetalleProve) {
		this.id_detalle_proveFK_IdDetalleProve = id_detalle_proveFK_IdDetalleProve;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pago_autoFK_IdEstadoPagoAuto=-1L;

	public Long getid_estado_pago_autoFK_IdEstadoPagoAuto() {
		return this.id_estado_pago_autoFK_IdEstadoPagoAuto;
	}

	public void setid_estado_pago_autoFK_IdEstadoPagoAuto(Long id_estado_pago_autoFK_IdEstadoPagoAuto) {
		this.id_estado_pago_autoFK_IdEstadoPagoAuto = id_estado_pago_autoFK_IdEstadoPagoAuto;
	}

	public Long id_facturaFK_IdFactura=-1L;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PagoAutoLogic getPagoAutoLogic()	{		
		return pagoautoLogic;
	}

	public void setPagoAutoLogic(PagoAutoLogic pagoautoLogic) {
		this.pagoautoLogic = pagoautoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPagoAuto() {
		return isEsNuevoPagoAuto;
	}

	public void setIsEsNuevoPagoAuto(Boolean isEsNuevoPagoAuto) {
		this.isEsNuevoPagoAuto = isEsNuevoPagoAuto;
	}

	public Boolean getEsParaAccionDesdeFormularioPagoAuto() {
		return esParaAccionDesdeFormularioPagoAuto;
	}
	
	public void setEsParaAccionDesdeFormularioPagoAuto(Boolean esParaAccionDesdeFormularioPagoAuto) {
		this.esParaAccionDesdeFormularioPagoAuto = esParaAccionDesdeFormularioPagoAuto;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(pagoautoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(pagoautoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(pagoautoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pagoautoSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(pagoautoSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(pagoautoSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroActividadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroActividadLogic centroactividadLogic=new CentroActividadLogic();

			//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

					centroactividadLogic.getTodosCentroActividadsWithConnection(sFinalQuery,new Pagination());

					this.centroactividadsForeignKey=centroactividadLogic.getCentroActividads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroActividad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centroactividadLogic.getEntityWithConnection(pagoautoSessionBean.getlidCentroActividadActual());
					this.centroactividadsForeignKey.add(centroactividadLogic.getCentroActividad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(pagoautoSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosDetalleProvesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.detalleprovesForeignKey=new ArrayList<DetalleProve>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			DetalleProveLogic detalleproveLogic=new DetalleProveLogic();

			//detalleproveLogic.getDetalleProveDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleProve()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//detalleproveLogic.getDetalleProveDataAccess().setIsForForeingKeyData(true);

					detalleproveLogic.getTodosDetalleProvesWithConnection(sFinalQuery,new Pagination());

					this.detalleprovesForeignKey=detalleproveLogic.getDetalleProves();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaDetalleProve(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleproveLogic.getEntityWithConnection(pagoautoSessionBean.getlidDetalleProveActual());
					this.detalleprovesForeignKey.add(detalleproveLogic.getDetalleProve());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaBancosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentabancosForeignKey=new ArrayList<CuentaBanco>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaBancoLogic cuentabancoLogic=new CuentaBancoLogic();

			//cuentabancoLogic.getCuentaBancoDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentabancoLogic.getCuentaBancoDataAccess().setIsForForeingKeyData(true);

					cuentabancoLogic.getTodosCuentaBancosWithConnection(sFinalQuery,new Pagination());

					this.cuentabancosForeignKey=cuentabancoLogic.getCuentaBancos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaBanco(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentabancoLogic.getEntityWithConnection(pagoautoSessionBean.getlidCuentaBancoActual());
					this.cuentabancosForeignKey.add(cuentabancoLogic.getCuentaBanco());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(pagoautoSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPagoAutosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopagoautosForeignKey=new ArrayList<EstadoPagoAuto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPagoAutoLogic estadopagoautoLogic=new EstadoPagoAutoLogic();

			//estadopagoautoLogic.getEstadoPagoAutoDataAccess().setIsForForeingKeyData(true);

			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPagoAuto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopagoautoLogic.getEstadoPagoAutoDataAccess().setIsForForeingKeyData(true);

					estadopagoautoLogic.getTodosEstadoPagoAutosWithConnection(sFinalQuery,new Pagination());

					this.estadopagoautosForeignKey=estadopagoautoLogic.getEstadoPagoAutos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPagoAuto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopagoautoLogic.getEntityWithConnection(pagoautoSessionBean.getlidEstadoPagoAutoActual());
					this.estadopagoautosForeignKey.add(estadopagoautoLogic.getEstadoPagoAuto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPagoAuto.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPagoAutoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPagoAutoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPagoAutoGenerico!=null && jComboBoxid_empresaPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_empresaPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPagoAuto.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPagoAutoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPagoAutoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPagoAutoGenerico!=null && jComboBoxid_sucursalPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPagoAuto.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPagoAutoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPagoAutoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPagoAutoGenerico!=null && jComboBoxid_ejercicioPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clientePagoAuto.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClientePagoAuto!=null) {
						jComboBoxid_clienteFK_IdClientePagoAuto.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClientePagoAuto!=null) {
							//jComboBoxid_clienteFK_IdClientePagoAuto.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClientePagoAuto.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClientePagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clientePagoAutoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clientePagoAutoGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clientePagoAutoGenerico!=null && jComboBoxid_clientePagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_clientePagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contablePagoAuto.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contablePagoAutoGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contablePagoAutoGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contablePagoAutoGenerico!=null && jComboBoxid_asiento_contablePagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contablePagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoPagoAuto.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoPagoAutoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoPagoAutoGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoPagoAutoGenerico!=null && jComboBoxid_centro_costoPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroActividadForeignKey(Long idCentroActividadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centroactividadTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setCentroActividad(centroactividadTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setSelectedItem(centroactividadTemp);
					}
				} else {
					//jComboBoxid_centro_actividadPagoAuto.setSelectedItem(centroactividadTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroActividad") || sFormularioTipoBusqueda.equals("Todos")){
					if(centroactividadTemp!=null && jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto!=null) {
						jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.setSelectedItem(centroactividadTemp);
					} else {
						if(jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto!=null) {
							//jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.setSelectedItem(centroactividadTemp);
							if(jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.getItemCount()>0) {
								jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroActividadForeignKeyDescripcion(Long idCentroActividadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}


			sDescripcion=CentroActividadConstantesFunciones.getCentroActividadDescripcion(centroactividadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroActividadForeignKeyGenerico(Long idCentroActividadSeleccionado,JComboBox jComboBoxid_centro_actividadPagoAutoGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(centroactividadTemp!=null) {
				jComboBoxid_centro_actividadPagoAutoGenerico.setSelectedItem(centroactividadTemp);
			} else {
				if(jComboBoxid_centro_actividadPagoAutoGenerico!=null && jComboBoxid_centro_actividadPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_centro_actividadPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaPagoAuto.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaPagoAuto!=null) {
						jComboBoxid_facturaFK_IdFacturaPagoAuto.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaPagoAuto!=null) {
							//jComboBoxid_facturaFK_IdFacturaPagoAuto.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaPagoAuto.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaPagoAutoGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaPagoAutoGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaPagoAutoGenerico!=null && jComboBoxid_facturaPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_facturaPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualDetalleProveForeignKey(Long idDetalleProveSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			DetalleProve  detalleproveTemp=null;

			for(DetalleProve detalleproveAux:detalleprovesForeignKey) {
				if(detalleproveAux.getId()!=null && detalleproveAux.getId().equals(idDetalleProveSeleccionado)) {
					detalleproveTemp=detalleproveAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(detalleproveTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setDetalleProve(detalleproveTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setSelectedItem(detalleproveTemp);
					}
				} else {
					//jComboBoxid_detalle_provePagoAuto.setSelectedItem(detalleproveTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdDetalleProve") || sFormularioTipoBusqueda.equals("Todos")){
					if(detalleproveTemp!=null && jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto!=null) {
						jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.setSelectedItem(detalleproveTemp);
					} else {
						if(jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto!=null) {
							//jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.setSelectedItem(detalleproveTemp);
							if(jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.getItemCount()>0) {
								jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualDetalleProveForeignKeyDescripcion(Long idDetalleProveSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			DetalleProve  detalleproveTemp=null;

			for(DetalleProve detalleproveAux:detalleprovesForeignKey) {
				if(detalleproveAux.getId()!=null && detalleproveAux.getId().equals(idDetalleProveSeleccionado)) {
					detalleproveTemp=detalleproveAux;
					break;
				}
			}


			sDescripcion=DetalleProveConstantesFunciones.getDetalleProveDescripcion(detalleproveTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualDetalleProveForeignKeyGenerico(Long idDetalleProveSeleccionado,JComboBox jComboBoxid_detalle_provePagoAutoGenerico)throws Exception
	{
		try
		{
			DetalleProve  detalleproveTemp=null;

			for(DetalleProve detalleproveAux:detalleprovesForeignKey) {
				if(detalleproveAux.getId()!=null && detalleproveAux.getId().equals(idDetalleProveSeleccionado)) {
					detalleproveTemp=detalleproveAux;
					break;
				}
			}

			if(detalleproveTemp!=null) {
				jComboBoxid_detalle_provePagoAutoGenerico.setSelectedItem(detalleproveTemp);
			} else {
				if(jComboBoxid_detalle_provePagoAutoGenerico!=null && jComboBoxid_detalle_provePagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_detalle_provePagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaBancoForeignKey(Long idCuentaBancoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentabancoTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setCuentaBanco(cuentabancoTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setSelectedItem(cuentabancoTemp);
					}
				} else {
					//jComboBoxid_cuenta_bancoPagoAuto.setSelectedItem(cuentabancoTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaBanco") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentabancoTemp!=null && jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto!=null) {
						jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.setSelectedItem(cuentabancoTemp);
					} else {
						if(jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto!=null) {
							//jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.setSelectedItem(cuentabancoTemp);
							if(jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.getItemCount()>0) {
								jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaBancoForeignKeyDescripcion(Long idCuentaBancoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}


			sDescripcion=CuentaBancoConstantesFunciones.getCuentaBancoDescripcion(cuentabancoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaBancoForeignKeyGenerico(Long idCuentaBancoSeleccionado,JComboBox jComboBoxid_cuenta_bancoPagoAutoGenerico)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}

			if(cuentabancoTemp!=null) {
				jComboBoxid_cuenta_bancoPagoAutoGenerico.setSelectedItem(cuentabancoTemp);
			} else {
				if(jComboBoxid_cuenta_bancoPagoAutoGenerico!=null && jComboBoxid_cuenta_bancoPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_bancoPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionPagoAuto.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionPagoAuto!=null) {
						jComboBoxid_transaccionFK_IdTransaccionPagoAuto.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionPagoAuto!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionPagoAuto.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionPagoAuto.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionPagoAutoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionPagoAutoGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionPagoAutoGenerico!=null && jComboBoxid_transaccionPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_transaccionPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPagoAutoForeignKey(Long idEstadoPagoAutoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPagoAuto  estadopagoautoTemp=null;

			for(EstadoPagoAuto estadopagoautoAux:estadopagoautosForeignKey) {
				if(estadopagoautoAux.getId()!=null && estadopagoautoAux.getId().equals(idEstadoPagoAutoSeleccionado)) {
					estadopagoautoTemp=estadopagoautoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopagoautoTemp!=null) {

					if(this.pagoauto!=null) {
						this.pagoauto.setEstadoPagoAuto(estadopagoautoTemp);
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setSelectedItem(estadopagoautoTemp);
					}
				} else {
					//jComboBoxid_estado_pago_autoPagoAuto.setSelectedItem(estadopagoautoTemp);
					if(this.jInternalFrameDetalleFormPagoAuto!=null) {
						if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.getItemCount()>0) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPagoAuto") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopagoautoTemp!=null && jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto!=null) {
						jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.setSelectedItem(estadopagoautoTemp);
					} else {
						if(jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto!=null) {
							//jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.setSelectedItem(estadopagoautoTemp);
							if(jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.getItemCount()>0) {
								jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPagoAutoForeignKeyDescripcion(Long idEstadoPagoAutoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPagoAuto  estadopagoautoTemp=null;

			for(EstadoPagoAuto estadopagoautoAux:estadopagoautosForeignKey) {
				if(estadopagoautoAux.getId()!=null && estadopagoautoAux.getId().equals(idEstadoPagoAutoSeleccionado)) {
					estadopagoautoTemp=estadopagoautoAux;
					break;
				}
			}


			sDescripcion=EstadoPagoAutoConstantesFunciones.getEstadoPagoAutoDescripcion(estadopagoautoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPagoAutoForeignKeyGenerico(Long idEstadoPagoAutoSeleccionado,JComboBox jComboBoxid_estado_pago_autoPagoAutoGenerico)throws Exception
	{
		try
		{
			EstadoPagoAuto  estadopagoautoTemp=null;

			for(EstadoPagoAuto estadopagoautoAux:estadopagoautosForeignKey) {
				if(estadopagoautoAux.getId()!=null && estadopagoautoAux.getId().equals(idEstadoPagoAutoSeleccionado)) {
					estadopagoautoTemp=estadopagoautoAux;
					break;
				}
			}

			if(estadopagoautoTemp!=null) {
				jComboBoxid_estado_pago_autoPagoAutoGenerico.setSelectedItem(estadopagoautoTemp);
			} else {
				if(jComboBoxid_estado_pago_autoPagoAutoGenerico!=null && jComboBoxid_estado_pago_autoPagoAutoGenerico.getItemCount()>0) {
					jComboBoxid_estado_pago_autoPagoAutoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_empresaPagoAutoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPagoAutoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPagoAutoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				pagoauto.setid_empresa(empresaAux.getId());
				pagoauto.setempresa_descripcion(PagoAutoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				pagoauto.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_sucursalPagoAutoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPagoAutoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPagoAutoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				pagoauto.setid_sucursal(sucursalAux.getId());
				pagoauto.setsucursal_descripcion(PagoAutoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				pagoauto.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_ejercicioPagoAutoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPagoAutoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPagoAutoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				pagoauto.setid_ejercicio(ejercicioAux.getId());
				pagoauto.setejercicio_descripcion(PagoAutoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				pagoauto.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_clientePagoAutoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clientePagoAutoGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clientePagoAutoGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pagoauto.setid_cliente(clienteAux.getId());
				pagoauto.setcliente_descripcion(PagoAutoConstantesFunciones.getClienteDescripcion(clienteAux));
				pagoauto.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_asiento_contablePagoAutoGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contablePagoAutoGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contablePagoAutoGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null && asientocontableAux.getId()!=null) {
				pagoauto.setid_asiento_contable(asientocontableAux.getId());
				pagoauto.setasientocontable_descripcion(PagoAutoConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				pagoauto.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_centro_costoPagoAutoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoPagoAutoGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoPagoAutoGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				pagoauto.setid_centro_costo(centrocostoAux.getId());
				pagoauto.setcentrocosto_descripcion(PagoAutoConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				pagoauto.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroActividadForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_centro_actividadPagoAutoGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadAux=new CentroActividad();

			if(jComboBoxid_centro_actividadPagoAutoGenerico==null) {
				centroactividadAux=(CentroActividad)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.getSelectedItem();
			} else {
				centroactividadAux=(CentroActividad)jComboBoxid_centro_actividadPagoAutoGenerico.getSelectedItem();
			}

			if(centroactividadAux!=null) {
				pagoauto.setid_centro_actividad(centroactividadAux.getId());
				pagoauto.setcentroactividad_descripcion(PagoAutoConstantesFunciones.getCentroActividadDescripcion(centroactividadAux));
				pagoauto.setCentroActividad(centroactividadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_facturaPagoAutoGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaPagoAutoGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaPagoAutoGenerico.getSelectedItem();
			}

			if(facturaAux!=null && facturaAux.getId()!=null) {
				pagoauto.setid_factura(facturaAux.getId());
				pagoauto.setfactura_descripcion(PagoAutoConstantesFunciones.getFacturaDescripcion(facturaAux));
				pagoauto.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarDetalleProveForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_detalle_provePagoAutoGenerico)throws Exception
	{
		try
		{
			DetalleProve  detalleproveAux=new DetalleProve();

			if(jComboBoxid_detalle_provePagoAutoGenerico==null) {
				detalleproveAux=(DetalleProve)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.getSelectedItem();
			} else {
				detalleproveAux=(DetalleProve)jComboBoxid_detalle_provePagoAutoGenerico.getSelectedItem();
			}

			if(detalleproveAux!=null && detalleproveAux.getId()!=null) {
				pagoauto.setid_detalle_prove(detalleproveAux.getId());
				pagoauto.setdetalleprove_descripcion(PagoAutoConstantesFunciones.getDetalleProveDescripcion(detalleproveAux));
				pagoauto.setDetalleProve(detalleproveAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaBancoForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_cuenta_bancoPagoAutoGenerico)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoAux=new CuentaBanco();

			if(jComboBoxid_cuenta_bancoPagoAutoGenerico==null) {
				cuentabancoAux=(CuentaBanco)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.getSelectedItem();
			} else {
				cuentabancoAux=(CuentaBanco)jComboBoxid_cuenta_bancoPagoAutoGenerico.getSelectedItem();
			}

			if(cuentabancoAux!=null && cuentabancoAux.getId()!=null) {
				pagoauto.setid_cuenta_banco(cuentabancoAux.getId());
				pagoauto.setcuentabanco_descripcion(PagoAutoConstantesFunciones.getCuentaBancoDescripcion(cuentabancoAux));
				pagoauto.setCuentaBanco(cuentabancoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_transaccionPagoAutoGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionPagoAutoGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionPagoAutoGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				pagoauto.setid_transaccion(transaccionAux.getId());
				pagoauto.settransaccion_descripcion(PagoAutoConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				pagoauto.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPagoAutoForeignKey(PagoAuto pagoauto,JComboBox jComboBoxid_estado_pago_autoPagoAutoGenerico)throws Exception
	{
		try
		{
			EstadoPagoAuto  estadopagoautoAux=new EstadoPagoAuto();

			if(jComboBoxid_estado_pago_autoPagoAutoGenerico==null) {
				estadopagoautoAux=(EstadoPagoAuto)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.getSelectedItem();
			} else {
				estadopagoautoAux=(EstadoPagoAuto)jComboBoxid_estado_pago_autoPagoAutoGenerico.getSelectedItem();
			}

			if(estadopagoautoAux!=null && estadopagoautoAux.getId()!=null) {
				pagoauto.setid_estado_pago_auto(estadopagoautoAux.getId());
				pagoauto.setestadopagoauto_descripcion(PagoAutoConstantesFunciones.getEstadoPagoAutoDescripcion(estadopagoautoAux));
				pagoauto.setEstadoPagoAuto(estadopagoautoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClientePagoAuto.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClientePagoAuto.addItem(cliente);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.addItem(asientocontable);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.addItem(centrocosto);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroActividadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroActividad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.removeAllItems();

							for(CentroActividad centroactividad:this.centroactividadsForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.addItem(centroactividad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroActividad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.removeAllItems();

							for(CentroActividad centroactividad:this.centroactividadsForeignKey) {
								this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.addItem(centroactividad);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaPagoAuto.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaPagoAuto.addItem(factura);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameDetalleProvesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingDetalleProve=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.removeAllItems();

							for(DetalleProve detalleprove:this.detalleprovesForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.addItem(detalleprove);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdDetalleProve") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.removeAllItems();

							for(DetalleProve detalleprove:this.detalleprovesForeignKey) {
								this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.addItem(detalleprove);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaBancosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaBanco=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.removeAllItems();

							for(CuentaBanco cuentabanco:this.cuentabancosForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.addItem(cuentabanco);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaBanco") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.removeAllItems();

							for(CuentaBanco cuentabanco:this.cuentabancosForeignKey) {
								this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.addItem(cuentabanco);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.addItem(transaccion);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPagoAutosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPagoAuto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.removeAllItems();

							for(EstadoPagoAuto estadopagoauto:this.estadopagoautosForeignKey) {
								this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.addItem(estadopagoauto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPagoAuto!=null) { 
					}

					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPagoAuto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.removeAllItems();

							for(EstadoPagoAuto estadopagoauto:this.estadopagoautosForeignKey) {
								this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.addItem(estadopagoauto);
							}
						}

						if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClientePagoAuto.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClientePagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroActividadForeignKey(CentroActividad centroactividad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setSelectedItem(centroactividad);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.setSelectedItem(centroactividad);
						} else {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaPagoAuto.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameDetalleProveForeignKey(DetalleProve detalleprove,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setSelectedItem(detalleprove);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.setSelectedItem(detalleprove);
						} else {
							this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaBancoForeignKey(CuentaBanco cuentabanco,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setSelectedItem(cuentabanco);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.setSelectedItem(cuentabanco);
						} else {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPagoAutoForeignKey(EstadoPagoAuto estadopagoauto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setSelectedItem(estadopagoauto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPagoAuto!=null) {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.setSelectedItem(estadopagoauto);
						} else {
							this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPagoAuto() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PagoAutoConstantesFunciones.refrescarForeignKeysDescripcionesPagoAuto(this.pagoautoLogic.getPagoAutos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PagoAutoConstantesFunciones.refrescarForeignKeysDescripcionesPagoAuto(this.pagoautos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(CentroActividad.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(DetalleProve.class));
		classes.add(new Classe(CuentaBanco.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(EstadoPagoAuto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//pagoautoLogic.setPagoAutos(this.pagoautos);
			pagoautoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PagoAutoParameterReturnGeneral getPagoAutoParameterGeneral() {
		return this.pagoautoParameterGeneral;
	}
	
	public void setPagoAutoParameterGeneral(PagoAutoParameterReturnGeneral pagoautoParameterGeneral) {
		this.pagoautoParameterGeneral = pagoautoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPagoAuto() {
		return isPermisoTodoPagoAuto;
	}

	public void setIsPermisoTodoPagoAuto(Boolean isPermisoTodoPagoAuto) {
		this.isPermisoTodoPagoAuto = isPermisoTodoPagoAuto;
	}

	public Boolean getIsPermisoNuevoPagoAuto() {
		return isPermisoNuevoPagoAuto;
	}

	public void setIsPermisoNuevoPagoAuto(Boolean isPermisoNuevoPagoAuto) {
		this.isPermisoNuevoPagoAuto = isPermisoNuevoPagoAuto;
	}

	public Boolean getIsPermisoActualizarPagoAuto() {
		return isPermisoActualizarPagoAuto;
	}

	public void setIsPermisoActualizarPagoAuto(Boolean isPermisoActualizarPagoAuto) {
		this.isPermisoActualizarPagoAuto = isPermisoActualizarPagoAuto;
	}

	public Boolean getIsPermisoEliminarPagoAuto() {
		return isPermisoEliminarPagoAuto;
	}

	public void setIsPermisoEliminarPagoAuto(Boolean isPermisoEliminarPagoAuto) {
		this.isPermisoEliminarPagoAuto = isPermisoEliminarPagoAuto;
	}

	public Boolean getIsPermisoGuardarCambiosPagoAuto() {
		return isPermisoGuardarCambiosPagoAuto;
	}

	public void setIsPermisoGuardarCambiosPagoAuto(Boolean isPermisoGuardarCambiosPagoAuto) {
		this.isPermisoGuardarCambiosPagoAuto = isPermisoGuardarCambiosPagoAuto;
	}
	
	public Boolean getIsPermisoConsultaPagoAuto() {
		return isPermisoConsultaPagoAuto;
	}

	public void setIsPermisoConsultaPagoAuto(Boolean isPermisoConsultaPagoAuto) {
		this.isPermisoConsultaPagoAuto = isPermisoConsultaPagoAuto;
	}

	public Boolean getIsPermisoBusquedaPagoAuto() {
		return isPermisoBusquedaPagoAuto;
	}

	public void setIsPermisoBusquedaPagoAuto(Boolean isPermisoBusquedaPagoAuto) {
		this.isPermisoBusquedaPagoAuto = isPermisoBusquedaPagoAuto;
	}

	public Boolean getIsPermisoReportePagoAuto() {
		return isPermisoReportePagoAuto;
	}

	public void setIsPermisoReportePagoAuto(Boolean isPermisoReportePagoAuto) {
		this.isPermisoReportePagoAuto = isPermisoReportePagoAuto;
	}
	
	public Boolean getIsPermisoPaginacionMedioPagoAuto() {
		return isPermisoPaginacionMedioPagoAuto;
	}

	public void setIsPermisoPaginacionMedioPagoAuto(Boolean isPermisoPaginacionMedioPagoAuto) {
		this.isPermisoPaginacionMedioPagoAuto = isPermisoPaginacionMedioPagoAuto;
	}
	
	public Boolean getIsPermisoPaginacionTodoPagoAuto() {
		return isPermisoPaginacionTodoPagoAuto;
	}

	public void setIsPermisoPaginacionTodoPagoAuto(Boolean isPermisoPaginacionTodoPagoAuto) {
		this.isPermisoPaginacionTodoPagoAuto = isPermisoPaginacionTodoPagoAuto;
	}
	
	public Boolean getIsPermisoPaginacionAltoPagoAuto() {
		return isPermisoPaginacionAltoPagoAuto;
	}

	public void setIsPermisoPaginacionAltoPagoAuto(Boolean isPermisoPaginacionAltoPagoAuto) {
		this.isPermisoPaginacionAltoPagoAuto = isPermisoPaginacionAltoPagoAuto;
	}
	
	public Boolean getIsPermisoCopiarPagoAuto() {
		return isPermisoCopiarPagoAuto;
	}

	public void setIsPermisoCopiarPagoAuto(Boolean isPermisoCopiarPagoAuto) {
		this.isPermisoCopiarPagoAuto = isPermisoCopiarPagoAuto;
	}
	
	public Boolean getIsPermisoVerFormPagoAuto() {
		return isPermisoVerFormPagoAuto;
	}

	public void setIsPermisoVerFormPagoAuto(Boolean isPermisoVerFormPagoAuto) {
		this.isPermisoVerFormPagoAuto = isPermisoVerFormPagoAuto;
	}
	
	public Boolean getIsPermisoDuplicarPagoAuto() {
		return isPermisoDuplicarPagoAuto;
	}

	public void setIsPermisoDuplicarPagoAuto(Boolean isPermisoDuplicarPagoAuto) {
		this.isPermisoDuplicarPagoAuto = isPermisoDuplicarPagoAuto;
	}
	
	public Boolean getIsPermisoOrdenPagoAuto() {
		return isPermisoOrdenPagoAuto;
	}

	public void setIsPermisoOrdenPagoAuto(Boolean isPermisoOrdenPagoAuto) {
		this.isPermisoOrdenPagoAuto = isPermisoOrdenPagoAuto;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPagoAuto() {
		return isVisibilidadCeldaNuevoPagoAuto;
	}

	public void setIsVisibilidadCeldaNuevoPagoAuto(Boolean isVisibilidadCeldaNuevoPagoAuto) {
		this.isVisibilidadCeldaNuevoPagoAuto = isVisibilidadCeldaNuevoPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPagoAuto() {
		return isVisibilidadCeldaDuplicarPagoAuto;
	}

	public void setIsVisibilidadCeldaDuplicarPagoAuto(Boolean isVisibilidadCeldaDuplicarPagoAuto) {
		this.isVisibilidadCeldaDuplicarPagoAuto = isVisibilidadCeldaDuplicarPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPagoAuto() {
		return isVisibilidadCeldaCopiarPagoAuto;
	}

	public void setIsVisibilidadCeldaCopiarPagoAuto(Boolean isVisibilidadCeldaCopiarPagoAuto) {
		this.isVisibilidadCeldaCopiarPagoAuto = isVisibilidadCeldaCopiarPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPagoAuto() {
		return isVisibilidadCeldaVerFormPagoAuto;
	}

	public void setIsVisibilidadCeldaVerFormPagoAuto(Boolean isVisibilidadCeldaVerFormPagoAuto) {
		this.isVisibilidadCeldaVerFormPagoAuto = isVisibilidadCeldaVerFormPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPagoAuto() {
		return isVisibilidadCeldaOrdenPagoAuto;
	}

	public void setIsVisibilidadCeldaOrdenPagoAuto(Boolean isVisibilidadCeldaOrdenPagoAuto) {
		this.isVisibilidadCeldaOrdenPagoAuto = isVisibilidadCeldaOrdenPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPagoAuto() {
		return isVisibilidadCeldaNuevoRelacionesPagoAuto;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPagoAuto(Boolean isVisibilidadCeldaNuevoRelacionesPagoAuto) {
		this.isVisibilidadCeldaNuevoRelacionesPagoAuto = isVisibilidadCeldaNuevoRelacionesPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPagoAuto() {
		return isVisibilidadCeldaModificarPagoAuto;
	}

	public void setIsVisibilidadCeldaModificarPagoAuto(Boolean isVisibilidadCeldaModificarPagoAuto) {
		this.isVisibilidadCeldaModificarPagoAuto = isVisibilidadCeldaModificarPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPagoAuto() {
		return isVisibilidadCeldaActualizarPagoAuto;
	}

	public void setIsVisibilidadCeldaActualizarPagoAuto(Boolean isVisibilidadCeldaActualizarPagoAuto) {
		this.isVisibilidadCeldaActualizarPagoAuto = isVisibilidadCeldaActualizarPagoAuto;
	}

	public Boolean getIsVisibilidadCeldaEliminarPagoAuto() {
		return isVisibilidadCeldaEliminarPagoAuto;
	}

	public void setIsVisibilidadCeldaEliminarPagoAuto(Boolean isVisibilidadCeldaEliminarPagoAuto) {
		this.isVisibilidadCeldaEliminarPagoAuto = isVisibilidadCeldaEliminarPagoAuto;
	}

	public Boolean getIsVisibilidadCeldaCancelarPagoAuto() {
		return isVisibilidadCeldaCancelarPagoAuto;
	}

	public void setIsVisibilidadCeldaCancelarPagoAuto(Boolean isVisibilidadCeldaCancelarPagoAuto) {
		this.isVisibilidadCeldaCancelarPagoAuto = isVisibilidadCeldaCancelarPagoAuto;
	}

	public Boolean getIsVisibilidadCeldaGuardarPagoAuto() {
		return isVisibilidadCeldaGuardarPagoAuto;
	}

	public void setIsVisibilidadCeldaGuardarPagoAuto(Boolean isVisibilidadCeldaGuardarPagoAuto) {
		this.isVisibilidadCeldaGuardarPagoAuto = isVisibilidadCeldaGuardarPagoAuto;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPagoAuto() {
		return isVisibilidadCeldaGuardarCambiosPagoAuto;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPagoAuto(Boolean isVisibilidadCeldaGuardarCambiosPagoAuto) {
		this.isVisibilidadCeldaGuardarCambiosPagoAuto = isVisibilidadCeldaGuardarCambiosPagoAuto;
	}
		
	public PagoAutoSessionBean getpagoautoSessionBean() {
		return this.pagoautoSessionBean;
	}
	
	public void setpagoautoSessionBean(PagoAutoSessionBean pagoautoSessionBean) {
		this.pagoautoSessionBean=pagoautoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCentroActividad() {
		return this.isVisibilidadFK_IdCentroActividad;
	}

	public void setisVisibilidadFK_IdCentroActividad(Boolean isVisibilidadFK_IdCentroActividad) {
		this.isVisibilidadFK_IdCentroActividad=isVisibilidadFK_IdCentroActividad;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCuentaBanco() {
		return this.isVisibilidadFK_IdCuentaBanco;
	}

	public void setisVisibilidadFK_IdCuentaBanco(Boolean isVisibilidadFK_IdCuentaBanco) {
		this.isVisibilidadFK_IdCuentaBanco=isVisibilidadFK_IdCuentaBanco;
	}

	public Boolean getisVisibilidadFK_IdDetalleProve() {
		return this.isVisibilidadFK_IdDetalleProve;
	}

	public void setisVisibilidadFK_IdDetalleProve(Boolean isVisibilidadFK_IdDetalleProve) {
		this.isVisibilidadFK_IdDetalleProve=isVisibilidadFK_IdDetalleProve;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPagoAuto() {
		return this.isVisibilidadFK_IdEstadoPagoAuto;
	}

	public void setisVisibilidadFK_IdEstadoPagoAuto(Boolean isVisibilidadFK_IdEstadoPagoAuto) {
		this.isVisibilidadFK_IdEstadoPagoAuto=isVisibilidadFK_IdEstadoPagoAuto;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPagoAuto(PagoAuto pagoauto)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(pagoauto,null);
				this.setActualParaGuardarSucursalForeignKey(pagoauto,null);
				this.setActualParaGuardarEjercicioForeignKey(pagoauto,null);
				this.setActualParaGuardarClienteForeignKey(pagoauto,null);
				this.setActualParaGuardarAsientoContableForeignKey(pagoauto,null);
				this.setActualParaGuardarCentroCostoForeignKey(pagoauto,null);
				this.setActualParaGuardarCentroActividadForeignKey(pagoauto,null);
				this.setActualParaGuardarFacturaForeignKey(pagoauto,null);
				this.setActualParaGuardarDetalleProveForeignKey(pagoauto,null);
				this.setActualParaGuardarCuentaBancoForeignKey(pagoauto,null);
				this.setActualParaGuardarTransaccionForeignKey(pagoauto,null);
				this.setActualParaGuardarEstadoPagoAutoForeignKey(pagoauto,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PagoAuto pagoauto,PagoAuto pagoautoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPagoAuto(pagoauto);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		pagoautoAux.setId(pagoauto.getId());
		pagoautoAux.setVersionRow(pagoauto.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPagoAuto();
		
			int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = pagoautoValidator.getInvalidValues(this.pagoauto);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			pagoautoLogic.setDatosCliente(datosCliente);
			pagoautoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				pagoautoAux=new  PagoAuto();
				
				pagoautoAux.setIsNew(true);
				pagoautoAux.setIsChanged(true);
				
				pagoautoAux.setPagoAutoOriginal(this.pagoauto);
				
				pagoautoAux.setId(this.pagoauto.getId());	
				pagoautoAux.setVersionRow(this.pagoauto.getVersionRow());	
				pagoautoAux.setid_empresa(this.pagoauto.getid_empresa());	
				pagoautoAux.setid_sucursal(this.pagoauto.getid_sucursal());	
				pagoautoAux.setid_ejercicio(this.pagoauto.getid_ejercicio());	
				pagoautoAux.setid_cliente(this.pagoauto.getid_cliente());	
				pagoautoAux.setid_asiento_contable(this.pagoauto.getid_asiento_contable());	
				pagoautoAux.setid_centro_costo(this.pagoauto.getid_centro_costo());	
				pagoautoAux.setid_centro_actividad(this.pagoauto.getid_centro_actividad());	
				pagoautoAux.setid_factura(this.pagoauto.getid_factura());	
				pagoautoAux.setid_detalle_prove(this.pagoauto.getid_detalle_prove());	
				pagoautoAux.setid_cuenta_banco(this.pagoauto.getid_cuenta_banco());	
				pagoautoAux.setid_transaccion(this.pagoauto.getid_transaccion());	
				pagoautoAux.setid_estado_pago_auto(this.pagoauto.getid_estado_pago_auto());	
				pagoautoAux.setnumero_factura(this.pagoauto.getnumero_factura());	
				pagoautoAux.setfecha_emision(this.pagoauto.getfecha_emision());	
				pagoautoAux.setfecha_vencimiento(this.pagoauto.getfecha_vencimiento());	
				pagoautoAux.setfecha_corte(this.pagoauto.getfecha_corte());	
				pagoautoAux.setvalor_por_pagar(this.pagoauto.getvalor_por_pagar());	
				pagoautoAux.setvalor_cancelado(this.pagoauto.getvalor_cancelado());	
				pagoautoAux.setesta_autorizado(this.pagoauto.getesta_autorizado());	
				pagoautoAux.setdescripcion(this.pagoauto.getdescripcion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pagoautoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pagoautoAux,pagoautos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pagoautoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.savePagoAutos();//WithConnection
						//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);
					
					this.refrescarForeignKeysDescripcionesPagoAuto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pagoautoLogic.savePagoAutoRelaciones(pagoautoAux);//WithConnection
								//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pagoautoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pagoautoAux,pagoautos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				pagoautoAux=new  PagoAuto();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.pagoautoSessionBean.getEsGuardarRelacionado() 
					|| (this.pagoautoSessionBean.getEsGuardarRelacionado() && this.pagoauto.getId()>=0)) {
						
					pagoautoAux.setIsNew(false);
				}
				
				pagoautoAux.setIsDeleted(false);
			
				pagoautoAux.setId(this.pagoauto.getId());	
				pagoautoAux.setVersionRow(this.pagoauto.getVersionRow());	
				pagoautoAux.setid_empresa(this.pagoauto.getid_empresa());	
				pagoautoAux.setid_sucursal(this.pagoauto.getid_sucursal());	
				pagoautoAux.setid_ejercicio(this.pagoauto.getid_ejercicio());	
				pagoautoAux.setid_cliente(this.pagoauto.getid_cliente());	
				pagoautoAux.setid_asiento_contable(this.pagoauto.getid_asiento_contable());	
				pagoautoAux.setid_centro_costo(this.pagoauto.getid_centro_costo());	
				pagoautoAux.setid_centro_actividad(this.pagoauto.getid_centro_actividad());	
				pagoautoAux.setid_factura(this.pagoauto.getid_factura());	
				pagoautoAux.setid_detalle_prove(this.pagoauto.getid_detalle_prove());	
				pagoautoAux.setid_cuenta_banco(this.pagoauto.getid_cuenta_banco());	
				pagoautoAux.setid_transaccion(this.pagoauto.getid_transaccion());	
				pagoautoAux.setid_estado_pago_auto(this.pagoauto.getid_estado_pago_auto());	
				pagoautoAux.setnumero_factura(this.pagoauto.getnumero_factura());	
				pagoautoAux.setfecha_emision(this.pagoauto.getfecha_emision());	
				pagoautoAux.setfecha_vencimiento(this.pagoauto.getfecha_vencimiento());	
				pagoautoAux.setfecha_corte(this.pagoauto.getfecha_corte());	
				pagoautoAux.setvalor_por_pagar(this.pagoauto.getvalor_por_pagar());	
				pagoautoAux.setvalor_cancelado(this.pagoauto.getvalor_cancelado());	
				pagoautoAux.setesta_autorizado(this.pagoauto.getesta_autorizado());	
				pagoautoAux.setdescripcion(this.pagoauto.getdescripcion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pagoautoAux,pagoautos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pagoautoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.savePagoAutos();//WithConnection
						//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);
					
					this.refrescarForeignKeysDescripcionesPagoAuto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pagoautoLogic.savePagoAutoRelaciones(pagoautoAux);//WithConnection
								//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pagoautoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pagoautoAux,pagoautos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pagoauto,pagoautoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				pagoautoAux=new  PagoAuto();
				
				pagoautoAux.setIsNew(false);
				pagoautoAux.setIsChanged(false);
				
				pagoautoAux.setIsDeleted(true);
				
				pagoautoAux.setId(this.pagoauto.getId());	
				pagoautoAux.setVersionRow(this.pagoauto.getVersionRow());	
				pagoautoAux.setid_empresa(this.pagoauto.getid_empresa());	
				pagoautoAux.setid_sucursal(this.pagoauto.getid_sucursal());	
				pagoautoAux.setid_ejercicio(this.pagoauto.getid_ejercicio());	
				pagoautoAux.setid_cliente(this.pagoauto.getid_cliente());	
				pagoautoAux.setid_asiento_contable(this.pagoauto.getid_asiento_contable());	
				pagoautoAux.setid_centro_costo(this.pagoauto.getid_centro_costo());	
				pagoautoAux.setid_centro_actividad(this.pagoauto.getid_centro_actividad());	
				pagoautoAux.setid_factura(this.pagoauto.getid_factura());	
				pagoautoAux.setid_detalle_prove(this.pagoauto.getid_detalle_prove());	
				pagoautoAux.setid_cuenta_banco(this.pagoauto.getid_cuenta_banco());	
				pagoautoAux.setid_transaccion(this.pagoauto.getid_transaccion());	
				pagoautoAux.setid_estado_pago_auto(this.pagoauto.getid_estado_pago_auto());	
				pagoautoAux.setnumero_factura(this.pagoauto.getnumero_factura());	
				pagoautoAux.setfecha_emision(this.pagoauto.getfecha_emision());	
				pagoautoAux.setfecha_vencimiento(this.pagoauto.getfecha_vencimiento());	
				pagoautoAux.setfecha_corte(this.pagoauto.getfecha_corte());	
				pagoautoAux.setvalor_por_pagar(this.pagoauto.getvalor_por_pagar());	
				pagoautoAux.setvalor_cancelado(this.pagoauto.getvalor_cancelado());	
				pagoautoAux.setesta_autorizado(this.pagoauto.getesta_autorizado());	
				pagoautoAux.setdescripcion(this.pagoauto.getdescripcion());	
				
				if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.pagoautoAux.getId()>=0) {	
						this.pagoautosEliminados.add(pagoautoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pagoautoAux,pagoautos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pagoautoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.savePagoAutos();//WithConnection
						//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pagoautoLogic.savePagoAutoRelaciones(pagoautoAux);//WithConnection
								//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.pagoautoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(pagoautoAux,pagoautoLogic.getPagoAutos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(pagoautoAux,pagoautos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getPagoAutos().addAll(this.pagoautosEliminados);
					
					pagoautoLogic.savePagoAutos();//WithConnection
					//pagoautoLogic.getSetVersionRowPagoAutos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPagoAuto();
				
				this.pagoautosEliminados= new ArrayList<PagoAuto>();		
			}
			
			if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Pago Auto GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.pagoauto=pagoautoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPagoAuto();
      	}
		
	}	
	
	public void actualizarRelaciones(PagoAuto pagoautoLocal) throws Exception {
		
		if(this.pagoautoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PagoAuto pagoautoLocal) throws Exception {	
		if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				pagoautoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				pagoautoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				pagoautoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				pagoautoLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				pagoautoLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				pagoautoLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroActividadDetalleFormJInternalFrame.class)) {
				CentroActividadBeanSwingJInternalFrame centroactividadBeanSwingJInternalFrameLocal=(CentroActividadBeanSwingJInternalFrame) ((CentroActividadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centroactividadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroActividad(centroactividadBeanSwingJInternalFrameLocal.getcentroactividad(),true);
				centroactividadBeanSwingJInternalFrameLocal.actualizarLista(centroactividadBeanSwingJInternalFrameLocal.centroactividad,this.centroactividadsForeignKey);

				centroactividadBeanSwingJInternalFrameLocal.actualizarRelaciones(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				pagoautoLocal.setCentroActividad(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey("Formulario");
				this.setActualCentroActividadForeignKey(centroactividadBeanSwingJInternalFrameLocal.centroactividad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				pagoautoLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(DetalleProveDetalleFormJInternalFrame.class)) {
				DetalleProveBeanSwingJInternalFrame detalleproveBeanSwingJInternalFrameLocal=(DetalleProveBeanSwingJInternalFrame) ((DetalleProveDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				detalleproveBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoDetalleProve(detalleproveBeanSwingJInternalFrameLocal.getdetalleprove(),true);
				detalleproveBeanSwingJInternalFrameLocal.actualizarLista(detalleproveBeanSwingJInternalFrameLocal.detalleprove,this.detalleprovesForeignKey);

				detalleproveBeanSwingJInternalFrameLocal.actualizarRelaciones(detalleproveBeanSwingJInternalFrameLocal.detalleprove);

				pagoautoLocal.setDetalleProve(detalleproveBeanSwingJInternalFrameLocal.detalleprove);

				this.addItemDefectoCombosForeignKeyDetalleProve();
				this.cargarCombosFrameDetalleProvesForeignKey("Formulario");
				this.setActualDetalleProveForeignKey(detalleproveBeanSwingJInternalFrameLocal.detalleprove.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaBancoDetalleFormJInternalFrame.class)) {
				CuentaBancoBeanSwingJInternalFrame cuentabancoBeanSwingJInternalFrameLocal=(CuentaBancoBeanSwingJInternalFrame) ((CuentaBancoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentabancoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaBanco(cuentabancoBeanSwingJInternalFrameLocal.getcuentabanco(),true);
				cuentabancoBeanSwingJInternalFrameLocal.actualizarLista(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco,this.cuentabancosForeignKey);

				cuentabancoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco);

				pagoautoLocal.setCuentaBanco(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco);

				this.addItemDefectoCombosForeignKeyCuentaBanco();
				this.cargarCombosFrameCuentaBancosForeignKey("Formulario");
				this.setActualCuentaBancoForeignKey(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				pagoautoLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPagoAutoDetalleFormJInternalFrame.class)) {
				EstadoPagoAutoBeanSwingJInternalFrame estadopagoautoBeanSwingJInternalFrameLocal=(EstadoPagoAutoBeanSwingJInternalFrame) ((EstadoPagoAutoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopagoautoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPagoAuto(estadopagoautoBeanSwingJInternalFrameLocal.getestadopagoauto(),true);
				estadopagoautoBeanSwingJInternalFrameLocal.actualizarLista(estadopagoautoBeanSwingJInternalFrameLocal.estadopagoauto,this.estadopagoautosForeignKey);

				estadopagoautoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopagoautoBeanSwingJInternalFrameLocal.estadopagoauto);

				pagoautoLocal.setEstadoPagoAuto(estadopagoautoBeanSwingJInternalFrameLocal.estadopagoauto);

				this.addItemDefectoCombosForeignKeyEstadoPagoAuto();
				this.cargarCombosFrameEstadoPagoAutosForeignKey("Formulario");
				this.setActualEstadoPagoAutoForeignKey(estadopagoautoBeanSwingJInternalFrameLocal.estadopagoauto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPagoAutoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = pagoautoValidator.getInvalidValues(this.pagoauto);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PagoAuto pagoauto,List<PagoAuto> pagoautos) throws Exception {
		try	{		
			PagoAutoConstantesFunciones.actualizarLista(pagoauto,pagoautos,this.pagoautoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PagoAuto pagoauto,List<PagoAuto> pagoautos) throws Exception {
		try	{			
			PagoAutoConstantesFunciones.actualizarSelectedLista(pagoauto,pagoautos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PagoAuto> pagoautosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				pagoautosLocal=this.pagoautoLogic.getPagoAutos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				pagoautosLocal=this.pagoautos;
			}
			//ARCHITECTURE
		
			for(PagoAuto pagoautoLocal:pagoautosLocal) {
				if(this.permiteMantenimiento(pagoautoLocal) && pagoautoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PagoAutoConstantesFunciones.getPagoAutoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_empresaPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_sucursalPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_ejercicioPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_clientePagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_asiento_contablePagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_centro_costoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDCENTROACTIVIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_centro_actividadPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_facturaPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDDETALLEPROVE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_detalle_provePagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDCUENTABANCO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_cuenta_bancoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_transaccionPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.IDESTADOPAGOAUTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelid_estado_pago_autoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.NUMEROFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelnumero_facturaPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_emisionPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.FECHAVENCIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_vencimientoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.FECHACORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_cortePagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.VALORPORPAGAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_por_pagarPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.VALORCANCELADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_canceladoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.ESTAAUTORIZADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelesta_autorizadoPagoAuto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PagoAutoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabeldescripcionPagoAuto,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_empresaPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_sucursalPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_ejercicioPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_clientePagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_asiento_contablePagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_centro_costoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_centro_actividadPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_facturaPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_detalle_provePagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_cuenta_bancoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_transaccionPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelid_estado_pago_autoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelnumero_facturaPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_emisionPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_vencimientoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_cortePagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_por_pagarPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_canceladoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabelesta_autorizadoPagoAuto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPagoAuto.jLabeldescripcionPagoAuto,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPagoAuto--;	
		
		
		this.pagoautoAux=new PagoAuto();
		
		this.pagoautoAux.setId(this.iIdNuevoPagoAuto);
		this.pagoautoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pagoautoLogic.getPagoAutos().add(this.pagoautoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.pagoautos.add(this.pagoautoAux);
		}
		//ARCHITECTURE
		
		this.pagoauto=this.pagoautoAux;
		
		if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPagoAuto(this.pagoauto);
			this.setVariablesObjetoActualToFormularioForeignKeyPagoAuto(this.pagoauto);
		}
				
		//this.setDefaultControlesPagoAuto();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPagoAuto();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPagoAuto();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPagoAuto();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPagoAuto(this.pagoautoBean,this.pagoauto,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PagoAutoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
			classes=PagoAutoConstantesFunciones.getClassesRelationshipsOfPagoAuto(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.pagoautoReturnGeneral=pagoautoLogic.procesarEventosPagoAutosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pagoautoLogic.getPagoAutos(),this.pagoauto,this.pagoautoParameterGeneral,this.isEsNuevoPagoAuto,classes);//this.pagoautoLogic.getPagoAuto()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPagoAuto(this.pagoautoReturnGeneral,this.pagoautoBean,false);
		
		if(this.pagoautoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPagoAuto(this.pagoautoReturnGeneral.getPagoAuto());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPagoAuto(this.pagoautoReturnGeneral.getPagoAuto());
		}
		
		if(this.pagoautoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPagoAuto(this.pagoautoReturnGeneral.getPagoAuto(),classes);//this.pagoautoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPagoAuto();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPagoAuto();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PagoAutoBeanSwingJInternalFrameAdditional.RecargarFormPagoAuto(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPagoAuto(false);
						
			if(pagoautoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPagoAuto();
			}
			
			this.actualizarVisualTableDatosPagoAuto();
			
			this.jTableDatosPagoAuto.setRowSelectionInterval(this.getIndiceNuevoPagoAuto(), this.getIndiceNuevoPagoAuto());
			
			this.seleccionarFilaTablaPagoAutoActual();
						
			this.actualizarEstadoCeldasBotonesPagoAuto("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPagoAuto(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarnumero_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarfecha_emisionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarfecha_vencimientoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarfecha_cortePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarvalor_por_pagarPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarvalor_canceladoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activaresta_autorizadoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activardescripcionPagoAuto);	
		//
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_empresaPagoAuto);//
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_sucursalPagoAuto);//
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_ejercicioPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_clientePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_asiento_contablePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_centro_costoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_centro_actividadPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_detalle_provePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_cuenta_bancoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_transaccionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setEnabled(isHabilitar && this.pagoautoConstantesFunciones.activarid_estado_pago_autoPagoAuto);
	};
	
	public void setDefaultControlesPagoAuto() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPagoAuto(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.pagoautoSessionBean.setConGuardarRelaciones(true);			
			this.pagoautoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.setVisible(true);
			
					
		} else {
			//this.pagoautoSessionBean.setConGuardarRelaciones(false);			
			this.pagoautoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoPagoAuto() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
				if(pagoautoAux.getId().equals(this.iIdNuevoPagoAuto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PagoAuto pagoautoAux:this.pagoautos) {
				if(pagoautoAux.getId().equals(this.iIdNuevoPagoAuto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPagoAuto(PagoAuto pagoauto,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
				if(pagoautoAux.getId().equals(pagoauto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PagoAuto pagoautoAux:this.pagoautos) {
				if(pagoautoAux.getId().equals(pagoauto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPagoAuto(PagoAuto pagoautoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
				if(pagoautoAux.getPagoAutoOriginal().getId().equals(pagoautoOriginal.getId())) {
					existe=true;
					pagoautoOriginal.setId(pagoautoAux.getId());
					pagoautoOriginal.setVersionRow(pagoautoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PagoAuto pagoautoAux:this.pagoautos) {
				if(pagoautoAux.getPagoAutoOriginal().getId().equals(pagoautoOriginal.getId())) {
					existe=true;
					pagoautoOriginal.setId(pagoautoAux.getId());
					pagoautoOriginal.setVersionRow(pagoautoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPagoAuto(Boolean esParaCancelar) throws Exception {
		pagoautosAux=new ArrayList<PagoAuto>();
		pagoautoAux=new PagoAuto();
		
		if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
					if(pagoautoAux.getId()<0) {
						pagoautosAux.add(pagoautoAux);
					}		
				}
				this.iIdNuevoPagoAuto=0L;
				this.pagoautoLogic.getPagoAutos().removeAll(pagoautosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PagoAuto pagoautoAux:this.pagoautos) {
					if(pagoautoAux.getId()<0) {
						pagoautosAux.add(pagoautoAux);
					}		
				}
				this.iIdNuevoPagoAuto=0L;
				this.pagoautos.removeAll(pagoautosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPagoAuto 
					&& this.pagoautoLogic.getPagoAutos().size()>0
					) {
					pagoautoAux=this.pagoautoLogic.getPagoAutos().get(this.pagoautoLogic.getPagoAutos().size() - 1);
				
					if(pagoautoAux.getId()<0) {
						this.pagoautoLogic.getPagoAutos().remove(pagoautoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPagoAuto && this.pagoautos.size()>0) {
					pagoautoAux=this.pagoautos.get(this.pagoautos.size() - 1);
				
					if(pagoautoAux.getId()<0) {
						this.pagoautos.remove(pagoautoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPagoAuto(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(pagoauto.getId()<0) {
				this.pagoautoLogic.getPagoAutos().remove(this.pagoauto);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(pagoauto.getId()<0) {
				this.pagoautos.remove(this.pagoauto);
			}
		}			
	}
	
	public void setEstadosInicialesPagoAuto(List<PagoAuto> pagoautosAux) throws Exception {
		PagoAutoConstantesFunciones.setEstadosInicialesPagoAuto(pagoautosAux);
	}
	
	public void setEstadosInicialesPagoAuto(PagoAuto pagoautoAux) throws Exception {
		PagoAutoConstantesFunciones.setEstadosInicialesPagoAuto(pagoautoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPagoAutoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPagoAutoActual()) {
				if(!this.isEsNuevoPagoAuto) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPagoAuto=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPagoAutoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Pago Auto ?", "MANTENIMIENTO DE Pago Auto", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PagoAuto pagoauto) throws Exception {
		PagoAutoConstantesFunciones.seleccionarAsignar(this.pagoauto,pagoauto);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPagoAuto=this.isPermisoActualizarOriginalPagoAuto;
			
			
			this.seleccionarAsignar(pagoauto);
			
			

			idClienteActual=pagoauto.getid_cliente();
			this.seleccionarClienteActual();

			idAsientoContableActual=pagoauto.getid_asiento_contable();
			this.seleccionarAsientoContableActual();

			idFacturaActual=pagoauto.getid_factura();
			this.seleccionarFacturaActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PagoAutoConstantesFunciones.quitarEspaciosPagoAuto(this.pagoauto,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPagoAuto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.pagoautoSessionBean.setsFuncionBusquedaRapida(this.pagoautoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPagoAuto) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPagoAuto(esParaCancelar);				
				this.cancelarNuevoPagoAuto(esParaCancelar);								
			}
			
			this.pagoauto=new PagoAuto();
			
			this.inicializarPagoAuto();
			
			this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPagoAuto() throws Exception {
		try {
			PagoAutoConstantesFunciones.inicializarPagoAuto(this.pagoauto);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.pagoautoLogic.getPagoAutos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePagoAutos(String sAccionBusqueda,List<PagoAuto> pagoautosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PagoAuto"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PagoAutoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PagoAutoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PagoAuto"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Pago Autos");		
		parameters.put("busquedapor", PagoAutoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePagoAuto=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PagoAutoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PagoAutoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePagoAuto=new JRBeanArrayDataSource(PagoAutoJInternalFrame.TraerPagoAutoBeans(pagoautosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePagoAuto);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PagoAutoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PagoAutoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PagoAutoBean.TraerPagoAutoBeans(pagoautosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPagoAutoActionPerformed(null);
					//this.generarExcelReportePagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPagoAutos(sAccionBusqueda,sTipoArchivoReporte,pagoautosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePagoAutos(String sAccionBusqueda,String sTipoArchivoReporte,List<PagoAuto> pagoautosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PagoAutos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPagoAuto("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PagoAuto pagoauto : pagoautosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PagoAutoConstantesFunciones.generarExcelReporteDataPagoAuto("NORMAL",row,workbook,pagoauto,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPagoAuto(String sTipo,Row row,Workbook workbook) {
		
		PagoAutoConstantesFunciones.generarExcelReporteHeaderPagoAuto(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPagoAutos(String sAccionBusqueda,String sTipoArchivoReporte,List<PagoAuto> pagoautosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PagoAutos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PagoAuto pagoauto : pagoautosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PagoAutoConstantesFunciones.getPagoAutoDescripcion(pagoauto));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getcentroactividad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getdetalleprove_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getcuentabanco_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getestadopagoauto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getnumero_factura());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getfecha_vencimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_FECHACORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHACORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getfecha_corte());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getvalor_por_pagar());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getvalor_cancelado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(pagoauto.getesta_autorizado()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PagoAutoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PagoAutoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pagoauto.getdescripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPagoAutos(String sAccionBusqueda,String sTipoArchivoReporte,List<PagoAuto> pagoautosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PagoAuto> pagoautosRespaldo=null;
		
		classes=PagoAutoConstantesFunciones.getClassesRelationshipsOfPagoAuto(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.pagoautoLogic.setDatosCliente(this.datosCliente);
		this.pagoautoLogic.setDatosDeep(this.datosDeep);
		this.pagoautoLogic.setIsConDeep(true);
		
		pagoautosRespaldo=this.pagoautoLogic.getPagoAutos();
		
		this.pagoautoLogic.setPagoAutos(pagoautosParaReportes);	
		this.pagoautoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		pagoautosParaReportes=this.pagoautoLogic.getPagoAutos();
		this.pagoautoLogic.setPagoAutos(pagoautosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PagoAutos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPagoAuto("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PagoAuto pagoauto : pagoautosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPagoAuto("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PagoAutoConstantesFunciones.generarExcelReporteDataPagoAuto("NORMAL",row,workbook,pagoauto,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PagoAutoConstantesFunciones.getPagoAutoDescripcion(pagoauto));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPagoAuto.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPagoAuto() throws Exception {		
		this.startProcessPagoAuto(true);
	}
	
	public void startProcessPagoAuto(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPagoAuto ,this.jPanelParametrosReportesPagoAuto, this.jScrollPanelDatosPagoAuto,this.jPanelPaginacionPagoAuto, this.jScrollPanelDatosEdicionPagoAuto, this.jPanelAccionesPagoAuto,this.jPanelAccionesFormularioPagoAuto,this.jmenuBarPagoAuto,this.jmenuBarDetallePagoAuto,this.jTtoolBarPagoAuto,this.jTtoolBarDetallePagoAuto);		
		
		final JTabbedPane jTabbedPaneBusquedasPagoAuto=this.jTabbedPaneBusquedasPagoAuto; 
		
		final JPanel jPanelParametrosReportesPagoAuto=this.jPanelParametrosReportesPagoAuto;
		//final JScrollPane jScrollPanelDatosPagoAuto=this.jScrollPanelDatosPagoAuto;
		final JTable jTableDatosPagoAuto=this.jTableDatosPagoAuto;		
		final JPanel jPanelPaginacionPagoAuto=this.jPanelPaginacionPagoAuto;
		//final JScrollPane jScrollPanelDatosEdicionPagoAuto=this.jScrollPanelDatosEdicionPagoAuto;
		final JPanel jPanelAccionesPagoAuto=this.jPanelAccionesPagoAuto;
		
		JPanel jPanelCamposAuxiliarPagoAuto=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPagoAuto=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			jPanelCamposAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jPanelCamposPagoAuto;
			jPanelAccionesFormularioAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jPanelAccionesFormularioPagoAuto;
		}
		
		final JPanel jPanelCamposPagoAuto=jPanelCamposAuxiliarPagoAuto;
		final JPanel jPanelAccionesFormularioPagoAuto=jPanelAccionesFormularioAuxiliarPagoAuto;
		
		
		final JMenuBar jmenuBarPagoAuto=this.jmenuBarPagoAuto;
		final JToolBar jTtoolBarPagoAuto=this.jTtoolBarPagoAuto;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPagoAuto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPagoAuto=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			jmenuBarDetalleAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jmenuBarDetallePagoAuto;
			jTtoolBarDetalleAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jTtoolBarDetallePagoAuto;
		}
		
		final JMenuBar jmenuBarDetallePagoAuto=jmenuBarDetalleAuxiliarPagoAuto;
		final JToolBar jTtoolBarDetallePagoAuto=jTtoolBarDetalleAuxiliarPagoAuto;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPagoAuto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPagoAuto;
			processRunnable.jTableDatos=jTableDatosPagoAuto;
			processRunnable.jPanelCampos=jPanelCamposPagoAuto;
			processRunnable.jPanelPaginacion=jPanelPaginacionPagoAuto;
			processRunnable.jPanelAcciones=jPanelAccionesPagoAuto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPagoAuto;
			
			
			processRunnable.jmenuBar=jmenuBarPagoAuto;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePagoAuto;
			processRunnable.jTtoolBar=jTtoolBarPagoAuto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePagoAuto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPagoAuto ,jPanelParametrosReportesPagoAuto,jTableDatosPagoAuto, /*jScrollPanelDatosPagoAuto,*/jPanelCamposPagoAuto,jPanelPaginacionPagoAuto, /*jScrollPanelDatosEdicionPagoAuto,*/ jPanelAccionesPagoAuto,jPanelAccionesFormularioPagoAuto,jmenuBarPagoAuto,jmenuBarDetallePagoAuto,jTtoolBarPagoAuto,jTtoolBarDetallePagoAuto);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPagoAuto ,jPanelParametrosReportesPagoAuto, jScrollPanelDatosPagoAuto,jPanelPaginacionPagoAuto, jScrollPanelDatosEdicionPagoAuto, jPanelAccionesPagoAuto,jPanelAccionesFormularioPagoAuto,jmenuBarPagoAuto,jmenuBarDetallePagoAuto,jTtoolBarPagoAuto,jTtoolBarDetallePagoAuto);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPagoAuto() {// throws Exception 
		this.finishProcessPagoAuto(true);
	}
	
	public void finishProcessPagoAuto(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPagoAuto ,this.jPanelParametrosReportesPagoAuto, this.jScrollPanelDatosPagoAuto,this.jPanelPaginacionPagoAuto, this.jScrollPanelDatosEdicionPagoAuto, this.jPanelAccionesPagoAuto,this.jPanelAccionesFormularioPagoAuto,this.jmenuBarPagoAuto,this.jmenuBarDetallePagoAuto,this.jTtoolBarPagoAuto,this.jTtoolBarDetallePagoAuto);		
		
		final JTabbedPane jTabbedPaneBusquedasPagoAuto=this.jTabbedPaneBusquedasPagoAuto; 
		
		final JPanel jPanelParametrosReportesPagoAuto=this.jPanelParametrosReportesPagoAuto;
		//final JScrollPane jScrollPanelDatosPagoAuto=this.jScrollPanelDatosPagoAuto;
		final JTable jTableDatosPagoAuto=this.jTableDatosPagoAuto;		
		final JPanel jPanelPaginacionPagoAuto=this.jPanelPaginacionPagoAuto;
		//final JScrollPane jScrollPanelDatosEdicionPagoAuto=this.jScrollPanelDatosEdicionPagoAuto;
		final JPanel jPanelAccionesPagoAuto=this.jPanelAccionesPagoAuto;
		
		JPanel jPanelCamposAuxiliarPagoAuto=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPagoAuto=new JPanel();
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			jPanelCamposAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jPanelCamposPagoAuto;
			jPanelAccionesFormularioAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jPanelAccionesFormularioPagoAuto;
		}
		
		final JPanel jPanelCamposPagoAuto=jPanelCamposAuxiliarPagoAuto;
		final JPanel jPanelAccionesFormularioPagoAuto=jPanelAccionesFormularioAuxiliarPagoAuto;
		
		
		final JMenuBar jmenuBarPagoAuto=this.jmenuBarPagoAuto;		
		final JToolBar jTtoolBarPagoAuto=this.jTtoolBarPagoAuto;
				
		JMenuBar jmenuBarDetalleAuxiliarPagoAuto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPagoAuto=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			jmenuBarDetalleAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jmenuBarDetallePagoAuto;
			jTtoolBarDetalleAuxiliarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jTtoolBarDetallePagoAuto;		
		}
		
		final JMenuBar jmenuBarDetallePagoAuto=jmenuBarDetalleAuxiliarPagoAuto;
		final JToolBar jTtoolBarDetallePagoAuto=jTtoolBarDetalleAuxiliarPagoAuto;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPagoAuto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPagoAuto;
			processRunnable.jTableDatos=jTableDatosPagoAuto;
			processRunnable.jPanelCampos=jPanelCamposPagoAuto;
			processRunnable.jPanelPaginacion=jPanelPaginacionPagoAuto;
			processRunnable.jPanelAcciones=jPanelAccionesPagoAuto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPagoAuto;
			
			
			processRunnable.jmenuBar=jmenuBarPagoAuto;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePagoAuto;
			processRunnable.jTtoolBar=jTtoolBarPagoAuto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePagoAuto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPagoAuto ,jPanelParametrosReportesPagoAuto, jTableDatosPagoAuto,/*jScrollPanelDatosPagoAuto,*/jPanelCamposPagoAuto,jPanelPaginacionPagoAuto, /*jScrollPanelDatosEdicionPagoAuto,*/ jPanelAccionesPagoAuto,jPanelAccionesFormularioPagoAuto,jmenuBarPagoAuto,jmenuBarDetallePagoAuto,jTtoolBarPagoAuto,jTtoolBarDetallePagoAuto));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPagoAuto(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPagoAuto(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPagoAuto(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPagoAuto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPagoAuto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePagoAuto,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPagoAuto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPagoAuto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePagoAuto,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.pagoautoConstantesFunciones.getsFinalQueryPagoAuto();
		String  finalQueryPaginacionTodos=this.pagoautoConstantesFunciones.getsFinalQueryPagoAuto();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PagoAutoConstantesFunciones.getArrayColumnasGlobalesNoPagoAuto(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PagoAutoConstantesFunciones.getArrayColumnasGlobalesPagoAuto(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PagoAutoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.pagoautosEliminados= new ArrayList<PagoAuto>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPagoAuto();
		
				///*PagoAutoSessionBean*/this.pagoautoSessionBean=new PagoAutoSessionBean();
			
			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PagoAutoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PagoAutoConstantesFunciones.getClassesForeignKeysOfPagoAuto(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/pagoauto."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			pagoautosAux= new ArrayList<PagoAuto>();
			
				
			pagoautoLogic.setDatosCliente(this.datosCliente);
			pagoautoLogic.setDatosDeep(this.datosDeep);
			pagoautoLogic.setIsConDeep(true);
			
			
			pagoautoLogic.getPagoAutoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					pagoautoLogic.getTodosPagoAutos(finalQueryGlobal,pagination);
					
					//pagoautoLogic.getTodosPagoAutosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(pagoautoLogic.getPagoAutos()==null|| pagoautoLogic.getPagoAutos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pagoautosAux= new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautoLogic.getPagoAutos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux= new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pagoautoLogic.getTodosPagoAutos(finalQueryGlobal+"",this.pagination);												
							
							//pagoautoLogic.getTodosPagoAutosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePagoAutos("Todos",pagoautoLogic.getPagoAutos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());					
							pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPagoAuto=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPagoAuto=this.idActual;
				
				} else if(this.idPagoAutoActual!=null && this.idPagoAutoActual!=0L) {
					idPagoAuto=idPagoAutoActual;
				}
				
					
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndicePorId(idPagoAuto);
				
				this.pagoautos=new ArrayList<PagoAuto>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					pagoautoLogic.getEntity(idPagoAuto);
					
					//pagoautoLogic.getEntityWithConnection(idPagoAuto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
					pagoautoLogic.getPagoAutos().add(pagoautoLogic.getPagoAuto());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoautos=new ArrayList<PagoAuto>();
					this.pagoautos.add(pagoauto);
				}
				
				if(pagoautoLogic.getPagoAuto()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdAsientoContable",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdAsientoContable",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroActividad")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdCentroActividad(finalQueryGlobal,pagination,id_centro_actividadFK_IdCentroActividad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdCentroActividad(finalQueryGlobal,pagination,id_centro_actividadFK_IdCentroActividad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdCentroActividad",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdCentroActividad",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdCentroCosto",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdCentroCosto",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdCliente",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdCliente",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaBanco")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdCuentaBanco(finalQueryGlobal,pagination,id_cuenta_bancoFK_IdCuentaBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdCuentaBanco(finalQueryGlobal,pagination,id_cuenta_bancoFK_IdCuentaBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdCuentaBanco",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdCuentaBanco",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdDetalleProve")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdDetalleProve(id_detalle_proveFK_IdDetalleProve);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdDetalleProve(finalQueryGlobal,pagination,id_detalle_proveFK_IdDetalleProve);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdDetalleProve(id_detalle_proveFK_IdDetalleProve);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdDetalleProve(id_detalle_proveFK_IdDetalleProve);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdDetalleProve(finalQueryGlobal,pagination,id_detalle_proveFK_IdDetalleProve);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdDetalleProve(id_detalle_proveFK_IdDetalleProve);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdDetalleProve(id_detalle_proveFK_IdDetalleProve);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdDetalleProve",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdDetalleProve",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdEjercicio",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdEjercicio",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdEmpresa",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdEmpresa",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPagoAuto")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEstadoPagoAuto(id_estado_pago_autoFK_IdEstadoPagoAuto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdEstadoPagoAuto(finalQueryGlobal,pagination,id_estado_pago_autoFK_IdEstadoPagoAuto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEstadoPagoAuto(id_estado_pago_autoFK_IdEstadoPagoAuto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEstadoPagoAuto(id_estado_pago_autoFK_IdEstadoPagoAuto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdEstadoPagoAuto(finalQueryGlobal,pagination,id_estado_pago_autoFK_IdEstadoPagoAuto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEstadoPagoAuto(id_estado_pago_autoFK_IdEstadoPagoAuto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdEstadoPagoAuto(id_estado_pago_autoFK_IdEstadoPagoAuto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdEstadoPagoAuto",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdEstadoPagoAuto",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdFactura",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdFactura",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdSucursal",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdSucursal",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pagoautoLogic.getPagoAutosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pagoautoLogic.getPagoAutos()==null||pagoautoLogic.getPagoAutos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pagoautos==null|| pagoautos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautosAux=new ArrayList<PagoAuto>();
						pagoautosAux.addAll(pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautosAux=new ArrayList<PagoAuto>();
							pagoautosAux.addAll(pagoautos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pagoautoLogic.getPagoAutosFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PagoAutoConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePagoAutos("FK_IdTransaccion",pagoautoLogic.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePagoAutos("FK_IdTransaccion",pagoautos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoLogic.setPagoAutos(new ArrayList<PagoAuto>());
						pagoautoLogic.getPagoAutos().addAll(pagoautosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautos=new ArrayList<PagoAuto>();
							pagoautos.addAll(pagoautosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPagoAuto();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPagoAuto();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pagoautoLogic.getPagoAutos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pagoautos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pagoautoLogic.getPagoAutos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pagoautos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PagoAuto pagoauto) {
		Boolean permite=true;
		
		if(this.pagoauto.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PagoAutoConstantesFunciones.getOrderByListaPagoAuto();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PagoAutoConstantesFunciones.getOrderByListaPagoAuto();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PagoAuto pagoauto:pagoautoLogic.getPagoAutos()) {
				if(pagoauto.getsType().equals(Constantes2.S_TOTALES)) {
					pagoautoTotales=pagoauto;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PagoAuto pagoauto:this.pagoautos) {
				if(pagoauto.getsType().equals(Constantes2.S_TOTALES)) {
					pagoautoTotales=pagoauto;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.pagoautoAux=new PagoAuto();
			this.pagoautoAux.setsType(Constantes2.S_TOTALES);
			this.pagoautoAux.setIsNew(false);
			this.pagoautoAux.setIsChanged(false);
			this.pagoautoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PagoAutoConstantesFunciones.TotalizarValoresFilaPagoAuto(this.pagoautoLogic.getPagoAutos(),this.pagoautoAux);
				
				this.pagoautoLogic.getPagoAutos().add(this.pagoautoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PagoAutoConstantesFunciones.TotalizarValoresFilaPagoAuto(this.pagoautos,this.pagoautoAux);
				
				this.pagoautos.add(this.pagoautoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		pagoautoTotales=new PagoAuto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pagoautoLogic.getPagoAutos().remove(pagoautoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pagoautos.remove(pagoautoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		pagoautoTotales=new PagoAuto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PagoAuto pagoauto:pagoautoLogic.getPagoAutos()) {
				if(pagoauto.getsType().equals(Constantes2.S_TOTALES)) {
					pagoautoTotales=pagoauto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PagoAutoConstantesFunciones.TotalizarValoresFilaPagoAuto(this.pagoautoLogic.getPagoAutos(),pagoautoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PagoAuto pagoauto:this.pagoautos) {
				if(pagoauto.getsType().equals(Constantes2.S_TOTALES)) {
					pagoautoTotales=pagoauto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PagoAutoConstantesFunciones.TotalizarValoresFilaPagoAuto(this.pagoautos,pagoautoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPagoAutosFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdCentroActividad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroActividad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdCuentaBanco()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaBanco";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdDetalleProve()throws Exception {
		try {
			sAccionBusqueda="FK_IdDetalleProve";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdEstadoPagoAuto()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPagoAuto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPagoAutosFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPagoAutosFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdCentroActividad(String sFinalQuery,Long id_centro_actividad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdCentroActividad(sFinalQuery,this.pagination,id_centro_actividad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdCuentaBanco(String sFinalQuery,Long id_cuenta_banco)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdCuentaBanco(sFinalQuery,this.pagination,id_cuenta_banco);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdDetalleProve(String sFinalQuery,Long id_detalle_prove)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdDetalleProve(sFinalQuery,this.pagination,id_detalle_prove);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdEstadoPagoAuto(String sFinalQuery,Long id_estado_pago_auto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdEstadoPagoAuto(sFinalQuery,this.pagination,id_estado_pago_auto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdFactura(String sFinalQuery,Long id_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdFactura(sFinalQuery,this.pagination,id_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPagoAutosFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLogic.getPagoAutosFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPagoAuto() {
		this.isPermisoTodoPagoAuto=false;
		this.isPermisoNuevoPagoAuto=false;
		this.isPermisoActualizarPagoAuto=false;
		this.isPermisoActualizarOriginalPagoAuto=false;
		this.isPermisoEliminarPagoAuto=false;
		this.isPermisoGuardarCambiosPagoAuto=false;
		this.isPermisoConsultaPagoAuto=false;
		this.isPermisoBusquedaPagoAuto=false;
		this.isPermisoReportePagoAuto=false;		
		this.isPermisoOrdenPagoAuto=false;		
		this.isPermisoPaginacionMedioPagoAuto=false;		
		this.isPermisoPaginacionAltoPagoAuto=false;
		this.isPermisoPaginacionTodoPagoAuto=false;
		this.isPermisoCopiarPagoAuto=false;		
		this.isPermisoVerFormPagoAuto=false;		
		this.isPermisoDuplicarPagoAuto=false;		
		this.isPermisoOrdenPagoAuto=false;		
	}
	
	public void setPermisosUsuarioPagoAuto(Boolean isPermiso) {
		this.isPermisoTodoPagoAuto=isPermiso;
		this.isPermisoNuevoPagoAuto=isPermiso;
		this.isPermisoActualizarPagoAuto=isPermiso;
		this.isPermisoActualizarOriginalPagoAuto=isPermiso;
		this.isPermisoEliminarPagoAuto=isPermiso;
		this.isPermisoGuardarCambiosPagoAuto=isPermiso;
		this.isPermisoConsultaPagoAuto=isPermiso;
		this.isPermisoBusquedaPagoAuto=isPermiso;
		this.isPermisoReportePagoAuto=isPermiso;
		this.isPermisoOrdenPagoAuto=isPermiso;		
		this.isPermisoPaginacionMedioPagoAuto=isPermiso;		
		this.isPermisoPaginacionAltoPagoAuto=isPermiso;		
		this.isPermisoPaginacionTodoPagoAuto=isPermiso;		
		this.isPermisoCopiarPagoAuto=isPermiso;		
		this.isPermisoVerFormPagoAuto=isPermiso;		
		this.isPermisoDuplicarPagoAuto=isPermiso;
		this.isPermisoOrdenPagoAuto=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPagoAuto(Boolean isPermiso) {
		//this.isPermisoTodoPagoAuto=isPermiso;
		this.isPermisoNuevoPagoAuto=isPermiso;
		this.isPermisoActualizarPagoAuto=isPermiso;
		this.isPermisoActualizarOriginalPagoAuto=isPermiso;
		this.isPermisoEliminarPagoAuto=isPermiso;
		this.isPermisoGuardarCambiosPagoAuto=isPermiso;
		//this.isPermisoConsultaPagoAuto=isPermiso;
		//this.isPermisoBusquedaPagoAuto=isPermiso;
		//this.isPermisoReportePagoAuto=isPermiso;
		//this.isPermisoOrdenPagoAuto=isPermiso;		
		//this.isPermisoPaginacionMedioPagoAuto=isPermiso;		
		//this.isPermisoPaginacionAltoPagoAuto=isPermiso;		
		//this.isPermisoPaginacionTodoPagoAuto=isPermiso;		
		//this.isPermisoCopiarPagoAuto=isPermiso;		
		//this.isPermisoDuplicarPagoAuto=isPermiso;
		//this.isPermisoOrdenPagoAuto=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPagoAutoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(PagoAutoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPagoAuto(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPagoAutoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioPagoAutoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPagoAutoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPagoAutoClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioPagoAuto() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PagoAutoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PagoAutoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPagoAuto=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPagoAuto=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPagoAuto=this.isPermisoActualizarPagoAuto;
			this.isPermisoEliminarPagoAuto=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPagoAuto=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPagoAuto=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPagoAuto=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPagoAuto=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePagoAuto=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPagoAuto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPagoAuto=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPagoAuto=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPagoAuto=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPagoAuto=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPagoAuto=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPagoAuto=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPagoAuto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPagoAuto.setToolTipText(this.jTableDatosPagoAuto.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPagoAuto(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPagoAuto(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PagoAutoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PagoAutoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPagoAuto() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPagoAutoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.centroactividadsForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.detalleprovesForeignKey=new ArrayList();
				this.cuentabancosForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.estadopagoautosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPagoAutoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PagoAutoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPagoAutoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyDetalleProveListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPagoAutoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroActividadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDetalleProveListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.detalleprovesForeignKey==null||this.detalleprovesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=DetalleProveConstantesFunciones.getArrayColumnasGlobalesDetalleProve(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetalleProveConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=DetalleProveConstantesFunciones.SFINALQUERY;

				this.cargarCombosDetalleProvesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBancoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentabancosForeignKey==null||this.cuentabancosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaBancoConstantesFunciones.getArrayColumnasGlobalesCuentaBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaBancoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaBancosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPagoAutoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopagoautosForeignKey==null||this.estadopagoautosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPagoAutoConstantesFunciones.getArrayColumnasGlobalesEstadoPagoAuto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPagoAutoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPagoAutoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPagoAutosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPagoAutoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PagoAutoParameterReturnGeneral pagoautoReturnGeneral=new PagoAutoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_empresaPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_empresaPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_sucursalPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_sucursalPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_ejercicioPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_ejercicioPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_clientePagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_clientePagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_asiento_contablePagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_asiento_contablePagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_centro_costoPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_centro_costoPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalCentroActividad="";

				if(((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_centro_actividadPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_centro_actividadPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroActividad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroActividad=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroActividad, "");
						finalQueryGlobalCentroActividad+=CentroActividadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroActividad=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidCentroActividadActual();
					}
				} else {
					finalQueryGlobalCentroActividad="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_facturaPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_facturaPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalDetalleProve="";

				if(((this.detalleprovesForeignKey==null||this.detalleprovesForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_detalle_provePagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_detalle_provePagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleProve()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=DetalleProveConstantesFunciones.getArrayColumnasGlobalesDetalleProve(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalDetalleProve=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetalleProveConstantesFunciones.TABLENAME);

						finalQueryGlobalDetalleProve=Funciones.GetFinalQueryAppend(finalQueryGlobalDetalleProve, "");
						finalQueryGlobalDetalleProve+=DetalleProveConstantesFunciones.SFINALQUERY;

						//this.cargarCombosDetalleProvesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalDetalleProve=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidDetalleProveActual();
					}
				} else {
					finalQueryGlobalDetalleProve="NONE";
				}


				String finalQueryGlobalCuentaBanco="";

				if(((this.cuentabancosForeignKey==null||this.cuentabancosForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_cuenta_bancoPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_cuenta_bancoPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CuentaBancoConstantesFunciones.getArrayColumnasGlobalesCuentaBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaBanco=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaBanco=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaBanco, "");
						finalQueryGlobalCuentaBanco+=CuentaBancoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaBancosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaBanco=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidCuentaBancoActual();
					}
				} else {
					finalQueryGlobalCuentaBanco="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_transaccionPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_transaccionPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalEstadoPagoAuto="";

				if(((this.estadopagoautosForeignKey==null||this.estadopagoautosForeignKey.size()<=0) && this.pagoautoConstantesFunciones.cargarid_estado_pago_autoPagoAuto)
					 || (this.esRecargarFks && this.pagoautoConstantesFunciones.cargarid_estado_pago_autoPagoAuto)) {

					if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPagoAuto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPagoAutoConstantesFunciones.getArrayColumnasGlobalesEstadoPagoAuto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPagoAuto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPagoAutoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPagoAuto=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPagoAuto, "");
						finalQueryGlobalEstadoPagoAuto+=EstadoPagoAutoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPagoAutosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPagoAuto=" WHERE " + ConstantesSql.ID + "="+pagoautoSessionBean.getlidEstadoPagoAutoActual();
					}
				} else {
					finalQueryGlobalEstadoPagoAuto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				pagoautoReturnGeneral=pagoautoLogic.cargarCombosLoteForeignKeyPagoAuto(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalCliente,finalQueryGlobalAsientoContable,finalQueryGlobalCentroCosto,finalQueryGlobalCentroActividad,finalQueryGlobalFactura,finalQueryGlobalDetalleProve,finalQueryGlobalCuentaBanco,finalQueryGlobalTransaccion,finalQueryGlobalEstadoPagoAuto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=pagoautoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=pagoautoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=pagoautoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=pagoautoReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=pagoautoReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=pagoautoReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalCentroActividad.equals("NONE")) {
				this.centroactividadsForeignKey=pagoautoReturnGeneral.getcentroactividadsForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=pagoautoReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalDetalleProve.equals("NONE")) {
				this.detalleprovesForeignKey=pagoautoReturnGeneral.getdetalleprovesForeignKey();
			}

			if(!finalQueryGlobalCuentaBanco.equals("NONE")) {
				this.cuentabancosForeignKey=pagoautoReturnGeneral.getcuentabancosForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=pagoautoReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalEstadoPagoAuto.equals("NONE")) {
				this.estadopagoautosForeignKey=pagoautoReturnGeneral.getestadopagoautosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPagoAuto()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyCentroActividad();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyDetalleProve();
			this.addItemDefectoCombosForeignKeyCuentaBanco();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyEstadoPagoAuto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.pagoautoSessionBean==null) {
				this.pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroActividad()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				CentroActividad centroactividad=new CentroActividad();
				CentroActividadConstantesFunciones.setCentroActividadDescripcion(centroactividad,Constantes.SMENSAJE_ESCOJA_OPCION);
				centroactividad.setId(null);

				if(!CentroActividadConstantesFunciones.ExisteEnLista(this.centroactividadsForeignKey,centroactividad,true)) {

					this.centroactividadsForeignKey.add(0,centroactividad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyDetalleProve()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleProve()) {
				DetalleProve detalleprove=new DetalleProve();
				DetalleProveConstantesFunciones.setDetalleProveDescripcion(detalleprove,Constantes.SMENSAJE_ESCOJA_OPCION);
				detalleprove.setId(null);

				if(!DetalleProveConstantesFunciones.ExisteEnLista(this.detalleprovesForeignKey,detalleprove,true)) {

					this.detalleprovesForeignKey.add(0,detalleprove);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaBanco()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {
				CuentaBanco cuentabanco=new CuentaBanco();
				CuentaBancoConstantesFunciones.setCuentaBancoDescripcion(cuentabanco,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentabanco.setId(null);

				if(!CuentaBancoConstantesFunciones.ExisteEnLista(this.cuentabancosForeignKey,cuentabanco,true)) {

					this.cuentabancosForeignKey.add(0,cuentabanco);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPagoAuto()throws Exception {
		try {

			if(!this.pagoautoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPagoAuto()) {
				EstadoPagoAuto estadopagoauto=new EstadoPagoAuto();
				EstadoPagoAutoConstantesFunciones.setEstadoPagoAutoDescripcion(estadopagoauto,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopagoauto.setId(null);

				if(!EstadoPagoAutoConstantesFunciones.ExisteEnLista(this.estadopagoautosForeignKey,estadopagoauto,true)) {

					this.estadopagoautosForeignKey.add(0,estadopagoauto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPagoAuto()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPagoAuto(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPagoAuto()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
			
			
				this.pagoauto.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.pagoauto.setfecha_vencimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.pagoauto.setfecha_corte(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPagoAuto();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPagoAuto(PagoAuto pagoauto)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(pagoauto.getid_cliente(),false,"Formulario");
			this.setActualAsientoContableForeignKey(pagoauto.getid_asiento_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(pagoauto.getid_centro_costo(),false,"Formulario");
			this.setActualCentroActividadForeignKey(pagoauto.getid_centro_actividad(),false,"Formulario");
			this.setActualFacturaForeignKey(pagoauto.getid_factura(),false,"Formulario");
			this.setActualDetalleProveForeignKey(pagoauto.getid_detalle_prove(),false,"Formulario");
			this.setActualCuentaBancoForeignKey(pagoauto.getid_cuenta_banco(),false,"Formulario");
			this.setActualTransaccionForeignKey(pagoauto.getid_transaccion(),false,"Formulario");
			this.setActualEstadoPagoAutoForeignKey(pagoauto.getid_estado_pago_auto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPagoAuto(PagoAuto pagoauto,String sTipoEvento)throws Exception {	
		try {
			
			

				if(pagoauto.getCliente()!=null && !sTipoEvento.equals("id_clientePagoAuto")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(pagoauto.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(pagoauto.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contablePagoAuto")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(pagoauto.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				if(pagoauto.getFactura()!=null && !sTipoEvento.equals("id_facturaPagoAuto")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(pagoauto.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPagoAuto()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.pagoautoConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.pagoautoConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.pagoautoConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualCentroActividadForeignKey(this.pagoautoConstantesFunciones.getid_centro_actividad(),false,"Formulario");
			this.setActualFacturaForeignKey(this.pagoautoConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualDetalleProveForeignKey(this.pagoautoConstantesFunciones.getid_detalle_prove(),false,"Formulario");
			this.setActualCuentaBancoForeignKey(this.pagoautoConstantesFunciones.getid_cuenta_banco(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.pagoautoConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualEstadoPagoAutoForeignKey(this.pagoautoConstantesFunciones.getid_estado_pago_auto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPagoAuto()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPagoAuto!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.getSelectedItem();
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPagoAuto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPagoAuto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPagoAuto()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPagoAuto()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameCentroActividadsForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameDetalleProvesForeignKey("Todos");
			this.cargarCombosFrameCuentaBancosForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameEstadoPagoAutosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPagoAuto(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameDetalleProvesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaBancosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPagoAutosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPagoAuto()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.getItemCount()>0) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
























	
	

	public PagoAutoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PagoAutoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PagoAutoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.pagoautoSessionBean=new PagoAutoSessionBean(); 
		this.pagoautoConstantesFunciones=new PagoAutoConstantesFunciones(); 
		this.pagoautoBean=new PagoAuto();//(this.pagoautoConstantesFunciones); 		
		this.pagoautoReturnGeneral=new PagoAutoParameterReturnGeneral(); 
		
		this.pagoautoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.pagoautoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PagoAutoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PagoAutoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PagoAutoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPagoAuto(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.pagoautoConstantesFunciones=new PagoAutoConstantesFunciones(); 
			this.pagoautoBean=new PagoAuto();//this.pagoautoConstantesFunciones); 			
			this.pagoautoReturnGeneral=new PagoAutoParameterReturnGeneral(); 
		
			PagoAutoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Pago Auto Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.pagoauto=new PagoAuto();
			this.pagoautos = new ArrayList<PagoAuto>();
			this.pagoautosAux = new ArrayList<PagoAuto>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic=new PagoAutoLogic();
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			//this.pagoautoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.pagoautoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPagoAuto);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPagoAuto);	
					}
					
					if(this.jInternalFrameImportacionPagoAuto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPagoAuto);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPagoAuto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPagoAuto);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPagoAuto!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPagoAuto);
				this.jInternalFrameDetalleFormPagoAuto.setVisible(false);
				this.jInternalFrameDetalleFormPagoAuto.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPagoAuto);
					this.jInternalFrameReporteDinamicoPagoAuto.setVisible(false);
					this.jInternalFrameReporteDinamicoPagoAuto.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPagoAuto!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPagoAuto);
					this.jInternalFrameImportacionPagoAuto.setVisible(false);
					this.jInternalFrameImportacionPagoAuto.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPagoAuto!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPagoAuto);
					this.jInternalFrameOrderByPagoAuto.setVisible(false);
					this.jInternalFrameOrderByPagoAuto.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPagoAutoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PagoAutoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.pagoautoReturnGeneral=new PagoAutoParameterReturnGeneral();
			
			this.pagoautoParameterGeneral=new PagoAutoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.pagoautoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PagoAutoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PagoAutoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pagoautoSessionBean.getEsGuardarRelacionado(),this.pagoautoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PagoAutoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pagoautoSessionBean.getEsGuardarRelacionado(),this.pagoautoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaDuplicarPagoAuto=true;
			this.isVisibilidadCeldaCopiarPagoAuto=true;
			this.isVisibilidadCeldaVerFormPagoAuto=true;
			this.isVisibilidadCeldaOrdenPagoAuto=true;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=false;
			this.isVisibilidadCeldaGuardarPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			
			
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCentroActividad=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCuentaBanco=true;
			this.isVisibilidadFK_IdDetalleProve=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPagoAuto=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPagoAuto();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPagoAuto(false);
			
			this.setPermisosUsuarioPagoAuto();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pagoautoSessionBean.getEsGuardarRelacionado() 
				|| (this.pagoautoSessionBean.getEsGuardarRelacionado() && this.pagoautoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPagoAutoClasesRelacionadas();
			}
			
			if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPagoAutoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPagoAuto();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPagoAuto();
			}
			
			if(!this.isPermisoBusquedaPagoAuto) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPagoAuto.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPagoAuto,this.isPermisoPaginacionMedioPagoAuto,this.isPermisoPaginacionTodoPagoAuto);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PagoAutoConstantesFunciones.getTiposSeleccionarPagoAuto());
				
				this.tiposColumnasSelect=PagoAutoConstantesFunciones.getTiposSeleccionarPagoAuto(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPagoAuto();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPagoAuto(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPagoAuto(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPagoAuto() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.clienteLogic=new ClienteLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.centroactividadLogic=new CentroActividadLogic();
			this.facturaLogic=new FacturaLogic();
			this.detalleproveLogic=new DetalleProveLogic();
			this.cuentabancoLogic=new CuentaBancoLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.estadopagoautoLogic=new EstadoPagoAutoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				pagoautoImplementable= (PagoAutoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PagoAutoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				pagoautoImplementableHome= (PagoAutoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PagoAutoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.pagoautos= new ArrayList<PagoAuto>();
			this.pagoautosEliminados= new ArrayList<PagoAuto>();
						
			this.isEsNuevoPagoAuto=false;
			this.esParaAccionDesdeFormularioPagoAuto=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idAsientoContableActual=0L;
			this.idFacturaActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.detalleprovesForeignKey=new ArrayList<DetalleProve>() ;
			this.cuentabancosForeignKey=new ArrayList<CuentaBanco>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.estadopagoautosForeignKey=new ArrayList<EstadoPagoAuto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPagoAuto(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPagoAuto();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PagoAutoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PagoAutoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPagoAuto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPagoAuto(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPagoAuto();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPagoAuto();
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPagoAuto.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPagoAuto(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PagoAuto: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPagoAuto() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPagoAuto")) {
				iIndex=this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPagoAuto();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyPagoAuto(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPagoAuto(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPagoAuto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPagoAutoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPagoAuto();
		
		this.cargarCombosFrameForeignKeyPagoAuto();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPagoAuto();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPagoAuto();
		}
	}
	
	

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroActividad(this.centroactividadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDetalleProve(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyDetalleProveListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyDetalleProve();
				this.cargarCombosFrameDetalleProvesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaDetalleProve(this.detalleprovesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBanco(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaBanco();
				this.cargarCombosFrameCuentaBancosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaBanco(this.cuentabancosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPagoAuto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPagoAutoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPagoAuto();
				this.cargarCombosFrameEstadoPagoAutosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPagoAuto(this.estadopagoautosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPagoAutoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			
			if(jTableDatosPagoAuto.getRowCount()>=1) {
				jTableDatosPagoAuto.removeRowSelectionInterval(0, jTableDatosPagoAuto.getRowCount()-1);						
			}
			
			this.isEsNuevoPagoAuto=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPagoAuto(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPagoAuto(true);			
			//this.pagoauto=new PagoAuto();
			//this.pagoauto.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPagoAuto(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPagoAuto() ;
			
			if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePagoAuto(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.pagoauto);	
			this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);				
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PagoAuto: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPagoAutoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPagoAuto.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPagoAuto.getSelectedRows().length;			
			}
			
			pagoautosSeleccionados=this.getPagoAutosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPagoAuto--;			
				//PagoAuto pagoautoAux= new PagoAuto();			
				//pagoautoAux.setId(this.iIdNuevoPagoAuto);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PagoAuto pagoautoOrigen=new PagoAuto();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PagoAuto pagoautoOrigen : pagoautosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							pagoautoOrigen =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pagoautoOrigen =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPagoAuto();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.pagoauto.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPagoAuto(pagoautoOrigen,this.pagoauto,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pagoautoLogic.getPagoAutos().add(this.pagoautoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pagoautos.add(this.pagoautoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPagoAuto(false);
				
				this.jTableDatosPagoAuto.setRowSelectionInterval(this.getIndiceNuevoPagoAuto(), this.getIndiceNuevoPagoAuto());
				
				int iLastRow =  this.jTableDatosPagoAuto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPagoAuto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPagoAuto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPagoAuto(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();									
		
			PagoAuto pagoautoOrigen=new PagoAuto();
			PagoAuto pagoautoDestino=new PagoAuto();
				
			pagoautosSeleccionados=this.getPagoAutosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPagoAuto.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || pagoautosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPagoAuto.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoOrigen =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pagoautoOrigen =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pagoautoDestino =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pagoautoDestino =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				pagoautoOrigen =pagoautosSeleccionados.get(0);
				pagoautoDestino =pagoautosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPagoAuto(pagoautoOrigen,pagoautoDestino,true,false);
				
				pagoautoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pagoautoDestino,pagoautoLogic.getPagoAutos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pagoautoDestino,pagoautos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPagoAuto(false);
				
				//this.jTableDatosPagoAuto.setRowSelectionInterval(this.getIndiceNuevoPagoAuto(), this.getIndiceNuevoPagoAuto());
				
				int iLastRow =  this.jTableDatosPagoAuto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPagoAuto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPagoAuto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPagoAuto(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPagoAuto.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPagoAuto.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPagoAuto.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPagoAuto.setVisible(!isVisible);
			this.jPanelPaginacionPagoAuto.setVisible(!isVisible);
			this.jPanelAccionesPagoAuto.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePagoAuto();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPagoAuto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPagoAuto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPagoAuto();
			
			this.abrirFrameOrderByPagoAuto();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPagoAuto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePagoAuto(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPagoAuto);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPagoAuto.isMaximum()) {
					this.jInternalFrameDetalleFormPagoAuto.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPagoAuto.setSize(this.jInternalFrameDetalleFormPagoAuto.iWidthFormulario,this.jInternalFrameDetalleFormPagoAuto.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPagoAuto.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPagoAuto.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPagoAuto.isMaximum()) {
						this.jInternalFrameDetalleFormPagoAuto.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPagoAuto.jContentPaneDetallePagoAuto.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPagoAuto.jContentPaneDetallePagoAuto.getWidth(),PagoAutoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPagoAuto.jContentPaneDetallePagoAuto.getWidth(),PagoAutoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPagoAuto.jContentPaneDetallePagoAuto.getWidth(),PagoAutoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPagoAuto.setVisible(true);
	        this.jInternalFrameDetalleFormPagoAuto.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPagoAuto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPagoAuto==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPagoAuto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPagoAuto,false,this);
				} else {
					this.jInternalFrameOrderByPagoAuto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPagoAuto,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPagoAuto);
				this.jInternalFrameOrderByPagoAuto.setVisible(false);
				this.jInternalFrameOrderByPagoAuto.setSelected(false);
				
				this.jInternalFrameOrderByPagoAuto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPagoAuto"));
				
				this.inicializarActualizarBindingTablaOrderByPagoAuto();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPagoAuto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPagoAuto==null) {
				
				this.jInternalFrameImportacionPagoAuto=new ImportacionJInternalFrame(PagoAutoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPagoAuto);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPagoAuto);
				this.jInternalFrameImportacionPagoAuto.setVisible(false);
				this.jInternalFrameImportacionPagoAuto.setSelected(false);


				this.jInternalFrameImportacionPagoAuto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPagoAuto"));
				this.jInternalFrameImportacionPagoAuto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPagoAuto"));
				this.jInternalFrameImportacionPagoAuto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPagoAuto"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPagoAuto() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPagoAuto==null) {
				this.jInternalFrameReporteDinamicoPagoAuto=new ReporteDinamicoJInternalFrame(PagoAutoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPagoAuto);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPagoAuto);
				this.jInternalFrameReporteDinamicoPagoAuto.setVisible(false);
				this.jInternalFrameReporteDinamicoPagoAuto.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPagoAuto"));
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPagoAuto"));
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPagoAuto"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPagoAuto();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetallePagoAuto() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPagoAuto);
			
	       	this.jInternalFrameDetalleFormPagoAuto.setVisible(false);
	        this.jInternalFrameDetalleFormPagoAuto.setSelected(false);
			
			//this.jInternalFrameDetalleFormPagoAuto.dispose();
			//this.jInternalFrameDetalleFormPagoAuto=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPagoAuto() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPagoAuto.setVisible(true);
	        this.jInternalFrameReporteDinamicoPagoAuto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPagoAuto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPagoAuto.setVisible(true);
	        this.jInternalFrameImportacionPagoAuto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPagoAuto() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPagoAuto.setVisible(true);
	        this.jInternalFrameOrderByPagoAuto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPagoAuto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPagoAuto.setVisible(false);
	        this.jInternalFrameOrderByPagoAuto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPagoAuto() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPagoAuto.setVisible(false);
	        this.jInternalFrameReporteDinamicoPagoAuto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPagoAuto() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPagoAuto.setVisible(false);
	        this.jInternalFrameImportacionPagoAuto.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderPagoAuto.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPagoAuto(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPagoAuto(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPagoAuto(true);
			//this.isEsNuevoPagoAuto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPagoAuto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPagoAuto(false) ;
			
			if(pagoautoSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePagoAuto(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPagoAuto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPagoAutoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPagoAuto(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPagoAuto(true);
			//this.isEsNuevoPagoAuto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.pagoauto.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPagoAuto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPagoAuto(false) ;
			
			if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePagoAuto(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPagoAuto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.pagoautoConstantesFunciones.cargarid_clientePagoAuto) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPagoAuto(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.pagoautoConstantesFunciones.cargarid_asiento_contablePagoAuto) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPagoAuto(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
			
			if(sType.equals("Factura")) {
				if(!this.pagoautoConstantesFunciones.cargarid_facturaPagoAuto) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPagoAuto(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
				
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroActividad(List<CentroActividad> centroactividadsForeignKey)throws Exception{
		TableColumn tableColumnCentroActividad=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD));
		TableCellEditor tableCellEditorCentroActividad =tableColumnCentroActividad.getCellEditor();

		CentroActividadTableCell centroactividadTableCellFk=(CentroActividadTableCell)tableCellEditorCentroActividad;

		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.setcentroactividadsForeignKey(centroactividadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centroactividadTableCellFk.setRowActual(intSelectedRow);
			//centroactividadTableCellFk.setcentroactividadsForeignKeyActual(centroactividadsForeignKey);
		//}


		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.RecargarCentroActividadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaDetalleProve(List<DetalleProve> detalleprovesForeignKey)throws Exception{
		TableColumn tableColumnDetalleProve=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE));
		TableCellEditor tableCellEditorDetalleProve =tableColumnDetalleProve.getCellEditor();

		DetalleProveTableCell detalleproveTableCellFk=(DetalleProveTableCell)tableCellEditorDetalleProve;

		if(detalleproveTableCellFk!=null) {
			detalleproveTableCellFk.setdetalleprovesForeignKey(detalleprovesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//detalleproveTableCellFk.setRowActual(intSelectedRow);
			//detalleproveTableCellFk.setdetalleprovesForeignKeyActual(detalleprovesForeignKey);
		//}


		if(detalleproveTableCellFk!=null) {
			detalleproveTableCellFk.RecargarDetalleProvesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaBanco(List<CuentaBanco> cuentabancosForeignKey)throws Exception{
		TableColumn tableColumnCuentaBanco=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO));
		TableCellEditor tableCellEditorCuentaBanco =tableColumnCuentaBanco.getCellEditor();

		CuentaBancoTableCell cuentabancoTableCellFk=(CuentaBancoTableCell)tableCellEditorCuentaBanco;

		if(cuentabancoTableCellFk!=null) {
			cuentabancoTableCellFk.setcuentabancosForeignKey(cuentabancosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentabancoTableCellFk.setRowActual(intSelectedRow);
			//cuentabancoTableCellFk.setcuentabancosForeignKeyActual(cuentabancosForeignKey);
		//}


		if(cuentabancoTableCellFk!=null) {
			cuentabancoTableCellFk.RecargarCuentaBancosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPagoAuto(List<EstadoPagoAuto> estadopagoautosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPagoAuto=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO));
		TableCellEditor tableCellEditorEstadoPagoAuto =tableColumnEstadoPagoAuto.getCellEditor();

		EstadoPagoAutoTableCell estadopagoautoTableCellFk=(EstadoPagoAutoTableCell)tableCellEditorEstadoPagoAuto;

		if(estadopagoautoTableCellFk!=null) {
			estadopagoautoTableCellFk.setestadopagoautosForeignKey(estadopagoautosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopagoautoTableCellFk.setRowActual(intSelectedRow);
			//estadopagoautoTableCellFk.setestadopagoautosForeignKeyActual(estadopagoautosForeignKey);
		//}


		if(estadopagoautoTableCellFk!=null) {
			estadopagoautoTableCellFk.RecargarEstadoPagoAutosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPagoAuto(false);
			
			//if(!this.isEsNuevoPagoAuto) {								
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				
			}
			
			if(this.permiteMantenimiento(this.pagoauto)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPagoAuto=true;
					this.inicializarActualizarBindingTablaPagoAuto(false);
					this.isEsNuevoPagoAuto=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPagoAuto=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPagoAuto=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPagoAuto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPagoAuto(false);
				
				this.habilitarDeshabilitarControlesPagoAuto(false);
			
												
				
				if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePagoAuto();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPagoAutoActionPerformed(evt,pagoautoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPagoAuto(this.pagoauto,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,pagoautoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.pagoauto.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPagoAutoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				this.pagoauto.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				this.pagoauto.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.pagoauto)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PagoAutoModel) this.jTableDatosPagoAuto.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPagoAuto=true;
				this.inicializarActualizarBindingTablaPagoAuto(false);
				this.isEsNuevoPagoAuto=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPagoAuto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPagoAuto(false);
				
				this.habilitarDeshabilitarControlesPagoAuto(false);
				
				
				
				if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePagoAuto();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPagoAutoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPagoAuto.getRowCount()>=1) {
				jTableDatosPagoAuto.removeRowSelectionInterval(0, jTableDatosPagoAuto.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPagoAuto(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPagoAuto(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPagoAuto(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPagoAuto(false) ;
			
			this.isEsNuevoPagoAuto=false;
			
			if(PagoAutoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePagoAuto();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPagoAuto(false);
				
				//SI ES MANUAL
				if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPagoAuto();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPagoAuto--;			
			//PagoAuto pagoautoAux= new PagoAuto();			
			//pagoautoAux.setId(this.iIdNuevoPagoAuto);
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPagoAuto();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
			
			this.pagoauto.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.pagoautoLogic.getPagoAutos().add(this.pagoautoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.pagoautos.add(this.pagoautoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPagoAuto(false);
			
			this.jTableDatosPagoAuto.setRowSelectionInterval(this.getIndiceNuevoPagoAuto(), this.getIndiceNuevoPagoAuto());
			
			int iLastRow =  this.jTableDatosPagoAuto.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPagoAuto.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPagoAuto.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPagoAuto(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPagoAuto(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPagoAuto(false);
			
			//SI ES MANUAL
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPagoAuto();
			}
			
			//this.abrirFrameTreePagoAuto();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPagoAutoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Pago AutoS ?", "MANTENIMIENTO DE Pago Auto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPagoAuto.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPagoAuto();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.pagoautoReturnGeneral=pagoautoLogic.procesarImportacionPagoAutosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.pagoautoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPagoAutoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPagoAutoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPagoAuto.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPagoAuto.setFileImportacion(this.jInternalFrameImportacionPagoAuto.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPagoAuto.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPagoAuto.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPagoAuto.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPagoAuto.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		

		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PagoAutoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PagoAutoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePagoAutos("Todos",pagoautosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PagoAutoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroActividad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroActividad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroActividad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroActividad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DetalleProve_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DetalleProve_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DetalleProve_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DetalleProve_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaBanco_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaBanco_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaBanco_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaBanco_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPagoAuto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPagoAuto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPagoAuto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPagoAuto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVencimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVencimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVencimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVencimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_FECHACORTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaCorte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaCorte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaCorte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaCorte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorPorPagar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorPorPagar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorPorPagar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorPorPagar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_VALORCANCELADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorCancelado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorCancelado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorCancelado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorCancelado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_taAutorizado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_taAutorizado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_taAutorizado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_taAutorizado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PagoAutoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPagoAuto.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PagoAutoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoria="id_centro_actividad";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE:
					sNombreCampoCategoria="id_detalle_prove";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO:
					sNombreCampoCategoria="id_cuenta_banco";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO:
					sNombreCampoCategoria="id_estado_pago_auto";
					break;

				case PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoria="numero_factura";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoria="fecha_vencimiento";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHACORTE:
					sNombreCampoCategoria="fecha_corte";
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR:
					sNombreCampoCategoria="valor_por_pagar";
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORCANCELADO:
					sNombreCampoCategoria="valor_cancelado";
					break;

				case PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO:
					sNombreCampoCategoria="esta_autorizado";
					break;

				case PagoAutoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PagoAutoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoriaValor="id_centro_actividad";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE:
					sNombreCampoCategoriaValor="id_detalle_prove";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO:
					sNombreCampoCategoriaValor="id_cuenta_banco";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO:
					sNombreCampoCategoriaValor="id_estado_pago_auto";
					break;

				case PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoriaValor="numero_factura";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoriaValor="fecha_vencimiento";
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHACORTE:
					sNombreCampoCategoriaValor="fecha_corte";
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR:
					sNombreCampoCategoriaValor="valor_por_pagar";
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORCANCELADO:
					sNombreCampoCategoriaValor="valor_cancelado";
					break;

				case PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO:
					sNombreCampoCategoriaValor="esta_autorizado";
					break;

				case PagoAutoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PagoAutoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Activad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_actividad");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle Prove",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_detalle_prove");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Banco",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_banco");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pago Auto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pago_auto");
					break;

				case PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_factura");
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Vencimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vencimiento");
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHACORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Corte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_corte");
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Por Pagar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_por_pagar");
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORCANCELADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Cancelado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_cancelado");
					break;

				case PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Esta Autorizado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"esta_autorizado");
					break;

				case PagoAutoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPagoAutoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PagoAutos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PagoAutoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getcentroactividad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getdetalleprove_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getcuentabanco_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getestadopagoauto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getnumero_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getfecha_vencimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_FECHACORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHACORTE);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getfecha_corte());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getvalor_por_pagar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_VALORCANCELADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getvalor_cancelado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getesta_autorizado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PagoAutoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PagoAutoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(PagoAuto pagoauto:pagoautosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pagoauto.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPagoAuto(row);				
			//	iRow++;
			//}				
			
			//for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPagoAuto(pagoautoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPagoAuto(false);
			
			//SI ES MANUAL
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPagoAuto();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPagoAuto(false);
			
			//SI ES MANUAL
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPagoAuto();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPagoAutoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPagoAuto(false);
			
			//SI ES MANUAL
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPagoAuto();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPagoAuto() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPagoAuto.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPagoAuto.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPagoAuto.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPagoAuto.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPagoAuto.setMinimumSize(dimensionMinimum);
		this.jTableDatosPagoAuto.setMaximumSize(dimensionMaximum);
		this.jTableDatosPagoAuto.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPagoAuto(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPagoAuto(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPagoAuto(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPagoAuto(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPagoAuto(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPagoAuto(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPagoAuto(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPagoAuto(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PagoAutoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPagoAuto() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPagoAuto();
		
		this.inicializarActualizarBindingBotonesManualPagoAuto(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPagoAuto();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPagoAuto() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPagoAuto(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPagoAuto(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPagoAuto.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPagoAuto.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePagoAuto.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPagoAuto!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionNuevoPagoAuto.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionSinCerrarPagoAuto.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionSinMensajePagoAuto.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPagoAuto.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPagoAuto.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePagoAuto.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPagoAuto!=null) {
				this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionNuevoPagoAuto.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionSinCerrarPagoAuto.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPagoAuto.jCheckBoxPostAccionSinMensajePagoAuto.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPagoAuto.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPagoAuto.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPagoAuto.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPagoAuto.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPagoAuto.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPagoAuto.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPagoAuto.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPagoAuto.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPagoAuto.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPagoAuto(Boolean esInicializar) throws Exception {
		try	{	
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPagoAuto(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPagoAuto() throws Exception {
		try	{
			if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPagoAuto();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePagoAuto() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPagoAuto() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPagoAuto.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPagoAuto.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPagoAuto.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPagoAuto.addItem(reporte);
			}
			
			
			if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPagoAuto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPagoAuto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPagoAuto.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPagoAuto.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPagoAuto.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPagoAuto.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPagoAuto.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPagoAuto();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPagoAuto() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
				this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
				this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
				
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPagoAuto.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PagoAutoConstantesFunciones.getTiposSeleccionarPagoAuto(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PagoAutoConstantesFunciones.getTiposSeleccionarPagoAuto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PagoAutoConstantesFunciones.getTiposSeleccionarPagoAuto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPagoAuto.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPagoAuto.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPagoAuto()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContablePagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.getSelectedItem()!=null){this.id_centro_actividadFK_IdCentroActividad=((CentroActividad)this.jComboBoxid_centro_actividadFK_IdCentroActividadPagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoPagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClientePagoAuto.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClientePagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.getSelectedItem()!=null){this.id_cuenta_bancoFK_IdCuentaBanco=((CuentaBanco)this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoPagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.getSelectedItem()!=null){this.id_detalle_proveFK_IdDetalleProve=((DetalleProve)this.jComboBoxid_detalle_proveFK_IdDetalleProvePagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.getSelectedItem()!=null){this.id_estado_pago_autoFK_IdEstadoPagoAuto=((EstadoPagoAuto)this.jComboBoxid_estado_pago_autoFK_IdEstadoPagoAutoPagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaPagoAuto.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaPagoAuto.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionPagoAuto.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPagoAuto(Boolean esInicializar) throws Exception {				
		if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPagoAuto();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPagoAuto() throws Exception {
		this.inicializarActualizarBindingTablaPagoAuto(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPagoAuto() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPagoAutoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAutoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPagoAuto(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=pagoautoLogic.getPagoAutos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=pagoautos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPagoAuto.setModel(new PagoAutoModel(this.pagoautoLogic.getPagoAutos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPagoAuto.setModel(new PagoAutoModel(this.pagoautos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPagoAuto!=null && this.jInternalFrameOrderByPagoAuto.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPagoAuto();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PagoAutoConstantesFunciones.SCLASSWEBTITULO,pagoautoConstantesFunciones.resaltarSeleccionarPagoAuto,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PagoAutoConstantesFunciones.SCLASSWEBTITULO,pagoautoConstantesFunciones.resaltarSeleccionarPagoAuto,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_ID));

		if(this.pagoautoConstantesFunciones.mostraridPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pagoautoConstantesFunciones.resaltaridPagoAuto,this.pagoautoConstantesFunciones.activaridPagoAuto,iSizeTabla,this,true,"idPagoAuto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pagoautoConstantesFunciones.resaltaridPagoAuto,this.pagoautoConstantesFunciones.activaridPagoAuto,this,true,"idPagoAuto","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.pagoautoConstantesFunciones.mostrarid_empresaPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.pagoautoConstantesFunciones.resaltarid_empresaPagoAuto,this,this.pagoautoConstantesFunciones.activarid_empresaPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.pagoautoConstantesFunciones.resaltarid_empresaPagoAuto,this,this.pagoautoConstantesFunciones.activarid_empresaPagoAuto,false,"id_empresaPagoAuto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.pagoautoConstantesFunciones.mostrarid_sucursalPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.pagoautoConstantesFunciones.resaltarid_sucursalPagoAuto,this,this.pagoautoConstantesFunciones.activarid_sucursalPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.pagoautoConstantesFunciones.resaltarid_sucursalPagoAuto,this,this.pagoautoConstantesFunciones.activarid_sucursalPagoAuto,false,"id_sucursalPagoAuto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.pagoautoConstantesFunciones.mostrarid_ejercicioPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.pagoautoConstantesFunciones.resaltarid_ejercicioPagoAuto,this,this.pagoautoConstantesFunciones.activarid_ejercicioPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.pagoautoConstantesFunciones.resaltarid_ejercicioPagoAuto,this,this.pagoautoConstantesFunciones.activarid_ejercicioPagoAuto,false,"id_ejercicioPagoAuto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCLIENTE));

		if(this.pagoautoConstantesFunciones.mostrarid_clientePagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.pagoautoConstantesFunciones.resaltarid_clientePagoAuto,this,this.pagoautoConstantesFunciones.activarid_clientePagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.pagoautoConstantesFunciones.resaltarid_clientePagoAuto,this,this.pagoautoConstantesFunciones.activarid_clientePagoAuto,true,"id_clientePagoAuto","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE));

		if(this.pagoautoConstantesFunciones.mostrarid_asiento_contablePagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableTableCell(this.asientocontablesForeignKey,this.pagoautoConstantesFunciones.resaltarid_asiento_contablePagoAuto,this,this.pagoautoConstantesFunciones.activarid_asiento_contablePagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableTableCell(this.asientocontablesForeignKey,this.pagoautoConstantesFunciones.resaltarid_asiento_contablePagoAuto,this,this.pagoautoConstantesFunciones.activarid_asiento_contablePagoAuto,true,"id_asiento_contablePagoAuto","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.pagoautoConstantesFunciones.mostrarid_centro_costoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.pagoautoConstantesFunciones.resaltarid_centro_costoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_centro_costoPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.pagoautoConstantesFunciones.resaltarid_centro_costoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_centro_costoPagoAuto,true,"id_centro_costoPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD));

		if(this.pagoautoConstantesFunciones.mostrarid_centro_actividadPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroActividadTableCell(this.centroactividadsForeignKey,this.pagoautoConstantesFunciones.resaltarid_centro_actividadPagoAuto,this,this.pagoautoConstantesFunciones.activarid_centro_actividadPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new CentroActividadTableCell(this.centroactividadsForeignKey,this.pagoautoConstantesFunciones.resaltarid_centro_actividadPagoAuto,this,this.pagoautoConstantesFunciones.activarid_centro_actividadPagoAuto,true,"id_centro_actividadPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDFACTURA));

		if(this.pagoautoConstantesFunciones.mostrarid_facturaPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.pagoautoConstantesFunciones.resaltarid_facturaPagoAuto,this,this.pagoautoConstantesFunciones.activarid_facturaPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.pagoautoConstantesFunciones.resaltarid_facturaPagoAuto,this,this.pagoautoConstantesFunciones.activarid_facturaPagoAuto,true,"id_facturaPagoAuto","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE));

		if(this.pagoautoConstantesFunciones.mostrarid_detalle_provePagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new DetalleProveTableCell(this.detalleprovesForeignKey,this.pagoautoConstantesFunciones.resaltarid_detalle_provePagoAuto,this,this.pagoautoConstantesFunciones.activarid_detalle_provePagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new DetalleProveTableCell(this.detalleprovesForeignKey,this.pagoautoConstantesFunciones.resaltarid_detalle_provePagoAuto,this,this.pagoautoConstantesFunciones.activarid_detalle_provePagoAuto,true,"id_detalle_provePagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO));

		if(this.pagoautoConstantesFunciones.mostrarid_cuenta_bancoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaBancoTableCell(this.cuentabancosForeignKey,this.pagoautoConstantesFunciones.resaltarid_cuenta_bancoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_cuenta_bancoPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaBancoTableCell(this.cuentabancosForeignKey,this.pagoautoConstantesFunciones.resaltarid_cuenta_bancoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_cuenta_bancoPagoAuto,true,"id_cuenta_bancoPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.pagoautoConstantesFunciones.mostrarid_transaccionPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.pagoautoConstantesFunciones.resaltarid_transaccionPagoAuto,this,this.pagoautoConstantesFunciones.activarid_transaccionPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.pagoautoConstantesFunciones.resaltarid_transaccionPagoAuto,this,this.pagoautoConstantesFunciones.activarid_transaccionPagoAuto,true,"id_transaccionPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO));

		if(this.pagoautoConstantesFunciones.mostrarid_estado_pago_autoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPagoAutoTableCell(this.estadopagoautosForeignKey,this.pagoautoConstantesFunciones.resaltarid_estado_pago_autoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_estado_pago_autoPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPagoAutoTableCell(this.estadopagoautosForeignKey,this.pagoautoConstantesFunciones.resaltarid_estado_pago_autoPagoAuto,this,this.pagoautoConstantesFunciones.activarid_estado_pago_autoPagoAuto,true,"id_estado_pago_autoPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA));

		if(this.pagoautoConstantesFunciones.mostrarnumero_facturaPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pagoautoConstantesFunciones.resaltarnumero_facturaPagoAuto,this.pagoautoConstantesFunciones.activarnumero_facturaPagoAuto,iSizeTabla,this,true,"numero_facturaPagoAuto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pagoautoConstantesFunciones.resaltarnumero_facturaPagoAuto,this.pagoautoConstantesFunciones.activarnumero_facturaPagoAuto,this,true,"numero_facturaPagoAuto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_FECHAEMISION));

		if(this.pagoautoConstantesFunciones.mostrarfecha_emisionPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pagoautoConstantesFunciones.resaltarfecha_emisionPagoAuto,this.pagoautoConstantesFunciones.activarfecha_emisionPagoAuto,iSizeTabla,this,true,"fecha_emisionPagoAuto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pagoautoConstantesFunciones.resaltarfecha_emisionPagoAuto,this.pagoautoConstantesFunciones.activarfecha_emisionPagoAuto,this,true,"fecha_emisionPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO));

		if(this.pagoautoConstantesFunciones.mostrarfecha_vencimientoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pagoautoConstantesFunciones.resaltarfecha_vencimientoPagoAuto,this.pagoautoConstantesFunciones.activarfecha_vencimientoPagoAuto,iSizeTabla,this,true,"fecha_vencimientoPagoAuto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pagoautoConstantesFunciones.resaltarfecha_vencimientoPagoAuto,this.pagoautoConstantesFunciones.activarfecha_vencimientoPagoAuto,this,true,"fecha_vencimientoPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_FECHACORTE));

		if(this.pagoautoConstantesFunciones.mostrarfecha_cortePagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_FECHACORTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pagoautoConstantesFunciones.resaltarfecha_cortePagoAuto,this.pagoautoConstantesFunciones.activarfecha_cortePagoAuto,iSizeTabla,this,true,"fecha_cortePagoAuto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pagoautoConstantesFunciones.resaltarfecha_cortePagoAuto,this.pagoautoConstantesFunciones.activarfecha_cortePagoAuto,this,true,"fecha_cortePagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR));

		if(this.pagoautoConstantesFunciones.mostrarvalor_por_pagarPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pagoautoConstantesFunciones.resaltarvalor_por_pagarPagoAuto,this.pagoautoConstantesFunciones.activarvalor_por_pagarPagoAuto,iSizeTabla,this,true,"valor_por_pagarPagoAuto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pagoautoConstantesFunciones.resaltarvalor_por_pagarPagoAuto,this.pagoautoConstantesFunciones.activarvalor_por_pagarPagoAuto,this,true,"valor_por_pagarPagoAuto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_VALORCANCELADO));

		if(this.pagoautoConstantesFunciones.mostrarvalor_canceladoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_VALORCANCELADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pagoautoConstantesFunciones.resaltarvalor_canceladoPagoAuto,this.pagoautoConstantesFunciones.activarvalor_canceladoPagoAuto,iSizeTabla,this,true,"valor_canceladoPagoAuto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pagoautoConstantesFunciones.resaltarvalor_canceladoPagoAuto,this.pagoautoConstantesFunciones.activarvalor_canceladoPagoAuto,this,true,"valor_canceladoPagoAuto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO));

		if(this.pagoautoConstantesFunciones.mostraresta_autorizadoPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.pagoautoConstantesFunciones.resaltaresta_autorizadoPagoAuto,this.pagoautoConstantesFunciones.activaresta_autorizadoPagoAuto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.pagoautoConstantesFunciones.resaltaresta_autorizadoPagoAuto,this.pagoautoConstantesFunciones.activaresta_autorizadoPagoAuto,this,true,"esta_autorizadoPagoAuto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,PagoAutoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.pagoautoConstantesFunciones.mostrardescripcionPagoAuto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PagoAutoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pagoautoConstantesFunciones.resaltardescripcionPagoAuto,this.pagoautoConstantesFunciones.activardescripcionPagoAuto,iSizeTabla,this,true,"descripcionPagoAuto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pagoautoConstantesFunciones.resaltardescripcionPagoAuto,this.pagoautoConstantesFunciones.activardescripcionPagoAuto,this,true,"descripcionPagoAuto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PagoAutoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.pagoautoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPagoAuto.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPagoAuto.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPagoAuto && this.isPermisoGuardarCambiosPagoAuto) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.pagoautoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosPagoAuto.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPagoAuto.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPagoAuto && this.isPermisoGuardarCambiosPagoAuto) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPagoAuto && this.isPermisoGuardarCambiosPagoAuto) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosPagoAuto.moveColumn(this.jTableDatosPagoAuto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosPagoAuto.moveColumn(this.jTableDatosPagoAuto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPagoAuto.moveColumn(this.jTableDatosPagoAuto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPagoAuto.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPagoAuto.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPagoAuto,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPagoAuto.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPagoAuto.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPagoAuto.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPagoAuto.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPagoAuto.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=pagoautoLogic.getPagoAutos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=pagoautos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPagoAuto.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPagoAuto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPagoAuto();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPagoAuto=false;
					
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
				if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPagoAuto==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPagoAuto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.pagoauto.getsType().equals("DUPLICADO")
				   || this.pagoauto.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPagoAuto=true;
				
				} else {
					this.isEsNuevoPagoAuto=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					if(this.pagoauto.getId()>=0 && !this.pagoauto.getIsNew()) {						
						this.isEsNuevoPagoAuto=false;
						
					} else {
						this.isEsNuevoPagoAuto=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPagoAuto(esRelaciones);						
				
				this.seleccionarPagoAuto(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.pagoauto.getId()<0) {
					this.isEsNuevoPagoAuto=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPagoAuto(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPagoAuto(evt,rowIndex);
				}	
				
				if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PagoAuto: " + this.dDif); 
					}
				}								
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPagoAuto(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.pagoauto)) {
					if(this.pagoauto.getId()>0) {
						this.pagoauto.setIsDeleted(true);
						
						this.pagoautosEliminados.add(this.pagoauto);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pagoautoLogic.getPagoAutos().remove(this.pagoauto);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pagoautos.remove(this.pagoauto);				
					}
					
					
					((PagoAutoModel) this.jTableDatosPagoAuto.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPagoAuto(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPagoAuto(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPagoAuto) {
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPagoAuto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPagoAuto.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPagoAuto(this.pagoauto);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.pagoautoConstantesFunciones.cargarid_empresaPagoAuto || this.pagoautoConstantesFunciones.event_dependid_empresaPagoAuto) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.pagoauto.getid_empresa());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(pagoauto.getEmpresa()!=null) {
							this.empresasForeignKey.add(pagoauto.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.pagoauto.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.pagoautoConstantesFunciones.cargarid_sucursalPagoAuto || this.pagoautoConstantesFunciones.event_dependid_sucursalPagoAuto) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.pagoauto.getid_sucursal());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(pagoauto.getSucursal()!=null) {
							this.sucursalsForeignKey.add(pagoauto.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.pagoauto.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.pagoautoConstantesFunciones.cargarid_ejercicioPagoAuto || this.pagoautoConstantesFunciones.event_dependid_ejercicioPagoAuto) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.pagoauto.getid_ejercicio());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(pagoauto.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(pagoauto.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.pagoauto.getid_ejercicio(),false,"Formulario");

					//Cliente
					if(!this.pagoautoConstantesFunciones.cargarid_clientePagoAuto || this.pagoautoConstantesFunciones.event_dependid_clientePagoAuto) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.pagoauto.getid_cliente());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(pagoauto.getCliente()!=null) {
							this.clientesForeignKey.add(pagoauto.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.pagoauto.getid_cliente(),false,"Formulario");

					//AsientoContable
					if(!this.pagoautoConstantesFunciones.cargarid_asiento_contablePagoAuto || this.pagoautoConstantesFunciones.event_dependid_asiento_contablePagoAuto) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.pagoauto.getid_asiento_contable());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(pagoauto.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(pagoauto.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.pagoauto.getid_asiento_contable(),false,"Formulario");

					//CentroCosto
					if(!this.pagoautoConstantesFunciones.cargarid_centro_costoPagoAuto || this.pagoautoConstantesFunciones.event_dependid_centro_costoPagoAuto) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.pagoauto.getid_centro_costo());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(pagoauto.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(pagoauto.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.pagoauto.getid_centro_costo(),false,"Formulario");

					//CentroActividad
					if(!this.pagoautoConstantesFunciones.cargarid_centro_actividadPagoAuto || this.pagoautoConstantesFunciones.event_dependid_centro_actividadPagoAuto) {
						//this.cargarCombosCentroActividadsForeignKeyLista(" where id="+this.pagoauto.getid_centro_actividad());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

						if(pagoauto.getCentroActividad()!=null) {
							this.centroactividadsForeignKey.add(pagoauto.getCentroActividad());
						}

						this.addItemDefectoCombosForeignKeyCentroActividad();
						this.cargarCombosFrameCentroActividadsForeignKey("Todos");
					}
					this.setActualCentroActividadForeignKey(this.pagoauto.getid_centro_actividad(),false,"Formulario");

					//Factura
					if(!this.pagoautoConstantesFunciones.cargarid_facturaPagoAuto || this.pagoautoConstantesFunciones.event_dependid_facturaPagoAuto) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.pagoauto.getid_factura());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(pagoauto.getFactura()!=null) {
							this.facturasForeignKey.add(pagoauto.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.pagoauto.getid_factura(),false,"Formulario");

					//DetalleProve
					if(!this.pagoautoConstantesFunciones.cargarid_detalle_provePagoAuto || this.pagoautoConstantesFunciones.event_dependid_detalle_provePagoAuto) {
						//this.cargarCombosDetalleProvesForeignKeyLista(" where id="+this.pagoauto.getid_detalle_prove());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.detalleprovesForeignKey=new ArrayList<DetalleProve>();

						if(pagoauto.getDetalleProve()!=null) {
							this.detalleprovesForeignKey.add(pagoauto.getDetalleProve());
						}

						this.addItemDefectoCombosForeignKeyDetalleProve();
						this.cargarCombosFrameDetalleProvesForeignKey("Todos");
					}
					this.setActualDetalleProveForeignKey(this.pagoauto.getid_detalle_prove(),false,"Formulario");

					//CuentaBanco
					if(!this.pagoautoConstantesFunciones.cargarid_cuenta_bancoPagoAuto || this.pagoautoConstantesFunciones.event_dependid_cuenta_bancoPagoAuto) {
						//this.cargarCombosCuentaBancosForeignKeyLista(" where id="+this.pagoauto.getid_cuenta_banco());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.cuentabancosForeignKey=new ArrayList<CuentaBanco>();

						if(pagoauto.getCuentaBanco()!=null) {
							this.cuentabancosForeignKey.add(pagoauto.getCuentaBanco());
						}

						this.addItemDefectoCombosForeignKeyCuentaBanco();
						this.cargarCombosFrameCuentaBancosForeignKey("Todos");
					}
					this.setActualCuentaBancoForeignKey(this.pagoauto.getid_cuenta_banco(),false,"Formulario");

					//Transaccion
					if(!this.pagoautoConstantesFunciones.cargarid_transaccionPagoAuto || this.pagoautoConstantesFunciones.event_dependid_transaccionPagoAuto) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.pagoauto.getid_transaccion());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(pagoauto.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(pagoauto.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.pagoauto.getid_transaccion(),false,"Formulario");

					//EstadoPagoAuto
					if(!this.pagoautoConstantesFunciones.cargarid_estado_pago_autoPagoAuto || this.pagoautoConstantesFunciones.event_dependid_estado_pago_autoPagoAuto) {
						//this.cargarCombosEstadoPagoAutosForeignKeyLista(" where id="+this.pagoauto.getid_estado_pago_auto());
									//this.inicializarActualizarBindingPagoAuto(false,false);
						this.estadopagoautosForeignKey=new ArrayList<EstadoPagoAuto>();

						if(pagoauto.getEstadoPagoAuto()!=null) {
							this.estadopagoautosForeignKey.add(pagoauto.getEstadoPagoAuto());
						}

						this.addItemDefectoCombosForeignKeyEstadoPagoAuto();
						this.cargarCombosFrameEstadoPagoAutosForeignKey("Todos");
					}
					this.setActualEstadoPagoAutoForeignKey(this.pagoauto.getid_estado_pago_auto(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPagoAuto("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPagoAuto(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPagoAuto() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPagoAuto(PagoAuto pagoauto) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPagoAuto(pagoauto,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPagoAuto(PagoAuto pagoauto,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPagoAuto(pagoauto);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPagoAuto(pagoauto,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPagoAuto(pagoauto);
	}
	
	public void setVariablesObjetoActualToFormularioPagoAuto(PagoAuto pagoauto) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setText(pagoauto.getId().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setText(pagoauto.getnumero_factura());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setDate(pagoauto.getfecha_emision());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setDate(pagoauto.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setDate(pagoauto.getfecha_corte());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setText(pagoauto.getvalor_por_pagar().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setText(pagoauto.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setSelected(pagoauto.getesta_autorizado());
			this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setText(pagoauto.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PagoAuto pagoautoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,pagoautoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PagoAuto pagoautoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				pagoautoLocal=this.pagoauto;
			} else {
				pagoautoLocal=this.pagoautoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(pagoautoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPagoAuto(pagoautoLocal,true);
					
					if(pagoautoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(pagoautoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(pagoautoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPagoAuto(PagoAuto pagoauto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPagoAuto(pagoauto,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(pagoauto);
	}
	
	public void setVariablesFormularioToObjetoActualPagoAuto(PagoAuto pagoauto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPagoAuto(pagoauto,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPagoAuto(PagoAuto pagoauto,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.getText()==null || this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.getText()=="" || this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.getText()=="Id") {
				this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setText("0");
			}

			if(conColumnasBase) {pagoauto.setId(Long.parseLong(this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelIdPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setnumero_factura(this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelnumero_facturaPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setfecha_emision(this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_emisionPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setfecha_vencimiento(this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_vencimientoPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setfecha_corte(this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_FECHACORTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelfecha_cortePagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setvalor_por_pagar(Double.parseDouble(this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_por_pagarPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setvalor_cancelado(Double.parseDouble(this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_VALORCANCELADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelvalor_canceladoPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setesta_autorizado(this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabelesta_autorizadoPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pagoauto.setdescripcion(this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PagoAutoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPagoAuto.jLabeldescripcionPagoAuto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPagoAuto(PagoAuto pagoautoBean,PagoAuto pagoauto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && pagoautoBean.getid_cliente()!=null && !pagoautoBean.getid_cliente().equals(-1L))) {pagoauto.setid_cliente(pagoautoBean.getid_cliente());}
			if(conDefault || (!conDefault && pagoautoBean.getid_asiento_contable()!=null && !pagoautoBean.getid_asiento_contable().equals(-1L))) {pagoauto.setid_asiento_contable(pagoautoBean.getid_asiento_contable());}
			if(conDefault || (!conDefault && pagoautoBean.getid_centro_costo()!=null && !pagoautoBean.getid_centro_costo().equals(null))) {pagoauto.setid_centro_costo(pagoautoBean.getid_centro_costo());}
			if(conDefault || (!conDefault && pagoautoBean.getid_centro_actividad()!=null && !pagoautoBean.getid_centro_actividad().equals(null))) {pagoauto.setid_centro_actividad(pagoautoBean.getid_centro_actividad());}
			if(conDefault || (!conDefault && pagoautoBean.getid_factura()!=null && !pagoautoBean.getid_factura().equals(-1L))) {pagoauto.setid_factura(pagoautoBean.getid_factura());}
			if(conDefault || (!conDefault && pagoautoBean.getid_detalle_prove()!=null && !pagoautoBean.getid_detalle_prove().equals(-1L))) {pagoauto.setid_detalle_prove(pagoautoBean.getid_detalle_prove());}
			if(conDefault || (!conDefault && pagoautoBean.getid_cuenta_banco()!=null && !pagoautoBean.getid_cuenta_banco().equals(-1L))) {pagoauto.setid_cuenta_banco(pagoautoBean.getid_cuenta_banco());}
			if(conDefault || (!conDefault && pagoautoBean.getid_transaccion()!=null && !pagoautoBean.getid_transaccion().equals(-1L))) {pagoauto.setid_transaccion(pagoautoBean.getid_transaccion());}
			if(conDefault || (!conDefault && pagoautoBean.getid_estado_pago_auto()!=null && !pagoautoBean.getid_estado_pago_auto().equals(-1L))) {pagoauto.setid_estado_pago_auto(pagoautoBean.getid_estado_pago_auto());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPagoAuto(PagoAuto pagoautoOrigen,PagoAuto pagoauto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pagoautoOrigen.getId()!=null && !pagoautoOrigen.getId().equals(0L))) {pagoauto.setId(pagoautoOrigen.getId());}}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_cliente()!=null && !pagoautoOrigen.getid_cliente().equals(-1L))) {pagoauto.setid_cliente(pagoautoOrigen.getid_cliente());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_asiento_contable()!=null && !pagoautoOrigen.getid_asiento_contable().equals(-1L))) {pagoauto.setid_asiento_contable(pagoautoOrigen.getid_asiento_contable());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_centro_costo()!=null && !pagoautoOrigen.getid_centro_costo().equals(null))) {pagoauto.setid_centro_costo(pagoautoOrigen.getid_centro_costo());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_centro_actividad()!=null && !pagoautoOrigen.getid_centro_actividad().equals(null))) {pagoauto.setid_centro_actividad(pagoautoOrigen.getid_centro_actividad());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_factura()!=null && !pagoautoOrigen.getid_factura().equals(-1L))) {pagoauto.setid_factura(pagoautoOrigen.getid_factura());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_detalle_prove()!=null && !pagoautoOrigen.getid_detalle_prove().equals(-1L))) {pagoauto.setid_detalle_prove(pagoautoOrigen.getid_detalle_prove());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_cuenta_banco()!=null && !pagoautoOrigen.getid_cuenta_banco().equals(-1L))) {pagoauto.setid_cuenta_banco(pagoautoOrigen.getid_cuenta_banco());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_transaccion()!=null && !pagoautoOrigen.getid_transaccion().equals(-1L))) {pagoauto.setid_transaccion(pagoautoOrigen.getid_transaccion());}
			if(conDefault || (!conDefault && pagoautoOrigen.getid_estado_pago_auto()!=null && !pagoautoOrigen.getid_estado_pago_auto().equals(-1L))) {pagoauto.setid_estado_pago_auto(pagoautoOrigen.getid_estado_pago_auto());}
			if(conDefault || (!conDefault && pagoautoOrigen.getnumero_factura()!=null && !pagoautoOrigen.getnumero_factura().equals(""))) {pagoauto.setnumero_factura(pagoautoOrigen.getnumero_factura());}
			if(conDefault || (!conDefault && pagoautoOrigen.getfecha_emision()!=null && !pagoautoOrigen.getfecha_emision().equals(new Date()))) {pagoauto.setfecha_emision(pagoautoOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && pagoautoOrigen.getfecha_vencimiento()!=null && !pagoautoOrigen.getfecha_vencimiento().equals(new Date()))) {pagoauto.setfecha_vencimiento(pagoautoOrigen.getfecha_vencimiento());}
			if(conDefault || (!conDefault && pagoautoOrigen.getfecha_corte()!=null && !pagoautoOrigen.getfecha_corte().equals(new Date()))) {pagoauto.setfecha_corte(pagoautoOrigen.getfecha_corte());}
			if(conDefault || (!conDefault && pagoautoOrigen.getvalor_por_pagar()!=null && !pagoautoOrigen.getvalor_por_pagar().equals(0.0))) {pagoauto.setvalor_por_pagar(pagoautoOrigen.getvalor_por_pagar());}
			if(conDefault || (!conDefault && pagoautoOrigen.getvalor_cancelado()!=null && !pagoautoOrigen.getvalor_cancelado().equals(0.0))) {pagoauto.setvalor_cancelado(pagoautoOrigen.getvalor_cancelado());}
			if(conDefault || (!conDefault && pagoautoOrigen.getesta_autorizado()!=null && !pagoautoOrigen.getesta_autorizado().equals(false))) {pagoauto.setesta_autorizado(pagoautoOrigen.getesta_autorizado());}
			if(conDefault || (!conDefault && pagoautoOrigen.getdescripcion()!=null && !pagoautoOrigen.getdescripcion().equals(""))) {pagoauto.setdescripcion(pagoautoOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPagoAuto(PagoAuto pagoauto) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setText(pagoauto.getId().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setText(pagoauto.getnumero_factura());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setDate(pagoauto.getfecha_emision());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setDate(pagoauto.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setDate(pagoauto.getfecha_corte());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setText(pagoauto.getvalor_por_pagar().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setText(pagoauto.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setSelected(pagoauto.getesta_autorizado());
			this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setText(pagoauto.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPagoAuto(PagoAutoBean pagoautoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setText(pagoautoBean.getId().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setText(pagoautoBean.getnumero_factura());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setDate(pagoautoBean.getfecha_emision());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setDate(pagoautoBean.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setDate(pagoautoBean.getfecha_corte());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setText(pagoautoBean.getvalor_por_pagar().toString());
			this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setText(pagoautoBean.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setSelected(pagoautoBean.getesta_autorizado());
			this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setText(pagoautoBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPagoAuto(PagoAutoParameterReturnGeneral pagoautoReturnGeneral,PagoAutoBean pagoautoBean,Boolean conDefault) throws Exception { 
		try {
			PagoAuto pagoautoLocal=new PagoAuto();
			
			pagoautoLocal=pagoautoReturnGeneral.getPagoAuto();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pagoautoLocal.getId()!=null && !pagoautoLocal.getId().equals(0L))) {pagoautoBean.setId(pagoautoLocal.getId());}}
			if(conDefault || (!conDefault && pagoautoLocal.getid_cliente()!=null && !pagoautoLocal.getid_cliente().equals(-1L))) {pagoautoBean.setid_cliente(pagoautoLocal.getid_cliente());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_asiento_contable()!=null && !pagoautoLocal.getid_asiento_contable().equals(-1L))) {pagoautoBean.setid_asiento_contable(pagoautoLocal.getid_asiento_contable());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_centro_costo()!=null && !pagoautoLocal.getid_centro_costo().equals(null))) {pagoautoBean.setid_centro_costo(pagoautoLocal.getid_centro_costo());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_centro_actividad()!=null && !pagoautoLocal.getid_centro_actividad().equals(null))) {pagoautoBean.setid_centro_actividad(pagoautoLocal.getid_centro_actividad());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_factura()!=null && !pagoautoLocal.getid_factura().equals(-1L))) {pagoautoBean.setid_factura(pagoautoLocal.getid_factura());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_detalle_prove()!=null && !pagoautoLocal.getid_detalle_prove().equals(-1L))) {pagoautoBean.setid_detalle_prove(pagoautoLocal.getid_detalle_prove());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_cuenta_banco()!=null && !pagoautoLocal.getid_cuenta_banco().equals(-1L))) {pagoautoBean.setid_cuenta_banco(pagoautoLocal.getid_cuenta_banco());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_transaccion()!=null && !pagoautoLocal.getid_transaccion().equals(-1L))) {pagoautoBean.setid_transaccion(pagoautoLocal.getid_transaccion());}
			if(conDefault || (!conDefault && pagoautoLocal.getid_estado_pago_auto()!=null && !pagoautoLocal.getid_estado_pago_auto().equals(-1L))) {pagoautoBean.setid_estado_pago_auto(pagoautoLocal.getid_estado_pago_auto());}
			if(conDefault || (!conDefault && pagoautoLocal.getnumero_factura()!=null && !pagoautoLocal.getnumero_factura().equals(""))) {pagoautoBean.setnumero_factura(pagoautoLocal.getnumero_factura());}
			if(conDefault || (!conDefault && pagoautoLocal.getfecha_emision()!=null && !pagoautoLocal.getfecha_emision().equals(new Date()))) {pagoautoBean.setfecha_emision(pagoautoLocal.getfecha_emision());}
			if(conDefault || (!conDefault && pagoautoLocal.getfecha_vencimiento()!=null && !pagoautoLocal.getfecha_vencimiento().equals(new Date()))) {pagoautoBean.setfecha_vencimiento(pagoautoLocal.getfecha_vencimiento());}
			if(conDefault || (!conDefault && pagoautoLocal.getfecha_corte()!=null && !pagoautoLocal.getfecha_corte().equals(new Date()))) {pagoautoBean.setfecha_corte(pagoautoLocal.getfecha_corte());}
			if(conDefault || (!conDefault && pagoautoLocal.getvalor_por_pagar()!=null && !pagoautoLocal.getvalor_por_pagar().equals(0.0))) {pagoautoBean.setvalor_por_pagar(pagoautoLocal.getvalor_por_pagar());}
			if(conDefault || (!conDefault && pagoautoLocal.getvalor_cancelado()!=null && !pagoautoLocal.getvalor_cancelado().equals(0.0))) {pagoautoBean.setvalor_cancelado(pagoautoLocal.getvalor_cancelado());}
			if(conDefault || (!conDefault && pagoautoLocal.getesta_autorizado()!=null && !pagoautoLocal.getesta_autorizado().equals(false))) {pagoautoBean.setesta_autorizado(pagoautoLocal.getesta_autorizado());}
			if(conDefault || (!conDefault && pagoautoLocal.getdescripcion()!=null && !pagoautoLocal.getdescripcion().equals(""))) {pagoautoBean.setdescripcion(pagoautoLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPagoAutoGenerico(Long idPagoAutoSeleccionado,JComboBox jComboBoxPagoAuto,List<PagoAuto> pagoautosLocal)throws Exception {
		try {
			PagoAuto  pagoautoTemp=null;

			for(PagoAuto pagoautoAux:pagoautosLocal) {
				if(pagoautoAux.getId()!=null && pagoautoAux.getId().equals(idPagoAutoSeleccionado)) {
					pagoautoTemp=pagoautoAux;
					break;
				}
			}

			jComboBoxPagoAuto.setSelectedItem(pagoautoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPagoAutoGenerico(JComboBox jComboBoxPagoAuto,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPagoAuto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPagoAuto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPagoAuto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPagoAuto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPagoAuto.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPagoAuto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPagoAuto.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPagoAuto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPagoAuto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPagoAuto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pagoauto=(PagoAuto) pagoautoLogic.getPagoAutos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pagoauto =(PagoAuto) pagoautos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getcliente_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("CentroActividad")) {
			//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getcentroactividad_descripcion();
			} else {
				//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getcentroactividad_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getfactura_descripcion();
			}
		}

		if(sTipo.equals("DetalleProve")) {
			//sDescripcion=this.getActualDetalleProveForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getdetalleprove_descripcion();
			} else {
				//sDescripcion=this.getActualDetalleProveForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getdetalleprove_descripcion();
			}
		}

		if(sTipo.equals("CuentaBanco")) {
			//sDescripcion=this.getActualCuentaBancoForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getcuentabanco_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaBancoForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getcuentabanco_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("EstadoPagoAuto")) {
			//sDescripcion=this.getActualEstadoPagoAutoForeignKeyDescripcion((Long)value);
			if(!pagoauto.getIsNew() && !pagoauto.getIsChanged() && !pagoauto.getIsDeleted()) {
				sDescripcion=pagoauto.getestadopagoauto_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPagoAutoForeignKeyDescripcion((Long)value);
				sDescripcion=pagoauto.getestadopagoauto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PagoAuto pagoautoRow=new PagoAuto();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pagoautoRow=(PagoAuto) pagoautoLogic.getPagoAutos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pagoautoRow=(PagoAuto) pagoautos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPagoAuto(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto));			
			this.jButtonDuplicarPagoAuto.setVisible((this.isVisibilidadCeldaDuplicarPagoAuto && this.isPermisoDuplicarPagoAuto));			
			this.jButtonCopiarPagoAuto.setVisible((this.isVisibilidadCeldaCopiarPagoAuto && this.isPermisoCopiarPagoAuto));
			this.jButtonVerFormPagoAuto.setVisible((this.isVisibilidadCeldaVerFormPagoAuto && this.isPermisoVerFormPagoAuto));
			
			this.jButtonAbrirOrderByPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));			
			
			this.jButtonNuevoRelacionesPagoAuto.setVisible((this.isVisibilidadCeldaNuevoRelacionesPagoAuto && this.isPermisoNuevoPagoAuto));			
			this.jButtonNuevoGuardarCambiosPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto && this.isPermisoGuardarCambiosPagoAuto));
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonModificarPagoAuto.setVisible((this.isVisibilidadCeldaModificarPagoAuto && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.setVisible((this.isVisibilidadCeldaActualizarPagoAuto && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.setVisible((this.isVisibilidadCeldaEliminarPagoAuto && this.isPermisoEliminarPagoAuto));
			this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.setVisible(this.isVisibilidadCeldaCancelarPagoAuto);							
			this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.setVisible((this.isVisibilidadCeldaGuardarPagoAuto && this.isPermisoGuardarCambiosPagoAuto));			
			
			}
						
			this.jButtonGuardarCambiosTablaPagoAuto.setVisible((this.isVisibilidadCeldaGuardarCambiosPagoAuto && this.isPermisoGuardarCambiosPagoAuto));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto));						
			this.jButtonDuplicarToolBarPagoAuto.setVisible((this.isVisibilidadCeldaDuplicarPagoAuto && this.isPermisoDuplicarPagoAuto));						
			this.jButtonCopiarToolBarPagoAuto.setVisible((this.isVisibilidadCeldaCopiarPagoAuto && this.isPermisoCopiarPagoAuto));			
			this.jButtonVerFormToolBarPagoAuto.setVisible((this.isVisibilidadCeldaVerFormPagoAuto && this.isPermisoVerFormPagoAuto));			
			this.jButtonAbrirOrderByToolBarPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));
			this.jButtonNuevoRelacionesToolBarPagoAuto.setVisible((this.isVisibilidadCeldaNuevoRelacionesPagoAuto && this.isPermisoNuevoPagoAuto));			
			this.jButtonNuevoGuardarCambiosToolBarPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto && this.isPermisoGuardarCambiosPagoAuto));			
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonModificarToolBarPagoAuto.setVisible((this.isVisibilidadCeldaModificarPagoAuto && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarToolBarPagoAuto.setVisible((this.isVisibilidadCeldaActualizarPagoAuto  && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarToolBarPagoAuto.setVisible((this.isVisibilidadCeldaEliminarPagoAuto && this.isPermisoEliminarPagoAuto));
			this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarToolBarPagoAuto.setVisible(this.isVisibilidadCeldaCancelarPagoAuto);				
			this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosToolBarPagoAuto.setVisible((this.isVisibilidadCeldaGuardarPagoAuto && this.isPermisoGuardarCambiosPagoAuto));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPagoAuto.setVisible((this.isVisibilidadCeldaGuardarCambiosPagoAuto && this.isPermisoGuardarCambiosPagoAuto));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto));			
			this.jMenuItemDuplicarPagoAuto.setVisible((this.isVisibilidadCeldaDuplicarPagoAuto && this.isPermisoDuplicarPagoAuto));			
			this.jMenuItemCopiarPagoAuto.setVisible((this.isVisibilidadCeldaCopiarPagoAuto && this.isPermisoCopiarPagoAuto));			
			this.jMenuItemVerFormPagoAuto.setVisible((this.isVisibilidadCeldaVerFormPagoAuto && this.isPermisoVerFormPagoAuto));			
			this.jMenuItemAbrirOrderByPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));			
			//this.jMenuItemMostrarOcultarPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));
			this.jMenuItemDetalleAbrirOrderByPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));			
			//this.jMenuItemDetalleMostrarOcultarPagoAuto.setVisible((this.isVisibilidadCeldaOrdenPagoAuto && this.isPermisoOrdenPagoAuto));			
			this.jMenuItemNuevoRelacionesPagoAuto.setVisible((this.isVisibilidadCeldaNuevoRelacionesPagoAuto && this.isPermisoNuevoPagoAuto));			
			this.jMenuItemNuevoGuardarCambiosPagoAuto.setVisible((this.isVisibilidadCeldaNuevoPagoAuto && this.isPermisoNuevoPagoAuto && this.isPermisoGuardarCambiosPagoAuto));									
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemModificarPagoAuto.setVisible((this.isVisibilidadCeldaModificarPagoAuto && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemActualizarPagoAuto.setVisible((this.isVisibilidadCeldaActualizarPagoAuto && this.isPermisoActualizarPagoAuto));	
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemEliminarPagoAuto.setVisible((this.isVisibilidadCeldaEliminarPagoAuto && this.isPermisoEliminarPagoAuto));
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemCancelarPagoAuto.setVisible(this.isVisibilidadCeldaCancelarPagoAuto);				
			}
			
			this.jMenuItemGuardarCambiosPagoAuto.setVisible((this.isVisibilidadCeldaGuardarPagoAuto && this.isPermisoGuardarCambiosPagoAuto));						
			this.jMenuItemGuardarCambiosTablaPagoAuto.setVisible((this.isVisibilidadCeldaGuardarCambiosPagoAuto && this.isPermisoGuardarCambiosPagoAuto));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPagoAuto=this.jButtonNuevoPagoAuto.isVisible();
			this.isVisibilidadCeldaDuplicarPagoAuto=this.jButtonDuplicarPagoAuto.isVisible();
			this.isVisibilidadCeldaCopiarPagoAuto=this.jButtonCopiarPagoAuto.isVisible();
			this.isVisibilidadCeldaVerFormPagoAuto=this.jButtonVerFormPagoAuto.isVisible();
			
			this.isVisibilidadCeldaOrdenPagoAuto=this.jButtonAbrirOrderByPagoAuto.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=this.jButtonNuevoRelacionesPagoAuto.isVisible();
			this.isVisibilidadCeldaModificarPagoAuto=this.jButtonModificarPagoAuto.isVisible();
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.isVisibilidadCeldaActualizarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.isVisible();
			this.isVisibilidadCeldaEliminarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.isVisible();
			this.isVisibilidadCeldaCancelarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.isVisible();
			this.isVisibilidadCeldaGuardarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=this.jButtonGuardarCambiosTablaPagoAuto.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPagoAuto=this.jButtonNuevoToolBarPagoAuto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=this.jButtonNuevoRelacionesToolBarPagoAuto.isVisible();
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.isVisibilidadCeldaModificarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonModificarToolBarPagoAuto.isVisible();
			this.isVisibilidadCeldaActualizarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarToolBarPagoAuto.isVisible();
			this.isVisibilidadCeldaEliminarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarToolBarPagoAuto.isVisible();
			this.isVisibilidadCeldaCancelarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarToolBarPagoAuto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPagoAuto=this.jButtonGuardarCambiosToolBarPagoAuto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=this.jButtonGuardarCambiosTablaToolBarPagoAuto.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPagoAuto=this.jMenuItemNuevoPagoAuto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=this.jMenuItemNuevoRelacionesPagoAuto.isVisible();
			
			if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.isVisibilidadCeldaModificarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jMenuItemModificarPagoAuto.isVisible();
			this.isVisibilidadCeldaActualizarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jMenuItemActualizarPagoAuto.isVisible();
			this.isVisibilidadCeldaEliminarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jMenuItemEliminarPagoAuto.isVisible();
			this.isVisibilidadCeldaCancelarPagoAuto=this.jInternalFrameDetalleFormPagoAuto.jMenuItemCancelarPagoAuto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPagoAuto=this.jMenuItemGuardarCambiosPagoAuto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=this.jMenuItemGuardarCambiosTablaPagoAuto.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPagoAuto(Boolean esInicializar) {
		if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
				//if(this.pagoautoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPagoAuto();
			}
			
			this.inicializarActualizarBindingBotonesManualPagoAuto(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPagoAuto() {
		this.jButtonNuevoPagoAuto.setVisible(this.isPermisoNuevoPagoAuto);			
		this.jButtonDuplicarPagoAuto.setVisible(this.isPermisoDuplicarPagoAuto);			
		this.jButtonCopiarPagoAuto.setVisible(this.isPermisoCopiarPagoAuto);			
		this.jButtonVerFormPagoAuto.setVisible(this.isPermisoVerFormPagoAuto);			
		
		this.jButtonAbrirOrderByPagoAuto.setVisible(this.isPermisoOrdenPagoAuto);					
		
		this.jButtonNuevoRelacionesPagoAuto.setVisible(this.isPermisoNuevoPagoAuto);			
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonModificarPagoAuto.setVisible(this.isPermisoActualizarPagoAuto);	
			this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.setVisible(this.isPermisoActualizarPagoAuto);	
			this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.setVisible(this.isPermisoEliminarPagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.setVisible(this.isVisibilidadCeldaCancelarPagoAuto);						
			this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.setVisible(this.isPermisoGuardarCambiosPagoAuto);							
		}
		
		this.jButtonGuardarCambiosTablaPagoAuto.setVisible(this.isPermisoActualizarPagoAuto);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePagoAuto() {
		this.jInternalFrameDetalleFormPagoAuto.jButtonModificarPagoAuto.setVisible(this.isPermisoActualizarPagoAuto);	
		this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.setVisible(this.isPermisoActualizarPagoAuto);	
		this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.setVisible(this.isPermisoEliminarPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.setVisible(this.isVisibilidadCeldaCancelarPagoAuto);							
		this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.setVisible((this.isVisibilidadCeldaGuardarPagoAuto && this.isPermisoGuardarCambiosPagoAuto));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPagoAuto() {
		if(PagoAutoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPagoAuto();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPagoAuto() {
	}
	
	public void jTableDatosPagoAutoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPagoAuto(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.pagoauto.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPagoAuto(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPagoAuto.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.pagoauto.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPagoAuto(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPagoAuto.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.pagoauto.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPagoAuto(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPagoAuto.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.pagoauto.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clientePagoAutoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPagoAuto=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosPagoAuto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPagoAuto.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clientePagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebPagoAuto(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPagoAuto.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clientePagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.pagoauto.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contablePagoAutoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPagoAuto=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosPagoAuto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderPagoAuto.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contablePagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebPagoAuto(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderPagoAuto.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contablePagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.pagoauto.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebPagoAuto(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPagoAuto.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.pagoauto.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_actividadPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentroactividad=true;

			idTienePermisocentroactividad=this.tienePermisosUsuarioEnPaginaWebPagoAuto(CentroActividadConstantesFunciones.CLASSNAME);

			if(idTienePermisocentroactividad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.centroactividadBeanSwingJInternalFrame=new CentroActividadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centroactividadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centroactividadBeanSwingJInternalFrame.getCentroActividadLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_centro_actividad()!=null) {
					this.centroactividadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centroactividadBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_centro_actividad());
					this.centroactividadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroActividad();
				}

				JInternalFrameBase jinternalFrame =this.centroactividadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordercentroactividad=(TitledBorder)this.centroactividadBeanSwingJInternalFrame.jScrollPanelDatosCentroActividad.getBorder();

				titledBordercentroactividad.setTitle(titledBorderPagoAuto.getTitle() + " -> Centro Actividad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_actividadPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_centro_actividad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_actividad = "+this.pagoauto.getid_centro_actividad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaPagoAutoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPagoAuto=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosPagoAuto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderPagoAuto.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebPagoAuto(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderPagoAuto.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.pagoauto.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_detalle_provePagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisodetalleprove=true;

			idTienePermisodetalleprove=this.tienePermisosUsuarioEnPaginaWebPagoAuto(DetalleProveConstantesFunciones.CLASSNAME);

			if(idTienePermisodetalleprove) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.detalleproveBeanSwingJInternalFrame=new DetalleProveBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.detalleproveBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.detalleproveBeanSwingJInternalFrame.getDetalleProveLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_detalle_prove()!=null) {
					this.detalleproveBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.detalleproveBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_detalle_prove());
					this.detalleproveBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.detalleproveBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.detalleproveBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleProve();
				}

				JInternalFrameBase jinternalFrame =this.detalleproveBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderdetalleprove=(TitledBorder)this.detalleproveBeanSwingJInternalFrame.jScrollPanelDatosDetalleProve.getBorder();

				titledBorderdetalleprove.setTitle(titledBorderPagoAuto.getTitle() + " -> Detalle Prove");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_detalle_provePagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_detalle_prove()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_detalle_prove = "+this.pagoauto.getid_detalle_prove().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_bancoPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentabanco=true;

			idTienePermisocuentabanco=this.tienePermisosUsuarioEnPaginaWebPagoAuto(CuentaBancoConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentabanco) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.cuentabancoBeanSwingJInternalFrame=new CuentaBancoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentabancoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentabancoBeanSwingJInternalFrame.getCuentaBancoLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_cuenta_banco()!=null) {
					this.cuentabancoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentabancoBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_cuenta_banco());
					this.cuentabancoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentabancoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentabancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaBanco();
				}

				JInternalFrameBase jinternalFrame =this.cuentabancoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordercuentabanco=(TitledBorder)this.cuentabancoBeanSwingJInternalFrame.jScrollPanelDatosCuentaBanco.getBorder();

				titledBordercuentabanco.setTitle(titledBorderPagoAuto.getTitle() + " -> Cuenta Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_bancoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_cuenta_banco()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_banco = "+this.pagoauto.getid_cuenta_banco().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebPagoAuto(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderPagoAuto.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.pagoauto.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pago_autoPagoAutoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopagoauto=true;

			idTienePermisoestadopagoauto=this.tienePermisosUsuarioEnPaginaWebPagoAuto(EstadoPagoAutoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopagoauto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPagoAuto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPagoAuto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);

				this.estadopagoautoBeanSwingJInternalFrame=new EstadoPagoAutoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopagoautoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopagoautoBeanSwingJInternalFrame.getEstadoPagoAutoLogic().setConnexion(this.pagoautoLogic.getConnexion());

				if(this.pagoauto.getid_estado_pago_auto()!=null) {
					this.estadopagoautoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopagoautoBeanSwingJInternalFrame.setIdActual(this.pagoauto.getid_estado_pago_auto());
					this.estadopagoautoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopagoautoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopagoautoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPagoAuto();
				}

				JInternalFrameBase jinternalFrame =this.estadopagoautoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPagoAuto=(TitledBorder)this.jScrollPanelDatosPagoAuto.getBorder();
				TitledBorder titledBorderestadopagoauto=(TitledBorder)this.estadopagoautoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPagoAuto.getBorder();

				titledBorderestadopagoauto.setTitle(titledBorderPagoAuto.getTitle() + " -> Estado Pago Automatico");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pago_autoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getid_estado_pago_auto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pago_auto = "+this.pagoauto.getid_estado_pago_auto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_facturaPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getnumero_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_factura like '%"+this.pagoauto.getnumero_factura()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.pagoauto.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_vencimientoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getfecha_vencimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vencimiento = '"+Funciones2.getStringPostgresDate(this.pagoauto.getfecha_vencimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_cortePagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getfecha_corte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_corte = '"+Funciones2.getStringPostgresDate(this.pagoauto.getfecha_corte())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_por_pagarPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getvalor_por_pagar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_por_pagar = "+this.pagoauto.getvalor_por_pagar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_canceladoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getvalor_cancelado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_cancelado = "+this.pagoauto.getvalor_cancelado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonesta_autorizadoPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getesta_autorizado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where esta_autorizado = "+this.pagoauto.getesta_autorizado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPagoAutoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.getpagoauto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pagoauto==null) {
						this.pagoauto = new PagoAuto();
					}

					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);
				}

				if(this.pagoauto.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.pagoauto.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPagoAuto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAsientoContablePagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdAsientoContable();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroActividadPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdCentroActividad();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdCentroCosto();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClientePagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdCliente();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaBancoPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdCuentaBanco();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdDetalleProvePagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdDetalleProve();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdEjercicio();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdEmpresa();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPagoAutoPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdEstadoPagoAuto();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFacturaPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdFactura();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdSucursal();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionPagoAutoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPagoAuto(false,false);

			this.getPagoAutosFK_IdTransaccion();

			this.inicializarActualizarBindingPagoAuto(false);

			//if(PagoAutoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPagoAuto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pagoautoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePagoAuto() {
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
			this.jInternalFrameDetalleFormPagoAuto.setVisible(false);	    			
			this.jInternalFrameDetalleFormPagoAuto.dispose();
			this.jInternalFrameDetalleFormPagoAuto=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
			this.jInternalFrameReporteDinamicoPagoAuto.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPagoAuto.dispose();
			this.jInternalFrameReporteDinamicoPagoAuto=null;
		}
		
		if(this.jInternalFrameImportacionPagoAuto!=null) {
			this.jInternalFrameImportacionPagoAuto.setVisible(false);	    			
			this.jInternalFrameImportacionPagoAuto.dispose();
			this.jInternalFrameImportacionPagoAuto=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPagoAuto();
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			
			if(sTipo.equals("NuevoPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPagoAuto")) {
				jButtonDuplicarPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPagoAuto")) {
				jButtonCopiarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("VerFormPagoAuto")) {
				jButtonVerFormPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPagoAuto")) {
				jButtonDuplicarPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPagoAuto")) {
				jButtonDuplicarPagoAutoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPagoAuto")) {
				jButtonModificarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPagoAuto")) {
				jButtonModificarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPagoAuto")) {
				jButtonModificarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPagoAuto")) {
				jButtonActualizarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPagoAuto")) {
				jButtonActualizarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPagoAuto")) {
				jButtonActualizarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("EliminarPagoAuto")) {
				jButtonEliminarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPagoAuto")) {
				jButtonEliminarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPagoAuto")) {
				jButtonEliminarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("CancelarPagoAuto")) {
				jButtonCancelarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPagoAuto")) {
				jButtonCancelarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPagoAuto")) {
				jButtonCancelarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("CerrarPagoAuto")) {
				jButtonCerrarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPagoAuto")) {
				jButtonCerrarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPagoAuto")) {
				jButtonCerrarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPagoAuto")) {
				jButtonMostrarOcultarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPagoAuto")) {
				jButtonCancelarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPagoAuto")) {
				jButtonCopiarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPagoAuto")) {
				jButtonVerFormPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPagoAuto")) {
				jButtonCopiarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPagoAuto")) {
				jButtonVerFormPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPagoAuto")) {
				jButtonRecargarInformacionPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPagoAuto")) {
				jButtonRecargarInformacionPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPagoAuto")) {
				jButtonRecargarInformacionPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPagoAuto")) {
				jButtonAnterioresPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPagoAuto")) {
				jButtonAnterioresPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePagoAuto")) {
				jButtonAnterioresPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPagoAuto")) {
				jButtonSiguientesPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPagoAuto")) {
				jButtonSiguientesPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPagoAuto")) {
				jButtonSiguientesPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPagoAuto") || sTipo.equals("MenuItemDetalleAbrirOrderByPagoAuto")) {
				jButtonAbrirOrderByPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPagoAuto") || sTipo.equals("MenuItemDetalleMostrarOcultarPagoAuto")) {
				jButtonMostrarOcultarPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPagoAuto")) {
				jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPagoAuto")) {
				jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPagoAuto")) {
				jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPagoAuto")) {
				jButtonCerrarReporteDinamicoPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPagoAuto")) {
				jButtonGenerarReporteDinamicoPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPagoAuto")) {
				
				jButtonGenerarExcelReporteDinamicoPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPagoAuto")) {
				jButtonCerrarImportacionPagoAutoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPagoAuto")) {
				
				jButtonGenerarImportacionPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPagoAuto")) {
				
				jButtonAbrirImportacionPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPagoAuto")) {
				jComboBoxTiposAccionesPagoAutoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPagoAuto")) {
				jComboBoxTiposRelacionesPagoAutoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPagoAuto")) {
				jComboBoxTiposAccionesPagoAutoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPagoAuto")) {
				
				jComboBoxTiposSeleccionarPagoAutoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPagoAuto")) {
				jTextFieldValorCampoGeneralPagoAutoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPagoAuto")) {
				jButtonAbrirOrderByPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPagoAuto")) {
				jButtonAbrirOrderByPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPagoAuto")) {
				jButtonCerrarOrderByPagoAutoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPagoAutoBusqueda")) {
				this.jButtonidPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPagoAutoUpdate")) {
				this.jButtonid_empresaPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPagoAutoBusqueda")) {
				this.jButtonid_empresaPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPagoAutoUpdate")) {
				this.jButtonid_sucursalPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPagoAutoBusqueda")) {
				this.jButtonid_sucursalPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPagoAutoUpdate")) {
				this.jButtonid_ejercicioPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPagoAutoBusqueda")) {
				this.jButtonid_ejercicioPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePagoAuto")) {
				this.jButtonid_clientePagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePagoAutoUpdate")) {
				this.jButtonid_clientePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePagoAutoBusqueda")) {
				this.jButtonid_clientePagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAuto")) {
				this.jButtonid_asiento_contablePagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAutoUpdate")) {
				this.jButtonid_asiento_contablePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAutoBusqueda")) {
				this.jButtonid_asiento_contablePagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPagoAutoUpdate")) {
				this.jButtonid_centro_costoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPagoAutoBusqueda")) {
				this.jButtonid_centro_costoPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadPagoAutoUpdate")) {
				this.jButtonid_centro_actividadPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadPagoAutoBusqueda")) {
				this.jButtonid_centro_actividadPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaPagoAuto")) {
				this.jButtonid_facturaPagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaPagoAutoUpdate")) {
				this.jButtonid_facturaPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaPagoAutoBusqueda")) {
				this.jButtonid_facturaPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_detalle_provePagoAutoUpdate")) {
				this.jButtonid_detalle_provePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_detalle_provePagoAutoBusqueda")) {
				this.jButtonid_detalle_provePagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_bancoPagoAutoUpdate")) {
				this.jButtonid_cuenta_bancoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_bancoPagoAutoBusqueda")) {
				this.jButtonid_cuenta_bancoPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionPagoAutoUpdate")) {
				this.jButtonid_transaccionPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionPagoAutoBusqueda")) {
				this.jButtonid_transaccionPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pago_autoPagoAutoUpdate")) {
				this.jButtonid_estado_pago_autoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pago_autoPagoAutoBusqueda")) {
				this.jButtonid_estado_pago_autoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaPagoAutoBusqueda")) {
				this.jButtonnumero_facturaPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPagoAutoBusqueda")) {
				this.jButtonfecha_emisionPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoPagoAutoBusqueda")) {
				this.jButtonfecha_vencimientoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_cortePagoAutoBusqueda")) {
				this.jButtonfecha_cortePagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_por_pagarPagoAutoBusqueda")) {
				this.jButtonvalor_por_pagarPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_canceladoPagoAutoBusqueda")) {
				this.jButtonvalor_canceladoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_autorizadoPagoAutoBusqueda")) {
				this.jButtonesta_autorizadoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPagoAutoBusqueda")) {
				this.jButtondescripcionPagoAutoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contablePagoAuto")) {
				this.jButtonid_asiento_contablePagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("id_clientePagoAuto")) {
				this.jButtonid_clientePagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaPagoAuto")) {
				this.jButtonid_facturaPagoAutoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContablePagoAuto")) {
				this.jButtonFK_IdAsientoContablePagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroActividadPagoAuto")) {
				this.jButtonFK_IdCentroActividadPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoPagoAuto")) {
				this.jButtonFK_IdCentroCostoPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClientePagoAuto")) {
				this.jButtonFK_IdClientePagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaBancoPagoAuto")) {
				this.jButtonFK_IdCuentaBancoPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdDetalleProvePagoAuto")) {
				this.jButtonFK_IdDetalleProvePagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPagoAutoPagoAuto")) {
				this.jButtonFK_IdEstadoPagoAutoPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFacturaPagoAuto")) {
				this.jButtonFK_IdFacturaPagoAutoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionPagoAuto")) {
				this.jButtonFK_IdTransaccionPagoAutoActionPerformed(evt);
			}
			
			;
			
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPagoAuto();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PagoAuto pagoautoLocal=null;
			
			if(!this.getEsControlTabla()) {
				pagoautoLocal=this.pagoauto;
			} else {
				pagoautoLocal=this.pagoautoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
							
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
								
						
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
								
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
							
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
								
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPagoAuto")) {
					jCheckBoxSeleccionarTodosPagoAutoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPagoAuto")) {
					jCheckBoxSeleccionadosPagoAutoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPagoAuto")) {
					
				}
				
				


				
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
												
				
				


				
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPagoAutoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pagoauto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pagoauto);
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PagoAuto.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PagoAuto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPagoAutoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pagoautoAnterior =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPagoAuto")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPagoAutoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPagoAuto.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.pagoauto =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.pagoauto =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.pagoauto);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPagoAuto")) {
				
				}
				
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPagoAuto")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPagoAuto.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPagoAuto")) {
			
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPagoAuto();
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			if(sTipo.equals("NuevoPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPagoAuto")) {
				jButtonDuplicarPagoAutoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPagoAuto")) {
				jButtonCopiarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPagoAuto")) {
				jButtonVerFormPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPagoAuto")) {
				jButtonNuevoPagoAutoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPagoAuto")) {
				jButtonModificarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPagoAuto")) {
				jButtonActualizarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPagoAuto")) {
				jButtonEliminarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPagoAuto")) {
				jButtonCancelarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPagoAuto")) {
				jButtonCerrarPagoAutoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPagoAuto")) {
				jButtonGuardarCambiosPagoAutoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPagoAuto")) {
				jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPagoAuto")) {
				jButtonAbrirOrderByPagoAutoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPagoAuto")) {
				jButtonRecargarInformacionPagoAutoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPagoAuto")) {
				jButtonAnterioresPagoAutoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPagoAuto")) {
				jButtonSiguientesPagoAutoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPagoAutoBusqueda")) {
				this.jButtonidPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPagoAutoUpdate")) {
				this.jButtonid_empresaPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPagoAutoBusqueda")) {
				this.jButtonid_empresaPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPagoAutoUpdate")) {
				this.jButtonid_sucursalPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPagoAutoBusqueda")) {
				this.jButtonid_sucursalPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPagoAutoUpdate")) {
				this.jButtonid_ejercicioPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPagoAutoBusqueda")) {
				this.jButtonid_ejercicioPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePagoAuto")) {
				this.jButtonid_clientePagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePagoAutoUpdate")) {
				this.jButtonid_clientePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePagoAutoBusqueda")) {
				this.jButtonid_clientePagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAuto")) {
				this.jButtonid_asiento_contablePagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAutoUpdate")) {
				this.jButtonid_asiento_contablePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contablePagoAutoBusqueda")) {
				this.jButtonid_asiento_contablePagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPagoAutoUpdate")) {
				this.jButtonid_centro_costoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPagoAutoBusqueda")) {
				this.jButtonid_centro_costoPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadPagoAutoUpdate")) {
				this.jButtonid_centro_actividadPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadPagoAutoBusqueda")) {
				this.jButtonid_centro_actividadPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaPagoAuto")) {
				this.jButtonid_facturaPagoAutoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaPagoAutoUpdate")) {
				this.jButtonid_facturaPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaPagoAutoBusqueda")) {
				this.jButtonid_facturaPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_detalle_provePagoAutoUpdate")) {
				this.jButtonid_detalle_provePagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_detalle_provePagoAutoBusqueda")) {
				this.jButtonid_detalle_provePagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_bancoPagoAutoUpdate")) {
				this.jButtonid_cuenta_bancoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_bancoPagoAutoBusqueda")) {
				this.jButtonid_cuenta_bancoPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionPagoAutoUpdate")) {
				this.jButtonid_transaccionPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionPagoAutoBusqueda")) {
				this.jButtonid_transaccionPagoAutoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pago_autoPagoAutoUpdate")) {
				this.jButtonid_estado_pago_autoPagoAutoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pago_autoPagoAutoBusqueda")) {
				this.jButtonid_estado_pago_autoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaPagoAutoBusqueda")) {
				this.jButtonnumero_facturaPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPagoAutoBusqueda")) {
				this.jButtonfecha_emisionPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoPagoAutoBusqueda")) {
				this.jButtonfecha_vencimientoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_cortePagoAutoBusqueda")) {
				this.jButtonfecha_cortePagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_por_pagarPagoAutoBusqueda")) {
				this.jButtonvalor_por_pagarPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_canceladoPagoAutoBusqueda")) {
				this.jButtonvalor_canceladoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_autorizadoPagoAutoBusqueda")) {
				this.jButtonesta_autorizadoPagoAutoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPagoAutoBusqueda")) {
				this.jButtondescripcionPagoAutoBusquedaActionPerformed(evt);
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPagoAuto();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePagoAuto")) {
				closingInternalFramePagoAuto();
				
			} else if(sTipo.equals("jButtonCancelarPagoAuto")) {
				JInternalFrameBase jInternalFrameDetalleFormPagoAuto = (JInternalFrameBase)evt.getSource();
	            	
	            PagoAutoBeanSwingJInternalFrame jInternalFrameParent=(PagoAutoBeanSwingJInternalFrame)jInternalFrameDetalleFormPagoAuto.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPagoAutoActionPerformed(null);
			}
			
			PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pagoauto,new Object(),this.pagoautoParameterGeneral,this.pagoautoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPagoAuto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPagoAuto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPagoAuto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.pagoauto)) {
			if(!esControlTabla) {
				if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);			
				}
				
				if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPagoAuto(this.pagoauto,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pagoautoReturnGeneral=pagoautoLogic.procesarEventosPagoAutosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pagoautoLogic.getPagoAutos(),this.pagoauto,this.pagoautoParameterGeneral,this.isEsNuevoPagoAuto,classes);//this.pagoautoLogic.getPagoAuto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPagoAuto(this.pagoautoReturnGeneral,this.pagoautoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPagoAuto(classes,this.pagoautoReturnGeneral,this.pagoautoBean,false);
					}
						
					if(this.pagoautoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPagoAuto(this.pagoautoReturnGeneral.getPagoAuto());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPagoAuto(this.pagoautoReturnGeneral.getPagoAuto());	
					}
						
					if(this.pagoautoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPagoAuto(this.pagoautoReturnGeneral.getPagoAuto(),classes);//this.pagoautoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPagoAuto(this.pagoauto,classes);//this.pagoautoBean);									
				}
			
				if(PagoAutoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPagoAuto(this.pagoauto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPagoAuto(this.pagoauto);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.pagoautoAnterior!=null) {
						this.pagoauto=this.pagoautoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pagoautoReturnGeneral=pagoautoLogic.procesarEventosPagoAutosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pagoautoLogic.getPagoAutos(),this.pagoauto,this.pagoautoParameterGeneral,this.isEsNuevoPagoAuto,classes);//this.pagoautoLogic.getPagoAuto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pagoautoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pagoautoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.pagoautoReturnGeneral.getPagoAuto(),pagoautoLogic.getPagoAutos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.pagoautoReturnGeneral.getPagoAuto(),this.pagoautos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPagoAuto.repaint();
				
				//((AbstractTableModel) this.jTableDatosPagoAuto.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPagoAuto();
			}
		}
	}
	
	public void actualizarVisualTableDatosPagoAuto() throws Exception {
		
		PagoAutoModel pagoautoModel=(PagoAutoModel)this.jTableDatosPagoAuto.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pagoautoModel.pagoautos=this.pagoautoLogic.getPagoAutos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			pagoautoModel.pagoautos=this.pagoautos;
		}
		
		
		((PagoAutoModel) this.jTableDatosPagoAuto.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPagoAuto() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpagoautoAnterior(),this.pagoautoLogic.getPagoAutos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpagoautoAnterior(),this.pagoautos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPagoAuto();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPagoAuto(PagoAuto pagoauto,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pagoauto,new Object(),generalEntityParameterGeneral,this.pagoautoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.pagoautoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PagoAutoConstantesFunciones.getClassesRelationshipsOfPagoAuto(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PagoAutoConstantesFunciones.getClassesRelationshipsFromStringsOfPagoAuto(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPagoAuto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PagoAutoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pagoauto,new Object(),generalEntityParameterGeneral,this.pagoautoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPagoAuto(PagoAutoBean pagoautoBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPagoAuto(ArrayList<Classe> classes,PagoAutoReturnGeneral pagoautoReturnGeneral,PagoAutoBean pagoautoBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPagoAuto(PagoAuto pagoauto,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.pagoauto)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPagoAuto = new PagoAutoDetalleFormJInternalFrame(jDesktopPane,this.pagoautoSessionBean.getConGuardarRelaciones(),this.pagoautoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.setVisible(false);
		this.jInternalFrameDetalleFormPagoAuto.setSelected(false);						
		
		this.jInternalFrameDetalleFormPagoAuto.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPagoAuto.pagoautoLogic=this.pagoautoLogic;
		
		this.cargarCombosFrameForeignKeyPagoAuto("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePagoAuto();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePagoAuto();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPagoAuto("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPagoAuto();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPagoAuto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPagoAuto"));
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonModificarPagoAuto.addActionListener(new ButtonActionListener(this,"ModificarPagoAuto"));

		
		this.jInternalFrameDetalleFormPagoAuto.jButtonModificarToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"ModificarToolBarPagoAuto"));
					
		this.jInternalFrameDetalleFormPagoAuto.jMenuItemModificarPagoAuto.addActionListener(new ButtonActionListener(this,"MenuItemModificarPagoAuto"));		
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.addActionListener (new ButtonActionListener(this,"ActualizarPagoAuto"));
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPagoAuto"));
						
		this.jInternalFrameDetalleFormPagoAuto.jMenuItemActualizarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPagoAuto"));		
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.addActionListener (new ButtonActionListener(this,"EliminarPagoAuto"));
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"EliminarToolBarPagoAuto"));
								
		this.jInternalFrameDetalleFormPagoAuto.jMenuItemEliminarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPagoAuto"));		
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.addActionListener (new ButtonActionListener(this,"CancelarPagoAuto"));
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"CancelarToolBarPagoAuto"));
					
		this.jInternalFrameDetalleFormPagoAuto.jMenuItemCancelarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPagoAuto"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jMenuItemDetalleCerrarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPagoAuto"));		
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPagoAuto"));
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPagoAuto"));
		
		
		
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPagoAuto"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonidPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"idPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoBusqueda"));
		//jButtonid_clientePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAuto.addActionListener(new ButtonActionListener(this,"id_clientePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoBusqueda"));
		//jButtonid_asiento_contablePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contablePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAuto.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoBusqueda"));
		//jButtonid_facturaPagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaPagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAuto.addActionListener(new ButtonActionListener(this,"id_facturaPagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonnumero_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_emisionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_vencimientoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_cortePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_cortePagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_por_pagarPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_por_pagarPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_canceladoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonesta_autorizadoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"esta_autorizadoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtondescripcionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPagoAutoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPagoAuto"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePagoAuto"));
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPagoAuto"));
		}
		
		this.jTableDatosPagoAuto.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPagoAuto"));
		
		this.jTableDatosPagoAuto.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPagoAuto"));
		
		this.jButtonNuevoPagoAuto.addActionListener(new ButtonActionListener(this,"NuevoPagoAuto"));
		
		this.jButtonDuplicarPagoAuto.addActionListener(new ButtonActionListener(this,"DuplicarPagoAuto"));
		
		this.jButtonCopiarPagoAuto.addActionListener(new ButtonActionListener(this,"CopiarPagoAuto"));
		
		this.jButtonVerFormPagoAuto.addActionListener(new ButtonActionListener(this,"VerFormPagoAuto"));
		
		
		this.jButtonNuevoToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"NuevoToolBarPagoAuto"));
			
		this.jButtonDuplicarToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPagoAuto"));
			
		this.jMenuItemNuevoPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPagoAuto"));
			
		this.jMenuItemDuplicarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPagoAuto"));		
		
		
		this.jButtonNuevoRelacionesPagoAuto.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPagoAuto"));
		
		
		this.jButtonNuevoRelacionesToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPagoAuto"));
			
		this.jMenuItemNuevoRelacionesPagoAuto.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPagoAuto"));		
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonModificarPagoAuto.addActionListener(new ButtonActionListener(this,"ModificarPagoAuto"));
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonModificarToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"ModificarToolBarPagoAuto"));
			
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemModificarPagoAuto.addActionListener(new ButtonActionListener(this,"MenuItemModificarPagoAuto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarPagoAuto.addActionListener (new ButtonActionListener(this,"ActualizarPagoAuto"));
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonActualizarToolBarPagoAuto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPagoAuto"));
				
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemActualizarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPagoAuto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarPagoAuto.addActionListener (new ButtonActionListener(this,"EliminarPagoAuto"));
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonEliminarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"EliminarToolBarPagoAuto"));
						
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemEliminarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPagoAuto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarPagoAuto.addActionListener (new ButtonActionListener(this,"CancelarPagoAuto"));
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonCancelarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"CancelarToolBarPagoAuto"));
			
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemCancelarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPagoAuto"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPagoAuto"));		
		
		
		this.jButtonCerrarPagoAuto.addActionListener (new ButtonActionListener(this,"CerrarPagoAuto"));
		
		
		this.jButtonCerrarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"CerrarToolBarPagoAuto"));
			
		this.jMenuItemCerrarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPagoAuto"));
			
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jMenuItemDetalleCerrarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPagoAuto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosPagoAuto"));
		}
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPagoAuto"));
		}
		
		this.jButtonCopiarToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"CopiarToolBarPagoAuto"));
			
		this.jButtonVerFormToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"VerFormToolBarPagoAuto"));
		
		this.jMenuItemGuardarCambiosPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPagoAuto"));
			
		this.jMenuItemCopiarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPagoAuto"));		
		
		this.jMenuItemVerFormPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPagoAuto"));		
		
		
		this.jButtonGuardarCambiosTablaPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPagoAuto"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPagoAuto"));
			
		this.jMenuItemGuardarCambiosTablaPagoAuto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPagoAuto"));		
		
		
		
		this.jButtonRecargarInformacionPagoAuto.addActionListener (new ButtonActionListener(this,"RecargarInformacionPagoAuto"));
					
		this.jButtonRecargarInformacionToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPagoAuto"));
		
		this.jMenuItemRecargarInformacionPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPagoAuto"));		
		
		
		
		this.jButtonAnterioresPagoAuto.addActionListener (new ButtonActionListener(this,"AnterioresPagoAuto"));
		
		
		this.jButtonAnterioresToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPagoAuto"));
		
		this.jMenuItemAnterioresPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPagoAuto"));		
		
		
		this.jButtonSiguientesPagoAuto.addActionListener (new ButtonActionListener(this,"SiguientesPagoAuto"));
		
		
		this.jButtonSiguientesToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPagoAuto"));
			
		this.jMenuItemSiguientesPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPagoAuto"));
			
		this.jMenuItemAbrirOrderByPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPagoAuto"));
			
		this.jMenuItemMostrarOcultarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPagoAuto"));
			
		this.jMenuItemDetalleAbrirOrderByPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPagoAuto"));
			
		this.jMenuItemDetalleMostarOcultarPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPagoAuto"));		
		
		
		this.jButtonNuevoGuardarCambiosPagoAuto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPagoAuto"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPagoAuto"));
			
		this.jMenuItemNuevoGuardarCambiosPagoAuto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPagoAuto"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPagoAuto.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPagoAuto"));

		this.jCheckBoxSeleccionadosPagoAuto.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPagoAuto"));
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPagoAuto"));
		}
		
		
		this.jComboBoxTiposRelacionesPagoAuto.addActionListener (new ButtonActionListener(this,"TiposRelacionesPagoAuto"));
			
		this.jComboBoxTiposAccionesPagoAuto.addActionListener (new ButtonActionListener(this,"TiposAccionesPagoAuto"));
					
		this.jComboBoxTiposSeleccionarPagoAuto.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPagoAuto"));
			
		this.jTextFieldValorCampoGeneralPagoAuto.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPagoAuto"));		
		
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonidPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"idPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoBusqueda"));
		//jButtonid_clientePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAuto.addActionListener(new ButtonActionListener(this,"id_clientePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoBusqueda"));
		//jButtonid_asiento_contablePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contablePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAuto.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoBusqueda"));
		//jButtonid_facturaPagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaPagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAuto.addActionListener(new ButtonActionListener(this,"id_facturaPagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonnumero_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_emisionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_vencimientoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_cortePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_cortePagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_por_pagarPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_por_pagarPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_canceladoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonesta_autorizadoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"esta_autorizadoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtondescripcionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPagoAutoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContablePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContablePagoAuto"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contablePagoAuto.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAuto"));

			this.jButtonFK_IdCentroActividadPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCentroActividadPagoAuto"));

			this.jButtonFK_IdCentroCostoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPagoAuto"));

			this.jButtonFK_IdClientePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdClientePagoAuto"));

			this.jButtonBuscarFK_IdClienteid_clientePagoAuto.addActionListener(new ButtonActionListener(this,"id_clientePagoAuto"));

			this.jButtonFK_IdCuentaBancoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoPagoAuto"));

			this.jButtonFK_IdDetalleProvePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdDetalleProvePagoAuto"));

			this.jButtonFK_IdEstadoPagoAutoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPagoAutoPagoAuto"));

			this.jButtonFK_IdFacturaPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdFacturaPagoAuto"));

			this.jButtonBuscarFK_IdFacturaid_facturaPagoAuto.addActionListener(new ButtonActionListener(this,"id_facturaPagoAuto"));

			this.jButtonFK_IdTransaccionPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionPagoAuto"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPagoAuto!=null) {
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPagoAuto"));
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPagoAuto"));
				this.jInternalFrameReporteDinamicoPagoAuto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPagoAuto"));
			}
			
			//this.jButtonCerrarReporteDinamicoPagoAuto.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPagoAuto"));				
			//this.jButtonGenerarReporteDinamicoPagoAuto.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPagoAuto"));
			//this.jButtonGenerarExcelReporteDinamicoPagoAuto.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPagoAuto"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPagoAuto!=null) {
				this.jInternalFrameImportacionPagoAuto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPagoAuto"));
				this.jInternalFrameImportacionPagoAuto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPagoAuto"));
				this.jInternalFrameImportacionPagoAuto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPagoAuto"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPagoAuto.addActionListener (new ButtonActionListener(this,"AbrirOrderByPagoAuto"));
			
			this.jButtonAbrirOrderByToolBarPagoAuto.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPagoAuto"));			
			
			if(this.jInternalFrameOrderByPagoAuto!=null) {
				this.jInternalFrameOrderByPagoAuto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPagoAuto"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPagoAuto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPagoAuto.jTabbedPaneRelacionesPagoAuto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPagoAuto"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePagoAuto();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPagoAuto.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPagoAuto = (JInternalFrameBase)event.getSource();
	            	
	            PagoAutoBeanSwingJInternalFrame jInternalFrameParent=(PagoAutoBeanSwingJInternalFrame)jInternalFrameDetalleFormPagoAuto.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPagoAutoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPagoAuto.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPagoAutoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPagoAuto.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPagoAuto.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPagoAuto";
		inputMap = this.jButtonNuevoPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPagoAutoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPagoAutoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPagoAuto";
		inputMap = this.jButtonNuevoRelacionesPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPagoAutoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPagoAuto";
		inputMap = this.jButtonModificarPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPagoAuto";
		inputMap = this.jButtonActualizarPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPagoAuto";
		inputMap = this.jButtonEliminarPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPagoAuto";
		inputMap = this.jButtonCancelarPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPagoAuto";
		inputMap = this.jButtonCerrarPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPagoAuto";
		inputMap = this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPagoAuto.jButtonGuardarCambiosPagoAuto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPagoAutoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPagoAuto.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPagoAutoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPagoAuto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPagoAutoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPagoAuto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPagoAutoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPagoAuto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPagoAutoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonidPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"idPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_empresaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_sucursalPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_ejercicioPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPagoAutoBusqueda"));
		//jButtonid_clientePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAuto.addActionListener(new ButtonActionListener(this,"id_clientePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePagoAutoBusqueda"));
		//jButtonid_asiento_contablePagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contablePagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAuto.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_costoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_centro_actividadPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPagoAutoBusqueda"));
		//jButtonid_facturaPagoAuto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaPagoAutoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAuto.addActionListener(new ButtonActionListener(this,"id_facturaPagoAuto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_detalle_provePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_provePagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_cuenta_bancoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_transaccionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionPagoAutoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonid_estado_pago_autoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pago_autoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonnumero_facturaPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_emisionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_vencimientoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonfecha_cortePagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_cortePagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_por_pagarPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_por_pagarPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonvalor_canceladoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtonesta_autorizadoPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"esta_autorizadoPagoAutoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPagoAuto.jButtondescripcionPagoAutoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPagoAutoBusqueda"));
		
		
		this.jButtonFK_IdAsientoContablePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContablePagoAuto"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contablePagoAuto.addActionListener(new ButtonActionListener(this,"id_asiento_contablePagoAuto"));

		this.jButtonFK_IdCentroActividadPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCentroActividadPagoAuto"));

		this.jButtonFK_IdCentroCostoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPagoAuto"));

		this.jButtonFK_IdClientePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdClientePagoAuto"));

		this.jButtonBuscarFK_IdClienteid_clientePagoAuto.addActionListener(new ButtonActionListener(this,"id_clientePagoAuto"));

		this.jButtonFK_IdCuentaBancoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoPagoAuto"));

		this.jButtonFK_IdDetalleProvePagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdDetalleProvePagoAuto"));

		this.jButtonFK_IdEstadoPagoAutoPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPagoAutoPagoAuto"));

		this.jButtonFK_IdFacturaPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdFacturaPagoAuto"));

		this.jButtonBuscarFK_IdFacturaid_facturaPagoAuto.addActionListener(new ButtonActionListener(this,"id_facturaPagoAuto"));

		this.jButtonFK_IdTransaccionPagoAuto.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionPagoAuto"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPagoAuto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPagoAutoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPagoAutoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPagoAuto.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPagoAuto(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
					pagoautoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PagoAuto pagoautoAux:pagoautos) {
					pagoautoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPagoAutoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPagoAuto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
						pagoautoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PagoAuto pagoautoAux:pagoautos) {
						pagoautoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
					
						if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO)) {
							existe=true;
							pagoautoAux.setesta_autorizado(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PagoAuto pagoautoAux:pagoautos) {
						
						if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO)) {
							existe=true;
							pagoautoAux.setesta_autorizado(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPagoAuto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPagoAuto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPagoAuto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPagoAutoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPagoAuto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPagoAuto.getSelectedRows();
			
			PagoAuto pagoautoLocal=new PagoAuto();
			
			//this.seleccionarTodosPagoAuto(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pagoautoLocal =(PagoAuto) this.pagoautoLogic.getPagoAutos().toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					pagoautoLocal =(PagoAuto) this.pagoautos.toArray()[this.jTableDatosPagoAuto.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				pagoautoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
						pagoautoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PagoAuto pagoautoAux:pagoautos) {
						pagoautoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPagoAuto(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPagoAuto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPagoAuto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPagoAuto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPagoAutoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPagoAutoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPagoAutoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPagoAuto(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPagoAuto.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PagoAuto pagoautoAux:this.pagoautoLogic.getPagoAutos()) {
				
						if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							pagoautoAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pagoautoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							pagoautoAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHACORTE)) {
							existe=true;
							pagoautoAux.setfecha_corte(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR)) {
							existe=true;
							pagoautoAux.setvalor_por_pagar(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO)) {
							existe=true;
							pagoautoAux.setvalor_cancelado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pagoautoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PagoAuto pagoautoAux:pagoautos) {
					
						if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							pagoautoAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pagoautoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							pagoautoAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHACORTE)) {
							existe=true;
							pagoautoAux.setfecha_corte(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR)) {
							existe=true;
							pagoautoAux.setvalor_por_pagar(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO)) {
							existe=true;
							pagoautoAux.setvalor_cancelado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pagoautoAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPagoAuto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPagoAutoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPagoAuto(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPagoAuto=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPagoAuto.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePagoAuto) {				
					conSplash=true;//false;										
					
					//this.startProcessPagoAuto(conSplash);
				
					this.generarReportePagoAutosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPagoAutosSeleccionados();
				//this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPagoAutosSeleccionados(false);
				//this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPagoAutosSeleccionados(true);
				//this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPagoAuto();
				
				this.exportarPagoAutosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPagoAutos();
				//this.importarPagoAutos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPagoAuto();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPagoAutosSeleccionados();
				//this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Pago Auto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPagoAuto();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPagoAuto)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPagoAuto(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
				}	
			} 			
			else if(PagoAutoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePagoAuto) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPagoAuto(conSplash);
					
						//this.actualizarParametrosGeneralPagoAuto();
						
						this.generarReporteProcesoAccionPagoAutosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PagoAutoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Pago AutoS SELECCIONADOS?", "MANTENIMIENTO DE Pago Auto", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPagoAuto();
				
						this.actualizarParametrosGeneralPagoAuto();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.pagoautoReturnGeneral=pagoautoLogic.procesarAccionPagoAutosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.pagoautoLogic.getPagoAutos(),this.pagoautoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPagoAutoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPagoAuto();
					
					PagoAutoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPagoAutoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPagoAuto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPagoAuto.jComboBoxTiposAccionesFormularioPagoAuto.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPagoAuto(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPagoAutoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPagoAuto();
			
			if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
			PagoAuto pagoauto=new PagoAuto();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPagoAuto(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPagoAuto.getSelectedItem();
			
			
			
			
			pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
			//this.sTipoAccion;
			
			if(pagoautosSeleccionados.size()==1) {
				for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
					pagoauto=pagoautoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPagoAuto();
			
      		//this.finishProcessPagoAuto(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPagoAutoReturnGeneral() throws Exception {
		if(this.pagoautoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.pagoautoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.pagoautoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.pagoautoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.pagoautoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.pagoautoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPagoAuto(false);
		}
		
		if(this.pagoautoReturnGeneral.getConRetornoLista() || this.pagoautoReturnGeneral.getConRetornoObjeto()) {
			if(this.pagoautoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pagoautoLogic.setPagoAutos(this.pagoautoReturnGeneral.getPagoAutos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.pagoautoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pagoautoLogic.setPagoAuto(this.pagoautoReturnGeneral.getPagoAuto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPagoAuto(false);
		}
	}
	
	public void actualizarParametrosGeneralPagoAuto() throws Exception {
		
		
	}
	
	public ArrayList<PagoAuto> getPagoAutosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPagoAuto) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PagoAuto pagoautoAux:pagoautoLogic.getPagoAutos()) {
					if(pagoautoAux.getIsSelected()) {
						pagoautosSeleccionados.add(pagoautoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PagoAuto pagoautoAux:this.pagoautos) {
					if(pagoautoAux.getIsSelected()) {
						pagoautosSeleccionados.add(pagoautoAux);				
					}
				}
			}
			
			if(pagoautosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						pagoautosSeleccionados.addAll(this.pagoautoLogic.getPagoAutos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						pagoautosSeleccionados.addAll(this.pagoautos);				
					}
				}
			}
		} else {
			pagoautosSeleccionados.add(this.pagoauto);
		}
		
		return pagoautosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePagoAutosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPagoAutosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPagoAutosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPagoAutosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPagoAutosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Pago Auto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePagoAutos("Todos",pagoautosSeleccionados);
		
	}	
	
	public void generarReporteNormalPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePagoAutos("Todos",pagoautosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPagoAutosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePagoAutos("Todos",pagoautosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPagoAuto();
		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPagoAuto();
		
		
		//this.generarReportePagoAutos("Todos",pagoautosSeleccionados ,pagoautoImplementable,pagoautoImplementableHome);
	}
	
	public void mostrarImportacionPagoAutos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPagoAuto();
		
		this.abrirFrameImportacionPagoAuto();		
		
			
		//this.generarReportePagoAutos("Todos",pagoautosSeleccionados ,pagoautoImplementable,pagoautoImplementableHome);
	}
	
	public void importarPagoAutos() throws Exception {		
	
	}
	
	public void exportarPagoAutosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPagoAutosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPagoAutosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPagoAutosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Pago Auto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPagoAuto(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPagoAuto(pagoautoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//pagoautoAux.setsDetalleGeneralEntityReporte(pagoautoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPagoAuto(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_FECHACORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_VALORCANCELADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PagoAutoConstantesFunciones.LABEL_DESCRIPCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPagoAuto(PagoAuto pagoauto,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=pagoauto.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getcentroactividad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getdetalleprove_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getcuentabanco_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getestadopagoauto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getnumero_factura();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getfecha_vencimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getfecha_corte().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getvalor_por_pagar().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getvalor_cancelado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getesta_autorizado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pagoauto.getdescripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PagoAutos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPagoAuto(row);				
				iRow++;
			}				
			
			for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPagoAuto(pagoautoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPagoAutosSeleccionados() throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();		
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pagoauto.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("pagoautos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("pagoauto");
			//elementRoot.appendChild(element);
		
			for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
				element = document.createElement("pagoauto");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPagoAuto(pagoautoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pago Auto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPagoAuto(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_FECHACORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORPORPAGAR);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_VALORCANCELADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PagoAutoConstantesFunciones.LABEL_DESCRIPCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPagoAuto(PagoAuto pagoauto,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getcentroactividad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getdetalleprove_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getcuentabanco_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getestadopagoauto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getnumero_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getfecha_vencimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getfecha_corte());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getvalor_por_pagar());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getvalor_cancelado());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getesta_autorizado());
		cell = row.createCell(iColumn++);cell.setCellValue(pagoauto.getdescripcion());				
	}
	
	public void setFilaDatosExportarXmlPagoAuto(PagoAuto pagoauto,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PagoAutoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(pagoauto.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PagoAutoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(pagoauto.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PagoAutoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(pagoauto.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PagoAutoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(pagoauto.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(PagoAutoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(pagoauto.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementcliente_descripcion = document.createElement(PagoAutoConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(pagoauto.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementasientocontable_descripcion = document.createElement(PagoAutoConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(pagoauto.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(PagoAutoConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(pagoauto.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementcentroactividad_descripcion = document.createElement(PagoAutoConstantesFunciones.IDCENTROACTIVIDAD);
		elementcentroactividad_descripcion.appendChild(document.createTextNode(pagoauto.getcentroactividad_descripcion()));
		element.appendChild(elementcentroactividad_descripcion);

		Element elementfactura_descripcion = document.createElement(PagoAutoConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(pagoauto.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementdetalleprove_descripcion = document.createElement(PagoAutoConstantesFunciones.IDDETALLEPROVE);
		elementdetalleprove_descripcion.appendChild(document.createTextNode(pagoauto.getdetalleprove_descripcion()));
		element.appendChild(elementdetalleprove_descripcion);

		Element elementcuentabanco_descripcion = document.createElement(PagoAutoConstantesFunciones.IDCUENTABANCO);
		elementcuentabanco_descripcion.appendChild(document.createTextNode(pagoauto.getcuentabanco_descripcion()));
		element.appendChild(elementcuentabanco_descripcion);

		Element elementtransaccion_descripcion = document.createElement(PagoAutoConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(pagoauto.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementestadopagoauto_descripcion = document.createElement(PagoAutoConstantesFunciones.IDESTADOPAGOAUTO);
		elementestadopagoauto_descripcion.appendChild(document.createTextNode(pagoauto.getestadopagoauto_descripcion()));
		element.appendChild(elementestadopagoauto_descripcion);

		Element elementnumero_factura = document.createElement(PagoAutoConstantesFunciones.NUMEROFACTURA);
		elementnumero_factura.appendChild(document.createTextNode(pagoauto.getnumero_factura().trim()));
		element.appendChild(elementnumero_factura);

		Element elementfecha_emision = document.createElement(PagoAutoConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(pagoauto.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_vencimiento = document.createElement(PagoAutoConstantesFunciones.FECHAVENCIMIENTO);
		elementfecha_vencimiento.appendChild(document.createTextNode(pagoauto.getfecha_vencimiento().toString().trim()));
		element.appendChild(elementfecha_vencimiento);

		Element elementfecha_corte = document.createElement(PagoAutoConstantesFunciones.FECHACORTE);
		elementfecha_corte.appendChild(document.createTextNode(pagoauto.getfecha_corte().toString().trim()));
		element.appendChild(elementfecha_corte);

		Element elementvalor_por_pagar = document.createElement(PagoAutoConstantesFunciones.VALORPORPAGAR);
		elementvalor_por_pagar.appendChild(document.createTextNode(pagoauto.getvalor_por_pagar().toString().trim()));
		element.appendChild(elementvalor_por_pagar);

		Element elementvalor_cancelado = document.createElement(PagoAutoConstantesFunciones.VALORCANCELADO);
		elementvalor_cancelado.appendChild(document.createTextNode(pagoauto.getvalor_cancelado().toString().trim()));
		element.appendChild(elementvalor_cancelado);

		Element elementesta_autorizado = document.createElement(PagoAutoConstantesFunciones.ESTAAUTORIZADO);
		elementesta_autorizado.appendChild(document.createTextNode(pagoauto.getesta_autorizado().toString().trim()));
		element.appendChild(elementesta_autorizado);

		Element elementdescripcion = document.createElement(PagoAutoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(pagoauto.getdescripcion().trim()));
		element.appendChild(elementdescripcion);
	}
	
	public void generarReporteGroupGenericoPagoAutosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PagoAuto> pagoautosSeleccionados=new ArrayList<PagoAuto>();
		
		pagoautosSeleccionados=this.getPagoAutosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPagoAuto(pagoautosSeleccionados);
		
		this.generarReportePagoAutos("Todos",pagoautosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPagoAuto(ArrayList<PagoAuto> pagoautosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PagoAuto pagoautoAux:pagoautosSeleccionados) {
				pagoautoAux.setsDetalleGeneralEntityReporte(pagoautoAux.toString());
			
				if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDCENTROACTIVIDAD)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getcentroactividad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDDETALLEPROVE)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getdetalleprove_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDCUENTABANCO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getcuentabanco_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_IDESTADOPAGOAUTO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getestadopagoauto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_NUMEROFACTURA)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getnumero_factura());
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pagoautoAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pagoautoAux.getfecha_vencimiento()));
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_FECHACORTE)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pagoautoAux.getfecha_corte()));
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_ESTAAUTORIZADO)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(pagoautoAux.getesta_autorizado()));
				}
				 else if(sTipoSeleccionar.equals(PagoAutoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					pagoautoAux.setsDescripcionGeneralEntityReporte1(pagoautoAux.getdescripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PagoAutoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPagoAuto(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPagoAuto=true;
				this.isVisibilidadCeldaNuevoRelacionesPagoAuto=true;
				this.isVisibilidadCeldaGuardarCambiosPagoAuto=true;
			}
			
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=true;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=true;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=true;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=true;
			this.isVisibilidadCeldaEliminarPagoAuto=true;
			this.isVisibilidadCeldaCancelarPagoAuto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=true;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=true;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPagoAuto=true;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=true;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=true;
			this.isVisibilidadCeldaModificarPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=true;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
			this.isVisibilidadCeldaModificarPagoAuto=true;
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
			this.isVisibilidadCeldaCancelarPagoAuto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				} else {
					this.isVisibilidadCeldaGuardarPagoAuto=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PagoAutoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPagoAuto=true;
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=true;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=true;
		} else {
			this.actualizarEstadoPanelsPagoAuto(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPagoAuto=false;
			//this.isVisibilidadCeldaVerFormPagoAuto=false;
			this.isVisibilidadCeldaDuplicarPagoAuto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!pagoautoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
		} else {
			this.isVisibilidadCeldaNuevoPagoAuto=false;
			this.isVisibilidadCeldaGuardarCambiosPagoAuto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(pagoautoSessionBean.getEsGuardarRelacionado()) {
			if(!pagoautoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;												
			}
			
			this.jButtonCerrarPagoAuto.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPagoAuto=false;
		}
		
		if(!this.permiteMantenimiento(this.pagoauto)) {
			this.isVisibilidadCeldaActualizarPagoAuto=false;
			this.isVisibilidadCeldaEliminarPagoAuto=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPagoAuto() {
	}
	
	public void actualizarEstadoPanelsPagoAuto(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(true);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(false);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(false);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(false);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(true);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(true);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPagoAuto!=null) {
				this.jScrollPanelDatosEdicionPagoAuto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPagoAuto!=null) {
				this.jScrollPanelDatosPagoAuto.setVisible(true);
			}
			
			if(this.jPanelPaginacionPagoAuto!=null) {
				this.jPanelPaginacionPagoAuto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.pagoautoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPagoAuto!=null) {
					this.jTabbedPaneBusquedasPagoAuto.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.pagoautoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPagoAuto!=null) {
				this.jTabbedPaneBusquedasPagoAuto.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPagoAuto!=null) {
				this.jPanelParametrosReportesPagoAuto.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdAsientoContable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroActividad(Boolean isParaCentroActividad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroActividadNegation=!isParaCentroActividad;

			this.isVisibilidadFK_IdAsientoContable=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaCentroActividad;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdAsientoContable=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaDetalleProve(Boolean isParaDetalleProve){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaDetalleProveNegation=!isParaDetalleProve;

			this.isVisibilidadFK_IdAsientoContable=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaDetalleProve;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaDetalleProveNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaBanco(Boolean isParaCuentaBanco){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaBancoNegation=!isParaCuentaBanco;

			this.isVisibilidadFK_IdAsientoContable=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaCuentaBanco;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPagoAuto(Boolean isParaEstadoPagoAuto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPagoAutoNegation=!isParaEstadoPagoAuto;

			this.isVisibilidadFK_IdAsientoContable=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdAsientoContablePagoAuto);}

			this.isVisibilidadFK_IdCentroActividad=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroActividadPagoAuto);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCentroCostoPagoAuto);}

			this.isVisibilidadFK_IdCliente=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdClientePagoAuto);}

			this.isVisibilidadFK_IdCuentaBanco=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdCuentaBancoPagoAuto);}

			this.isVisibilidadFK_IdDetalleProve=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdDetalleProve) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdDetalleProvePagoAuto);}

			this.isVisibilidadFK_IdEstadoPagoAuto=isParaEstadoPagoAuto;
			if(!this.isVisibilidadFK_IdEstadoPagoAuto) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdEstadoPagoAutoPagoAuto);}

			this.isVisibilidadFK_IdFactura=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdFacturaPagoAuto);}

			this.isVisibilidadFK_IdTransaccion=isParaEstadoPagoAutoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasPagoAuto.remove(jPanelFK_IdTransaccionPagoAuto);}
		}
		
	}
	
	
	
	

	public String registrarSesionPagoAutoParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pagoautoSessionBean==null) {
				pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(pagoautoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.pagoautoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PagoAutoConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPagoAuto(true);
			//clienteSessionBean.setlidPagoAutoActual(this.idPagoAutoActual);

			pagoautoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPagoAuto(true);
			pagoautoSessionBean.setlIdPagoAutoActualForeignKey(this.idPagoAutoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPagoAutoParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(pagoautoSessionBean==null) {
				pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(pagoautoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.pagoautoFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(PagoAutoConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionPagoAuto(true);
			//asientocontableSessionBean.setlidPagoAutoActual(this.idPagoAutoActual);

			pagoautoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPagoAuto(true);
			pagoautoSessionBean.setlIdPagoAutoActualForeignKey(this.idPagoAutoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPagoAutoParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(pagoautoSessionBean==null) {
				pagoautoSessionBean=new PagoAutoSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(pagoautoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.pagoautoFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(PagoAutoConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionPagoAuto(true);
			//facturaSessionBean.setlidPagoAutoActual(this.idPagoAutoActual);

			pagoautoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPagoAuto(true);
			pagoautoSessionBean.setlIdPagoAutoActualForeignKey(this.idPagoAutoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PagoAutoSessionBean pagoautoSessionBean=new PagoAutoSessionBean();
		
		if(this.pagoautoSessionBean==null) {
			this.pagoautoSessionBean=new PagoAutoSessionBean();
		}
		
		this.pagoautoSessionBean.setsUltimaBusquedaPagoAuto(this.getsAccionBusqueda());
		this.pagoautoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.pagoautoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			pagoautoSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroActividad")) {
			pagoautoSessionBean.setid_centro_actividad(this.getid_centro_actividadFK_IdCentroActividad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			pagoautoSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			pagoautoSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaBanco")) {
			pagoautoSessionBean.setid_cuenta_banco(this.getid_cuenta_bancoFK_IdCuentaBanco());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdDetalleProve")) {
			pagoautoSessionBean.setid_detalle_prove(this.getid_detalle_proveFK_IdDetalleProve());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			pagoautoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			pagoautoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPagoAuto")) {
			pagoautoSessionBean.setid_estado_pago_auto(this.getid_estado_pago_autoFK_IdEstadoPagoAuto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			pagoautoSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			pagoautoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			pagoautoSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PagoAutoSessionBean pagoautoSessionBean=new PagoAutoSessionBean();
		
		if(this.pagoautoSessionBean==null) {
			this.pagoautoSessionBean=new PagoAutoSessionBean();
		}
		
		if(this.pagoautoSessionBean.getsUltimaBusquedaPagoAuto()!=null&&!this.pagoautoSessionBean.getsUltimaBusquedaPagoAuto().equals("")) {
			this.setsAccionBusqueda(pagoautoSessionBean.getsUltimaBusquedaPagoAuto());
			this.setiNumeroPaginacion(pagoautoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(pagoautoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(pagoautoSessionBean.getid_asiento_contable());
				pagoautoSessionBean.setid_asiento_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroActividad")) {
				this.setid_centro_actividadFK_IdCentroActividad(pagoautoSessionBean.getid_centro_actividad());
				pagoautoSessionBean.setid_centro_actividad(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(pagoautoSessionBean.getid_centro_costo());
				pagoautoSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(pagoautoSessionBean.getid_cliente());
				pagoautoSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaBanco")) {
				this.setid_cuenta_bancoFK_IdCuentaBanco(pagoautoSessionBean.getid_cuenta_banco());
				pagoautoSessionBean.setid_cuenta_banco(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdDetalleProve")) {
				this.setid_detalle_proveFK_IdDetalleProve(pagoautoSessionBean.getid_detalle_prove());
				pagoautoSessionBean.setid_detalle_prove(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(pagoautoSessionBean.getid_ejercicio());
				pagoautoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(pagoautoSessionBean.getid_empresa());
				pagoautoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPagoAuto")) {
				this.setid_estado_pago_autoFK_IdEstadoPagoAuto(pagoautoSessionBean.getid_estado_pago_auto());
				pagoautoSessionBean.setid_estado_pago_auto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(pagoautoSessionBean.getid_factura());
				pagoautoSessionBean.setid_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(pagoautoSessionBean.getid_sucursal());
				pagoautoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(pagoautoSessionBean.getid_transaccion());
				pagoautoSessionBean.setid_transaccion(-1L);
			}
		}
		
		this.pagoautoSessionBean.setsUltimaBusquedaPagoAuto("");
		this.pagoautoSessionBean.setiNumeroPaginacion(PagoAutoConstantesFunciones.INUMEROPAGINACION);
		this.pagoautoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPagoAuto(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPagoAuto() {
		this.updateBorderResaltarBusquedasFormularioPagoAuto();
		this.updateVisibilidadBusquedasFormularioPagoAuto();
		this.updateHabilitarBusquedasFormularioPagoAuto();
	}
	
	public void updateBorderResaltarBusquedasFormularioPagoAuto() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPagoAuto.getComponents().length>0) {
	

		if(this.pagoautoConstantesFunciones.resaltarFK_IdAsientoContablePagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdAsientoContablePagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdAsientoContablePagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdCentroActividadPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroActividadPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCentroActividadPagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdCentroCostoPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroCostoPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCentroCostoPagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdClientePagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdClientePagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdClientePagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdCuentaBancoPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCuentaBancoPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCuentaBancoPagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdDetalleProvePagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdDetalleProvePagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdDetalleProvePagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdEstadoPagoAutoPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdEstadoPagoAutoPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdEstadoPagoAutoPagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdFacturaPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdFacturaPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdFacturaPagoAuto);
			}
		}

		if(this.pagoautoConstantesFunciones.resaltarFK_IdTransaccionPagoAuto!=null) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdTransaccionPagoAuto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdTransaccionPagoAuto);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPagoAuto() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPagoAuto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdAsientoContablePagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdAsientoContablePagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdAsientoContablePagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroActividadPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdCentroActividadPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdCentroActividadPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroCostoPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdCentroCostoPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdCentroCostoPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdClientePagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdClientePagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdClientePagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCuentaBancoPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdCuentaBancoPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdCuentaBancoPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdDetalleProvePagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdDetalleProvePagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdDetalleProvePagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdEstadoPagoAutoPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdEstadoPagoAutoPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdEstadoPagoAutoPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdFacturaPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdFacturaPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdFacturaPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdTransaccionPagoAuto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pagoautoConstantesFunciones.mostrarFK_IdTransaccionPagoAuto);
			if(!this.pagoautoConstantesFunciones.mostrarFK_IdTransaccionPagoAuto && index>-1) {
				this.jTabbedPaneBusquedasPagoAuto.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPagoAuto() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPagoAuto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdAsientoContablePagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdAsientoContablePagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdAsientoContablePagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroActividadPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdCentroActividadPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdCentroActividadPagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroCostoPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdCentroCostoPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdCentroCostoPagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdClientePagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdClientePagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdClientePagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCuentaBancoPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdCuentaBancoPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdCuentaBancoPagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdDetalleProvePagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdDetalleProvePagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdDetalleProvePagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdEstadoPagoAutoPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdEstadoPagoAutoPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdEstadoPagoAutoPagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdFacturaPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdFacturaPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdFacturaPagoAuto);
			}

			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdTransaccionPagoAuto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pagoautoConstantesFunciones.activarFK_IdTransaccionPagoAuto);
				this.jTabbedPaneBusquedasPagoAuto.setEnabledAt(index,this.pagoautoConstantesFunciones.activarFK_IdTransaccionPagoAuto);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPagoAuto(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdAsientoContablePagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdAsientoContablePagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdAsientoContablePagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroActividad")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroActividadPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdCentroActividadPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCentroActividadPagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCentroCostoPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdCentroCostoPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCentroCostoPagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdClientePagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdClientePagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdClientePagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaBanco")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdCuentaBancoPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdCuentaBancoPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdCuentaBancoPagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdDetalleProve")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdDetalleProvePagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdDetalleProvePagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdDetalleProvePagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPagoAuto")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdEstadoPagoAutoPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdEstadoPagoAutoPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdEstadoPagoAutoPagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdFacturaPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdFacturaPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdFacturaPagoAuto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasPagoAuto.indexOfComponent(this.jPanelFK_IdTransaccionPagoAuto);

			this.jTabbedPaneBusquedasPagoAuto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPagoAuto.getComponent(index);

			this.pagoautoConstantesFunciones.setResaltarFK_IdTransaccionPagoAuto(resaltar);

			jPanel.setBorder(this.pagoautoConstantesFunciones.resaltarFK_IdTransaccionPagoAuto);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPagoAuto.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPagoAuto() throws Exception {

		if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPagoAuto();
		this.updateVisibilidadResaltarControlesFormularioPagoAuto();
		this.updateHabilitarResaltarControlesFormularioPagoAuto();
		
	}
	
	public void updateBorderResaltarControlesFormularioPagoAuto() throws Exception {
		if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.pagoautoConstantesFunciones.resaltaridPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltaridPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_empresaPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_empresaPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_sucursalPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_sucursalPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_ejercicioPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_ejercicioPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_clientePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_clientePagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_asiento_contablePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_asiento_contablePagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_centro_costoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_centro_costoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_centro_actividadPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_centro_actividadPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_facturaPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_facturaPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_detalle_provePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_detalle_provePagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_cuenta_bancoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_cuenta_bancoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_transaccionPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_transaccionPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarid_estado_pago_autoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarid_estado_pago_autoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarnumero_facturaPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarnumero_facturaPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarfecha_emisionPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarfecha_emisionPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarfecha_vencimientoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarfecha_vencimientoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarfecha_cortePagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarfecha_cortePagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarvalor_por_pagarPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarvalor_por_pagarPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltarvalor_canceladoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltarvalor_canceladoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltaresta_autorizadoPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setBorderPainted(true);this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltaresta_autorizadoPagoAuto);}
		if(this.pagoautoConstantesFunciones.resaltardescripcionPagoAuto!=null && this.jInternalFrameDetalleFormPagoAuto!=null) {this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setBorder(this.pagoautoConstantesFunciones.resaltardescripcionPagoAuto);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPagoAuto() throws Exception {		
		if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
	
		//this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostraridPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelidPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostraridPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_empresaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_empresaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_empresaPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_sucursalPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_sucursalPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_sucursalPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_ejercicioPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_ejercicioPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_ejercicioPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_clientePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_clientePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_clientePagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_clientePagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_asiento_contablePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_asiento_contablePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_asiento_contablePagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_asiento_contablePagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_centro_costoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_centro_costoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_centro_costoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_centro_actividadPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_centro_actividadPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_centro_actividadPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_facturaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_facturaPagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_facturaPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_detalle_provePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_detalle_provePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_detalle_provePagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_cuenta_bancoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_cuenta_bancoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_cuenta_bancoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_transaccionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_transaccionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_transaccionPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_estado_pago_autoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelid_estado_pago_autoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarid_estado_pago_autoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarnumero_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelnumero_facturaPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarnumero_facturaPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_emisionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelfecha_emisionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_emisionPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_vencimientoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelfecha_vencimientoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_vencimientoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_cortePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelfecha_cortePagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarfecha_cortePagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarvalor_por_pagarPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelvalor_por_pagarPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarvalor_por_pagarPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarvalor_canceladoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelvalor_canceladoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrarvalor_canceladoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostraresta_autorizadoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPanelesta_autorizadoPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostraresta_autorizadoPagoAuto);
		//this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrardescripcionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jPaneldescripcionPagoAuto.setVisible(this.pagoautoConstantesFunciones.mostrardescripcionPagoAuto);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPagoAuto() throws Exception {
		if(this.jInternalFrameDetalleFormPagoAuto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPagoAuto!=null) {
	
		this.jInternalFrameDetalleFormPagoAuto.jLabelidPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activaridPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_empresaPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_empresaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_sucursalPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_sucursalPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_ejercicioPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_ejercicioPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_clientePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_clientePagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_clientePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_clientePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_asiento_contablePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_asiento_contablePagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_asiento_contablePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_asiento_contablePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_costoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_centro_costoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_centro_actividadPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_centro_actividadPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_facturaPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_facturaPagoAuto);
			this.jInternalFrameDetalleFormPagoAuto.jButtonid_facturaPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_detalle_provePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_detalle_provePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_cuenta_bancoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_cuenta_bancoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_transaccionPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_transaccionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jComboBoxid_estado_pago_autoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarid_estado_pago_autoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldnumero_facturaPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarnumero_facturaPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_emisionPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarfecha_emisionPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_vencimientoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarfecha_vencimientoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jDateChooserfecha_cortePagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarfecha_cortePagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_por_pagarPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarvalor_por_pagarPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextFieldvalor_canceladoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activarvalor_canceladoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jCheckBoxesta_autorizadoPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activaresta_autorizadoPagoAuto);
		this.jInternalFrameDetalleFormPagoAuto.jTextAreadescripcionPagoAuto.setEnabled(this.pagoautoConstantesFunciones.activardescripcionPagoAuto);
		}
	}
	
		
}