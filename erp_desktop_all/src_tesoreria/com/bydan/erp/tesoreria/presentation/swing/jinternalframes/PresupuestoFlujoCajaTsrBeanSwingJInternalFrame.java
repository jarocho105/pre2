/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.tesoreria.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.tesoreria.util.PresupuestoFlujoCajaTsrConstantesFunciones;
import com.bydan.erp.tesoreria.util.PresupuestoFlujoCajaTsrParameterReturnGeneral;
//import com.bydan.erp.tesoreria.util.PresupuestoFlujoCajaTsrParameterGeneral;
//import com.bydan.erp.tesoreria.presentation.report.source.PresupuestoFlujoCajaTsrBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.tesoreria.resources.reportes.AuxiliarReportes;


import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.tesoreria.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.tesoreria.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PresupuestoFlujoCajaTsrBeanSwingJInternalFrame extends PresupuestoFlujoCajaTsrJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrValidator = new ClassValidator<PresupuestoFlujoCajaTsr>(PresupuestoFlujoCajaTsr.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PresupuestoFlujoCajaTsr presupuestoflujocajatsr;	
	public PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux;
	public PresupuestoFlujoCajaTsr presupuestoflujocajatsrAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PresupuestoFlujoCajaTsr presupuestoflujocajatsrTotales;
	public Long idPresupuestoFlujoCajaTsrActual;
	public Long iIdNuevoPresupuestoFlujoCajaTsr=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboTipoMovimiento="";

	public List<TipoMovimiento> tipomovimientosForeignKey;

	public List<TipoMovimiento> gettipomovimientosForeignKey() {
		return tipomovimientosForeignKey;
	}

	public void settipomovimientosForeignKey(List<TipoMovimiento> tipomovimientosForeignKey) {
		this.tipomovimientosForeignKey = tipomovimientosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimiento tipomovimientoForeignKey;

	public TipoMovimiento gettipomovimientoForeignKey() {
		return tipomovimientoForeignKey;
	}

	public void settipomovimientoForeignKey(TipoMovimiento tipomovimientoForeignKey) {
		this.tipomovimientoForeignKey = tipomovimientoForeignKey;
	}

	public String sFinalQueryComboCentroActividad="";

	public List<CentroActividad> centroactividadsForeignKey;

	public List<CentroActividad> getcentroactividadsForeignKey() {
		return centroactividadsForeignKey;
	}

	public void setcentroactividadsForeignKey(List<CentroActividad> centroactividadsForeignKey) {
		this.centroactividadsForeignKey = centroactividadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroActividad centroactividadForeignKey;

	public CentroActividad getcentroactividadForeignKey() {
		return centroactividadForeignKey;
	}

	public void setcentroactividadForeignKey(CentroActividad centroactividadForeignKey) {
		this.centroactividadForeignKey = centroactividadForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPresupuestoFlujoCajaTsr;
	public Boolean isPermisoNuevoPresupuestoFlujoCajaTsr;
	public Boolean isPermisoActualizarPresupuestoFlujoCajaTsr;
	public Boolean isPermisoActualizarOriginalPresupuestoFlujoCajaTsr;
	public Boolean isPermisoEliminarPresupuestoFlujoCajaTsr;
	public Boolean isPermisoGuardarCambiosPresupuestoFlujoCajaTsr;
	public Boolean isPermisoConsultaPresupuestoFlujoCajaTsr;
	public Boolean isPermisoBusquedaPresupuestoFlujoCajaTsr;
	public Boolean isPermisoReportePresupuestoFlujoCajaTsr;
	public Boolean isPermisoPaginacionMedioPresupuestoFlujoCajaTsr;
	public Boolean isPermisoPaginacionAltoPresupuestoFlujoCajaTsr;
	public Boolean isPermisoPaginacionTodoPresupuestoFlujoCajaTsr;
	public Boolean isPermisoCopiarPresupuestoFlujoCajaTsr;
	public Boolean isPermisoVerFormPresupuestoFlujoCajaTsr;
	public Boolean isPermisoDuplicarPresupuestoFlujoCajaTsr;
	public Boolean isPermisoOrdenPresupuestoFlujoCajaTsr;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrReturnGeneral;
	public PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPresupuestoFlujoCajaTsr=false;
	public Boolean esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PresupuestoFlujoCajaTsrSessionBeanAdditional presupuestoflujocajatsrSessionBeanAdditional=null;
	
	public PresupuestoFlujoCajaTsrSessionBeanAdditional getPresupuestoFlujoCajaTsrSessionBeanAdditional() {
		return this.presupuestoflujocajatsrSessionBeanAdditional;
	}
	
	public void setPresupuestoFlujoCajaTsrSessionBeanAdditional(PresupuestoFlujoCajaTsrSessionBeanAdditional presupuestoflujocajatsrSessionBeanAdditional) {
		try {
			this.presupuestoflujocajatsrSessionBeanAdditional=presupuestoflujocajatsrSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional presupuestoflujocajatsrBeanSwingJInternalFrameAdditional=null;
	//public class PresupuestoFlujoCajaTsrBeanSwingJInternalFrame
	
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional getPresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional() {
		return this.presupuestoflujocajatsrBeanSwingJInternalFrameAdditional;
	}
	
	public void setPresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional(PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional presupuestoflujocajatsrBeanSwingJInternalFrameAdditional) {
		try {
			this.presupuestoflujocajatsrBeanSwingJInternalFrameAdditional=presupuestoflujocajatsrBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PresupuestoFlujoCajaTsrLogic presupuestoflujocajatsrLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PresupuestoFlujoCajaTsr presupuestoflujocajatsrBean;
	public PresupuestoFlujoCajaTsrConstantesFunciones presupuestoflujocajatsrConstantesFunciones;
	//public PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public UsuarioLogic usuarioLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public TipoMovimientoLogic tipomovimientoLogic;
	public CentroActividadLogic centroactividadLogic;
	public CuentaContableLogic cuentacontableLogic;
	public CentroCostoLogic centrocostoLogic;
	
	//PARAMETROS
	
	
	//public List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrs;	
	//public List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsEliminados;
	//public List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr=true;
	public Boolean isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr=true;
	public Boolean isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr=true;
	public Boolean isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=false;
	public Boolean isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;	
	
	
	public Boolean isVisibilidadBusquedaPorCodigo=false;
	public Boolean isVisibilidadBusquedaPorFecha=false;
	public Boolean isVisibilidadBusquedaPorFechaPresupuesto=false;
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadBusquedaPorValor=false;
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCentroActividad=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoMovimiento=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoPresupuestoFlujoCajaTsr() {
		return this.iIdNuevoPresupuestoFlujoCajaTsr;
	}

	public void setiIdNuevoPresupuestoFlujoCajaTsr(Long iIdNuevoPresupuestoFlujoCajaTsr) {
		this.iIdNuevoPresupuestoFlujoCajaTsr = iIdNuevoPresupuestoFlujoCajaTsr;
	}
	
	public Long getidPresupuestoFlujoCajaTsrActual() {
		return this.idPresupuestoFlujoCajaTsrActual;
	}

	public void setidPresupuestoFlujoCajaTsrActual(Long idPresupuestoFlujoCajaTsrActual) {
		this.idPresupuestoFlujoCajaTsrActual = idPresupuestoFlujoCajaTsrActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PresupuestoFlujoCajaTsr getpresupuestoflujocajatsr() {
		return this.presupuestoflujocajatsr;
	}

	public void setpresupuestoflujocajatsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) {
		this.presupuestoflujocajatsr = presupuestoflujocajatsr;
	}
	
	public PresupuestoFlujoCajaTsr getpresupuestoflujocajatsrAux() {
		return this.presupuestoflujocajatsrAux;
	}

	public void setpresupuestoflujocajatsrAux(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux) {
		this.presupuestoflujocajatsrAux = presupuestoflujocajatsrAux;
	}				
	
	public PresupuestoFlujoCajaTsr getpresupuestoflujocajatsrAnterior() {
		return this.presupuestoflujocajatsrAnterior;
	}

	public void setpresupuestoflujocajatsrAnterior(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAnterior) {
		this.presupuestoflujocajatsrAnterior = presupuestoflujocajatsrAnterior;
	}	
	
	public PresupuestoFlujoCajaTsr getpresupuestoflujocajatsrTotales() {
		return this.presupuestoflujocajatsrTotales;
	}

	public void setpresupuestoflujocajatsrTotales(PresupuestoFlujoCajaTsr presupuestoflujocajatsrTotales) {
		this.presupuestoflujocajatsrTotales = presupuestoflujocajatsrTotales;
	}	
	
	public PresupuestoFlujoCajaTsr getpresupuestoflujocajatsrBean() {
		return this.presupuestoflujocajatsrBean;
	}

	public void setpresupuestoflujocajatsrBean(PresupuestoFlujoCajaTsr presupuestoflujocajatsrBean) {
		this.presupuestoflujocajatsrBean = presupuestoflujocajatsrBean;
	}	
	
	public PresupuestoFlujoCajaTsrParameterReturnGeneral getpresupuestoflujocajatsrReturnGeneral() {
		return this.presupuestoflujocajatsrReturnGeneral;
	}

	public void setpresupuestoflujocajatsrReturnGeneral(PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrReturnGeneral) {
		this.presupuestoflujocajatsrReturnGeneral = presupuestoflujocajatsrReturnGeneral;
	}	
	
	
	public String codigoBusquedaPorCodigo="";

	public String getcodigoBusquedaPorCodigo() {
		return this.codigoBusquedaPorCodigo;
	}

	public void setcodigoBusquedaPorCodigo(String codigoBusquedaPorCodigo) {
		this.codigoBusquedaPorCodigo = codigoBusquedaPorCodigo;
	}

	public Date fechaBusquedaPorFecha=new Date();

	public Date getfechaBusquedaPorFecha() {
		return this.fechaBusquedaPorFecha;
	}

	public void setfechaBusquedaPorFecha(Date fechaBusquedaPorFecha) {
		this.fechaBusquedaPorFecha = fechaBusquedaPorFecha;
	}

	public Date fecha_presupuestoBusquedaPorFechaPresupuesto=new Date();

	public Date getfecha_presupuestoBusquedaPorFechaPresupuesto() {
		return this.fecha_presupuestoBusquedaPorFechaPresupuesto;
	}

	public void setfecha_presupuestoBusquedaPorFechaPresupuesto(Date fecha_presupuestoBusquedaPorFechaPresupuesto) {
		this.fecha_presupuestoBusquedaPorFechaPresupuesto = fecha_presupuestoBusquedaPorFechaPresupuesto;
	}

	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public Double valorBusquedaPorValor=0.0;

	public Double getvalorBusquedaPorValor() {
		return this.valorBusquedaPorValor;
	}

	public void setvalorBusquedaPorValor(Double valorBusquedaPorValor) {
		this.valorBusquedaPorValor = valorBusquedaPorValor;
	}

	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_centro_actividadFK_IdCentroActividad=null;

	public Long getid_centro_actividadFK_IdCentroActividad() {
		return this.id_centro_actividadFK_IdCentroActividad;
	}

	public void setid_centro_actividadFK_IdCentroActividad(Long id_centro_actividadFK_IdCentroActividad) {
		this.id_centro_actividadFK_IdCentroActividad = id_centro_actividadFK_IdCentroActividad;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_movimientoFK_IdTipoMovimiento=-1L;

	public Long getid_tipo_movimientoFK_IdTipoMovimiento() {
		return this.id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public void setid_tipo_movimientoFK_IdTipoMovimiento(Long id_tipo_movimientoFK_IdTipoMovimiento) {
		this.id_tipo_movimientoFK_IdTipoMovimiento = id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PresupuestoFlujoCajaTsrLogic getPresupuestoFlujoCajaTsrLogic()	{		
		return presupuestoflujocajatsrLogic;
	}

	public void setPresupuestoFlujoCajaTsrLogic(PresupuestoFlujoCajaTsrLogic presupuestoflujocajatsrLogic) {
		this.presupuestoflujocajatsrLogic = presupuestoflujocajatsrLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPresupuestoFlujoCajaTsr() {
		return isEsNuevoPresupuestoFlujoCajaTsr;
	}

	public void setIsEsNuevoPresupuestoFlujoCajaTsr(Boolean isEsNuevoPresupuestoFlujoCajaTsr) {
		this.isEsNuevoPresupuestoFlujoCajaTsr = isEsNuevoPresupuestoFlujoCajaTsr;
	}

	public Boolean getEsParaAccionDesdeFormularioPresupuestoFlujoCajaTsr() {
		return esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr;
	}
	
	public void setEsParaAccionDesdeFormularioPresupuestoFlujoCajaTsr(Boolean esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr) {
		this.esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr = esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoLogic tipomovimientoLogic=new TipoMovimientoLogic();

			//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

					tipomovimientoLogic.getTodosTipoMovimientosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientosForeignKey=tipomovimientoLogic.getTipoMovimientos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimiento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientoLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidTipoMovimientoActual());
					this.tipomovimientosForeignKey.add(tipomovimientoLogic.getTipoMovimiento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroActividadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroActividadLogic centroactividadLogic=new CentroActividadLogic();

			//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

					centroactividadLogic.getTodosCentroActividadsWithConnection(sFinalQuery,new Pagination());

					this.centroactividadsForeignKey=centroactividadLogic.getCentroActividads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroActividad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centroactividadLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidCentroActividadActual());
					this.centroactividadsForeignKey.add(centroactividadLogic.getCentroActividad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(presupuestoflujocajatsrSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoForeignKey(Long idTipoMovimientoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientoTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setTipoMovimiento(tipomovimientoTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimientoTemp);
					}
				} else {
					//jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimientoTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipomovimientoTemp!=null && jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr!=null) {
						jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimientoTemp);
					} else {
						if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr!=null) {
							//jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimientoTemp);
							if(jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.getItemCount()>0) {
								jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoForeignKeyDescripcion(Long idTipoMovimientoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoForeignKeyGenerico(Long idTipoMovimientoSeleccionado,JComboBox jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(tipomovimientoTemp!=null) {
				jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico.setSelectedItem(tipomovimientoTemp);
			} else {
				if(jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroActividadForeignKey(Long idCentroActividadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centroactividadTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setCentroActividad(centroactividadTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividadTemp);
					}
				} else {
					//jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividadTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroActividad") || sFormularioTipoBusqueda.equals("Todos")){
					if(centroactividadTemp!=null && jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr!=null) {
						jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividadTemp);
					} else {
						if(jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr!=null) {
							//jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividadTemp);
							if(jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.getItemCount()>0) {
								jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroActividadForeignKeyDescripcion(Long idCentroActividadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}


			sDescripcion=CentroActividadConstantesFunciones.getCentroActividadDescripcion(centroactividadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroActividadForeignKeyGenerico(Long idCentroActividadSeleccionado,JComboBox jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(centroactividadTemp!=null) {
				jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico.setSelectedItem(centroactividadTemp);
			} else {
				if(jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.presupuestoflujocajatsr!=null) {
						this.presupuestoflujocajatsr.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.getItemCount()>0) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico!=null && jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				presupuestoflujocajatsr.setid_empresa(empresaAux.getId());
				presupuestoflujocajatsr.setempresa_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getEmpresaDescripcion(empresaAux));
				presupuestoflujocajatsr.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				presupuestoflujocajatsr.setid_sucursal(sucursalAux.getId());
				presupuestoflujocajatsr.setsucursal_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getSucursalDescripcion(sucursalAux));
				presupuestoflujocajatsr.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				presupuestoflujocajatsr.setid_ejercicio(ejercicioAux.getId());
				presupuestoflujocajatsr.setejercicio_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				presupuestoflujocajatsr.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				presupuestoflujocajatsr.setid_periodo(periodoAux.getId());
				presupuestoflujocajatsr.setperiodo_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getPeriodoDescripcion(periodoAux));
				presupuestoflujocajatsr.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				presupuestoflujocajatsr.setid_usuario(usuarioAux.getId());
				presupuestoflujocajatsr.setusuario_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				presupuestoflujocajatsr.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				presupuestoflujocajatsr.setid_anio(anioAux.getId());
				presupuestoflujocajatsr.setanio_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getAnioDescripcion(anioAux));
				presupuestoflujocajatsr.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				presupuestoflujocajatsr.setid_mes(mesAux.getId());
				presupuestoflujocajatsr.setmes_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getMesDescripcion(mesAux));
				presupuestoflujocajatsr.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoAux=new TipoMovimiento();

			if(jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico==null) {
				tipomovimientoAux=(TipoMovimiento)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				tipomovimientoAux=(TipoMovimiento)jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(tipomovimientoAux!=null && tipomovimientoAux.getId()!=null) {
				presupuestoflujocajatsr.setid_tipo_movimiento(tipomovimientoAux.getId());
				presupuestoflujocajatsr.settipomovimiento_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoAux));
				presupuestoflujocajatsr.setTipoMovimiento(tipomovimientoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroActividadForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadAux=new CentroActividad();

			if(jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico==null) {
				centroactividadAux=(CentroActividad)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				centroactividadAux=(CentroActividad)jComboBoxid_centro_actividadPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(centroactividadAux!=null) {
				presupuestoflujocajatsr.setid_centro_actividad(centroactividadAux.getId());
				presupuestoflujocajatsr.setcentroactividad_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getCentroActividadDescripcion(centroactividadAux));
				presupuestoflujocajatsr.setCentroActividad(centroactividadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				presupuestoflujocajatsr.setid_cuenta_contable(cuentacontableAux.getId());
				presupuestoflujocajatsr.setcuentacontable_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				presupuestoflujocajatsr.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,JComboBox jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoPresupuestoFlujoCajaTsrGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				presupuestoflujocajatsr.setid_centro_costo(centrocostoAux.getId());
				presupuestoflujocajatsr.setcentrocosto_descripcion(PresupuestoFlujoCajaTsrConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				presupuestoflujocajatsr.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimiento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.addItem(tipomovimiento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimiento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.addItem(tipomovimiento);
							}
						}

						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroActividadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroActividad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.removeAllItems();

							for(CentroActividad centroactividad:this.centroactividadsForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.addItem(centroactividad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroActividad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.removeAllItems();

							for(CentroActividad centroactividad:this.centroactividadsForeignKey) {
								this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.addItem(centroactividad);
							}
						}

						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.addItem(cuentacontable);
							}
						}

						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { 
					}

					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.addItem(centrocosto);
							}
						}

						if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoForeignKey(TipoMovimiento tipomovimiento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimiento);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.setSelectedItem(tipomovimiento);
						} else {
							this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroActividadForeignKey(CentroActividad centroactividad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividad);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.setSelectedItem(centroactividad);
						} else {
							this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PresupuestoFlujoCajaTsrConstantesFunciones.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PresupuestoFlujoCajaTsrConstantesFunciones.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrs);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(TipoMovimiento.class));
		classes.add(new Classe(CentroActividad.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(CentroCosto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(this.presupuestoflujocajatsrs);
			presupuestoflujocajatsrLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PresupuestoFlujoCajaTsrParameterReturnGeneral getPresupuestoFlujoCajaTsrParameterGeneral() {
		return this.presupuestoflujocajatsrParameterGeneral;
	}
	
	public void setPresupuestoFlujoCajaTsrParameterGeneral(PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrParameterGeneral) {
		this.presupuestoflujocajatsrParameterGeneral = presupuestoflujocajatsrParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPresupuestoFlujoCajaTsr() {
		return isPermisoTodoPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoTodoPresupuestoFlujoCajaTsr(Boolean isPermisoTodoPresupuestoFlujoCajaTsr) {
		this.isPermisoTodoPresupuestoFlujoCajaTsr = isPermisoTodoPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoNuevoPresupuestoFlujoCajaTsr() {
		return isPermisoNuevoPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoNuevoPresupuestoFlujoCajaTsr(Boolean isPermisoNuevoPresupuestoFlujoCajaTsr) {
		this.isPermisoNuevoPresupuestoFlujoCajaTsr = isPermisoNuevoPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoActualizarPresupuestoFlujoCajaTsr() {
		return isPermisoActualizarPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoActualizarPresupuestoFlujoCajaTsr(Boolean isPermisoActualizarPresupuestoFlujoCajaTsr) {
		this.isPermisoActualizarPresupuestoFlujoCajaTsr = isPermisoActualizarPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoEliminarPresupuestoFlujoCajaTsr() {
		return isPermisoEliminarPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoEliminarPresupuestoFlujoCajaTsr(Boolean isPermisoEliminarPresupuestoFlujoCajaTsr) {
		this.isPermisoEliminarPresupuestoFlujoCajaTsr = isPermisoEliminarPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoGuardarCambiosPresupuestoFlujoCajaTsr() {
		return isPermisoGuardarCambiosPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoGuardarCambiosPresupuestoFlujoCajaTsr(Boolean isPermisoGuardarCambiosPresupuestoFlujoCajaTsr) {
		this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr = isPermisoGuardarCambiosPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoConsultaPresupuestoFlujoCajaTsr() {
		return isPermisoConsultaPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoConsultaPresupuestoFlujoCajaTsr(Boolean isPermisoConsultaPresupuestoFlujoCajaTsr) {
		this.isPermisoConsultaPresupuestoFlujoCajaTsr = isPermisoConsultaPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoBusquedaPresupuestoFlujoCajaTsr() {
		return isPermisoBusquedaPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoBusquedaPresupuestoFlujoCajaTsr(Boolean isPermisoBusquedaPresupuestoFlujoCajaTsr) {
		this.isPermisoBusquedaPresupuestoFlujoCajaTsr = isPermisoBusquedaPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsPermisoReportePresupuestoFlujoCajaTsr() {
		return isPermisoReportePresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoReportePresupuestoFlujoCajaTsr(Boolean isPermisoReportePresupuestoFlujoCajaTsr) {
		this.isPermisoReportePresupuestoFlujoCajaTsr = isPermisoReportePresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoPaginacionMedioPresupuestoFlujoCajaTsr() {
		return isPermisoPaginacionMedioPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoPaginacionMedioPresupuestoFlujoCajaTsr(Boolean isPermisoPaginacionMedioPresupuestoFlujoCajaTsr) {
		this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr = isPermisoPaginacionMedioPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoPaginacionTodoPresupuestoFlujoCajaTsr() {
		return isPermisoPaginacionTodoPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoPaginacionTodoPresupuestoFlujoCajaTsr(Boolean isPermisoPaginacionTodoPresupuestoFlujoCajaTsr) {
		this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr = isPermisoPaginacionTodoPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoPaginacionAltoPresupuestoFlujoCajaTsr() {
		return isPermisoPaginacionAltoPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoPaginacionAltoPresupuestoFlujoCajaTsr(Boolean isPermisoPaginacionAltoPresupuestoFlujoCajaTsr) {
		this.isPermisoPaginacionAltoPresupuestoFlujoCajaTsr = isPermisoPaginacionAltoPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoCopiarPresupuestoFlujoCajaTsr() {
		return isPermisoCopiarPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoCopiarPresupuestoFlujoCajaTsr(Boolean isPermisoCopiarPresupuestoFlujoCajaTsr) {
		this.isPermisoCopiarPresupuestoFlujoCajaTsr = isPermisoCopiarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoVerFormPresupuestoFlujoCajaTsr() {
		return isPermisoVerFormPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoVerFormPresupuestoFlujoCajaTsr(Boolean isPermisoVerFormPresupuestoFlujoCajaTsr) {
		this.isPermisoVerFormPresupuestoFlujoCajaTsr = isPermisoVerFormPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoDuplicarPresupuestoFlujoCajaTsr() {
		return isPermisoDuplicarPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoDuplicarPresupuestoFlujoCajaTsr(Boolean isPermisoDuplicarPresupuestoFlujoCajaTsr) {
		this.isPermisoDuplicarPresupuestoFlujoCajaTsr = isPermisoDuplicarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsPermisoOrdenPresupuestoFlujoCajaTsr() {
		return isPermisoOrdenPresupuestoFlujoCajaTsr;
	}

	public void setIsPermisoOrdenPresupuestoFlujoCajaTsr(Boolean isPermisoOrdenPresupuestoFlujoCajaTsr) {
		this.isPermisoOrdenPresupuestoFlujoCajaTsr = isPermisoOrdenPresupuestoFlujoCajaTsr;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr = isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr = isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr = isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr = isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr = isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr = isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaModificarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr = isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr = isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr = isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr = isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr;
	}

	public Boolean getIsVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr = isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr() {
		return isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr(Boolean isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr) {
		this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr = isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr;
	}
		
	public PresupuestoFlujoCajaTsrSessionBean getpresupuestoflujocajatsrSessionBean() {
		return this.presupuestoflujocajatsrSessionBean;
	}
	
	public void setpresupuestoflujocajatsrSessionBean(PresupuestoFlujoCajaTsrSessionBean presupuestoflujocajatsrSessionBean) {
		this.presupuestoflujocajatsrSessionBean=presupuestoflujocajatsrSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorCodigo() {
		return this.isVisibilidadBusquedaPorCodigo;
	}

	public void setisVisibilidadBusquedaPorCodigo(Boolean isVisibilidadBusquedaPorCodigo) {
		this.isVisibilidadBusquedaPorCodigo=isVisibilidadBusquedaPorCodigo;
	}

	public Boolean getisVisibilidadBusquedaPorFecha() {
		return this.isVisibilidadBusquedaPorFecha;
	}

	public void setisVisibilidadBusquedaPorFecha(Boolean isVisibilidadBusquedaPorFecha) {
		this.isVisibilidadBusquedaPorFecha=isVisibilidadBusquedaPorFecha;
	}

	public Boolean getisVisibilidadBusquedaPorFechaPresupuesto() {
		return this.isVisibilidadBusquedaPorFechaPresupuesto;
	}

	public void setisVisibilidadBusquedaPorFechaPresupuesto(Boolean isVisibilidadBusquedaPorFechaPresupuesto) {
		this.isVisibilidadBusquedaPorFechaPresupuesto=isVisibilidadBusquedaPorFechaPresupuesto;
	}

	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadBusquedaPorValor() {
		return this.isVisibilidadBusquedaPorValor;
	}

	public void setisVisibilidadBusquedaPorValor(Boolean isVisibilidadBusquedaPorValor) {
		this.isVisibilidadBusquedaPorValor=isVisibilidadBusquedaPorValor;
	}

	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCentroActividad() {
		return this.isVisibilidadFK_IdCentroActividad;
	}

	public void setisVisibilidadFK_IdCentroActividad(Boolean isVisibilidadFK_IdCentroActividad) {
		this.isVisibilidadFK_IdCentroActividad=isVisibilidadFK_IdCentroActividad;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimiento() {
		return this.isVisibilidadFK_IdTipoMovimiento;
	}

	public void setisVisibilidadFK_IdTipoMovimiento(Boolean isVisibilidadFK_IdTipoMovimiento) {
		this.isVisibilidadFK_IdTipoMovimiento=isVisibilidadFK_IdTipoMovimiento;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarSucursalForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarEjercicioForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarPeriodoForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarUsuarioForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarAnioForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarMesForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarTipoMovimientoForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarCentroActividadForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarCuentaContableForeignKey(presupuestoflujocajatsr,null);
				this.setActualParaGuardarCentroCostoForeignKey(presupuestoflujocajatsr,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPresupuestoFlujoCajaTsr(presupuestoflujocajatsr);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		presupuestoflujocajatsrAux.setId(presupuestoflujocajatsr.getId());
		presupuestoflujocajatsrAux.setVersionRow(presupuestoflujocajatsr.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPresupuestoFlujoCajaTsr();
		
			int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = presupuestoflujocajatsrValidator.getInvalidValues(this.presupuestoflujocajatsr);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			presupuestoflujocajatsrLogic.setDatosCliente(datosCliente);
			presupuestoflujocajatsrLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				presupuestoflujocajatsrAux=new  PresupuestoFlujoCajaTsr();
				
				presupuestoflujocajatsrAux.setIsNew(true);
				presupuestoflujocajatsrAux.setIsChanged(true);
				
				presupuestoflujocajatsrAux.setPresupuestoFlujoCajaTsrOriginal(this.presupuestoflujocajatsr);
				
				presupuestoflujocajatsrAux.setId(this.presupuestoflujocajatsr.getId());	
				presupuestoflujocajatsrAux.setVersionRow(this.presupuestoflujocajatsr.getVersionRow());	
				presupuestoflujocajatsrAux.setid_empresa(this.presupuestoflujocajatsr.getid_empresa());	
				presupuestoflujocajatsrAux.setid_sucursal(this.presupuestoflujocajatsr.getid_sucursal());	
				presupuestoflujocajatsrAux.setid_ejercicio(this.presupuestoflujocajatsr.getid_ejercicio());	
				presupuestoflujocajatsrAux.setid_periodo(this.presupuestoflujocajatsr.getid_periodo());	
				presupuestoflujocajatsrAux.setid_usuario(this.presupuestoflujocajatsr.getid_usuario());	
				presupuestoflujocajatsrAux.setid_anio(this.presupuestoflujocajatsr.getid_anio());	
				presupuestoflujocajatsrAux.setid_mes(this.presupuestoflujocajatsr.getid_mes());	
				presupuestoflujocajatsrAux.setid_tipo_movimiento(this.presupuestoflujocajatsr.getid_tipo_movimiento());	
				presupuestoflujocajatsrAux.setid_centro_actividad(this.presupuestoflujocajatsr.getid_centro_actividad());	
				presupuestoflujocajatsrAux.setcodigo(this.presupuestoflujocajatsr.getcodigo());	
				presupuestoflujocajatsrAux.setnombre(this.presupuestoflujocajatsr.getnombre());	
				presupuestoflujocajatsrAux.setfecha(this.presupuestoflujocajatsr.getfecha());	
				presupuestoflujocajatsrAux.setfecha_presupuesto(this.presupuestoflujocajatsr.getfecha_presupuesto());	
				presupuestoflujocajatsrAux.setvalor(this.presupuestoflujocajatsr.getvalor());	
				presupuestoflujocajatsrAux.setid_cuenta_contable(this.presupuestoflujocajatsr.getid_cuenta_contable());	
				
				if(this.presupuestoflujocajatsr.getid_centro_costo()!=null && this.presupuestoflujocajatsr.getid_centro_costo()>0L) {
					presupuestoflujocajatsrAux.setid_centro_costo(this.presupuestoflujocajatsr.getid_centro_costo());
				} else {
					presupuestoflujocajatsrAux.setid_centro_costo(null);
				}	
				presupuestoflujocajatsrAux.setdescripcion(this.presupuestoflujocajatsr.getdescripcion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrs();//WithConnection
						//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);
					
					this.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrRelaciones(presupuestoflujocajatsrAux);//WithConnection
								//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
									|| this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				presupuestoflujocajatsrAux=new  PresupuestoFlujoCajaTsr();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado() 
					|| (this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado() && this.presupuestoflujocajatsr.getId()>=0)) {
						
					presupuestoflujocajatsrAux.setIsNew(false);
				}
				
				presupuestoflujocajatsrAux.setIsDeleted(false);
			
				presupuestoflujocajatsrAux.setId(this.presupuestoflujocajatsr.getId());	
				presupuestoflujocajatsrAux.setVersionRow(this.presupuestoflujocajatsr.getVersionRow());	
				presupuestoflujocajatsrAux.setid_empresa(this.presupuestoflujocajatsr.getid_empresa());	
				presupuestoflujocajatsrAux.setid_sucursal(this.presupuestoflujocajatsr.getid_sucursal());	
				presupuestoflujocajatsrAux.setid_ejercicio(this.presupuestoflujocajatsr.getid_ejercicio());	
				presupuestoflujocajatsrAux.setid_periodo(this.presupuestoflujocajatsr.getid_periodo());	
				presupuestoflujocajatsrAux.setid_usuario(this.presupuestoflujocajatsr.getid_usuario());	
				presupuestoflujocajatsrAux.setid_anio(this.presupuestoflujocajatsr.getid_anio());	
				presupuestoflujocajatsrAux.setid_mes(this.presupuestoflujocajatsr.getid_mes());	
				presupuestoflujocajatsrAux.setid_tipo_movimiento(this.presupuestoflujocajatsr.getid_tipo_movimiento());	
				presupuestoflujocajatsrAux.setid_centro_actividad(this.presupuestoflujocajatsr.getid_centro_actividad());	
				presupuestoflujocajatsrAux.setcodigo(this.presupuestoflujocajatsr.getcodigo());	
				presupuestoflujocajatsrAux.setnombre(this.presupuestoflujocajatsr.getnombre());	
				presupuestoflujocajatsrAux.setfecha(this.presupuestoflujocajatsr.getfecha());	
				presupuestoflujocajatsrAux.setfecha_presupuesto(this.presupuestoflujocajatsr.getfecha_presupuesto());	
				presupuestoflujocajatsrAux.setvalor(this.presupuestoflujocajatsr.getvalor());	
				presupuestoflujocajatsrAux.setid_cuenta_contable(this.presupuestoflujocajatsr.getid_cuenta_contable());	
				
				if(this.presupuestoflujocajatsr.getid_centro_costo()!=null && this.presupuestoflujocajatsr.getid_centro_costo()>0L) {
					presupuestoflujocajatsrAux.setid_centro_costo(this.presupuestoflujocajatsr.getid_centro_costo());
				} else {
					presupuestoflujocajatsrAux.setid_centro_costo(null);
				}	
				presupuestoflujocajatsrAux.setdescripcion(this.presupuestoflujocajatsr.getdescripcion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrs();//WithConnection
						//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);
					
					this.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrRelaciones(presupuestoflujocajatsrAux);//WithConnection
								//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
									|| this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.presupuestoflujocajatsr,presupuestoflujocajatsrAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				presupuestoflujocajatsrAux=new  PresupuestoFlujoCajaTsr();
				
				presupuestoflujocajatsrAux.setIsNew(false);
				presupuestoflujocajatsrAux.setIsChanged(false);
				
				presupuestoflujocajatsrAux.setIsDeleted(true);
				
				presupuestoflujocajatsrAux.setId(this.presupuestoflujocajatsr.getId());	
				presupuestoflujocajatsrAux.setVersionRow(this.presupuestoflujocajatsr.getVersionRow());	
				presupuestoflujocajatsrAux.setid_empresa(this.presupuestoflujocajatsr.getid_empresa());	
				presupuestoflujocajatsrAux.setid_sucursal(this.presupuestoflujocajatsr.getid_sucursal());	
				presupuestoflujocajatsrAux.setid_ejercicio(this.presupuestoflujocajatsr.getid_ejercicio());	
				presupuestoflujocajatsrAux.setid_periodo(this.presupuestoflujocajatsr.getid_periodo());	
				presupuestoflujocajatsrAux.setid_usuario(this.presupuestoflujocajatsr.getid_usuario());	
				presupuestoflujocajatsrAux.setid_anio(this.presupuestoflujocajatsr.getid_anio());	
				presupuestoflujocajatsrAux.setid_mes(this.presupuestoflujocajatsr.getid_mes());	
				presupuestoflujocajatsrAux.setid_tipo_movimiento(this.presupuestoflujocajatsr.getid_tipo_movimiento());	
				presupuestoflujocajatsrAux.setid_centro_actividad(this.presupuestoflujocajatsr.getid_centro_actividad());	
				presupuestoflujocajatsrAux.setcodigo(this.presupuestoflujocajatsr.getcodigo());	
				presupuestoflujocajatsrAux.setnombre(this.presupuestoflujocajatsr.getnombre());	
				presupuestoflujocajatsrAux.setfecha(this.presupuestoflujocajatsr.getfecha());	
				presupuestoflujocajatsrAux.setfecha_presupuesto(this.presupuestoflujocajatsr.getfecha_presupuesto());	
				presupuestoflujocajatsrAux.setvalor(this.presupuestoflujocajatsr.getvalor());	
				presupuestoflujocajatsrAux.setid_cuenta_contable(this.presupuestoflujocajatsr.getid_cuenta_contable());	
				
				if(this.presupuestoflujocajatsr.getid_centro_costo()!=null && this.presupuestoflujocajatsr.getid_centro_costo()>0L) {
					presupuestoflujocajatsrAux.setid_centro_costo(this.presupuestoflujocajatsr.getid_centro_costo());
				} else {
					presupuestoflujocajatsrAux.setid_centro_costo(null);
				}	
				presupuestoflujocajatsrAux.setdescripcion(this.presupuestoflujocajatsr.getdescripcion());	
				
				if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.presupuestoflujocajatsrAux.getId()>=0) {	
						this.presupuestoflujocajatsrsEliminados.add(presupuestoflujocajatsrAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrs();//WithConnection
						//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrRelaciones(presupuestoflujocajatsrAux);//WithConnection
								//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
								|| this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(presupuestoflujocajatsrAux,presupuestoflujocajatsrs);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(this.presupuestoflujocajatsrsEliminados);
					
					presupuestoflujocajatsrLogic.savePresupuestoFlujoCajaTsrs();//WithConnection
					//presupuestoflujocajatsrLogic.getSetVersionRowPresupuestoFlujoCajaTsrs();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr();
				
				this.presupuestoflujocajatsrsEliminados= new ArrayList<PresupuestoFlujoCajaTsr>();		
			}
			
			if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Presupuesto Flujo Caja GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.presupuestoflujocajatsr=presupuestoflujocajatsrAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPresupuestoFlujoCajaTsr();
      	}
		
	}	
	
	public void actualizarRelaciones(PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal) throws Exception {
		
		if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal) throws Exception {	
		if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				presupuestoflujocajatsrLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				presupuestoflujocajatsrLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				presupuestoflujocajatsrLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				presupuestoflujocajatsrLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				presupuestoflujocajatsrLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				presupuestoflujocajatsrLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				presupuestoflujocajatsrLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoDetalleFormJInternalFrame.class)) {
				TipoMovimientoBeanSwingJInternalFrame tipomovimientoBeanSwingJInternalFrameLocal=(TipoMovimientoBeanSwingJInternalFrame) ((TipoMovimientoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.gettipomovimiento(),true);
				tipomovimientoBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento,this.tipomovimientosForeignKey);

				tipomovimientoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				presupuestoflujocajatsrLocal.setTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey("Formulario");
				this.setActualTipoMovimientoForeignKey(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroActividadDetalleFormJInternalFrame.class)) {
				CentroActividadBeanSwingJInternalFrame centroactividadBeanSwingJInternalFrameLocal=(CentroActividadBeanSwingJInternalFrame) ((CentroActividadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centroactividadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroActividad(centroactividadBeanSwingJInternalFrameLocal.getcentroactividad(),true);
				centroactividadBeanSwingJInternalFrameLocal.actualizarLista(centroactividadBeanSwingJInternalFrameLocal.centroactividad,this.centroactividadsForeignKey);

				centroactividadBeanSwingJInternalFrameLocal.actualizarRelaciones(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				presupuestoflujocajatsrLocal.setCentroActividad(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey("Formulario");
				this.setActualCentroActividadForeignKey(centroactividadBeanSwingJInternalFrameLocal.centroactividad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				presupuestoflujocajatsrLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				presupuestoflujocajatsrLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPresupuestoFlujoCajaTsrActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = presupuestoflujocajatsrValidator.getInvalidValues(this.presupuestoflujocajatsr);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrs) throws Exception {
		try	{		
			PresupuestoFlujoCajaTsrConstantesFunciones.actualizarLista(presupuestoflujocajatsr,presupuestoflujocajatsrs,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrs) throws Exception {
		try	{			
			PresupuestoFlujoCajaTsrConstantesFunciones.actualizarSelectedLista(presupuestoflujocajatsr,presupuestoflujocajatsrs);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				presupuestoflujocajatsrsLocal=this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				presupuestoflujocajatsrsLocal=this.presupuestoflujocajatsrs;
			}
			//ARCHITECTURE
		
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal:presupuestoflujocajatsrsLocal) {
				if(this.permiteMantenimiento(presupuestoflujocajatsrLocal) && presupuestoflujocajatsrLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.getPresupuestoFlujoCajaTsrLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_empresaPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_sucursalPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_ejercicioPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_periodoPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_usuarioPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_anioPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_mesPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDTIPOMOVIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_tipo_movimientoPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDCENTROACTIVIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_centro_actividadPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelcodigoPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelnombrePresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfechaPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.FECHAPRESUPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfecha_presupuestoPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelvalorPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_cuenta_contablePresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_centro_costoPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PresupuestoFlujoCajaTsrConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabeldescripcionPresupuestoFlujoCajaTsr,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_empresaPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_sucursalPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_ejercicioPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_periodoPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_usuarioPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_anioPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_mesPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_tipo_movimientoPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_centro_actividadPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelcodigoPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelnombrePresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfechaPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfecha_presupuestoPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelvalorPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_cuenta_contablePresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelid_centro_costoPresupuestoFlujoCajaTsr,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabeldescripcionPresupuestoFlujoCajaTsr,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPresupuestoFlujoCajaTsr--;	
		
		
		this.presupuestoflujocajatsrAux=new PresupuestoFlujoCajaTsr();
		
		this.presupuestoflujocajatsrAux.setId(this.iIdNuevoPresupuestoFlujoCajaTsr);
		this.presupuestoflujocajatsrAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().add(this.presupuestoflujocajatsrAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.presupuestoflujocajatsrs.add(this.presupuestoflujocajatsrAux);
		}
		//ARCHITECTURE
		
		this.presupuestoflujocajatsr=this.presupuestoflujocajatsrAux;
		
		if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
			this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
		}
				
		//this.setDefaultControlesPresupuestoFlujoCajaTsr();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrBean,this.presupuestoflujocajatsr,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
			classes=PresupuestoFlujoCajaTsrConstantesFunciones.getClassesRelationshipsOfPresupuestoFlujoCajaTsr(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.procesarEventosPresupuestoFlujoCajaTsrsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this.presupuestoflujocajatsr,this.presupuestoflujocajatsrParameterGeneral,this.isEsNuevoPresupuestoFlujoCajaTsr,classes);//this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsr()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral,this.presupuestoflujocajatsrBean,false);
		
		if(this.presupuestoflujocajatsrReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr());
		}
		
		if(this.presupuestoflujocajatsrReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr(),classes);//this.presupuestoflujocajatsrBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPresupuestoFlujoCajaTsr();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.RecargarFormPresupuestoFlujoCajaTsr(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
						
			if(presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();
			}
			
			this.actualizarVisualTableDatosPresupuestoFlujoCajaTsr();
			
			this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(this.getIndiceNuevoPresupuestoFlujoCajaTsr(), this.getIndiceNuevoPresupuestoFlujoCajaTsr());
			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
						
			this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarcodigoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarnombrePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarfechaPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarfecha_presupuestoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarvalorPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activardescripcionPresupuestoFlujoCajaTsr);	
		//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_empresaPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_sucursalPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_ejercicioPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_periodoPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_usuarioPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_anioPresupuestoFlujoCajaTsr);//
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_mesPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_tipo_movimientoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_actividadPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_cuenta_contablePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setEnabled(isHabilitar && this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_costoPresupuestoFlujoCajaTsr);
	};
	
	public void setDefaultControlesPresupuestoFlujoCajaTsr() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPresupuestoFlujoCajaTsr(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.presupuestoflujocajatsrSessionBean.setConGuardarRelaciones(true);			
			this.presupuestoflujocajatsrSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.setVisible(true);
			
					
		} else {
			//this.presupuestoflujocajatsrSessionBean.setConGuardarRelaciones(false);			
			this.presupuestoflujocajatsrSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoPresupuestoFlujoCajaTsr() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				if(presupuestoflujocajatsrAux.getId().equals(this.iIdNuevoPresupuestoFlujoCajaTsr)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrs) {
				if(presupuestoflujocajatsrAux.getId().equals(this.iIdNuevoPresupuestoFlujoCajaTsr)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				if(presupuestoflujocajatsrAux.getId().equals(presupuestoflujocajatsr.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrs) {
				if(presupuestoflujocajatsrAux.getId().equals(presupuestoflujocajatsr.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsrOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				if(presupuestoflujocajatsrAux.getPresupuestoFlujoCajaTsrOriginal().getId().equals(presupuestoflujocajatsrOriginal.getId())) {
					existe=true;
					presupuestoflujocajatsrOriginal.setId(presupuestoflujocajatsrAux.getId());
					presupuestoflujocajatsrOriginal.setVersionRow(presupuestoflujocajatsrAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrs) {
				if(presupuestoflujocajatsrAux.getPresupuestoFlujoCajaTsrOriginal().getId().equals(presupuestoflujocajatsrOriginal.getId())) {
					existe=true;
					presupuestoflujocajatsrOriginal.setId(presupuestoflujocajatsrAux.getId());
					presupuestoflujocajatsrOriginal.setVersionRow(presupuestoflujocajatsrAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPresupuestoFlujoCajaTsr(Boolean esParaCancelar) throws Exception {
		presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
		presupuestoflujocajatsrAux=new PresupuestoFlujoCajaTsr();
		
		if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
					if(presupuestoflujocajatsrAux.getId()<0) {
						presupuestoflujocajatsrsAux.add(presupuestoflujocajatsrAux);
					}		
				}
				this.iIdNuevoPresupuestoFlujoCajaTsr=0L;
				this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().removeAll(presupuestoflujocajatsrsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrs) {
					if(presupuestoflujocajatsrAux.getId()<0) {
						presupuestoflujocajatsrsAux.add(presupuestoflujocajatsrAux);
					}		
				}
				this.iIdNuevoPresupuestoFlujoCajaTsr=0L;
				this.presupuestoflujocajatsrs.removeAll(presupuestoflujocajatsrsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPresupuestoFlujoCajaTsr 
					&& this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()>0
					) {
					presupuestoflujocajatsrAux=this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().get(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size() - 1);
				
					if(presupuestoflujocajatsrAux.getId()<0) {
						this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().remove(presupuestoflujocajatsrAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPresupuestoFlujoCajaTsr && this.presupuestoflujocajatsrs.size()>0) {
					presupuestoflujocajatsrAux=this.presupuestoflujocajatsrs.get(this.presupuestoflujocajatsrs.size() - 1);
				
					if(presupuestoflujocajatsrAux.getId()<0) {
						this.presupuestoflujocajatsrs.remove(presupuestoflujocajatsrAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPresupuestoFlujoCajaTsr(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(presupuestoflujocajatsr.getId()<0) {
				this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().remove(this.presupuestoflujocajatsr);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(presupuestoflujocajatsr.getId()<0) {
				this.presupuestoflujocajatsrs.remove(this.presupuestoflujocajatsr);
			}
		}			
	}
	
	public void setEstadosInicialesPresupuestoFlujoCajaTsr(List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsAux) throws Exception {
		PresupuestoFlujoCajaTsrConstantesFunciones.setEstadosInicialesPresupuestoFlujoCajaTsr(presupuestoflujocajatsrsAux);
	}
	
	public void setEstadosInicialesPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux) throws Exception {
		PresupuestoFlujoCajaTsrConstantesFunciones.setEstadosInicialesPresupuestoFlujoCajaTsr(presupuestoflujocajatsrAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPresupuestoFlujoCajaTsrActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPresupuestoFlujoCajaTsrActual()) {
				if(!this.isEsNuevoPresupuestoFlujoCajaTsr) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPresupuestoFlujoCajaTsr=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPresupuestoFlujoCajaTsrActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Presupuesto Flujo Caja ?", "MANTENIMIENTO DE Presupuesto Flujo Caja", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) throws Exception {
		PresupuestoFlujoCajaTsrConstantesFunciones.seleccionarAsignar(this.presupuestoflujocajatsr,presupuestoflujocajatsr);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPresupuestoFlujoCajaTsr=this.isPermisoActualizarOriginalPresupuestoFlujoCajaTsr;
			
			
			this.seleccionarAsignar(presupuestoflujocajatsr);
			
			

			idCuentaContableActual=presupuestoflujocajatsr.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();

			idCentroCostoActual=presupuestoflujocajatsr.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PresupuestoFlujoCajaTsrConstantesFunciones.quitarEspaciosPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.presupuestoflujocajatsrSessionBean.setsFuncionBusquedaRapida(this.presupuestoflujocajatsrSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPresupuestoFlujoCajaTsr) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPresupuestoFlujoCajaTsr(esParaCancelar);				
				this.cancelarNuevoPresupuestoFlujoCajaTsr(esParaCancelar);								
			}
			
			this.presupuestoflujocajatsr=new PresupuestoFlujoCajaTsr();
			
			this.inicializarPresupuestoFlujoCajaTsr();
			
			this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPresupuestoFlujoCajaTsr() throws Exception {
		try {
			PresupuestoFlujoCajaTsrConstantesFunciones.inicializarPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePresupuestoFlujoCajaTsrs(String sAccionBusqueda,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PresupuestoFlujoCajaTsr"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PresupuestoFlujoCajaTsrMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PresupuestoFlujoCajaTsrMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PresupuestoFlujoCajaTsr"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Presupuesto Flujo Cajas");		
		parameters.put("busquedapor", PresupuestoFlujoCajaTsrConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePresupuestoFlujoCajaTsr=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PresupuestoFlujoCajaTsrConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PresupuestoFlujoCajaTsrConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePresupuestoFlujoCajaTsr=new JRBeanArrayDataSource(PresupuestoFlujoCajaTsrJInternalFrame.TraerPresupuestoFlujoCajaTsrBeans(presupuestoflujocajatsrsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePresupuestoFlujoCajaTsr);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PresupuestoFlujoCajaTsrConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PresupuestoFlujoCajaTsrBean.TraerPresupuestoFlujoCajaTsrBeans(presupuestoflujocajatsrsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(null);
					//this.generarExcelReportePresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPresupuestoFlujoCajaTsrs(sAccionBusqueda,sTipoArchivoReporte,presupuestoflujocajatsrsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePresupuestoFlujoCajaTsrs(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoFlujoCajaTsrs");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPresupuestoFlujoCajaTsr("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr : presupuestoflujocajatsrsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PresupuestoFlujoCajaTsrConstantesFunciones.generarExcelReporteDataPresupuestoFlujoCajaTsr("NORMAL",row,workbook,presupuestoflujocajatsr,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPresupuestoFlujoCajaTsr(String sTipo,Row row,Workbook workbook) {
		
		PresupuestoFlujoCajaTsrConstantesFunciones.generarExcelReporteHeaderPresupuestoFlujoCajaTsr(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPresupuestoFlujoCajaTsrs(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoFlujoCajaTsrs");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr : presupuestoflujocajatsrsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.getPresupuestoFlujoCajaTsrDescripcion(presupuestoflujocajatsr));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.gettipomovimiento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getcentroactividad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getfecha_presupuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(presupuestoflujocajatsr.getdescripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPresupuestoFlujoCajaTsrs(String sAccionBusqueda,String sTipoArchivoReporte,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsRespaldo=null;
		
		classes=PresupuestoFlujoCajaTsrConstantesFunciones.getClassesRelationshipsOfPresupuestoFlujoCajaTsr(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.presupuestoflujocajatsrLogic.setDatosCliente(this.datosCliente);
		this.presupuestoflujocajatsrLogic.setDatosDeep(this.datosDeep);
		this.presupuestoflujocajatsrLogic.setIsConDeep(true);
		
		presupuestoflujocajatsrsRespaldo=this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs();
		
		this.presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(presupuestoflujocajatsrsParaReportes);	
		this.presupuestoflujocajatsrLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		presupuestoflujocajatsrsParaReportes=this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs();
		this.presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(presupuestoflujocajatsrsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PresupuestoFlujoCajaTsrs");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPresupuestoFlujoCajaTsr("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr : presupuestoflujocajatsrsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPresupuestoFlujoCajaTsr("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PresupuestoFlujoCajaTsrConstantesFunciones.generarExcelReporteDataPresupuestoFlujoCajaTsr("NORMAL",row,workbook,presupuestoflujocajatsr,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.getPresupuestoFlujoCajaTsrDescripcion(presupuestoflujocajatsr));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPresupuestoFlujoCajaTsr() throws Exception {		
		this.startProcessPresupuestoFlujoCajaTsr(true);
	}
	
	public void startProcessPresupuestoFlujoCajaTsr(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr ,this.jPanelParametrosReportesPresupuestoFlujoCajaTsr, this.jScrollPanelDatosPresupuestoFlujoCajaTsr,this.jPanelPaginacionPresupuestoFlujoCajaTsr, this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr, this.jPanelAccionesPresupuestoFlujoCajaTsr,this.jPanelAccionesFormularioPresupuestoFlujoCajaTsr,this.jmenuBarPresupuestoFlujoCajaTsr,this.jmenuBarDetallePresupuestoFlujoCajaTsr,this.jTtoolBarPresupuestoFlujoCajaTsr,this.jTtoolBarDetallePresupuestoFlujoCajaTsr);		
		
		final JTabbedPane jTabbedPaneBusquedasPresupuestoFlujoCajaTsr=this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr; 
		
		final JPanel jPanelParametrosReportesPresupuestoFlujoCajaTsr=this.jPanelParametrosReportesPresupuestoFlujoCajaTsr;
		//final JScrollPane jScrollPanelDatosPresupuestoFlujoCajaTsr=this.jScrollPanelDatosPresupuestoFlujoCajaTsr;
		final JTable jTableDatosPresupuestoFlujoCajaTsr=this.jTableDatosPresupuestoFlujoCajaTsr;		
		final JPanel jPanelPaginacionPresupuestoFlujoCajaTsr=this.jPanelPaginacionPresupuestoFlujoCajaTsr;
		//final JScrollPane jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr=this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr;
		final JPanel jPanelAccionesPresupuestoFlujoCajaTsr=this.jPanelAccionesPresupuestoFlujoCajaTsr;
		
		JPanel jPanelCamposAuxiliarPresupuestoFlujoCajaTsr=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			jPanelCamposAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelCamposPresupuestoFlujoCajaTsr;
			jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelAccionesFormularioPresupuestoFlujoCajaTsr;
		}
		
		final JPanel jPanelCamposPresupuestoFlujoCajaTsr=jPanelCamposAuxiliarPresupuestoFlujoCajaTsr;
		final JPanel jPanelAccionesFormularioPresupuestoFlujoCajaTsr=jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr;
		
		
		final JMenuBar jmenuBarPresupuestoFlujoCajaTsr=this.jmenuBarPresupuestoFlujoCajaTsr;
		final JToolBar jTtoolBarPresupuestoFlujoCajaTsr=this.jTtoolBarPresupuestoFlujoCajaTsr;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jmenuBarDetallePresupuestoFlujoCajaTsr;
			jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTtoolBarDetallePresupuestoFlujoCajaTsr;
		}
		
		final JMenuBar jmenuBarDetallePresupuestoFlujoCajaTsr=jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr;
		final JToolBar jTtoolBarDetallePresupuestoFlujoCajaTsr=jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPresupuestoFlujoCajaTsr;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPresupuestoFlujoCajaTsr;
			processRunnable.jTableDatos=jTableDatosPresupuestoFlujoCajaTsr;
			processRunnable.jPanelCampos=jPanelCamposPresupuestoFlujoCajaTsr;
			processRunnable.jPanelPaginacion=jPanelPaginacionPresupuestoFlujoCajaTsr;
			processRunnable.jPanelAcciones=jPanelAccionesPresupuestoFlujoCajaTsr;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPresupuestoFlujoCajaTsr;
			
			
			processRunnable.jmenuBar=jmenuBarPresupuestoFlujoCajaTsr;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePresupuestoFlujoCajaTsr;
			processRunnable.jTtoolBar=jTtoolBarPresupuestoFlujoCajaTsr;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePresupuestoFlujoCajaTsr;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPresupuestoFlujoCajaTsr ,jPanelParametrosReportesPresupuestoFlujoCajaTsr,jTableDatosPresupuestoFlujoCajaTsr, /*jScrollPanelDatosPresupuestoFlujoCajaTsr,*/jPanelCamposPresupuestoFlujoCajaTsr,jPanelPaginacionPresupuestoFlujoCajaTsr, /*jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr,*/ jPanelAccionesPresupuestoFlujoCajaTsr,jPanelAccionesFormularioPresupuestoFlujoCajaTsr,jmenuBarPresupuestoFlujoCajaTsr,jmenuBarDetallePresupuestoFlujoCajaTsr,jTtoolBarPresupuestoFlujoCajaTsr,jTtoolBarDetallePresupuestoFlujoCajaTsr);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPresupuestoFlujoCajaTsr ,jPanelParametrosReportesPresupuestoFlujoCajaTsr, jScrollPanelDatosPresupuestoFlujoCajaTsr,jPanelPaginacionPresupuestoFlujoCajaTsr, jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr, jPanelAccionesPresupuestoFlujoCajaTsr,jPanelAccionesFormularioPresupuestoFlujoCajaTsr,jmenuBarPresupuestoFlujoCajaTsr,jmenuBarDetallePresupuestoFlujoCajaTsr,jTtoolBarPresupuestoFlujoCajaTsr,jTtoolBarDetallePresupuestoFlujoCajaTsr);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPresupuestoFlujoCajaTsr() {// throws Exception 
		this.finishProcessPresupuestoFlujoCajaTsr(true);
	}
	
	public void finishProcessPresupuestoFlujoCajaTsr(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr ,this.jPanelParametrosReportesPresupuestoFlujoCajaTsr, this.jScrollPanelDatosPresupuestoFlujoCajaTsr,this.jPanelPaginacionPresupuestoFlujoCajaTsr, this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr, this.jPanelAccionesPresupuestoFlujoCajaTsr,this.jPanelAccionesFormularioPresupuestoFlujoCajaTsr,this.jmenuBarPresupuestoFlujoCajaTsr,this.jmenuBarDetallePresupuestoFlujoCajaTsr,this.jTtoolBarPresupuestoFlujoCajaTsr,this.jTtoolBarDetallePresupuestoFlujoCajaTsr);		
		
		final JTabbedPane jTabbedPaneBusquedasPresupuestoFlujoCajaTsr=this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr; 
		
		final JPanel jPanelParametrosReportesPresupuestoFlujoCajaTsr=this.jPanelParametrosReportesPresupuestoFlujoCajaTsr;
		//final JScrollPane jScrollPanelDatosPresupuestoFlujoCajaTsr=this.jScrollPanelDatosPresupuestoFlujoCajaTsr;
		final JTable jTableDatosPresupuestoFlujoCajaTsr=this.jTableDatosPresupuestoFlujoCajaTsr;		
		final JPanel jPanelPaginacionPresupuestoFlujoCajaTsr=this.jPanelPaginacionPresupuestoFlujoCajaTsr;
		//final JScrollPane jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr=this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr;
		final JPanel jPanelAccionesPresupuestoFlujoCajaTsr=this.jPanelAccionesPresupuestoFlujoCajaTsr;
		
		JPanel jPanelCamposAuxiliarPresupuestoFlujoCajaTsr=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr=new JPanel();
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			jPanelCamposAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelCamposPresupuestoFlujoCajaTsr;
			jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelAccionesFormularioPresupuestoFlujoCajaTsr;
		}
		
		final JPanel jPanelCamposPresupuestoFlujoCajaTsr=jPanelCamposAuxiliarPresupuestoFlujoCajaTsr;
		final JPanel jPanelAccionesFormularioPresupuestoFlujoCajaTsr=jPanelAccionesFormularioAuxiliarPresupuestoFlujoCajaTsr;
		
		
		final JMenuBar jmenuBarPresupuestoFlujoCajaTsr=this.jmenuBarPresupuestoFlujoCajaTsr;		
		final JToolBar jTtoolBarPresupuestoFlujoCajaTsr=this.jTtoolBarPresupuestoFlujoCajaTsr;
				
		JMenuBar jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jmenuBarDetallePresupuestoFlujoCajaTsr;
			jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTtoolBarDetallePresupuestoFlujoCajaTsr;		
		}
		
		final JMenuBar jmenuBarDetallePresupuestoFlujoCajaTsr=jmenuBarDetalleAuxiliarPresupuestoFlujoCajaTsr;
		final JToolBar jTtoolBarDetallePresupuestoFlujoCajaTsr=jTtoolBarDetalleAuxiliarPresupuestoFlujoCajaTsr;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPresupuestoFlujoCajaTsr;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPresupuestoFlujoCajaTsr;
			processRunnable.jTableDatos=jTableDatosPresupuestoFlujoCajaTsr;
			processRunnable.jPanelCampos=jPanelCamposPresupuestoFlujoCajaTsr;
			processRunnable.jPanelPaginacion=jPanelPaginacionPresupuestoFlujoCajaTsr;
			processRunnable.jPanelAcciones=jPanelAccionesPresupuestoFlujoCajaTsr;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPresupuestoFlujoCajaTsr;
			
			
			processRunnable.jmenuBar=jmenuBarPresupuestoFlujoCajaTsr;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePresupuestoFlujoCajaTsr;
			processRunnable.jTtoolBar=jTtoolBarPresupuestoFlujoCajaTsr;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePresupuestoFlujoCajaTsr;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPresupuestoFlujoCajaTsr ,jPanelParametrosReportesPresupuestoFlujoCajaTsr, jTableDatosPresupuestoFlujoCajaTsr,/*jScrollPanelDatosPresupuestoFlujoCajaTsr,*/jPanelCamposPresupuestoFlujoCajaTsr,jPanelPaginacionPresupuestoFlujoCajaTsr, /*jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr,*/ jPanelAccionesPresupuestoFlujoCajaTsr,jPanelAccionesFormularioPresupuestoFlujoCajaTsr,jmenuBarPresupuestoFlujoCajaTsr,jmenuBarDetallePresupuestoFlujoCajaTsr,jTtoolBarPresupuestoFlujoCajaTsr,jTtoolBarDetallePresupuestoFlujoCajaTsr));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPresupuestoFlujoCajaTsr(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPresupuestoFlujoCajaTsr(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPresupuestoFlujoCajaTsr(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPresupuestoFlujoCajaTsr,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePresupuestoFlujoCajaTsr,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPresupuestoFlujoCajaTsr(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPresupuestoFlujoCajaTsr,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePresupuestoFlujoCajaTsr,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.presupuestoflujocajatsrConstantesFunciones.getsFinalQueryPresupuestoFlujoCajaTsr();
		String  finalQueryPaginacionTodos=this.presupuestoflujocajatsrConstantesFunciones.getsFinalQueryPresupuestoFlujoCajaTsr();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PresupuestoFlujoCajaTsrConstantesFunciones.getArrayColumnasGlobalesNoPresupuestoFlujoCajaTsr(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PresupuestoFlujoCajaTsrConstantesFunciones.getArrayColumnasGlobalesPresupuestoFlujoCajaTsr(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PresupuestoFlujoCajaTsrConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.presupuestoflujocajatsrsEliminados= new ArrayList<PresupuestoFlujoCajaTsr>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPresupuestoFlujoCajaTsr();
		
				///*PresupuestoFlujoCajaTsrSessionBean*/this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			
			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PresupuestoFlujoCajaTsrConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PresupuestoFlujoCajaTsrConstantesFunciones.getClassesForeignKeysOfPresupuestoFlujoCajaTsr(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/presupuestoflujocajatsr."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			presupuestoflujocajatsrsAux= new ArrayList<PresupuestoFlujoCajaTsr>();
			
				
			presupuestoflujocajatsrLogic.setDatosCliente(this.datosCliente);
			presupuestoflujocajatsrLogic.setDatosDeep(this.datosDeep);
			presupuestoflujocajatsrLogic.setIsConDeep(true);
			
			
			presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					presupuestoflujocajatsrLogic.getTodosPresupuestoFlujoCajaTsrs(finalQueryGlobal,pagination);
					
					//presupuestoflujocajatsrLogic.getTodosPresupuestoFlujoCajaTsrsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null|| presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoflujocajatsrsAux= new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux= new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoflujocajatsrLogic.getTodosPresupuestoFlujoCajaTsrs(finalQueryGlobal+"",this.pagination);												
							
							//presupuestoflujocajatsrLogic.getTodosPresupuestoFlujoCajaTsrsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());					
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPresupuestoFlujoCajaTsr=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPresupuestoFlujoCajaTsr=this.idActual;
				
				} else if(this.idPresupuestoFlujoCajaTsrActual!=null && this.idPresupuestoFlujoCajaTsrActual!=0L) {
					idPresupuestoFlujoCajaTsr=idPresupuestoFlujoCajaTsrActual;
				}
				
					
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndicePorId(idPresupuestoFlujoCajaTsr);
				
				this.presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					presupuestoflujocajatsrLogic.getEntity(idPresupuestoFlujoCajaTsr);
					
					//presupuestoflujocajatsrLogic.getEntityWithConnection(idPresupuestoFlujoCajaTsr);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().add(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsr());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
					this.presupuestoflujocajatsrs.add(presupuestoflujocajatsr);
				}
				
				if(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsr()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorCodigo")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorCodigo",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorCodigo",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorFecha")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFecha(fechaBusquedaPorFecha);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFecha(finalQueryGlobal,pagination,fechaBusquedaPorFecha);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFecha(fechaBusquedaPorFecha);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFecha(fechaBusquedaPorFecha);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFecha(finalQueryGlobal,pagination,fechaBusquedaPorFecha);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFecha(fechaBusquedaPorFecha);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFecha(fechaBusquedaPorFecha);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorFecha",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorFecha",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorFechaPresupuesto")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFechaPresupuesto(fecha_presupuestoBusquedaPorFechaPresupuesto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto(finalQueryGlobal,pagination,fecha_presupuestoBusquedaPorFechaPresupuesto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFechaPresupuesto(fecha_presupuestoBusquedaPorFechaPresupuesto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFechaPresupuesto(fecha_presupuestoBusquedaPorFechaPresupuesto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto(finalQueryGlobal,pagination,fecha_presupuestoBusquedaPorFechaPresupuesto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFechaPresupuesto(fecha_presupuestoBusquedaPorFechaPresupuesto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorFechaPresupuesto(fecha_presupuestoBusquedaPorFechaPresupuesto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorFechaPresupuesto",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorFechaPresupuesto",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorNombre",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorNombre",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorValor")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorValor(valorBusquedaPorValor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorValor(finalQueryGlobal,pagination,valorBusquedaPorValor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorValor(valorBusquedaPorValor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorValor(valorBusquedaPorValor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorValor(finalQueryGlobal,pagination,valorBusquedaPorValor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorValor(valorBusquedaPorValor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceBusquedaPorValor(valorBusquedaPorValor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorValor",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("BusquedaPorValor",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroActividad")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroActividad(finalQueryGlobal,pagination,id_centro_actividadFK_IdCentroActividad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroActividad(finalQueryGlobal,pagination,id_centro_actividadFK_IdCentroActividad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroActividad(id_centro_actividadFK_IdCentroActividad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCentroActividad",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCentroActividad",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCentroCosto",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCentroCosto",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCuentaContable",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdCuentaContable",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdEjercicio",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdEjercicio",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdEmpresa",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdEmpresa",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdPeriodo",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdPeriodo",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdSucursal",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdSucursal",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoMovimiento")) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()==null||presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=presupuestoflujocajatsrs==null|| presupuestoflujocajatsrs.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
						presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrsAux=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrsAux.addAll(presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento(finalQueryGlobal,pagination,id_tipo_movimientoFK_IdTipoMovimiento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PresupuestoFlujoCajaTsrConstantesFunciones.getDetalleIndiceFK_IdTipoMovimiento(id_tipo_movimientoFK_IdTipoMovimiento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdTipoMovimiento",presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePresupuestoFlujoCajaTsrs("FK_IdTipoMovimiento",presupuestoflujocajatsrs);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(new ArrayList<PresupuestoFlujoCajaTsr>());
						presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().addAll(presupuestoflujocajatsrsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrs=new ArrayList<PresupuestoFlujoCajaTsr>();
							presupuestoflujocajatsrs.addAll(presupuestoflujocajatsrsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPresupuestoFlujoCajaTsr();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPresupuestoFlujoCajaTsr();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=presupuestoflujocajatsrs.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=presupuestoflujocajatsrs.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) {
		Boolean permite=true;
		
		if(this.presupuestoflujocajatsr.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PresupuestoFlujoCajaTsrConstantesFunciones.getOrderByListaPresupuestoFlujoCajaTsr();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PresupuestoFlujoCajaTsrConstantesFunciones.getOrderByListaPresupuestoFlujoCajaTsr();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				if(presupuestoflujocajatsr.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoflujocajatsrTotales=presupuestoflujocajatsr;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:this.presupuestoflujocajatsrs) {
				if(presupuestoflujocajatsr.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoflujocajatsrTotales=presupuestoflujocajatsr;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.presupuestoflujocajatsrAux=new PresupuestoFlujoCajaTsr();
			this.presupuestoflujocajatsrAux.setsType(Constantes2.S_TOTALES);
			this.presupuestoflujocajatsrAux.setIsNew(false);
			this.presupuestoflujocajatsrAux.setIsChanged(false);
			this.presupuestoflujocajatsrAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PresupuestoFlujoCajaTsrConstantesFunciones.TotalizarValoresFilaPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this.presupuestoflujocajatsrAux);
				
				this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().add(this.presupuestoflujocajatsrAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PresupuestoFlujoCajaTsrConstantesFunciones.TotalizarValoresFilaPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrs,this.presupuestoflujocajatsrAux);
				
				this.presupuestoflujocajatsrs.add(this.presupuestoflujocajatsrAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		presupuestoflujocajatsrTotales=new PresupuestoFlujoCajaTsr();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().remove(presupuestoflujocajatsrTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.presupuestoflujocajatsrs.remove(presupuestoflujocajatsrTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		presupuestoflujocajatsrTotales=new PresupuestoFlujoCajaTsr();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				if(presupuestoflujocajatsr.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoflujocajatsrTotales=presupuestoflujocajatsr;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PresupuestoFlujoCajaTsrConstantesFunciones.TotalizarValoresFilaPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),presupuestoflujocajatsrTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:this.presupuestoflujocajatsrs) {
				if(presupuestoflujocajatsr.getsType().equals(Constantes2.S_TOTALES)) {
					presupuestoflujocajatsrTotales=presupuestoflujocajatsr;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PresupuestoFlujoCajaTsrConstantesFunciones.TotalizarValoresFilaPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrs,presupuestoflujocajatsrTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPresupuestoFlujoCajaTsrsBusquedaPorCodigo()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorCodigo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorFecha()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorFecha";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorFechaPresupuesto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorValor()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorValor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCentroActividad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroActividad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoMovimiento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPresupuestoFlujoCajaTsrsBusquedaPorCodigo(String sFinalQuery,String codigo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorCodigo(sFinalQuery,this.pagination,codigo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorFecha(String sFinalQuery,Date fecha)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFecha(sFinalQuery,this.pagination,fecha);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto(String sFinalQuery,Date fecha_presupuesto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto(sFinalQuery,this.pagination,fecha_presupuesto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsBusquedaPorValor(String sFinalQuery,Double valor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsBusquedaPorValor(sFinalQuery,this.pagination,valor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCentroActividad(String sFinalQuery,Long id_centro_actividad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroActividad(sFinalQuery,this.pagination,id_centro_actividad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento(String sFinalQuery,Long id_tipo_movimiento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento(sFinalQuery,this.pagination,id_tipo_movimiento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPresupuestoFlujoCajaTsrsFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrsFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPresupuestoFlujoCajaTsr() {
		this.isPermisoTodoPresupuestoFlujoCajaTsr=false;
		this.isPermisoNuevoPresupuestoFlujoCajaTsr=false;
		this.isPermisoActualizarPresupuestoFlujoCajaTsr=false;
		this.isPermisoActualizarOriginalPresupuestoFlujoCajaTsr=false;
		this.isPermisoEliminarPresupuestoFlujoCajaTsr=false;
		this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr=false;
		this.isPermisoConsultaPresupuestoFlujoCajaTsr=false;
		this.isPermisoBusquedaPresupuestoFlujoCajaTsr=false;
		this.isPermisoReportePresupuestoFlujoCajaTsr=false;		
		this.isPermisoOrdenPresupuestoFlujoCajaTsr=false;		
		this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr=false;		
		this.isPermisoPaginacionAltoPresupuestoFlujoCajaTsr=false;
		this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr=false;
		this.isPermisoCopiarPresupuestoFlujoCajaTsr=false;		
		this.isPermisoVerFormPresupuestoFlujoCajaTsr=false;		
		this.isPermisoDuplicarPresupuestoFlujoCajaTsr=false;		
		this.isPermisoOrdenPresupuestoFlujoCajaTsr=false;		
	}
	
	public void setPermisosUsuarioPresupuestoFlujoCajaTsr(Boolean isPermiso) {
		this.isPermisoTodoPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoNuevoPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoActualizarPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoActualizarOriginalPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoEliminarPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoConsultaPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoBusquedaPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoReportePresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoOrdenPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoPaginacionAltoPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoCopiarPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoVerFormPresupuestoFlujoCajaTsr=isPermiso;		
		this.isPermisoDuplicarPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoOrdenPresupuestoFlujoCajaTsr=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPresupuestoFlujoCajaTsr(Boolean isPermiso) {
		//this.isPermisoTodoPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoNuevoPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoActualizarPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoActualizarOriginalPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoEliminarPresupuestoFlujoCajaTsr=isPermiso;
		this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr=isPermiso;
		//this.isPermisoConsultaPresupuestoFlujoCajaTsr=isPermiso;
		//this.isPermisoBusquedaPresupuestoFlujoCajaTsr=isPermiso;
		//this.isPermisoReportePresupuestoFlujoCajaTsr=isPermiso;
		//this.isPermisoOrdenPresupuestoFlujoCajaTsr=isPermiso;		
		//this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr=isPermiso;		
		//this.isPermisoPaginacionAltoPresupuestoFlujoCajaTsr=isPermiso;		
		//this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr=isPermiso;		
		//this.isPermisoCopiarPresupuestoFlujoCajaTsr=isPermiso;		
		//this.isPermisoDuplicarPresupuestoFlujoCajaTsr=isPermiso;
		//this.isPermisoOrdenPresupuestoFlujoCajaTsr=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPresupuestoFlujoCajaTsrClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(PresupuestoFlujoCajaTsrJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPresupuestoFlujoCajaTsrClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioPresupuestoFlujoCajaTsrClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPresupuestoFlujoCajaTsrClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPresupuestoFlujoCajaTsrClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioPresupuestoFlujoCajaTsr() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PresupuestoFlujoCajaTsrJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PresupuestoFlujoCajaTsrConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPresupuestoFlujoCajaTsr=this.isPermisoActualizarPresupuestoFlujoCajaTsr;
			this.isPermisoEliminarPresupuestoFlujoCajaTsr=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPresupuestoFlujoCajaTsr=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePresupuestoFlujoCajaTsr=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPresupuestoFlujoCajaTsr=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPresupuestoFlujoCajaTsr=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPresupuestoFlujoCajaTsr.setToolTipText(this.jTableDatosPresupuestoFlujoCajaTsr.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPresupuestoFlujoCajaTsr(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPresupuestoFlujoCajaTsr(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPresupuestoFlujoCajaTsr() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPresupuestoFlujoCajaTsrListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.tipomovimientosForeignKey=new ArrayList();
				this.centroactividadsForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPresupuestoFlujoCajaTsrListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPresupuestoFlujoCajaTsrListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroActividadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPresupuestoFlujoCajaTsrListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrReturnGeneral=new PresupuestoFlujoCajaTsrParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_empresaPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_empresaPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_sucursalPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_sucursalPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_ejercicioPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_ejercicioPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_periodoPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_periodoPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_usuarioPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_usuarioPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_anioPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_anioPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_mesPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_mesPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalTipoMovimiento="";

				if(((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_tipo_movimientoPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_tipo_movimientoPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoMovimiento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimiento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimiento, "");
						finalQueryGlobalTipoMovimiento+=TipoMovimientoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimiento=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidTipoMovimientoActual();
					}
				} else {
					finalQueryGlobalTipoMovimiento="NONE";
				}


				String finalQueryGlobalCentroActividad="";

				if(((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_actividadPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_actividadPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroActividad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroActividad=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroActividad, "");
						finalQueryGlobalCentroActividad+=CentroActividadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroActividad=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidCentroActividadActual();
					}
				} else {
					finalQueryGlobalCentroActividad="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_cuenta_contablePresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_cuenta_contablePresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_costoPresupuestoFlujoCajaTsr)
					 || (this.esRecargarFks && this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_costoPresupuestoFlujoCajaTsr)) {

					if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+presupuestoflujocajatsrSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.cargarCombosLoteForeignKeyPresupuestoFlujoCajaTsr(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalUsuario,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalTipoMovimiento,finalQueryGlobalCentroActividad,finalQueryGlobalCuentaContable,finalQueryGlobalCentroCosto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=presupuestoflujocajatsrReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=presupuestoflujocajatsrReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=presupuestoflujocajatsrReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=presupuestoflujocajatsrReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=presupuestoflujocajatsrReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=presupuestoflujocajatsrReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=presupuestoflujocajatsrReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalTipoMovimiento.equals("NONE")) {
				this.tipomovimientosForeignKey=presupuestoflujocajatsrReturnGeneral.gettipomovimientosForeignKey();
			}

			if(!finalQueryGlobalCentroActividad.equals("NONE")) {
				this.centroactividadsForeignKey=presupuestoflujocajatsrReturnGeneral.getcentroactividadsForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=presupuestoflujocajatsrReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=presupuestoflujocajatsrReturnGeneral.getcentrocostosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyTipoMovimiento();
			this.addItemDefectoCombosForeignKeyCentroActividad();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyCentroCosto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.presupuestoflujocajatsrSessionBean==null) {
				this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimiento()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				TipoMovimiento tipomovimiento=new TipoMovimiento();
				TipoMovimientoConstantesFunciones.setTipoMovimientoDescripcion(tipomovimiento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimiento.setId(null);

				if(!TipoMovimientoConstantesFunciones.ExisteEnLista(this.tipomovimientosForeignKey,tipomovimiento,true)) {

					this.tipomovimientosForeignKey.add(0,tipomovimiento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroActividad()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				CentroActividad centroactividad=new CentroActividad();
				CentroActividadConstantesFunciones.setCentroActividadDescripcion(centroactividad,Constantes.SMENSAJE_ESCOJA_OPCION);
				centroactividad.setId(null);

				if(!CentroActividadConstantesFunciones.ExisteEnLista(this.centroactividadsForeignKey,centroactividad,true)) {

					this.centroactividadsForeignKey.add(0,centroactividad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.presupuestoflujocajatsrSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPresupuestoFlujoCajaTsr(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
			
			
				this.presupuestoflujocajatsr.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.presupuestoflujocajatsr.setfecha_presupuesto(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr)throws Exception {	
		try {
			
			this.setActualTipoMovimientoForeignKey(presupuestoflujocajatsr.getid_tipo_movimiento(),false,"Formulario");
			this.setActualCentroActividadForeignKey(presupuestoflujocajatsr.getid_centro_actividad(),false,"Formulario");
			this.setActualCuentaContableForeignKey(presupuestoflujocajatsr.getid_cuenta_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(presupuestoflujocajatsr.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,String sTipoEvento)throws Exception {	
		try {
			
			

				if(presupuestoflujocajatsr.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contablePresupuestoFlujoCajaTsr")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(presupuestoflujocajatsr.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				if(presupuestoflujocajatsr.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoPresupuestoFlujoCajaTsr")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(presupuestoflujocajatsr.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPresupuestoFlujoCajaTsr()throws Exception {	
		try {
			
			this.setActualTipoMovimientoForeignKey(this.presupuestoflujocajatsrConstantesFunciones.getid_tipo_movimiento(),false,"Formulario");
			this.setActualCentroActividadForeignKey(this.presupuestoflujocajatsrConstantesFunciones.getid_centro_actividad(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.presupuestoflujocajatsrConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.presupuestoflujocajatsrConstantesFunciones.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPresupuestoFlujoCajaTsr()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPresupuestoFlujoCajaTsr()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
			this.cargarCombosFrameCentroActividadsForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPresupuestoFlujoCajaTsr(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPresupuestoFlujoCajaTsr()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.getItemCount()>0) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






















	
	

	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean(); 
		this.presupuestoflujocajatsrConstantesFunciones=new PresupuestoFlujoCajaTsrConstantesFunciones(); 
		this.presupuestoflujocajatsrBean=new PresupuestoFlujoCajaTsr();//(this.presupuestoflujocajatsrConstantesFunciones); 		
		this.presupuestoflujocajatsrReturnGeneral=new PresupuestoFlujoCajaTsrParameterReturnGeneral(); 
		
		this.presupuestoflujocajatsrSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.presupuestoflujocajatsrSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PresupuestoFlujoCajaTsrBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPresupuestoFlujoCajaTsr(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.presupuestoflujocajatsrConstantesFunciones=new PresupuestoFlujoCajaTsrConstantesFunciones(); 
			this.presupuestoflujocajatsrBean=new PresupuestoFlujoCajaTsr();//this.presupuestoflujocajatsrConstantesFunciones); 			
			this.presupuestoflujocajatsrReturnGeneral=new PresupuestoFlujoCajaTsrParameterReturnGeneral(); 
		
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Presupuesto Flujo Caja Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.presupuestoflujocajatsr=new PresupuestoFlujoCajaTsr();
			this.presupuestoflujocajatsrs = new ArrayList<PresupuestoFlujoCajaTsr>();
			this.presupuestoflujocajatsrsAux = new ArrayList<PresupuestoFlujoCajaTsr>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic=new PresupuestoFlujoCajaTsrLogic();
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			//this.presupuestoflujocajatsrSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.presupuestoflujocajatsrSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr);	
					}
					
					if(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPresupuestoFlujoCajaTsr);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPresupuestoFlujoCajaTsr);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr);
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setVisible(false);
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr);
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setVisible(false);
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr);
					this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setVisible(false);
					this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr);
					this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setVisible(false);
					this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPresupuestoFlujoCajaTsrActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PresupuestoFlujoCajaTsrConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.presupuestoflujocajatsrReturnGeneral=new PresupuestoFlujoCajaTsrParameterReturnGeneral();
			
			this.presupuestoflujocajatsrParameterGeneral=new PresupuestoFlujoCajaTsrParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PresupuestoFlujoCajaTsrConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PresupuestoFlujoCajaTsrConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			
			
			this.isVisibilidadBusquedaPorCodigo=true;
			this.isVisibilidadBusquedaPorFecha=true;
			this.isVisibilidadBusquedaPorFechaPresupuesto=true;
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadBusquedaPorValor=true;
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCentroActividad=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoMovimiento=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPresupuestoFlujoCajaTsr();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPresupuestoFlujoCajaTsr(false);
			
			this.setPermisosUsuarioPresupuestoFlujoCajaTsr();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado() 
				|| (this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado() && this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPresupuestoFlujoCajaTsrClasesRelacionadas();
			}
			
			if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPresupuestoFlujoCajaTsrClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPresupuestoFlujoCajaTsr();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPresupuestoFlujoCajaTsr();
			}
			
			if(!this.isPermisoBusquedaPresupuestoFlujoCajaTsr) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr,this.isPermisoPaginacionMedioPresupuestoFlujoCajaTsr,this.isPermisoPaginacionTodoPresupuestoFlujoCajaTsr);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PresupuestoFlujoCajaTsrConstantesFunciones.getTiposSeleccionarPresupuestoFlujoCajaTsr());
				
				this.tiposColumnasSelect=PresupuestoFlujoCajaTsrConstantesFunciones.getTiposSeleccionarPresupuestoFlujoCajaTsr(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPresupuestoFlujoCajaTsr();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPresupuestoFlujoCajaTsr(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPresupuestoFlujoCajaTsr(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoFlujoCajaTsr() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.tipomovimientoLogic=new TipoMovimientoLogic();
			this.centroactividadLogic=new CentroActividadLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				presupuestoflujocajatsrImplementable= (PresupuestoFlujoCajaTsrImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PresupuestoFlujoCajaTsrConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				presupuestoflujocajatsrImplementableHome= (PresupuestoFlujoCajaTsrImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PresupuestoFlujoCajaTsrConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.presupuestoflujocajatsrs= new ArrayList<PresupuestoFlujoCajaTsr>();
			this.presupuestoflujocajatsrsEliminados= new ArrayList<PresupuestoFlujoCajaTsr>();
						
			this.isEsNuevoPresupuestoFlujoCajaTsr=false;
			this.esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>() ;
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPresupuestoFlujoCajaTsr(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPresupuestoFlujoCajaTsr();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PresupuestoFlujoCajaTsrConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPresupuestoFlujoCajaTsr();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPresupuestoFlujoCajaTsr();
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPresupuestoFlujoCajaTsr(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PresupuestoFlujoCajaTsr: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPresupuestoFlujoCajaTsr() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPresupuestoFlujoCajaTsr")) {
				iIndex=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPresupuestoFlujoCajaTsr();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyPresupuestoFlujoCajaTsr(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPresupuestoFlujoCajaTsr(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPresupuestoFlujoCajaTsr(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPresupuestoFlujoCajaTsrListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPresupuestoFlujoCajaTsr();
		
		this.cargarCombosFrameForeignKeyPresupuestoFlujoCajaTsr();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPresupuestoFlujoCajaTsr();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPresupuestoFlujoCajaTsr();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimiento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimiento(this.tipomovimientosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroActividad(this.centroactividadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			
			if(jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>=1) {
				jTableDatosPresupuestoFlujoCajaTsr.removeRowSelectionInterval(0, jTableDatosPresupuestoFlujoCajaTsr.getRowCount()-1);						
			}
			
			this.isEsNuevoPresupuestoFlujoCajaTsr=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPresupuestoFlujoCajaTsr(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(true);			
			//this.presupuestoflujocajatsr=new PresupuestoFlujoCajaTsr();
			//this.presupuestoflujocajatsr.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr() ;
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoFlujoCajaTsr(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.presupuestoflujocajatsr);	
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);				
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PresupuestoFlujoCajaTsr: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRows().length;			
			}
			
			presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPresupuestoFlujoCajaTsr--;			
				//PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux= new PresupuestoFlujoCajaTsr();			
				//presupuestoflujocajatsrAux.setId(this.iIdNuevoPresupuestoFlujoCajaTsr);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PresupuestoFlujoCajaTsr presupuestoflujocajatsrOrigen=new PresupuestoFlujoCajaTsr();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrOrigen : presupuestoflujocajatsrsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							presupuestoflujocajatsrOrigen =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							presupuestoflujocajatsrOrigen =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPresupuestoFlujoCajaTsr();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.presupuestoflujocajatsr.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPresupuestoFlujoCajaTsr(presupuestoflujocajatsrOrigen,this.presupuestoflujocajatsr,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().add(this.presupuestoflujocajatsrAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsrs.add(this.presupuestoflujocajatsrAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
				
				this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(this.getIndiceNuevoPresupuestoFlujoCajaTsr(), this.getIndiceNuevoPresupuestoFlujoCajaTsr());
				
				int iLastRow =  this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPresupuestoFlujoCajaTsr.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPresupuestoFlujoCajaTsr.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();									
		
			PresupuestoFlujoCajaTsr presupuestoflujocajatsrOrigen=new PresupuestoFlujoCajaTsr();
			PresupuestoFlujoCajaTsr presupuestoflujocajatsrDestino=new PresupuestoFlujoCajaTsr();
				
			presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || presupuestoflujocajatsrsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrOrigen =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						presupuestoflujocajatsrOrigen =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						presupuestoflujocajatsrDestino =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						presupuestoflujocajatsrDestino =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				presupuestoflujocajatsrOrigen =presupuestoflujocajatsrsSeleccionados.get(0);
				presupuestoflujocajatsrDestino =presupuestoflujocajatsrsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPresupuestoFlujoCajaTsr(presupuestoflujocajatsrOrigen,presupuestoflujocajatsrDestino,true,false);
				
				presupuestoflujocajatsrDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(presupuestoflujocajatsrDestino,presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(presupuestoflujocajatsrDestino,presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
				
				//this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(this.getIndiceNuevoPresupuestoFlujoCajaTsr(), this.getIndiceNuevoPresupuestoFlujoCajaTsr());
				
				int iLastRow =  this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPresupuestoFlujoCajaTsr.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPresupuestoFlujoCajaTsr.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(!isVisible);
			this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(!isVisible);
			this.jPanelAccionesPresupuestoFlujoCajaTsr.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePresupuestoFlujoCajaTsr();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPresupuestoFlujoCajaTsr();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPresupuestoFlujoCajaTsr();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPresupuestoFlujoCajaTsr();
			
			this.abrirFrameOrderByPresupuestoFlujoCajaTsr();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPresupuestoFlujoCajaTsr();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePresupuestoFlujoCajaTsr(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPresupuestoFlujoCajaTsr);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.isMaximum()) {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSize(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.iWidthFormulario,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.isMaximum()) {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jContentPaneDetallePresupuestoFlujoCajaTsr.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jContentPaneDetallePresupuestoFlujoCajaTsr.getWidth(),PresupuestoFlujoCajaTsrConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jContentPaneDetallePresupuestoFlujoCajaTsr.getWidth(),PresupuestoFlujoCajaTsrConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jContentPaneDetallePresupuestoFlujoCajaTsr.getWidth(),PresupuestoFlujoCajaTsrConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setVisible(true);
	        this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPresupuestoFlujoCajaTsr() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPresupuestoFlujoCajaTsr=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr,false,this);
				} else {
					this.jInternalFrameOrderByPresupuestoFlujoCajaTsr=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr);
				this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setVisible(false);
				this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setSelected(false);
				
				this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPresupuestoFlujoCajaTsr"));
				
				this.inicializarActualizarBindingTablaOrderByPresupuestoFlujoCajaTsr();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPresupuestoFlujoCajaTsr() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr==null) {
				
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr=new ImportacionJInternalFrame(PresupuestoFlujoCajaTsrConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPresupuestoFlujoCajaTsr);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr);
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setVisible(false);
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setSelected(false);


				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPresupuestoFlujoCajaTsr"));
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPresupuestoFlujoCajaTsr"));
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPresupuestoFlujoCajaTsr"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPresupuestoFlujoCajaTsr() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr==null) {
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr=new ReporteDinamicoJInternalFrame(PresupuestoFlujoCajaTsrConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr);
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setVisible(false);
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoFlujoCajaTsr"));
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoFlujoCajaTsr"));
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoFlujoCajaTsr();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetallePresupuestoFlujoCajaTsr() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPresupuestoFlujoCajaTsr);
			
	       	this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setVisible(false);
	        this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSelected(false);
			
			//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.dispose();
			//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPresupuestoFlujoCajaTsr() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setVisible(true);
	        this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPresupuestoFlujoCajaTsr() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setVisible(true);
	        this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPresupuestoFlujoCajaTsr() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setVisible(true);
	        this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPresupuestoFlujoCajaTsr() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setVisible(false);
	        this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPresupuestoFlujoCajaTsr() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setVisible(false);
	        this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPresupuestoFlujoCajaTsr() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setVisible(false);
	        this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPresupuestoFlujoCajaTsr(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPresupuestoFlujoCajaTsr(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(true);
			//this.isEsNuevoPresupuestoFlujoCajaTsr=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false) ;
			
			if(presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoFlujoCajaTsr(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPresupuestoFlujoCajaTsrActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPresupuestoFlujoCajaTsr(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(true);
			//this.isEsNuevoPresupuestoFlujoCajaTsr=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.presupuestoflujocajatsr.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false) ;
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePresupuestoFlujoCajaTsr(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_cuenta_contablePresupuestoFlujoCajaTsr) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_costoPresupuestoFlujoCajaTsr) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoMovimiento(List<TipoMovimiento> tipomovimientosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimiento=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));
		TableCellEditor tableCellEditorTipoMovimiento =tableColumnTipoMovimiento.getCellEditor();

		TipoMovimientoTableCell tipomovimientoTableCellFk=(TipoMovimientoTableCell)tableCellEditorTipoMovimiento;

		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.settipomovimientosForeignKey(tipomovimientosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientoTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientoTableCellFk.settipomovimientosForeignKeyActual(tipomovimientosForeignKey);
		//}


		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.RecargarTipoMovimientosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroActividad(List<CentroActividad> centroactividadsForeignKey)throws Exception{
		TableColumn tableColumnCentroActividad=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD));
		TableCellEditor tableCellEditorCentroActividad =tableColumnCentroActividad.getCellEditor();

		CentroActividadTableCell centroactividadTableCellFk=(CentroActividadTableCell)tableCellEditorCentroActividad;

		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.setcentroactividadsForeignKey(centroactividadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centroactividadTableCellFk.setRowActual(intSelectedRow);
			//centroactividadTableCellFk.setcentroactividadsForeignKeyActual(centroactividadsForeignKey);
		//}


		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.RecargarCentroActividadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPresupuestoFlujoCajaTsr(false);
			
			//if(!this.isEsNuevoPresupuestoFlujoCajaTsr) {								
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				
			}
			
			if(this.permiteMantenimiento(this.presupuestoflujocajatsr)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPresupuestoFlujoCajaTsr=true;
					this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
					this.isEsNuevoPresupuestoFlujoCajaTsr=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPresupuestoFlujoCajaTsr=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPresupuestoFlujoCajaTsr=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(false);
				
				this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(false);
			
												
				
				if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePresupuestoFlujoCajaTsr();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,presupuestoflujocajatsrSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,presupuestoflujocajatsrSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.presupuestoflujocajatsr.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				this.presupuestoflujocajatsr.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				this.presupuestoflujocajatsr.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.presupuestoflujocajatsr)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PresupuestoFlujoCajaTsrModel) this.jTableDatosPresupuestoFlujoCajaTsr.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPresupuestoFlujoCajaTsr=true;
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
				this.isEsNuevoPresupuestoFlujoCajaTsr=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(false);
				
				this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(false);
				
				
				
				if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePresupuestoFlujoCajaTsr();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>=1) {
				jTableDatosPresupuestoFlujoCajaTsr.removeRowSelectionInterval(0, jTableDatosPresupuestoFlujoCajaTsr.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPresupuestoFlujoCajaTsr(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(false) ;
			
			this.isEsNuevoPresupuestoFlujoCajaTsr=false;
			
			if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePresupuestoFlujoCajaTsr();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				
				//SI ES MANUAL
				if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPresupuestoFlujoCajaTsr--;			
			//PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux= new PresupuestoFlujoCajaTsr();			
			//presupuestoflujocajatsrAux.setId(this.iIdNuevoPresupuestoFlujoCajaTsr);
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPresupuestoFlujoCajaTsr();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
			
			this.presupuestoflujocajatsr.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().add(this.presupuestoflujocajatsrAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.presupuestoflujocajatsrs.add(this.presupuestoflujocajatsrAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			
			this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(this.getIndiceNuevoPresupuestoFlujoCajaTsr(), this.getIndiceNuevoPresupuestoFlujoCajaTsr());
			
			int iLastRow =  this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPresupuestoFlujoCajaTsr.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPresupuestoFlujoCajaTsr.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
			
			//SI ES MANUAL
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();
			}
			
			//this.abrirFrameTreePresupuestoFlujoCajaTsr();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Presupuesto Flujo CajaS ?", "MANTENIMIENTO DE Presupuesto Flujo Caja", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPresupuestoFlujoCajaTsr();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.procesarImportacionPresupuestoFlujoCajaTsrsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.presupuestoflujocajatsrParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPresupuestoFlujoCajaTsrReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setFileImportacion(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPresupuestoFlujoCajaTsr.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		

		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PresupuestoFlujoCajaTsrBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PresupuestoFlujoCajaTsrBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroActividad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroActividad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroActividad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroActividad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaPresupuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaPresupuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaPresupuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaPresupuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoria="id_tipo_movimiento";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoria="id_centro_actividad";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO:
					sNombreCampoCategoria="fecha_presupuesto";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoriaValor="id_tipo_movimiento";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoriaValor="id_centro_actividad";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO:
					sNombreCampoCategoriaValor="fecha_presupuesto";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Movimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Activad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_actividad");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F. Presupuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_presupuesto");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PresupuestoFlujoCajaTsrs");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.gettipomovimiento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getcentroactividad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getfecha_presupuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsr:presupuestoflujocajatsrsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(presupuestoflujocajatsr.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPresupuestoFlujoCajaTsr(row);				
			//	iRow++;
			//}				
			
			//for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPresupuestoFlujoCajaTsr(presupuestoflujocajatsrAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
			
			//SI ES MANUAL
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
			
			//SI ES MANUAL
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
			
			//SI ES MANUAL
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPresupuestoFlujoCajaTsr();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPresupuestoFlujoCajaTsr() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPresupuestoFlujoCajaTsr.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPresupuestoFlujoCajaTsr.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPresupuestoFlujoCajaTsr.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPresupuestoFlujoCajaTsr.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPresupuestoFlujoCajaTsr.setMinimumSize(dimensionMinimum);
		this.jTableDatosPresupuestoFlujoCajaTsr.setMaximumSize(dimensionMaximum);
		this.jTableDatosPresupuestoFlujoCajaTsr.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPresupuestoFlujoCajaTsr(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPresupuestoFlujoCajaTsr(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPresupuestoFlujoCajaTsr(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoFlujoCajaTsr(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPresupuestoFlujoCajaTsr(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPresupuestoFlujoCajaTsr() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr();
		
		this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPresupuestoFlujoCajaTsr();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoFlujoCajaTsr() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoFlujoCajaTsr(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoFlujoCajaTsr(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsr.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPresupuestoFlujoCajaTsr.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePresupuestoFlujoCajaTsr.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionNuevoPresupuestoFlujoCajaTsr.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionSinCerrarPresupuestoFlujoCajaTsr.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionSinMensajePresupuestoFlujoCajaTsr.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsr.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPresupuestoFlujoCajaTsr.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePresupuestoFlujoCajaTsr.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionNuevoPresupuestoFlujoCajaTsr.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionSinCerrarPresupuestoFlujoCajaTsr.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jCheckBoxPostAccionSinMensajePresupuestoFlujoCajaTsr.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPresupuestoFlujoCajaTsr.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsr.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPresupuestoFlujoCajaTsr(Boolean esInicializar) throws Exception {
		try	{	
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPresupuestoFlujoCajaTsr(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPresupuestoFlujoCajaTsr() throws Exception {
		try	{
			if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPresupuestoFlujoCajaTsr();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePresupuestoFlujoCajaTsr() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPresupuestoFlujoCajaTsr() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			
			if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPresupuestoFlujoCajaTsr.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoFlujoCajaTsr();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPresupuestoFlujoCajaTsr() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
				
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PresupuestoFlujoCajaTsrConstantesFunciones.getTiposSeleccionarPresupuestoFlujoCajaTsr(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PresupuestoFlujoCajaTsrConstantesFunciones.getTiposSeleccionarPresupuestoFlujoCajaTsr(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PresupuestoFlujoCajaTsrConstantesFunciones.getTiposSeleccionarPresupuestoFlujoCajaTsr(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPresupuestoFlujoCajaTsr()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.codigoBusquedaPorCodigo=this.jTextFieldcodigoBusquedaPorCodigoPresupuestoFlujoCajaTsr.getText();
		this.fechaBusquedaPorFecha=new Date(this.jDateChooserfechaBusquedaPorFechaPresupuestoFlujoCajaTsr.getDate().getTime());
		this.fecha_presupuestoBusquedaPorFechaPresupuesto=new Date(this.jDateChooserfecha_presupuestoBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr.getDate().getTime());
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombrePresupuestoFlujoCajaTsr.getText();
		this.valorBusquedaPorValor=Double.parseDouble(this.jTextFieldvalorBusquedaPorValorPresupuestoFlujoCajaTsr.getText());
		if(this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.getSelectedItem()!=null){this.id_centro_actividadFK_IdCentroActividad=((CentroActividad)this.jComboBoxid_centro_actividadFK_IdCentroActividadPresupuestoFlujoCajaTsr.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoPresupuestoFlujoCajaTsr.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContablePresupuestoFlujoCajaTsr.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.getSelectedItem()!=null){this.id_tipo_movimientoFK_IdTipoMovimiento=((TipoMovimiento)this.jComboBoxid_tipo_movimientoFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPresupuestoFlujoCajaTsr(Boolean esInicializar) throws Exception {				
		if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPresupuestoFlujoCajaTsr();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr() throws Exception {
		this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPresupuestoFlujoCajaTsr() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPresupuestoFlujoCajaTsrOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsrOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=presupuestoflujocajatsrs.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPresupuestoFlujoCajaTsr.setModel(new PresupuestoFlujoCajaTsrModel(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPresupuestoFlujoCajaTsr.setModel(new PresupuestoFlujoCajaTsrModel(this.presupuestoflujocajatsrs,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr!=null && this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPresupuestoFlujoCajaTsr();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PresupuestoFlujoCajaTsrConstantesFunciones.SCLASSWEBTITULO,presupuestoflujocajatsrConstantesFunciones.resaltarSeleccionarPresupuestoFlujoCajaTsr,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PresupuestoFlujoCajaTsrConstantesFunciones.SCLASSWEBTITULO,presupuestoflujocajatsrConstantesFunciones.resaltarSeleccionarPresupuestoFlujoCajaTsr,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_ID));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostraridPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltaridPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activaridPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"idPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltaridPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activaridPresupuestoFlujoCajaTsr,this,true,"idPresupuestoFlujoCajaTsr","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_empresaPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_empresaPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_empresaPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_empresaPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_empresaPresupuestoFlujoCajaTsr,false,"id_empresaPresupuestoFlujoCajaTsr","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_sucursalPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_sucursalPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_sucursalPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_sucursalPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_sucursalPresupuestoFlujoCajaTsr,false,"id_sucursalPresupuestoFlujoCajaTsr","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_ejercicioPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_ejercicioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_ejercicioPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_ejercicioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_ejercicioPresupuestoFlujoCajaTsr,false,"id_ejercicioPresupuestoFlujoCajaTsr","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_periodoPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_periodoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_periodoPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_periodoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_periodoPresupuestoFlujoCajaTsr,false,"id_periodoPresupuestoFlujoCajaTsr","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_usuarioPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_usuarioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_usuarioPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_usuarioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_usuarioPresupuestoFlujoCajaTsr,false,"id_usuarioPresupuestoFlujoCajaTsr","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_anioPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_anioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_anioPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_anioPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_anioPresupuestoFlujoCajaTsr,true,"id_anioPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_mesPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_mesPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_mesPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_mesPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_mesPresupuestoFlujoCajaTsr,true,"id_mesPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_tipo_movimientoPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoMovimientoTableCell(this.tipomovimientosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_tipo_movimientoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_tipo_movimientoPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new TipoMovimientoTableCell(this.tipomovimientosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_tipo_movimientoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_tipo_movimientoPresupuestoFlujoCajaTsr,true,"id_tipo_movimientoPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_actividadPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroActividadTableCell(this.centroactividadsForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_actividadPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_actividadPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new CentroActividadTableCell(this.centroactividadsForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_actividadPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_actividadPresupuestoFlujoCajaTsr,true,"id_centro_actividadPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarcodigoPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarcodigoPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarcodigoPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"codigoPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarcodigoPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarcodigoPresupuestoFlujoCajaTsr,this,true,"codigoPresupuestoFlujoCajaTsr","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarnombrePresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarnombrePresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarnombrePresupuestoFlujoCajaTsr,iSizeTabla,this,true,"nombrePresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarnombrePresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarnombrePresupuestoFlujoCajaTsr,this,true,"nombrePresupuestoFlujoCajaTsr","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarfechaPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarfechaPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarfechaPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"fechaPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarfechaPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarfechaPresupuestoFlujoCajaTsr,this,true,"fechaPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarfecha_presupuestoPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarfecha_presupuestoPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarfecha_presupuestoPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"fecha_presupuestoPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarfecha_presupuestoPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarfecha_presupuestoPresupuestoFlujoCajaTsr,this,true,"fecha_presupuestoPresupuestoFlujoCajaTsr","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarvalorPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarvalorPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarvalorPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"valorPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltarvalorPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activarvalorPresupuestoFlujoCajaTsr,this,true,"valorPresupuestoFlujoCajaTsr","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_cuenta_contablePresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_cuenta_contablePresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_cuenta_contablePresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_cuenta_contablePresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_cuenta_contablePresupuestoFlujoCajaTsr,true,"id_cuenta_contablePresupuestoFlujoCajaTsr","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_costoPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_costoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_costoPresupuestoFlujoCajaTsr,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_costoPresupuestoFlujoCajaTsr,this,this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_costoPresupuestoFlujoCajaTsr,true,"id_centro_costoPresupuestoFlujoCajaTsr","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION));

		if(this.presupuestoflujocajatsrConstantesFunciones.mostrardescripcionPresupuestoFlujoCajaTsr && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltardescripcionPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activardescripcionPresupuestoFlujoCajaTsr,iSizeTabla,this,true,"descripcionPresupuestoFlujoCajaTsr","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.presupuestoflujocajatsrConstantesFunciones.resaltardescripcionPresupuestoFlujoCajaTsr,this.presupuestoflujocajatsrConstantesFunciones.activardescripcionPresupuestoFlujoCajaTsr,this,true,"descripcionPresupuestoFlujoCajaTsr","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PresupuestoFlujoCajaTsrPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPresupuestoFlujoCajaTsr.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPresupuestoFlujoCajaTsr.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosPresupuestoFlujoCajaTsr.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPresupuestoFlujoCajaTsr.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosPresupuestoFlujoCajaTsr.moveColumn(this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosPresupuestoFlujoCajaTsr.moveColumn(this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPresupuestoFlujoCajaTsr.moveColumn(this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPresupuestoFlujoCajaTsr.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPresupuestoFlujoCajaTsr.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPresupuestoFlujoCajaTsr,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPresupuestoFlujoCajaTsr.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPresupuestoFlujoCajaTsr.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPresupuestoFlujoCajaTsr.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=presupuestoflujocajatsrs.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPresupuestoFlujoCajaTsr.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPresupuestoFlujoCajaTsr.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPresupuestoFlujoCajaTsr();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPresupuestoFlujoCajaTsr=false;
					
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
				if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPresupuestoFlujoCajaTsr.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.presupuestoflujocajatsr.getsType().equals("DUPLICADO")
				   || this.presupuestoflujocajatsr.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPresupuestoFlujoCajaTsr=true;
				
				} else {
					this.isEsNuevoPresupuestoFlujoCajaTsr=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					if(this.presupuestoflujocajatsr.getId()>=0 && !this.presupuestoflujocajatsr.getIsNew()) {						
						this.isEsNuevoPresupuestoFlujoCajaTsr=false;
						
					} else {
						this.isEsNuevoPresupuestoFlujoCajaTsr=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPresupuestoFlujoCajaTsr(esRelaciones);						
				
				this.seleccionarPresupuestoFlujoCajaTsr(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.presupuestoflujocajatsr.getId()<0) {
					this.isEsNuevoPresupuestoFlujoCajaTsr=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPresupuestoFlujoCajaTsr(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPresupuestoFlujoCajaTsr(evt,rowIndex);
				}	
				
				if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PresupuestoFlujoCajaTsr: " + this.dDif); 
					}
				}								
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPresupuestoFlujoCajaTsr(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.presupuestoflujocajatsr)) {
					if(this.presupuestoflujocajatsr.getId()>0) {
						this.presupuestoflujocajatsr.setIsDeleted(true);
						
						this.presupuestoflujocajatsrsEliminados.add(this.presupuestoflujocajatsr);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().remove(this.presupuestoflujocajatsr);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsrs.remove(this.presupuestoflujocajatsr);				
					}
					
					
					((PresupuestoFlujoCajaTsrModel) this.jTableDatosPresupuestoFlujoCajaTsr.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPresupuestoFlujoCajaTsr(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPresupuestoFlujoCajaTsr) {
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPresupuestoFlujoCajaTsr.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_empresaPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_empresaPresupuestoFlujoCajaTsr) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_empresa());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(presupuestoflujocajatsr.getEmpresa()!=null) {
							this.empresasForeignKey.add(presupuestoflujocajatsr.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.presupuestoflujocajatsr.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_sucursalPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_sucursalPresupuestoFlujoCajaTsr) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_sucursal());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(presupuestoflujocajatsr.getSucursal()!=null) {
							this.sucursalsForeignKey.add(presupuestoflujocajatsr.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.presupuestoflujocajatsr.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_ejercicioPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_ejercicioPresupuestoFlujoCajaTsr) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_ejercicio());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(presupuestoflujocajatsr.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(presupuestoflujocajatsr.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.presupuestoflujocajatsr.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_periodoPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_periodoPresupuestoFlujoCajaTsr) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_periodo());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(presupuestoflujocajatsr.getPeriodo()!=null) {
							this.periodosForeignKey.add(presupuestoflujocajatsr.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.presupuestoflujocajatsr.getid_periodo(),false,"Formulario");

					//Usuario
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_usuarioPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_usuarioPresupuestoFlujoCajaTsr) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_usuario());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(presupuestoflujocajatsr.getUsuario()!=null) {
							this.usuariosForeignKey.add(presupuestoflujocajatsr.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.presupuestoflujocajatsr.getid_usuario(),false,"Formulario");

					//Anio
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_anioPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_anioPresupuestoFlujoCajaTsr) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_anio());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(presupuestoflujocajatsr.getAnio()!=null) {
							this.aniosForeignKey.add(presupuestoflujocajatsr.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.presupuestoflujocajatsr.getid_anio(),false,"Formulario");

					//Mes
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_mesPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_mesPresupuestoFlujoCajaTsr) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_mes());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(presupuestoflujocajatsr.getMes()!=null) {
							this.messForeignKey.add(presupuestoflujocajatsr.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.presupuestoflujocajatsr.getid_mes(),false,"Formulario");

					//TipoMovimiento
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_tipo_movimientoPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_tipo_movimientoPresupuestoFlujoCajaTsr) {
						//this.cargarCombosTipoMovimientosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_tipo_movimiento());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

						if(presupuestoflujocajatsr.getTipoMovimiento()!=null) {
							this.tipomovimientosForeignKey.add(presupuestoflujocajatsr.getTipoMovimiento());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimiento();
						this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
					}
					this.setActualTipoMovimientoForeignKey(this.presupuestoflujocajatsr.getid_tipo_movimiento(),false,"Formulario");

					//CentroActividad
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_actividadPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_centro_actividadPresupuestoFlujoCajaTsr) {
						//this.cargarCombosCentroActividadsForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_centro_actividad());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

						if(presupuestoflujocajatsr.getCentroActividad()!=null) {
							this.centroactividadsForeignKey.add(presupuestoflujocajatsr.getCentroActividad());
						}

						this.addItemDefectoCombosForeignKeyCentroActividad();
						this.cargarCombosFrameCentroActividadsForeignKey("Todos");
					}
					this.setActualCentroActividadForeignKey(this.presupuestoflujocajatsr.getid_centro_actividad(),false,"Formulario");

					//CuentaContable
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_cuenta_contablePresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_cuenta_contablePresupuestoFlujoCajaTsr) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_cuenta_contable());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(presupuestoflujocajatsr.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(presupuestoflujocajatsr.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.presupuestoflujocajatsr.getid_cuenta_contable(),false,"Formulario");

					//CentroCosto
					if(!this.presupuestoflujocajatsrConstantesFunciones.cargarid_centro_costoPresupuestoFlujoCajaTsr || this.presupuestoflujocajatsrConstantesFunciones.event_dependid_centro_costoPresupuestoFlujoCajaTsr) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.presupuestoflujocajatsr.getid_centro_costo());
									//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(presupuestoflujocajatsr.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(presupuestoflujocajatsr.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.presupuestoflujocajatsr.getid_centro_costo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPresupuestoFlujoCajaTsr(presupuestoflujocajatsr,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(presupuestoflujocajatsr);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPresupuestoFlujoCajaTsr(presupuestoflujocajatsr,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoFlujoCajaTsr(presupuestoflujocajatsr);
	}
	
	public void setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getcodigo());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getnombre());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsr.getfecha());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsr.getfecha_presupuesto());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,presupuestoflujocajatsrLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				presupuestoflujocajatsrLocal=this.presupuestoflujocajatsr;
			} else {
				presupuestoflujocajatsrLocal=this.presupuestoflujocajatsrAnterior;
			}
		}
		
		if(this.permiteMantenimiento(presupuestoflujocajatsrLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPresupuestoFlujoCajaTsr(presupuestoflujocajatsrLocal,true);
					
					if(presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(presupuestoflujocajatsrLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(presupuestoflujocajatsrLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(presupuestoflujocajatsr,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(presupuestoflujocajatsr);
	}
	
	public void setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(presupuestoflujocajatsr,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.getText()==null || this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.getText()=="" || this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.getText()=="Id") {
				this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setText("0");
			}

			if(conColumnasBase) {presupuestoflujocajatsr.setId(Long.parseLong(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelIdPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setcodigo(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelcodigoPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setnombre(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelnombrePresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setfecha(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfechaPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setfecha_presupuesto(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelfecha_presupuestoPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelvalorPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			presupuestoflujocajatsr.setdescripcion(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabeldescripcionPresupuestoFlujoCajaTsr,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsrBean,PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsrOrigen,PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getId()!=null && !presupuestoflujocajatsrOrigen.getId().equals(0L))) {presupuestoflujocajatsr.setId(presupuestoflujocajatsrOrigen.getId());}}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getcodigo()!=null && !presupuestoflujocajatsrOrigen.getcodigo().equals(""))) {presupuestoflujocajatsr.setcodigo(presupuestoflujocajatsrOrigen.getcodigo());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getnombre()!=null && !presupuestoflujocajatsrOrigen.getnombre().equals(""))) {presupuestoflujocajatsr.setnombre(presupuestoflujocajatsrOrigen.getnombre());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getfecha()!=null && !presupuestoflujocajatsrOrigen.getfecha().equals(new Date()))) {presupuestoflujocajatsr.setfecha(presupuestoflujocajatsrOrigen.getfecha());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getfecha_presupuesto()!=null && !presupuestoflujocajatsrOrigen.getfecha_presupuesto().equals(new Date()))) {presupuestoflujocajatsr.setfecha_presupuesto(presupuestoflujocajatsrOrigen.getfecha_presupuesto());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getvalor()!=null && !presupuestoflujocajatsrOrigen.getvalor().equals(0.0))) {presupuestoflujocajatsr.setvalor(presupuestoflujocajatsrOrigen.getvalor());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrOrigen.getdescripcion()!=null && !presupuestoflujocajatsrOrigen.getdescripcion().equals(""))) {presupuestoflujocajatsr.setdescripcion(presupuestoflujocajatsrOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getcodigo());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getnombre());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsr.getfecha());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsr.getfecha_presupuesto());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsr.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsrBean presupuestoflujocajatsrBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsrBean.getId().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsrBean.getcodigo());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsrBean.getnombre());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsrBean.getfecha());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setDate(presupuestoflujocajatsrBean.getfecha_presupuesto());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsrBean.getvalor().toString());
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setText(presupuestoflujocajatsrBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsrParameterReturnGeneral presupuestoflujocajatsrReturnGeneral,PresupuestoFlujoCajaTsrBean presupuestoflujocajatsrBean,Boolean conDefault) throws Exception { 
		try {
			PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal=new PresupuestoFlujoCajaTsr();
			
			presupuestoflujocajatsrLocal=presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getId()!=null && !presupuestoflujocajatsrLocal.getId().equals(0L))) {presupuestoflujocajatsrBean.setId(presupuestoflujocajatsrLocal.getId());}}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getcodigo()!=null && !presupuestoflujocajatsrLocal.getcodigo().equals(""))) {presupuestoflujocajatsrBean.setcodigo(presupuestoflujocajatsrLocal.getcodigo());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getnombre()!=null && !presupuestoflujocajatsrLocal.getnombre().equals(""))) {presupuestoflujocajatsrBean.setnombre(presupuestoflujocajatsrLocal.getnombre());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getfecha()!=null && !presupuestoflujocajatsrLocal.getfecha().equals(new Date()))) {presupuestoflujocajatsrBean.setfecha(presupuestoflujocajatsrLocal.getfecha());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getfecha_presupuesto()!=null && !presupuestoflujocajatsrLocal.getfecha_presupuesto().equals(new Date()))) {presupuestoflujocajatsrBean.setfecha_presupuesto(presupuestoflujocajatsrLocal.getfecha_presupuesto());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getvalor()!=null && !presupuestoflujocajatsrLocal.getvalor().equals(0.0))) {presupuestoflujocajatsrBean.setvalor(presupuestoflujocajatsrLocal.getvalor());}
			if(conDefault || (!conDefault && presupuestoflujocajatsrLocal.getdescripcion()!=null && !presupuestoflujocajatsrLocal.getdescripcion().equals(""))) {presupuestoflujocajatsrBean.setdescripcion(presupuestoflujocajatsrLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPresupuestoFlujoCajaTsrGenerico(Long idPresupuestoFlujoCajaTsrSeleccionado,JComboBox jComboBoxPresupuestoFlujoCajaTsr,List<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsLocal)throws Exception {
		try {
			PresupuestoFlujoCajaTsr  presupuestoflujocajatsrTemp=null;

			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsLocal) {
				if(presupuestoflujocajatsrAux.getId()!=null && presupuestoflujocajatsrAux.getId().equals(idPresupuestoFlujoCajaTsrSeleccionado)) {
					presupuestoflujocajatsrTemp=presupuestoflujocajatsrAux;
					break;
				}
			}

			jComboBoxPresupuestoFlujoCajaTsr.setSelectedItem(presupuestoflujocajatsrTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPresupuestoFlujoCajaTsrGenerico(JComboBox jComboBoxPresupuestoFlujoCajaTsr,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPresupuestoFlujoCajaTsr.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPresupuestoFlujoCajaTsr.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPresupuestoFlujoCajaTsr.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPresupuestoFlujoCajaTsr.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPresupuestoFlujoCajaTsr.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPresupuestoFlujoCajaTsr.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPresupuestoFlujoCajaTsr.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPresupuestoFlujoCajaTsr.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPresupuestoFlujoCajaTsr.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPresupuestoFlujoCajaTsr.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoflujocajatsr=(PresupuestoFlujoCajaTsr) presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) presupuestoflujocajatsrs.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getmes_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimiento")) {
			//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.gettipomovimiento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.gettipomovimiento_descripcion();
			}
		}

		if(sTipo.equals("CentroActividad")) {
			//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getcentroactividad_descripcion();
			} else {
				//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getcentroactividad_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!presupuestoflujocajatsr.getIsNew() && !presupuestoflujocajatsr.getIsChanged() && !presupuestoflujocajatsr.getIsDeleted()) {
				sDescripcion=presupuestoflujocajatsr.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=presupuestoflujocajatsr.getcentrocosto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PresupuestoFlujoCajaTsr presupuestoflujocajatsrRow=new PresupuestoFlujoCajaTsr();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoflujocajatsrRow=(PresupuestoFlujoCajaTsr) presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			presupuestoflujocajatsrRow=(PresupuestoFlujoCajaTsr) presupuestoflujocajatsrs.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));			
			this.jButtonDuplicarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr && this.isPermisoDuplicarPresupuestoFlujoCajaTsr));			
			this.jButtonCopiarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr && this.isPermisoCopiarPresupuestoFlujoCajaTsr));
			this.jButtonVerFormPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr && this.isPermisoVerFormPresupuestoFlujoCajaTsr));
			
			this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));			
			
			this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));			
			this.jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr && this.isPermisoEliminarPresupuestoFlujoCajaTsr));
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.setVisible(this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr);							
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));			
			
			}
						
			this.jButtonGuardarCambiosTablaPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));						
			this.jButtonDuplicarToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr && this.isPermisoDuplicarPresupuestoFlujoCajaTsr));						
			this.jButtonCopiarToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr && this.isPermisoCopiarPresupuestoFlujoCajaTsr));			
			this.jButtonVerFormToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr && this.isPermisoVerFormPresupuestoFlujoCajaTsr));			
			this.jButtonAbrirOrderByToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));
			this.jButtonNuevoRelacionesToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));			
			this.jButtonNuevoGuardarCambiosToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));			
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr  && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr && this.isPermisoEliminarPresupuestoFlujoCajaTsr));
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarToolBarPresupuestoFlujoCajaTsr.setVisible(this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr);				
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));			
			this.jMenuItemDuplicarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr && this.isPermisoDuplicarPresupuestoFlujoCajaTsr));			
			this.jMenuItemCopiarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr && this.isPermisoCopiarPresupuestoFlujoCajaTsr));			
			this.jMenuItemVerFormPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr && this.isPermisoVerFormPresupuestoFlujoCajaTsr));			
			this.jMenuItemAbrirOrderByPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));			
			//this.jMenuItemMostrarOcultarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));
			this.jMenuItemDetalleAbrirOrderByPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));			
			//this.jMenuItemDetalleMostrarOcultarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr && this.isPermisoOrdenPresupuestoFlujoCajaTsr));			
			this.jMenuItemNuevoRelacionesPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr));			
			this.jMenuItemNuevoGuardarCambiosPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr && this.isPermisoNuevoPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));									
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemModificarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemActualizarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr && this.isPermisoActualizarPresupuestoFlujoCajaTsr));	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemEliminarPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr && this.isPermisoEliminarPresupuestoFlujoCajaTsr));
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemCancelarPresupuestoFlujoCajaTsr.setVisible(this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr);				
			}
			
			this.jMenuItemGuardarCambiosPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));						
			this.jMenuItemGuardarCambiosTablaPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=this.jButtonNuevoPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr=this.jButtonDuplicarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr=this.jButtonCopiarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr=this.jButtonVerFormPresupuestoFlujoCajaTsr.isVisible();
			
			this.isVisibilidadCeldaOrdenPresupuestoFlujoCajaTsr=this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=this.jButtonModificarPresupuestoFlujoCajaTsr.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=this.jButtonGuardarCambiosTablaPresupuestoFlujoCajaTsr.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=this.jButtonNuevoToolBarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=this.jButtonNuevoRelacionesToolBarPresupuestoFlujoCajaTsr.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarToolBarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarToolBarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarToolBarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarToolBarPresupuestoFlujoCajaTsr.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=this.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=this.jButtonGuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=this.jMenuItemNuevoPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=this.jMenuItemNuevoRelacionesPresupuestoFlujoCajaTsr.isVisible();
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemModificarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemActualizarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemEliminarPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemCancelarPresupuestoFlujoCajaTsr.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=this.jMenuItemGuardarCambiosPresupuestoFlujoCajaTsr.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=this.jMenuItemGuardarCambiosTablaPresupuestoFlujoCajaTsr.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPresupuestoFlujoCajaTsr(Boolean esInicializar) {
		if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {			
			if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
				//if(this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPresupuestoFlujoCajaTsr();
			}
			
			this.inicializarActualizarBindingBotonesManualPresupuestoFlujoCajaTsr(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPresupuestoFlujoCajaTsr() {
		this.jButtonNuevoPresupuestoFlujoCajaTsr.setVisible(this.isPermisoNuevoPresupuestoFlujoCajaTsr);			
		this.jButtonDuplicarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoDuplicarPresupuestoFlujoCajaTsr);			
		this.jButtonCopiarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoCopiarPresupuestoFlujoCajaTsr);			
		this.jButtonVerFormPresupuestoFlujoCajaTsr.setVisible(this.isPermisoVerFormPresupuestoFlujoCajaTsr);			
		
		this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr.setVisible(this.isPermisoOrdenPresupuestoFlujoCajaTsr);					
		
		this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.setVisible(this.isPermisoNuevoPresupuestoFlujoCajaTsr);			
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoActualizarPresupuestoFlujoCajaTsr);	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoActualizarPresupuestoFlujoCajaTsr);	
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoEliminarPresupuestoFlujoCajaTsr);
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.setVisible(this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr);						
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.setVisible(this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr);							
		}
		
		this.jButtonGuardarCambiosTablaPresupuestoFlujoCajaTsr.setVisible(this.isPermisoActualizarPresupuestoFlujoCajaTsr);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePresupuestoFlujoCajaTsr() {
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoActualizarPresupuestoFlujoCajaTsr);	
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoActualizarPresupuestoFlujoCajaTsr);	
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.setVisible(this.isPermisoEliminarPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.setVisible(this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr);							
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.setVisible((this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr && this.isPermisoGuardarCambiosPresupuestoFlujoCajaTsr));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPresupuestoFlujoCajaTsr() {
		if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPresupuestoFlujoCajaTsr();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPresupuestoFlujoCajaTsr() {
	}
	
	public void jTableDatosPresupuestoFlujoCajaTsrListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPresupuestoFlujoCajaTsr(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.presupuestoflujocajatsr.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.presupuestoflujocajatsr.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.presupuestoflujocajatsr.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.presupuestoflujocajatsr.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.presupuestoflujocajatsr.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.presupuestoflujocajatsr.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.presupuestoflujocajatsr.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.presupuestoflujocajatsr.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimiento=true;

			idTienePermisotipomovimiento=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(TipoMovimientoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimiento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.tipomovimientoBeanSwingJInternalFrame=new TipoMovimientoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientoBeanSwingJInternalFrame.getTipoMovimientoLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_tipo_movimiento()!=null) {
					this.tipomovimientoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientoBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_tipo_movimiento());
					this.tipomovimientoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimiento();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordertipomovimiento=(TitledBorder)this.tipomovimientoBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimiento.getBorder();

				titledBordertipomovimiento.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Tipo Movimiento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_tipo_movimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento = "+this.presupuestoflujocajatsr.getid_tipo_movimiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentroactividad=true;

			idTienePermisocentroactividad=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(CentroActividadConstantesFunciones.CLASSNAME);

			if(idTienePermisocentroactividad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.centroactividadBeanSwingJInternalFrame=new CentroActividadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centroactividadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centroactividadBeanSwingJInternalFrame.getCentroActividadLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_centro_actividad()!=null) {
					this.centroactividadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centroactividadBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_centro_actividad());
					this.centroactividadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroActividad();
				}

				JInternalFrameBase jinternalFrame =this.centroactividadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordercentroactividad=(TitledBorder)this.centroactividadBeanSwingJInternalFrame.jScrollPanelDatosCentroActividad.getBorder();

				titledBordercentroactividad.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Centro Actividad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_centro_actividad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_actividad = "+this.presupuestoflujocajatsr.getid_centro_actividad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.presupuestoflujocajatsr.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombrePresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.presupuestoflujocajatsr.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.presupuestoflujocajatsr.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getfecha_presupuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_presupuesto = '"+Funciones2.getStringPostgresDate(this.presupuestoflujocajatsr.getfecha_presupuesto())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.presupuestoflujocajatsr.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPresupuestoFlujoCajaTsr=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.presupuestoflujocajatsr.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPresupuestoFlujoCajaTsr=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebPresupuestoFlujoCajaTsr(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPresupuestoFlujoCajaTsr.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.presupuestoflujocajatsrLogic.getConnexion());

				if(this.presupuestoflujocajatsr.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.presupuestoflujocajatsr.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPresupuestoFlujoCajaTsr=(TitledBorder)this.jScrollPanelDatosPresupuestoFlujoCajaTsr.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPresupuestoFlujoCajaTsr.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.presupuestoflujocajatsr.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPresupuestoFlujoCajaTsrBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.getpresupuestoflujocajatsr(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.presupuestoflujocajatsr==null) {
						this.presupuestoflujocajatsr = new PresupuestoFlujoCajaTsr();
					}

					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);
				}

				if(this.presupuestoflujocajatsr.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.presupuestoflujocajatsr.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorCodigoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsBusquedaPorCodigo();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorFechaPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsBusquedaPorFecha();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsBusquedaPorFechaPresupuesto();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombrePresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsBusquedaPorNombre();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorValorPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsBusquedaPorValor();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAnioPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdAnio();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroActividadPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdCentroActividad();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdCentroCosto();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContablePresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdCuentaContable();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdEjercicio();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdEmpresa();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdMes();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdPeriodo();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdSucursal();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoMovimientoPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdTipoMovimiento();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioPresupuestoFlujoCajaTsrActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);

			this.getPresupuestoFlujoCajaTsrsFK_IdUsuario();

			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);

			//if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.presupuestoflujocajatsrLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePresupuestoFlujoCajaTsr() {
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setVisible(false);	    			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.dispose();
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.dispose();
			this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr=null;
		}
		
		if(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr!=null) {
			this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.setVisible(false);	    			
			this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.dispose();
			this.jInternalFrameImportacionPresupuestoFlujoCajaTsr=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPresupuestoFlujoCajaTsr();
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			
			if(sTipo.equals("NuevoPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPresupuestoFlujoCajaTsr")) {
				jButtonDuplicarPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPresupuestoFlujoCajaTsr")) {
				jButtonCopiarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("VerFormPresupuestoFlujoCajaTsr")) {
				jButtonVerFormPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonDuplicarPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPresupuestoFlujoCajaTsr")) {
				jButtonDuplicarPresupuestoFlujoCajaTsrActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPresupuestoFlujoCajaTsr")) {
				jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPresupuestoFlujoCajaTsr")) {
				jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPresupuestoFlujoCajaTsr")) {
				jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPresupuestoFlujoCajaTsr")) {
				jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("EliminarPresupuestoFlujoCajaTsr")) {
				jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPresupuestoFlujoCajaTsr")) {
				jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("CancelarPresupuestoFlujoCajaTsr")) {
				jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPresupuestoFlujoCajaTsr")) {
				jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("CerrarPresupuestoFlujoCajaTsr")) {
				jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPresupuestoFlujoCajaTsr")) {
				jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonMostrarOcultarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPresupuestoFlujoCajaTsr")) {
				jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPresupuestoFlujoCajaTsr")) {
				jButtonCopiarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPresupuestoFlujoCajaTsr")) {
				jButtonVerFormPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPresupuestoFlujoCajaTsr")) {
				jButtonCopiarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPresupuestoFlujoCajaTsr")) {
				jButtonVerFormPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPresupuestoFlujoCajaTsr")) {
				jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPresupuestoFlujoCajaTsr")) {
				jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPresupuestoFlujoCajaTsr")) {
				jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPresupuestoFlujoCajaTsr")) {
				jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPresupuestoFlujoCajaTsr")) {
				jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePresupuestoFlujoCajaTsr")) {
				jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPresupuestoFlujoCajaTsr")) {
				jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPresupuestoFlujoCajaTsr")) {
				jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPresupuestoFlujoCajaTsr")) {
				jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPresupuestoFlujoCajaTsr") || sTipo.equals("MenuItemDetalleAbrirOrderByPresupuestoFlujoCajaTsr")) {
				jButtonAbrirOrderByPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPresupuestoFlujoCajaTsr") || sTipo.equals("MenuItemDetalleMostrarOcultarPresupuestoFlujoCajaTsr")) {
				jButtonMostrarOcultarPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPresupuestoFlujoCajaTsr")) {
				jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPresupuestoFlujoCajaTsr")) {
				jButtonCerrarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPresupuestoFlujoCajaTsr")) {
				jButtonGenerarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr")) {
				
				jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPresupuestoFlujoCajaTsr")) {
				jButtonCerrarImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPresupuestoFlujoCajaTsr")) {
				
				jButtonGenerarImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPresupuestoFlujoCajaTsr")) {
				
				jButtonAbrirImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPresupuestoFlujoCajaTsr")) {
				jComboBoxTiposAccionesPresupuestoFlujoCajaTsrActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPresupuestoFlujoCajaTsr")) {
				jComboBoxTiposRelacionesPresupuestoFlujoCajaTsrActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPresupuestoFlujoCajaTsr")) {
				jComboBoxTiposAccionesPresupuestoFlujoCajaTsrActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPresupuestoFlujoCajaTsr")) {
				
				jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsrActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPresupuestoFlujoCajaTsr")) {
				jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsrActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPresupuestoFlujoCajaTsr")) {
				jButtonAbrirOrderByPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPresupuestoFlujoCajaTsr")) {
				jButtonAbrirOrderByPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPresupuestoFlujoCajaTsr")) {
				jButtonCerrarOrderByPresupuestoFlujoCajaTsrActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonidPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_empresaPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_empresaPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_sucursalPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_sucursalPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_ejercicioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_periodoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_periodoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_usuarioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_usuarioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_anioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_anioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_mesPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_mesPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtoncodigoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombrePresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonnombrePresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonfechaPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_presupuestoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonvalorPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsr")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsr")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtondescripcionPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsr")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsr")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("BusquedaPorCodigoPresupuestoFlujoCajaTsr")) {
				this.jButtonBusquedaPorCodigoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorFechaPresupuestoFlujoCajaTsr")) {
				this.jButtonBusquedaPorFechaPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr")) {
				this.jButtonBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombrePresupuestoFlujoCajaTsr")) {
				this.jButtonBusquedaPorNombrePresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorValorPresupuestoFlujoCajaTsr")) {
				this.jButtonBusquedaPorValorPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroActividadPresupuestoFlujoCajaTsr")) {
				this.jButtonFK_IdCentroActividadPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoPresupuestoFlujoCajaTsr")) {
				this.jButtonFK_IdCentroCostoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContablePresupuestoFlujoCajaTsr")) {
				this.jButtonFK_IdCuentaContablePresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoMovimientoPresupuestoFlujoCajaTsr")) {
				this.jButtonFK_IdTipoMovimientoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			
			;
			
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPresupuestoFlujoCajaTsr();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal=null;
			
			if(!this.getEsControlTabla()) {
				presupuestoflujocajatsrLocal=this.presupuestoflujocajatsr;
			} else {
				presupuestoflujocajatsrLocal=this.presupuestoflujocajatsrAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
							
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
								
						
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
								
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
							
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
								
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
			
			this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPresupuestoFlujoCajaTsr")) {
					jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsrItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPresupuestoFlujoCajaTsr")) {
					jCheckBoxSeleccionadosPresupuestoFlujoCajaTsrItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPresupuestoFlujoCajaTsr")) {
					
				}
				
				


				
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
												
				
				


				
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.presupuestoflujocajatsr);
				
				this.actualizarInformacion("INFO_PADRE",false,this.presupuestoflujocajatsr);
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PresupuestoFlujoCajaTsr.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PresupuestoFlujoCajaTsr.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPresupuestoFlujoCajaTsrActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.presupuestoflujocajatsrAnterior =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPresupuestoFlujoCajaTsr")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPresupuestoFlujoCajaTsrListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.presupuestoflujocajatsr =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.presupuestoflujocajatsr);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPresupuestoFlujoCajaTsr")) {
				
				}
				
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPresupuestoFlujoCajaTsr")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPresupuestoFlujoCajaTsr")) {
			
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPresupuestoFlujoCajaTsr();
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			if(sTipo.equals("NuevoPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPresupuestoFlujoCajaTsr")) {
				jButtonDuplicarPresupuestoFlujoCajaTsrActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPresupuestoFlujoCajaTsr")) {
				jButtonCopiarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPresupuestoFlujoCajaTsr")) {
				jButtonVerFormPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPresupuestoFlujoCajaTsr")) {
				jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPresupuestoFlujoCajaTsr")) {
				jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPresupuestoFlujoCajaTsr")) {
				jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPresupuestoFlujoCajaTsr")) {
				jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPresupuestoFlujoCajaTsr")) {
				jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPresupuestoFlujoCajaTsr")) {
				jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPresupuestoFlujoCajaTsr")) {
				jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPresupuestoFlujoCajaTsr")) {
				jButtonAbrirOrderByPresupuestoFlujoCajaTsrActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPresupuestoFlujoCajaTsr")) {
				jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPresupuestoFlujoCajaTsr")) {
				jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPresupuestoFlujoCajaTsr")) {
				jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonidPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_empresaPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_empresaPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_sucursalPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_sucursalPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_ejercicioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_periodoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_periodoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_usuarioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_usuarioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_anioPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_anioPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_mesPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_mesPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtoncodigoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombrePresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonnombrePresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonfechaPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_presupuestoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonvalorPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsr")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contablePresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsr")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrUpdate")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtonid_centro_costoPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPresupuestoFlujoCajaTsrBusqueda")) {
				this.jButtondescripcionPresupuestoFlujoCajaTsrBusquedaActionPerformed(evt);
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPresupuestoFlujoCajaTsr();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePresupuestoFlujoCajaTsr")) {
				closingInternalFramePresupuestoFlujoCajaTsr();
				
			} else if(sTipo.equals("jButtonCancelarPresupuestoFlujoCajaTsr")) {
				JInternalFrameBase jInternalFrameDetalleFormPresupuestoFlujoCajaTsr = (JInternalFrameBase)evt.getSource();
	            	
	            PresupuestoFlujoCajaTsrBeanSwingJInternalFrame jInternalFrameParent=(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame)jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(null);
			}
			
			PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.presupuestoflujocajatsr,new Object(),this.presupuestoflujocajatsrParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPresupuestoFlujoCajaTsr(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPresupuestoFlujoCajaTsr(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPresupuestoFlujoCajaTsr(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.presupuestoflujocajatsr)) {
			if(!esControlTabla) {
				if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);			
				}
				
				if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.procesarEventosPresupuestoFlujoCajaTsrsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this.presupuestoflujocajatsr,this.presupuestoflujocajatsrParameterGeneral,this.isEsNuevoPresupuestoFlujoCajaTsr,classes);//this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsr()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral,this.presupuestoflujocajatsrBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPresupuestoFlujoCajaTsr(classes,this.presupuestoflujocajatsrReturnGeneral,this.presupuestoflujocajatsrBean,false);
					}
						
					if(this.presupuestoflujocajatsrReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr());	
					}
						
					if(this.presupuestoflujocajatsrReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr(),classes);//this.presupuestoflujocajatsrBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,classes);//this.presupuestoflujocajatsrBean);									
				}
			
				if(PresupuestoFlujoCajaTsrJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsr);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.presupuestoflujocajatsrAnterior!=null) {
						this.presupuestoflujocajatsr=this.presupuestoflujocajatsrAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.procesarEventosPresupuestoFlujoCajaTsrsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this.presupuestoflujocajatsr,this.presupuestoflujocajatsrParameterGeneral,this.isEsNuevoPresupuestoFlujoCajaTsr,classes);//this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsr()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.presupuestoflujocajatsrSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr(),presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr(),this.presupuestoflujocajatsrs);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPresupuestoFlujoCajaTsr.repaint();
				
				//((AbstractTableModel) this.jTableDatosPresupuestoFlujoCajaTsr.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPresupuestoFlujoCajaTsr();
			}
		}
	}
	
	public void actualizarVisualTableDatosPresupuestoFlujoCajaTsr() throws Exception {
		
		PresupuestoFlujoCajaTsrModel presupuestoflujocajatsrModel=(PresupuestoFlujoCajaTsrModel)this.jTableDatosPresupuestoFlujoCajaTsr.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			presupuestoflujocajatsrModel.presupuestoflujocajatsrs=this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			presupuestoflujocajatsrModel.presupuestoflujocajatsrs=this.presupuestoflujocajatsrs;
		}
		
		
		((PresupuestoFlujoCajaTsrModel) this.jTableDatosPresupuestoFlujoCajaTsr.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPresupuestoFlujoCajaTsr() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpresupuestoflujocajatsrAnterior(),this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpresupuestoflujocajatsrAnterior(),this.presupuestoflujocajatsrs);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPresupuestoFlujoCajaTsr();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoflujocajatsr,new Object(),generalEntityParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PresupuestoFlujoCajaTsrConstantesFunciones.getClassesRelationshipsOfPresupuestoFlujoCajaTsr(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PresupuestoFlujoCajaTsrConstantesFunciones.getClassesRelationshipsFromStringsOfPresupuestoFlujoCajaTsr(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPresupuestoFlujoCajaTsr(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.presupuestoflujocajatsr,new Object(),generalEntityParameterGeneral,this.presupuestoflujocajatsrReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsrBean presupuestoflujocajatsrBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPresupuestoFlujoCajaTsr(ArrayList<Classe> classes,PresupuestoFlujoCajaTsrReturnGeneral presupuestoflujocajatsrReturnGeneral,PresupuestoFlujoCajaTsrBean presupuestoflujocajatsrBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.presupuestoflujocajatsr)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr = new PresupuestoFlujoCajaTsrDetalleFormJInternalFrame(jDesktopPane,this.presupuestoflujocajatsrSessionBean.getConGuardarRelaciones(),this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setVisible(false);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setSelected(false);						
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.presupuestoflujocajatsrLogic=this.presupuestoflujocajatsrLogic;
		
		this.cargarCombosFrameForeignKeyPresupuestoFlujoCajaTsr("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePresupuestoFlujoCajaTsr();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePresupuestoFlujoCajaTsr();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPresupuestoFlujoCajaTsr("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPresupuestoFlujoCajaTsr();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPresupuestoFlujoCajaTsr"));
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ModificarPresupuestoFlujoCajaTsr"));

		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ModificarToolBarPresupuestoFlujoCajaTsr"));
					
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemModificarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"MenuItemModificarPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"ActualizarPresupuestoFlujoCajaTsr"));
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPresupuestoFlujoCajaTsr"));
						
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemActualizarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"EliminarPresupuestoFlujoCajaTsr"));
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"EliminarToolBarPresupuestoFlujoCajaTsr"));
								
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemEliminarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CancelarPresupuestoFlujoCajaTsr"));
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CancelarToolBarPresupuestoFlujoCajaTsr"));
					
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemCancelarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPresupuestoFlujoCajaTsr"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemDetalleCerrarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoFlujoCajaTsr"));
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoFlujoCajaTsr"));
		
		
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPresupuestoFlujoCajaTsr"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonidPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtoncodigoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"codigoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonnombrePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"nombrePresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfechaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fechaPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fecha_presupuestoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonvalorPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsr"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsr"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtondescripcionPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPresupuestoFlujoCajaTsrBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPresupuestoFlujoCajaTsr"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePresupuestoFlujoCajaTsr"));
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPresupuestoFlujoCajaTsr"));
		}
		
		this.jTableDatosPresupuestoFlujoCajaTsr.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPresupuestoFlujoCajaTsr"));
		
		this.jTableDatosPresupuestoFlujoCajaTsr.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPresupuestoFlujoCajaTsr"));
		
		this.jButtonNuevoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"NuevoPresupuestoFlujoCajaTsr"));
		
		this.jButtonDuplicarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"DuplicarPresupuestoFlujoCajaTsr"));
		
		this.jButtonCopiarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"CopiarPresupuestoFlujoCajaTsr"));
		
		this.jButtonVerFormPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"VerFormPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonNuevoToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"NuevoToolBarPresupuestoFlujoCajaTsr"));
			
		this.jButtonDuplicarToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemNuevoPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemDuplicarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPresupuestoFlujoCajaTsr"));		
		
		
		this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonNuevoRelacionesToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemNuevoRelacionesPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPresupuestoFlujoCajaTsr"));		
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ModificarPresupuestoFlujoCajaTsr"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonModificarToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ModificarToolBarPresupuestoFlujoCajaTsr"));
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemModificarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"MenuItemModificarPresupuestoFlujoCajaTsr"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"ActualizarPresupuestoFlujoCajaTsr"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonActualizarToolBarPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPresupuestoFlujoCajaTsr"));
				
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemActualizarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPresupuestoFlujoCajaTsr"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"EliminarPresupuestoFlujoCajaTsr"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonEliminarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"EliminarToolBarPresupuestoFlujoCajaTsr"));
						
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemEliminarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPresupuestoFlujoCajaTsr"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CancelarPresupuestoFlujoCajaTsr"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonCancelarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CancelarToolBarPresupuestoFlujoCajaTsr"));
			
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemCancelarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPresupuestoFlujoCajaTsr"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPresupuestoFlujoCajaTsr"));		
		
		
		this.jButtonCerrarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CerrarPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonCerrarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CerrarToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemCerrarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPresupuestoFlujoCajaTsr"));
			
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jMenuItemDetalleCerrarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPresupuestoFlujoCajaTsr"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosPresupuestoFlujoCajaTsr"));
		}
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPresupuestoFlujoCajaTsr"));
		}
		
		this.jButtonCopiarToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CopiarToolBarPresupuestoFlujoCajaTsr"));
			
		this.jButtonVerFormToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"VerFormToolBarPresupuestoFlujoCajaTsr"));
		
		this.jMenuItemGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemCopiarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPresupuestoFlujoCajaTsr"));		
		
		this.jMenuItemVerFormPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPresupuestoFlujoCajaTsr"));		
		
		
		this.jButtonGuardarCambiosTablaPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemGuardarCambiosTablaPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jButtonRecargarInformacionPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"RecargarInformacionPresupuestoFlujoCajaTsr"));
					
		this.jButtonRecargarInformacionToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPresupuestoFlujoCajaTsr"));
		
		this.jMenuItemRecargarInformacionPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPresupuestoFlujoCajaTsr"));		
		
		
		
		this.jButtonAnterioresPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"AnterioresPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonAnterioresToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPresupuestoFlujoCajaTsr"));
		
		this.jMenuItemAnterioresPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPresupuestoFlujoCajaTsr"));		
		
		
		this.jButtonSiguientesPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"SiguientesPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonSiguientesToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemSiguientesPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemAbrirOrderByPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemMostrarOcultarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemDetalleAbrirOrderByPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemDetalleMostarOcultarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPresupuestoFlujoCajaTsr"));		
		
		
		this.jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPresupuestoFlujoCajaTsr"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPresupuestoFlujoCajaTsr"));
			
		this.jMenuItemNuevoGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPresupuestoFlujoCajaTsr"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsr.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPresupuestoFlujoCajaTsr"));

		this.jCheckBoxSeleccionadosPresupuestoFlujoCajaTsr.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPresupuestoFlujoCajaTsr"));
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPresupuestoFlujoCajaTsr"));
		}
		
		
		this.jComboBoxTiposRelacionesPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"TiposRelacionesPresupuestoFlujoCajaTsr"));
			
		this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"TiposAccionesPresupuestoFlujoCajaTsr"));
					
		this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPresupuestoFlujoCajaTsr"));
			
		this.jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPresupuestoFlujoCajaTsr"));		
		
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonidPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtoncodigoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"codigoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonnombrePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"nombrePresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfechaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fechaPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fecha_presupuestoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonvalorPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsr"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsr"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtondescripcionPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPresupuestoFlujoCajaTsrBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorCodigoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoPresupuestoFlujoCajaTsr"));

			this.jButtonBusquedaPorFechaPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaPresupuestoFlujoCajaTsr"));

			this.jButtonBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr"));

			this.jButtonBusquedaPorNombrePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorNombrePresupuestoFlujoCajaTsr"));

			this.jButtonBusquedaPorValorPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorValorPresupuestoFlujoCajaTsr"));

			this.jButtonFK_IdCentroActividadPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCentroActividadPresupuestoFlujoCajaTsr"));

			this.jButtonFK_IdCentroCostoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPresupuestoFlujoCajaTsr"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsr"));

			this.jButtonFK_IdCuentaContablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePresupuestoFlujoCajaTsr"));

			this.jButtonBuscarFK_IdCuentaContableid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsr"));

			this.jButtonFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoPresupuestoFlujoCajaTsr"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoFlujoCajaTsr"));
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoFlujoCajaTsr"));
				this.jInternalFrameReporteDinamicoPresupuestoFlujoCajaTsr.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr"));
			}
			
			//this.jButtonCerrarReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPresupuestoFlujoCajaTsr"));				
			//this.jButtonGenerarReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPresupuestoFlujoCajaTsr"));
			//this.jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPresupuestoFlujoCajaTsr"));
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPresupuestoFlujoCajaTsr"));
				this.jInternalFrameImportacionPresupuestoFlujoCajaTsr.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPresupuestoFlujoCajaTsr"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"AbrirOrderByPresupuestoFlujoCajaTsr"));
			
			this.jButtonAbrirOrderByToolBarPresupuestoFlujoCajaTsr.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPresupuestoFlujoCajaTsr"));			
			
			if(this.jInternalFrameOrderByPresupuestoFlujoCajaTsr!=null) {
				this.jInternalFrameOrderByPresupuestoFlujoCajaTsr.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPresupuestoFlujoCajaTsr"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTabbedPaneRelacionesPresupuestoFlujoCajaTsr.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPresupuestoFlujoCajaTsr"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePresupuestoFlujoCajaTsr();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPresupuestoFlujoCajaTsr = (JInternalFrameBase)event.getSource();
	            	
	            PresupuestoFlujoCajaTsrBeanSwingJInternalFrame jInternalFrameParent=(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame)jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPresupuestoFlujoCajaTsr.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPresupuestoFlujoCajaTsrListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPresupuestoFlujoCajaTsr.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPresupuestoFlujoCajaTsr.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonNuevoPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPresupuestoFlujoCajaTsrActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonModificarPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonActualizarPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonEliminarPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonCancelarPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPresupuestoFlujoCajaTsr";
		inputMap = this.jButtonCerrarPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPresupuestoFlujoCajaTsr";
		inputMap = this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonGuardarCambiosPresupuestoFlujoCajaTsr.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsr.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsrItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPresupuestoFlujoCajaTsrActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsrActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsr.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsrActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonidPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"idPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_empresaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_sucursalPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_ejercicioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_periodoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_usuarioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_anioPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_mesPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoPresupuestoFlujoCajaTsrBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_actividadPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtoncodigoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"codigoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonnombrePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"nombrePresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfechaPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fechaPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonfecha_presupuestoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"fecha_presupuestoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonvalorPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"valorPresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contablePresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsr"));
		//jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsrBusqueda"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPresupuestoFlujoCajaTsrActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsr"));
		//jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsrBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtondescripcionPresupuestoFlujoCajaTsrBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPresupuestoFlujoCajaTsrBusqueda"));
		
		
		this.jButtonBusquedaPorCodigoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoPresupuestoFlujoCajaTsr"));

		this.jButtonBusquedaPorFechaPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaPresupuestoFlujoCajaTsr"));

		this.jButtonBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr"));

		this.jButtonBusquedaPorNombrePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorNombrePresupuestoFlujoCajaTsr"));

		this.jButtonBusquedaPorValorPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"BusquedaPorValorPresupuestoFlujoCajaTsr"));

		this.jButtonFK_IdCentroActividadPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCentroActividadPresupuestoFlujoCajaTsr"));

		this.jButtonFK_IdCentroCostoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPresupuestoFlujoCajaTsr"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_centro_costoPresupuestoFlujoCajaTsr"));

		this.jButtonFK_IdCuentaContablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContablePresupuestoFlujoCajaTsr"));

		this.jButtonBuscarFK_IdCuentaContableid_cuenta_contablePresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"id_cuenta_contablePresupuestoFlujoCajaTsr"));

		this.jButtonFK_IdTipoMovimientoPresupuestoFlujoCajaTsr.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoPresupuestoFlujoCajaTsr"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPresupuestoFlujoCajaTsr.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPresupuestoFlujoCajaTsrActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsrActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPresupuestoFlujoCajaTsr.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPresupuestoFlujoCajaTsr(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
					presupuestoflujocajatsrAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrs) {
					presupuestoflujocajatsrAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPresupuestoFlujoCajaTsrItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
						presupuestoflujocajatsrAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrs) {
						presupuestoflujocajatsrAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrs) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPresupuestoFlujoCajaTsr.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPresupuestoFlujoCajaTsrItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPresupuestoFlujoCajaTsr.getSelectedRows();
			
			PresupuestoFlujoCajaTsr presupuestoflujocajatsrLocal=new PresupuestoFlujoCajaTsr();
			
			//this.seleccionarTodosPresupuestoFlujoCajaTsr(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					presupuestoflujocajatsrLocal =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs().toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					presupuestoflujocajatsrLocal =(PresupuestoFlujoCajaTsr) this.presupuestoflujocajatsrs.toArray()[this.jTableDatosPresupuestoFlujoCajaTsr.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				presupuestoflujocajatsrLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
						presupuestoflujocajatsrAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrs) {
						presupuestoflujocajatsrAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPresupuestoFlujoCajaTsr.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPresupuestoFlujoCajaTsr.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPresupuestoFlujoCajaTsr,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPresupuestoFlujoCajaTsrItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPresupuestoFlujoCajaTsrParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsrActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPresupuestoFlujoCajaTsr.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
				
						if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							presupuestoflujocajatsrAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							presupuestoflujocajatsrAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							presupuestoflujocajatsrAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO)) {
							existe=true;
							presupuestoflujocajatsrAux.setfecha_presupuesto(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							presupuestoflujocajatsrAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							presupuestoflujocajatsrAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrs) {
					
						if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							presupuestoflujocajatsrAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							presupuestoflujocajatsrAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							presupuestoflujocajatsrAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO)) {
							existe=true;
							presupuestoflujocajatsrAux.setfecha_presupuesto(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							presupuestoflujocajatsrAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							presupuestoflujocajatsrAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPresupuestoFlujoCajaTsrActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePresupuestoFlujoCajaTsr) {				
					conSplash=true;//false;										
					
					//this.startProcessPresupuestoFlujoCajaTsr(conSplash);
				
					this.generarReportePresupuestoFlujoCajaTsrsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPresupuestoFlujoCajaTsrsSeleccionados();
				//this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPresupuestoFlujoCajaTsrsSeleccionados(false);
				//this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPresupuestoFlujoCajaTsrsSeleccionados(true);
				//this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPresupuestoFlujoCajaTsr();
				
				this.exportarPresupuestoFlujoCajaTsrsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPresupuestoFlujoCajaTsrs();
				//this.importarPresupuestoFlujoCajaTsrs();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPresupuestoFlujoCajaTsr();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPresupuestoFlujoCajaTsrsSeleccionados();
				//this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Presupuesto Flujo Caja", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPresupuestoFlujoCajaTsr();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPresupuestoFlujoCajaTsr)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPresupuestoFlujoCajaTsr(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
				}	
			} 			
			else if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePresupuestoFlujoCajaTsr) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPresupuestoFlujoCajaTsr(conSplash);
					
						//this.actualizarParametrosGeneralPresupuestoFlujoCajaTsr();
						
						this.generarReporteProcesoAccionPresupuestoFlujoCajaTsrsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Presupuesto Flujo CajaS SELECCIONADOS?", "MANTENIMIENTO DE Presupuesto Flujo Caja", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPresupuestoFlujoCajaTsr();
				
						this.actualizarParametrosGeneralPresupuestoFlujoCajaTsr();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.presupuestoflujocajatsrReturnGeneral=presupuestoflujocajatsrLogic.procesarAccionPresupuestoFlujoCajaTsrsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs(),this.presupuestoflujocajatsrParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPresupuestoFlujoCajaTsrReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPresupuestoFlujoCajaTsr();
					
					PresupuestoFlujoCajaTsrBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPresupuestoFlujoCajaTsrReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxTiposAccionesFormularioPresupuestoFlujoCajaTsr.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPresupuestoFlujoCajaTsr(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPresupuestoFlujoCajaTsrActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPresupuestoFlujoCajaTsr();
			
			if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
			PresupuestoFlujoCajaTsr presupuestoflujocajatsr=new PresupuestoFlujoCajaTsr();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPresupuestoFlujoCajaTsr.getSelectedItem();
			
			
			
			
			presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
			//this.sTipoAccion;
			
			if(presupuestoflujocajatsrsSeleccionados.size()==1) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
					presupuestoflujocajatsr=presupuestoflujocajatsrAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPresupuestoFlujoCajaTsr();
			
      		//this.finishProcessPresupuestoFlujoCajaTsr(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPresupuestoFlujoCajaTsrReturnGeneral() throws Exception {
		if(this.presupuestoflujocajatsrReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.presupuestoflujocajatsrReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.presupuestoflujocajatsrReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.presupuestoflujocajatsrReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.presupuestoflujocajatsrReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.presupuestoflujocajatsrReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
		}
		
		if(this.presupuestoflujocajatsrReturnGeneral.getConRetornoLista() || this.presupuestoflujocajatsrReturnGeneral.getConRetornoObjeto()) {
			if(this.presupuestoflujocajatsrReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsrs(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsrs());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.presupuestoflujocajatsrReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.presupuestoflujocajatsrLogic.setPresupuestoFlujoCajaTsr(this.presupuestoflujocajatsrReturnGeneral.getPresupuestoFlujoCajaTsr());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPresupuestoFlujoCajaTsr(false);
		}
	}
	
	public void actualizarParametrosGeneralPresupuestoFlujoCajaTsr() throws Exception {
		
		
	}
	
	public ArrayList<PresupuestoFlujoCajaTsr> getPresupuestoFlujoCajaTsrsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPresupuestoFlujoCajaTsr) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs()) {
					if(presupuestoflujocajatsrAux.getIsSelected()) {
						presupuestoflujocajatsrsSeleccionados.add(presupuestoflujocajatsrAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:this.presupuestoflujocajatsrs) {
					if(presupuestoflujocajatsrAux.getIsSelected()) {
						presupuestoflujocajatsrsSeleccionados.add(presupuestoflujocajatsrAux);				
					}
				}
			}
			
			if(presupuestoflujocajatsrsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						presupuestoflujocajatsrsSeleccionados.addAll(this.presupuestoflujocajatsrLogic.getPresupuestoFlujoCajaTsrs());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						presupuestoflujocajatsrsSeleccionados.addAll(this.presupuestoflujocajatsrs);				
					}
				}
			}
		} else {
			presupuestoflujocajatsrsSeleccionados.add(this.presupuestoflujocajatsr);
		}
		
		return presupuestoflujocajatsrsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPresupuestoFlujoCajaTsrsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPresupuestoFlujoCajaTsrsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPresupuestoFlujoCajaTsrsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPresupuestoFlujoCajaTsrsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Presupuesto Flujo Caja",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados);
		
	}	
	
	public void generarReporteNormalPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPresupuestoFlujoCajaTsrsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPresupuestoFlujoCajaTsr();
		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPresupuestoFlujoCajaTsr();
		
		
		//this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados ,presupuestoflujocajatsrImplementable,presupuestoflujocajatsrImplementableHome);
	}
	
	public void mostrarImportacionPresupuestoFlujoCajaTsrs() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPresupuestoFlujoCajaTsr();
		
		this.abrirFrameImportacionPresupuestoFlujoCajaTsr();		
		
			
		//this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados ,presupuestoflujocajatsrImplementable,presupuestoflujocajatsrImplementableHome);
	}
	
	public void importarPresupuestoFlujoCajaTsrs() throws Exception {		
	
	}
	
	public void exportarPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPresupuestoFlujoCajaTsrsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPresupuestoFlujoCajaTsrsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPresupuestoFlujoCajaTsrsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Presupuesto Flujo Caja",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPresupuestoFlujoCajaTsr(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPresupuestoFlujoCajaTsr(presupuestoflujocajatsrAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//presupuestoflujocajatsrAux.setsDetalleGeneralEntityReporte(presupuestoflujocajatsrAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPresupuestoFlujoCajaTsr(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=presupuestoflujocajatsr.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.gettipomovimiento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getcentroactividad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getfecha_presupuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=presupuestoflujocajatsr.getdescripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PresupuestoFlujoCajaTsrs");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPresupuestoFlujoCajaTsr(row);				
				iRow++;
			}				
			
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPresupuestoFlujoCajaTsr(presupuestoflujocajatsrAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPresupuestoFlujoCajaTsrsSeleccionados() throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();		
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"presupuestoflujocajatsr.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("presupuestoflujocajatsrs");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("presupuestoflujocajatsr");
			//elementRoot.appendChild(element);
		
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
				element = document.createElement("presupuestoflujocajatsr");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPresupuestoFlujoCajaTsr(presupuestoflujocajatsrAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Presupuesto Flujo Caja",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPresupuestoFlujoCajaTsr(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.gettipomovimiento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getcentroactividad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getfecha_presupuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(presupuestoflujocajatsr.getdescripcion());				
	}
	
	public void setFilaDatosExportarXmlPresupuestoFlujoCajaTsr(PresupuestoFlujoCajaTsr presupuestoflujocajatsr,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(presupuestoflujocajatsr.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(presupuestoflujocajatsr.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementusuario_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementanio_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementtipomovimiento_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDTIPOMOVIMIENTO);
		elementtipomovimiento_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.gettipomovimiento_descripcion()));
		element.appendChild(elementtipomovimiento_descripcion);

		Element elementcentroactividad_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDCENTROACTIVIDAD);
		elementcentroactividad_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getcentroactividad_descripcion()));
		element.appendChild(elementcentroactividad_descripcion);

		Element elementcodigo = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(presupuestoflujocajatsr.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(presupuestoflujocajatsr.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementfecha = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(presupuestoflujocajatsr.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_presupuesto = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.FECHAPRESUPUESTO);
		elementfecha_presupuesto.appendChild(document.createTextNode(presupuestoflujocajatsr.getfecha_presupuesto().toString().trim()));
		element.appendChild(elementfecha_presupuesto);

		Element elementvalor = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(presupuestoflujocajatsr.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementcuentacontable_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementdescripcion = document.createElement(PresupuestoFlujoCajaTsrConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(presupuestoflujocajatsr.getdescripcion().trim()));
		element.appendChild(elementdescripcion);
	}
	
	public void generarReporteGroupGenericoPresupuestoFlujoCajaTsrsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados=new ArrayList<PresupuestoFlujoCajaTsr>();
		
		presupuestoflujocajatsrsSeleccionados=this.getPresupuestoFlujoCajaTsrsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPresupuestoFlujoCajaTsr(presupuestoflujocajatsrsSeleccionados);
		
		this.generarReportePresupuestoFlujoCajaTsrs("Todos",presupuestoflujocajatsrsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPresupuestoFlujoCajaTsr(ArrayList<PresupuestoFlujoCajaTsr> presupuestoflujocajatsrsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PresupuestoFlujoCajaTsr presupuestoflujocajatsrAux:presupuestoflujocajatsrsSeleccionados) {
				presupuestoflujocajatsrAux.setsDetalleGeneralEntityReporte(presupuestoflujocajatsrAux.toString());
			
				if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDTIPOMOVIMIENTO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.gettipomovimiento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROACTIVIDAD)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getcentroactividad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(presupuestoflujocajatsrAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_FECHAPRESUPUESTO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(presupuestoflujocajatsrAux.getfecha_presupuesto()));
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PresupuestoFlujoCajaTsrConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					presupuestoflujocajatsrAux.setsDescripcionGeneralEntityReporte1(presupuestoflujocajatsrAux.getdescripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PresupuestoFlujoCajaTsrConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPresupuestoFlujoCajaTsr(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=true;
				this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=true;
				this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=true;
			}
			
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=true;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaModificarPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaCancelarPresupuestoFlujoCajaTsr=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				} else {
					this.isVisibilidadCeldaGuardarPresupuestoFlujoCajaTsr=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PresupuestoFlujoCajaTsrJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=true;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=true;
		} else {
			this.actualizarEstadoPanelsPresupuestoFlujoCajaTsr(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPresupuestoFlujoCajaTsr=false;
			//this.isVisibilidadCeldaVerFormPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaDuplicarPresupuestoFlujoCajaTsr=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
		} else {
			this.isVisibilidadCeldaNuevoPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaGuardarCambiosPresupuestoFlujoCajaTsr=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			if(!presupuestoflujocajatsrSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;												
			}
			
			this.jButtonCerrarPresupuestoFlujoCajaTsr.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPresupuestoFlujoCajaTsr=false;
		}
		
		if(!this.permiteMantenimiento(this.presupuestoflujocajatsr)) {
			this.isVisibilidadCeldaActualizarPresupuestoFlujoCajaTsr=false;
			this.isVisibilidadCeldaEliminarPresupuestoFlujoCajaTsr=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPresupuestoFlujoCajaTsr() {
	}
	
	public void actualizarEstadoPanelsPresupuestoFlujoCajaTsr(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosEdicionPresupuestoFlujoCajaTsr.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPresupuestoFlujoCajaTsr!=null) {
				this.jScrollPanelDatosPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelPaginacionPresupuestoFlujoCajaTsr!=null) {
				this.jPanelPaginacionPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
					this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.presupuestoflujocajatsrSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr!=null) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPresupuestoFlujoCajaTsr!=null) {
				this.jPanelParametrosReportesPresupuestoFlujoCajaTsr.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorCodigo=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorCodigo=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadBusquedaPorCodigo=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaEjercicioNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadBusquedaPorCodigo=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaPeriodoNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadBusquedaPorCodigo=isParaUsuarioNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaUsuarioNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaUsuarioNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaUsuarioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaUsuarioNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadBusquedaPorCodigo=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaAnioNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadBusquedaPorCodigo=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaMesNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoMovimiento(Boolean isParaTipoMovimiento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoNegation=!isParaTipoMovimiento;

			this.isVisibilidadBusquedaPorCodigo=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaTipoMovimiento;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroActividad(Boolean isParaCentroActividad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroActividadNegation=!isParaCentroActividad;

			this.isVisibilidadBusquedaPorCodigo=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaCentroActividad;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadBusquedaPorCodigo=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadBusquedaPorCodigo=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFecha=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorFecha) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorFechaPresupuesto=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorFechaPresupuesto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorNombre=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);}

			this.isVisibilidadBusquedaPorValor=isParaCentroCostoNegation;
			if(!this.isVisibilidadBusquedaPorValor) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroActividad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCentroActividad) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdCuentaContable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);}

			this.isVisibilidadFK_IdTipoMovimiento=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimiento) {this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);}
		}
		
	}
	
	
	
	

	public String registrarSesionPresupuestoFlujoCajaTsrParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(presupuestoflujocajatsrSessionBean==null) {
				presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(presupuestoflujocajatsrSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.presupuestoflujocajatsrFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(PresupuestoFlujoCajaTsrConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionPresupuestoFlujoCajaTsr(true);
			//cuentacontableSessionBean.setlidPresupuestoFlujoCajaTsrActual(this.idPresupuestoFlujoCajaTsrActual);

			presupuestoflujocajatsrSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPresupuestoFlujoCajaTsr(true);
			presupuestoflujocajatsrSessionBean.setlIdPresupuestoFlujoCajaTsrActualForeignKey(this.idPresupuestoFlujoCajaTsrActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPresupuestoFlujoCajaTsrParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(presupuestoflujocajatsrSessionBean==null) {
				presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(presupuestoflujocajatsrSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.presupuestoflujocajatsrFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(PresupuestoFlujoCajaTsrConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionPresupuestoFlujoCajaTsr(true);
			//centrocostoSessionBean.setlidPresupuestoFlujoCajaTsrActual(this.idPresupuestoFlujoCajaTsrActual);

			presupuestoflujocajatsrSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPresupuestoFlujoCajaTsr(true);
			presupuestoflujocajatsrSessionBean.setlIdPresupuestoFlujoCajaTsrActualForeignKey(this.idPresupuestoFlujoCajaTsrActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PresupuestoFlujoCajaTsrSessionBean presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
		
		if(this.presupuestoflujocajatsrSessionBean==null) {
			this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
		}
		
		this.presupuestoflujocajatsrSessionBean.setsUltimaBusquedaPresupuestoFlujoCajaTsr(this.getsAccionBusqueda());
		this.presupuestoflujocajatsrSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.presupuestoflujocajatsrSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
			presupuestoflujocajatsrSessionBean.setcodigo(this.getcodigoBusquedaPorCodigo());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorFecha")) {
			presupuestoflujocajatsrSessionBean.setfecha(this.getfechaBusquedaPorFecha());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorFechaPresupuesto")) {
			presupuestoflujocajatsrSessionBean.setfecha_presupuesto(this.getfecha_presupuestoBusquedaPorFechaPresupuesto());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			presupuestoflujocajatsrSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorValor")) {
			presupuestoflujocajatsrSessionBean.setvalor(this.getvalorBusquedaPorValor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroActividad")) {
			presupuestoflujocajatsrSessionBean.setid_centro_actividad(this.getid_centro_actividadFK_IdCentroActividad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			presupuestoflujocajatsrSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			presupuestoflujocajatsrSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			presupuestoflujocajatsrSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			presupuestoflujocajatsrSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			presupuestoflujocajatsrSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			presupuestoflujocajatsrSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
			presupuestoflujocajatsrSessionBean.setid_tipo_movimiento(this.getid_tipo_movimientoFK_IdTipoMovimiento());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PresupuestoFlujoCajaTsrSessionBean presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
		
		if(this.presupuestoflujocajatsrSessionBean==null) {
			this.presupuestoflujocajatsrSessionBean=new PresupuestoFlujoCajaTsrSessionBean();
		}
		
		if(this.presupuestoflujocajatsrSessionBean.getsUltimaBusquedaPresupuestoFlujoCajaTsr()!=null&&!this.presupuestoflujocajatsrSessionBean.getsUltimaBusquedaPresupuestoFlujoCajaTsr().equals("")) {
			this.setsAccionBusqueda(presupuestoflujocajatsrSessionBean.getsUltimaBusquedaPresupuestoFlujoCajaTsr());
			this.setiNumeroPaginacion(presupuestoflujocajatsrSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(presupuestoflujocajatsrSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
				this.setcodigoBusquedaPorCodigo(presupuestoflujocajatsrSessionBean.getcodigo());
				presupuestoflujocajatsrSessionBean.setcodigo("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorFecha")) {
				this.setfechaBusquedaPorFecha(presupuestoflujocajatsrSessionBean.getfecha());
				presupuestoflujocajatsrSessionBean.setfecha(new Date());
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorFechaPresupuesto")) {
				this.setfecha_presupuestoBusquedaPorFechaPresupuesto(presupuestoflujocajatsrSessionBean.getfecha_presupuesto());
				presupuestoflujocajatsrSessionBean.setfecha_presupuesto(new Date());
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(presupuestoflujocajatsrSessionBean.getnombre());
				presupuestoflujocajatsrSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorValor")) {
				this.setvalorBusquedaPorValor(presupuestoflujocajatsrSessionBean.getvalor());
				presupuestoflujocajatsrSessionBean.setvalor(0.0);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroActividad")) {
				this.setid_centro_actividadFK_IdCentroActividad(presupuestoflujocajatsrSessionBean.getid_centro_actividad());
				presupuestoflujocajatsrSessionBean.setid_centro_actividad(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(presupuestoflujocajatsrSessionBean.getid_centro_costo());
				presupuestoflujocajatsrSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(presupuestoflujocajatsrSessionBean.getid_cuenta_contable());
				presupuestoflujocajatsrSessionBean.setid_cuenta_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(presupuestoflujocajatsrSessionBean.getid_ejercicio());
				presupuestoflujocajatsrSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(presupuestoflujocajatsrSessionBean.getid_empresa());
				presupuestoflujocajatsrSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(presupuestoflujocajatsrSessionBean.getid_periodo());
				presupuestoflujocajatsrSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(presupuestoflujocajatsrSessionBean.getid_sucursal());
				presupuestoflujocajatsrSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimiento")) {
				this.setid_tipo_movimientoFK_IdTipoMovimiento(presupuestoflujocajatsrSessionBean.getid_tipo_movimiento());
				presupuestoflujocajatsrSessionBean.setid_tipo_movimiento(-1L);
			}
		}
		
		this.presupuestoflujocajatsrSessionBean.setsUltimaBusquedaPresupuestoFlujoCajaTsr("");
		this.presupuestoflujocajatsrSessionBean.setiNumeroPaginacion(PresupuestoFlujoCajaTsrConstantesFunciones.INUMEROPAGINACION);
		this.presupuestoflujocajatsrSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPresupuestoFlujoCajaTsr(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPresupuestoFlujoCajaTsr() {
		this.updateBorderResaltarBusquedasFormularioPresupuestoFlujoCajaTsr();
		this.updateVisibilidadBusquedasFormularioPresupuestoFlujoCajaTsr();
		this.updateHabilitarBusquedasFormularioPresupuestoFlujoCajaTsr();
	}
	
	public void updateBorderResaltarBusquedasFormularioPresupuestoFlujoCajaTsr() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponents().length>0) {
	

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorCodigoPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorNombrePresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorNombrePresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorValorPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorValorPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroActividadPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroCostoPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCuentaContablePresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			}
		}

		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr!=null) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPresupuestoFlujoCajaTsr() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorCodigoPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorFechaPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorFechaPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorNombrePresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorNombrePresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorValorPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarBusquedaPorValorPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCentroActividadPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCentroCostoPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdCuentaContablePresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			if(!this.presupuestoflujocajatsrConstantesFunciones.mostrarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr && index>-1) {
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPresupuestoFlujoCajaTsr() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorCodigoPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorFechaPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorFechaPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorNombrePresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorNombrePresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorValorPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarBusquedaPorValorPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCentroActividadPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCentroCostoPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCuentaContablePresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			}

			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
				this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setEnabledAt(index,this.presupuestoflujocajatsrConstantesFunciones.activarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPresupuestoFlujoCajaTsr(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorCodigo")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorCodigoPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarBusquedaPorCodigoPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorCodigoPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorFecha")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarBusquedaPorFechaPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorFechaPresupuesto")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorFechaPresupuestoPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorNombrePresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarBusquedaPorNombrePresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorNombrePresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorValor")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelBusquedaPorValorPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarBusquedaPorValorPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarBusquedaPorValorPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroActividad")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroActividadPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarFK_IdCentroActividadPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroActividadPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCentroCostoPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarFK_IdCentroCostoPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCentroCostoPresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdCuentaContablePresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarFK_IdCuentaContablePresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdCuentaContablePresupuestoFlujoCajaTsr);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoMovimiento")) {
			index= this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.indexOfComponent(this.jPanelFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);

			this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPresupuestoFlujoCajaTsr.getComponent(index);

			this.presupuestoflujocajatsrConstantesFunciones.setResaltarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr(resaltar);

			jPanel.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarFK_IdTipoMovimientoPresupuestoFlujoCajaTsr);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPresupuestoFlujoCajaTsr.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPresupuestoFlujoCajaTsr() throws Exception {

		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPresupuestoFlujoCajaTsr();
		this.updateVisibilidadResaltarControlesFormularioPresupuestoFlujoCajaTsr();
		this.updateHabilitarResaltarControlesFormularioPresupuestoFlujoCajaTsr();
		
	}
	
	public void updateBorderResaltarControlesFormularioPresupuestoFlujoCajaTsr() throws Exception {
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltaridPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltaridPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_empresaPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_empresaPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_sucursalPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_sucursalPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_ejercicioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_ejercicioPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_periodoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_periodoPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_usuarioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_usuarioPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_anioPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_anioPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_mesPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_mesPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_tipo_movimientoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_tipo_movimientoPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_actividadPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_actividadPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarcodigoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarcodigoPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarnombrePresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarnombrePresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarfechaPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarfechaPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarfecha_presupuestoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarfecha_presupuestoPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarvalorPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarvalorPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_cuenta_contablePresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_cuenta_contablePresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_costoPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltarid_centro_costoPresupuestoFlujoCajaTsr);}
		if(this.presupuestoflujocajatsrConstantesFunciones.resaltardescripcionPresupuestoFlujoCajaTsr!=null && this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setBorder(this.presupuestoflujocajatsrConstantesFunciones.resaltardescripcionPresupuestoFlujoCajaTsr);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPresupuestoFlujoCajaTsr() throws Exception {		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
	
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostraridPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelidPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostraridPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_empresaPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_empresaPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_empresaPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_sucursalPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_sucursalPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_sucursalPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_ejercicioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_ejercicioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_ejercicioPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_periodoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_periodoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_periodoPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_usuarioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_usuarioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_usuarioPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_anioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_anioPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_anioPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_mesPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_mesPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_mesPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_tipo_movimientoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_tipo_movimientoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_tipo_movimientoPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_actividadPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_centro_actividadPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_actividadPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarcodigoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelcodigoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarcodigoPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarnombrePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelnombrePresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarnombrePresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarfechaPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelfechaPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarfechaPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarfecha_presupuestoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelfecha_presupuestoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarfecha_presupuestoPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarvalorPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelvalorPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarvalorPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_cuenta_contablePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_cuenta_contablePresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_cuenta_contablePresupuestoFlujoCajaTsr);
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_cuenta_contablePresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_costoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPanelid_centro_costoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_costoPresupuestoFlujoCajaTsr);
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrarid_centro_costoPresupuestoFlujoCajaTsr);
		//this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrardescripcionPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jPaneldescripcionPresupuestoFlujoCajaTsr.setVisible(this.presupuestoflujocajatsrConstantesFunciones.mostrardescripcionPresupuestoFlujoCajaTsr);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPresupuestoFlujoCajaTsr() throws Exception {
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr!=null) {
	
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jLabelidPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activaridPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_empresaPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_empresaPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_sucursalPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_sucursalPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_ejercicioPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_ejercicioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_periodoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_periodoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_usuarioPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_usuarioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_anioPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_anioPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_mesPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_mesPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_tipo_movimientoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_tipo_movimientoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_actividadPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_actividadPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldcodigoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarcodigoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreanombrePresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarnombrePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfechaPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarfechaPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jDateChooserfecha_presupuestoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarfecha_presupuestoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextFieldvalorPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarvalorPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_cuenta_contablePresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_cuenta_contablePresupuestoFlujoCajaTsr);
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_cuenta_contablePresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_cuenta_contablePresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jComboBoxid_centro_costoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_costoPresupuestoFlujoCajaTsr);
			this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jButtonid_centro_costoPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activarid_centro_costoPresupuestoFlujoCajaTsr);
		this.jInternalFrameDetalleFormPresupuestoFlujoCajaTsr.jTextAreadescripcionPresupuestoFlujoCajaTsr.setEnabled(this.presupuestoflujocajatsrConstantesFunciones.activardescripcionPresupuestoFlujoCajaTsr);
		}
	}
	
		
}