/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.tesoreria.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.tesoreria.util.AutoriPagoOrdenCompraConstantesFunciones;
import com.bydan.erp.tesoreria.util.AutoriPagoOrdenCompraParameterReturnGeneral;
//import com.bydan.erp.tesoreria.util.AutoriPagoOrdenCompraParameterGeneral;
//import com.bydan.erp.tesoreria.presentation.report.source.AutoriPagoOrdenCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.tesoreria.resources.reportes.AuxiliarReportes;


import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.tesoreria.business.logic.*;

import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.tesoreria.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class AutoriPagoOrdenCompraBeanSwingJInternalFrame extends AutoriPagoOrdenCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(AutoriPagoOrdenCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<AutoriPagoOrdenCompra> autoripagoordencompraValidator = new ClassValidator<AutoriPagoOrdenCompra>(AutoriPagoOrdenCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public AutoriPagoOrdenCompra autoripagoordencompra;	
	public AutoriPagoOrdenCompra autoripagoordencompraAux;
	public AutoriPagoOrdenCompra autoripagoordencompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public AutoriPagoOrdenCompra autoripagoordencompraTotales;
	public Long idAutoriPagoOrdenCompraActual;
	public Long iIdNuevoAutoriPagoOrdenCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboOrdenCompra="";

	public List<OrdenCompra> ordencomprasForeignKey;

	public List<OrdenCompra> getordencomprasForeignKey() {
		return ordencomprasForeignKey;
	}

	public void setordencomprasForeignKey(List<OrdenCompra> ordencomprasForeignKey) {
		this.ordencomprasForeignKey = ordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public OrdenCompra ordencompraForeignKey;

	public OrdenCompra getordencompraForeignKey() {
		return ordencompraForeignKey;
	}

	public void setordencompraForeignKey(OrdenCompra ordencompraForeignKey) {
		this.ordencompraForeignKey = ordencompraForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboBanco="";

	public List<Banco> bancosForeignKey;

	public List<Banco> getbancosForeignKey() {
		return bancosForeignKey;
	}

	public void setbancosForeignKey(List<Banco> bancosForeignKey) {
		this.bancosForeignKey = bancosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Banco bancoForeignKey;

	public Banco getbancoForeignKey() {
		return bancoForeignKey;
	}

	public void setbancoForeignKey(Banco bancoForeignKey) {
		this.bancoForeignKey = bancoForeignKey;
	}

	public String sFinalQueryComboCuentaBanco="";

	public List<CuentaBanco> cuentabancosForeignKey;

	public List<CuentaBanco> getcuentabancosForeignKey() {
		return cuentabancosForeignKey;
	}

	public void setcuentabancosForeignKey(List<CuentaBanco> cuentabancosForeignKey) {
		this.cuentabancosForeignKey = cuentabancosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaBanco cuentabancoForeignKey;

	public CuentaBanco getcuentabancoForeignKey() {
		return cuentabancoForeignKey;
	}

	public void setcuentabancoForeignKey(CuentaBanco cuentabancoForeignKey) {
		this.cuentabancoForeignKey = cuentabancoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoAutoriPagoOrdenCompra;
	public Boolean isPermisoNuevoAutoriPagoOrdenCompra;
	public Boolean isPermisoActualizarAutoriPagoOrdenCompra;
	public Boolean isPermisoActualizarOriginalAutoriPagoOrdenCompra;
	public Boolean isPermisoEliminarAutoriPagoOrdenCompra;
	public Boolean isPermisoGuardarCambiosAutoriPagoOrdenCompra;
	public Boolean isPermisoConsultaAutoriPagoOrdenCompra;
	public Boolean isPermisoBusquedaAutoriPagoOrdenCompra;
	public Boolean isPermisoReporteAutoriPagoOrdenCompra;
	public Boolean isPermisoPaginacionMedioAutoriPagoOrdenCompra;
	public Boolean isPermisoPaginacionAltoAutoriPagoOrdenCompra;
	public Boolean isPermisoPaginacionTodoAutoriPagoOrdenCompra;
	public Boolean isPermisoCopiarAutoriPagoOrdenCompra;
	public Boolean isPermisoVerFormAutoriPagoOrdenCompra;
	public Boolean isPermisoDuplicarAutoriPagoOrdenCompra;
	public Boolean isPermisoOrdenAutoriPagoOrdenCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraReturnGeneral;
	public AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoAutoriPagoOrdenCompra=false;
	public Boolean esParaAccionDesdeFormularioAutoriPagoOrdenCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected AutoriPagoOrdenCompraSessionBeanAdditional autoripagoordencompraSessionBeanAdditional=null;
	
	public AutoriPagoOrdenCompraSessionBeanAdditional getAutoriPagoOrdenCompraSessionBeanAdditional() {
		return this.autoripagoordencompraSessionBeanAdditional;
	}
	
	public void setAutoriPagoOrdenCompraSessionBeanAdditional(AutoriPagoOrdenCompraSessionBeanAdditional autoripagoordencompraSessionBeanAdditional) {
		try {
			this.autoripagoordencompraSessionBeanAdditional=autoripagoordencompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional autoripagoordencompraBeanSwingJInternalFrameAdditional=null;
	//public class AutoriPagoOrdenCompraBeanSwingJInternalFrame
	
	public AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional getAutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional() {
		return this.autoripagoordencompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setAutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional(AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional autoripagoordencompraBeanSwingJInternalFrameAdditional) {
		try {
			this.autoripagoordencompraBeanSwingJInternalFrameAdditional=autoripagoordencompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public AutoriPagoOrdenCompraLogic autoripagoordencompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public AutoriPagoOrdenCompra autoripagoordencompraBean;
	public AutoriPagoOrdenCompraConstantesFunciones autoripagoordencompraConstantesFunciones;
	//public AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraReturnGeneral;
	
	//FK
	
	public TipoCambioLogic tipocambioLogic;
	public MonedaLogic monedaLogic;
	public ClienteLogic clienteLogic;
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public OrdenCompraLogic ordencompraLogic;
	public TransaccionLogic transaccionLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public UsuarioLogic usuarioLogic;
	public AsientoContableLogic asientocontableLogic;
	public BancoLogic bancoLogic;
	public CuentaBancoLogic cuentabancoLogic;
	
	//PARAMETROS
	
	
	//public List<AutoriPagoOrdenCompra> autoripagoordencompras;	
	//public List<AutoriPagoOrdenCompra> autoripagoordencomprasEliminados;
	//public List<AutoriPagoOrdenCompra> autoripagoordencomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra=true;
	public Boolean isVisibilidadCeldaCopiarAutoriPagoOrdenCompra=true;
	public Boolean isVisibilidadCeldaVerFormAutoriPagoOrdenCompra=true;
	public Boolean isVisibilidadCeldaOrdenAutoriPagoOrdenCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=false;
	public Boolean isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdBanco=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCuentaBanco=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdOrdenCompra=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoAutoriPagoOrdenCompra() {
		return this.iIdNuevoAutoriPagoOrdenCompra;
	}

	public void setiIdNuevoAutoriPagoOrdenCompra(Long iIdNuevoAutoriPagoOrdenCompra) {
		this.iIdNuevoAutoriPagoOrdenCompra = iIdNuevoAutoriPagoOrdenCompra;
	}
	
	public Long getidAutoriPagoOrdenCompraActual() {
		return this.idAutoriPagoOrdenCompraActual;
	}

	public void setidAutoriPagoOrdenCompraActual(Long idAutoriPagoOrdenCompraActual) {
		this.idAutoriPagoOrdenCompraActual = idAutoriPagoOrdenCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public AutoriPagoOrdenCompra getautoripagoordencompra() {
		return this.autoripagoordencompra;
	}

	public void setautoripagoordencompra(AutoriPagoOrdenCompra autoripagoordencompra) {
		this.autoripagoordencompra = autoripagoordencompra;
	}
	
	public AutoriPagoOrdenCompra getautoripagoordencompraAux() {
		return this.autoripagoordencompraAux;
	}

	public void setautoripagoordencompraAux(AutoriPagoOrdenCompra autoripagoordencompraAux) {
		this.autoripagoordencompraAux = autoripagoordencompraAux;
	}				
	
	public AutoriPagoOrdenCompra getautoripagoordencompraAnterior() {
		return this.autoripagoordencompraAnterior;
	}

	public void setautoripagoordencompraAnterior(AutoriPagoOrdenCompra autoripagoordencompraAnterior) {
		this.autoripagoordencompraAnterior = autoripagoordencompraAnterior;
	}	
	
	public AutoriPagoOrdenCompra getautoripagoordencompraTotales() {
		return this.autoripagoordencompraTotales;
	}

	public void setautoripagoordencompraTotales(AutoriPagoOrdenCompra autoripagoordencompraTotales) {
		this.autoripagoordencompraTotales = autoripagoordencompraTotales;
	}	
	
	public AutoriPagoOrdenCompra getautoripagoordencompraBean() {
		return this.autoripagoordencompraBean;
	}

	public void setautoripagoordencompraBean(AutoriPagoOrdenCompra autoripagoordencompraBean) {
		this.autoripagoordencompraBean = autoripagoordencompraBean;
	}	
	
	public AutoriPagoOrdenCompraParameterReturnGeneral getautoripagoordencompraReturnGeneral() {
		return this.autoripagoordencompraReturnGeneral;
	}

	public void setautoripagoordencompraReturnGeneral(AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraReturnGeneral) {
		this.autoripagoordencompraReturnGeneral = autoripagoordencompraReturnGeneral;
	}	
	
	
	public Long id_asiento_contableFK_IdAsientoContable=-1L;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_bancoFK_IdBanco=-1L;

	public Long getid_bancoFK_IdBanco() {
		return this.id_bancoFK_IdBanco;
	}

	public void setid_bancoFK_IdBanco(Long id_bancoFK_IdBanco) {
		this.id_bancoFK_IdBanco = id_bancoFK_IdBanco;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cuenta_bancoFK_IdCuentaBanco=-1L;

	public Long getid_cuenta_bancoFK_IdCuentaBanco() {
		return this.id_cuenta_bancoFK_IdCuentaBanco;
	}

	public void setid_cuenta_bancoFK_IdCuentaBanco(Long id_cuenta_bancoFK_IdCuentaBanco) {
		this.id_cuenta_bancoFK_IdCuentaBanco = id_cuenta_bancoFK_IdCuentaBanco;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_orden_compraFK_IdOrdenCompra=-1L;

	public Long getid_orden_compraFK_IdOrdenCompra() {
		return this.id_orden_compraFK_IdOrdenCompra;
	}

	public void setid_orden_compraFK_IdOrdenCompra(Long id_orden_compraFK_IdOrdenCompra) {
		this.id_orden_compraFK_IdOrdenCompra = id_orden_compraFK_IdOrdenCompra;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public AutoriPagoOrdenCompraLogic getAutoriPagoOrdenCompraLogic()	{		
		return autoripagoordencompraLogic;
	}

	public void setAutoriPagoOrdenCompraLogic(AutoriPagoOrdenCompraLogic autoripagoordencompraLogic) {
		this.autoripagoordencompraLogic = autoripagoordencompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoAutoriPagoOrdenCompra() {
		return isEsNuevoAutoriPagoOrdenCompra;
	}

	public void setIsEsNuevoAutoriPagoOrdenCompra(Boolean isEsNuevoAutoriPagoOrdenCompra) {
		this.isEsNuevoAutoriPagoOrdenCompra = isEsNuevoAutoriPagoOrdenCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioAutoriPagoOrdenCompra() {
		return esParaAccionDesdeFormularioAutoriPagoOrdenCompra;
	}
	
	public void setEsParaAccionDesdeFormularioAutoriPagoOrdenCompra(Boolean esParaAccionDesdeFormularioAutoriPagoOrdenCompra) {
		this.esParaAccionDesdeFormularioAutoriPagoOrdenCompra = esParaAccionDesdeFormularioAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			OrdenCompraLogic ordencompraLogic=new OrdenCompraLogic();

			//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

					ordencompraLogic.getTodosOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.ordencomprasForeignKey=ordencompraLogic.getOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidOrdenCompraActual());
					this.ordencomprasForeignKey.add(ordencompraLogic.getOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBancosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bancosForeignKey=new ArrayList<Banco>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BancoLogic bancoLogic=new BancoLogic();

			//bancoLogic.getBancoDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bancoLogic.getBancoDataAccess().setIsForForeingKeyData(true);

					bancoLogic.getTodosBancosWithConnection(sFinalQuery,new Pagination());

					this.bancosForeignKey=bancoLogic.getBancos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBanco(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bancoLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidBancoActual());
					this.bancosForeignKey.add(bancoLogic.getBanco());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaBancosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentabancosForeignKey=new ArrayList<CuentaBanco>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaBancoLogic cuentabancoLogic=new CuentaBancoLogic();

			//cuentabancoLogic.getCuentaBancoDataAccess().setIsForForeingKeyData(true);

			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentabancoLogic.getCuentaBancoDataAccess().setIsForForeingKeyData(true);

					cuentabancoLogic.getTodosCuentaBancosWithConnection(sFinalQuery,new Pagination());

					this.cuentabancosForeignKey=cuentabancoLogic.getCuentaBancos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaBanco(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentabancoLogic.getEntityWithConnection(autoripagoordencompraSessionBean.getlidCuentaBancoActual());
					this.cuentabancosForeignKey.add(cuentabancoLogic.getCuentaBanco());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaAutoriPagoOrdenCompraGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_monedaAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_monedaAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra!=null) {
						jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteAutoriPagoOrdenCompraGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_clienteAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_clienteAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaAutoriPagoOrdenCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_empresaAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualOrdenCompraForeignKey(Long idOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ordencompraTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setOrdenCompra(ordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedItem(ordencompraTemp);
					}
				} else {
					//jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedItem(ordencompraTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(ordencompraTemp!=null && jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra!=null) {
						jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.setSelectedItem(ordencompraTemp);
					} else {
						if(jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.setSelectedItem(ordencompraTemp);
							if(jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualOrdenCompraForeignKeyDescripcion(Long idOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}


			sDescripcion=OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualOrdenCompraForeignKeyGenerico(Long idOrdenCompraSeleccionado,JComboBox jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(ordencompraTemp!=null) {
				jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico.setSelectedItem(ordencompraTemp);
			} else {
				if(jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra!=null) {
						jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloAutoriPagoOrdenCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_moduloAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBancoForeignKey(Long idBancoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bancoTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setBanco(bancoTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedItem(bancoTemp);
					}
				} else {
					//jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedItem(bancoTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBanco") || sFormularioTipoBusqueda.equals("Todos")){
					if(bancoTemp!=null && jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra!=null) {
						jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.setSelectedItem(bancoTemp);
					} else {
						if(jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.setSelectedItem(bancoTemp);
							if(jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBancoForeignKeyDescripcion(Long idBancoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}


			sDescripcion=BancoConstantesFunciones.getBancoDescripcion(bancoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBancoForeignKeyGenerico(Long idBancoSeleccionado,JComboBox jComboBoxid_bancoAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}

			if(bancoTemp!=null) {
				jComboBoxid_bancoAutoriPagoOrdenCompraGenerico.setSelectedItem(bancoTemp);
			} else {
				if(jComboBoxid_bancoAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_bancoAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_bancoAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaBancoForeignKey(Long idCuentaBancoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentabancoTemp!=null) {

					if(this.autoripagoordencompra!=null) {
						this.autoripagoordencompra.setCuentaBanco(cuentabancoTemp);
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedItem(cuentabancoTemp);
					}
				} else {
					//jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedItem(cuentabancoTemp);
					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaBanco") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentabancoTemp!=null && jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra!=null) {
						jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.setSelectedItem(cuentabancoTemp);
					} else {
						if(jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra!=null) {
							//jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.setSelectedItem(cuentabancoTemp);
							if(jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.getItemCount()>0) {
								jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaBancoForeignKeyDescripcion(Long idCuentaBancoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}


			sDescripcion=CuentaBancoConstantesFunciones.getCuentaBancoDescripcion(cuentabancoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaBancoForeignKeyGenerico(Long idCuentaBancoSeleccionado,JComboBox jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoTemp=null;

			for(CuentaBanco cuentabancoAux:cuentabancosForeignKey) {
				if(cuentabancoAux.getId()!=null && cuentabancoAux.getId().equals(idCuentaBancoSeleccionado)) {
					cuentabancoTemp=cuentabancoAux;
					break;
				}
			}

			if(cuentabancoTemp!=null) {
				jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico.setSelectedItem(cuentabancoTemp);
			} else {
				if(jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico!=null && jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				autoripagoordencompra.setid_tipo_cambio(tipocambioAux.getId());
				autoripagoordencompra.settipocambio_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				autoripagoordencompra.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_monedaAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaAutoriPagoOrdenCompraGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				autoripagoordencompra.setid_moneda(monedaAux.getId());
				autoripagoordencompra.setmoneda_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getMonedaDescripcion(monedaAux));
				autoripagoordencompra.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_clienteAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteAutoriPagoOrdenCompraGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				autoripagoordencompra.setid_cliente(clienteAux.getId());
				autoripagoordencompra.setcliente_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getClienteDescripcion(clienteAux));
				autoripagoordencompra.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_empresaAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaAutoriPagoOrdenCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				autoripagoordencompra.setid_empresa(empresaAux.getId());
				autoripagoordencompra.setempresa_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				autoripagoordencompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				autoripagoordencompra.setid_sucursal(sucursalAux.getId());
				autoripagoordencompra.setsucursal_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				autoripagoordencompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarOrdenCompraForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraAux=new OrdenCompra();

			if(jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico==null) {
				ordencompraAux=(OrdenCompra)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				ordencompraAux=(OrdenCompra)jComboBoxid_orden_compraAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(ordencompraAux!=null && ordencompraAux.getId()!=null) {
				autoripagoordencompra.setid_orden_compra(ordencompraAux.getId());
				autoripagoordencompra.setordencompra_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraAux));
				autoripagoordencompra.setOrdenCompra(ordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				autoripagoordencompra.setid_transaccion(transaccionAux.getId());
				autoripagoordencompra.settransaccion_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				autoripagoordencompra.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_moduloAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloAutoriPagoOrdenCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				autoripagoordencompra.setid_modulo(moduloAux.getId());
				autoripagoordencompra.setmodulo_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getModuloDescripcion(moduloAux));
				autoripagoordencompra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				autoripagoordencompra.setid_ejercicio(ejercicioAux.getId());
				autoripagoordencompra.setejercicio_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				autoripagoordencompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				autoripagoordencompra.setid_usuario(usuarioAux.getId());
				autoripagoordencompra.setusuario_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				autoripagoordencompra.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null && asientocontableAux.getId()!=null) {
				autoripagoordencompra.setid_asiento_contable(asientocontableAux.getId());
				autoripagoordencompra.setasientocontable_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				autoripagoordencompra.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBancoForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_bancoAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Banco  bancoAux=new Banco();

			if(jComboBoxid_bancoAutoriPagoOrdenCompraGenerico==null) {
				bancoAux=(Banco)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				bancoAux=(Banco)jComboBoxid_bancoAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(bancoAux!=null && bancoAux.getId()!=null) {
				autoripagoordencompra.setid_banco(bancoAux.getId());
				autoripagoordencompra.setbanco_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getBancoDescripcion(bancoAux));
				autoripagoordencompra.setBanco(bancoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaBancoForeignKey(AutoriPagoOrdenCompra autoripagoordencompra,JComboBox jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico)throws Exception
	{
		try
		{
			CuentaBanco  cuentabancoAux=new CuentaBanco();

			if(jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico==null) {
				cuentabancoAux=(CuentaBanco)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.getSelectedItem();
			} else {
				cuentabancoAux=(CuentaBanco)jComboBoxid_cuenta_bancoAutoriPagoOrdenCompraGenerico.getSelectedItem();
			}

			if(cuentabancoAux!=null && cuentabancoAux.getId()!=null) {
				autoripagoordencompra.setid_cuenta_banco(cuentabancoAux.getId());
				autoripagoordencompra.setcuentabanco_descripcion(AutoriPagoOrdenCompraConstantesFunciones.getCuentaBancoDescripcion(cuentabancoAux));
				autoripagoordencompra.setCuentaBanco(cuentabancoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.addItem(tipocambio);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.addItem(cliente);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.addItem(ordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.addItem(ordencompra);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.addItem(transaccion);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.addItem(asientocontable);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBancosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBanco=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.removeAllItems();

							for(Banco banco:this.bancosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.addItem(banco);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBanco") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.removeAllItems();

							for(Banco banco:this.bancosForeignKey) {
								this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.addItem(banco);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaBancosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaBanco=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.removeAllItems();

							for(CuentaBanco cuentabanco:this.cuentabancosForeignKey) {
								this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.addItem(cuentabanco);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { 
					}

					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaBanco") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.removeAllItems();

							for(CuentaBanco cuentabanco:this.cuentabancosForeignKey) {
								this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.addItem(cuentabanco);
							}
						}

						if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameOrdenCompraForeignKey(OrdenCompra ordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedItem(ordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.setSelectedItem(ordencompra);
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBancoForeignKey(Banco banco,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedItem(banco);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.setSelectedItem(banco);
						} else {
							this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaBancoForeignKey(CuentaBanco cuentabanco,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedItem(cuentabanco);
						}
					} else {
						if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.setSelectedItem(cuentabanco);
						} else {
							this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			AutoriPagoOrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			AutoriPagoOrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra(this.autoripagoordencompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(OrdenCompra.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(Banco.class));
		classes.add(new Classe(CuentaBanco.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//autoripagoordencompraLogic.setAutoriPagoOrdenCompras(this.autoripagoordencompras);
			autoripagoordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public AutoriPagoOrdenCompraParameterReturnGeneral getAutoriPagoOrdenCompraParameterGeneral() {
		return this.autoripagoordencompraParameterGeneral;
	}
	
	public void setAutoriPagoOrdenCompraParameterGeneral(AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraParameterGeneral) {
		this.autoripagoordencompraParameterGeneral = autoripagoordencompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoAutoriPagoOrdenCompra() {
		return isPermisoTodoAutoriPagoOrdenCompra;
	}

	public void setIsPermisoTodoAutoriPagoOrdenCompra(Boolean isPermisoTodoAutoriPagoOrdenCompra) {
		this.isPermisoTodoAutoriPagoOrdenCompra = isPermisoTodoAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoNuevoAutoriPagoOrdenCompra() {
		return isPermisoNuevoAutoriPagoOrdenCompra;
	}

	public void setIsPermisoNuevoAutoriPagoOrdenCompra(Boolean isPermisoNuevoAutoriPagoOrdenCompra) {
		this.isPermisoNuevoAutoriPagoOrdenCompra = isPermisoNuevoAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoActualizarAutoriPagoOrdenCompra() {
		return isPermisoActualizarAutoriPagoOrdenCompra;
	}

	public void setIsPermisoActualizarAutoriPagoOrdenCompra(Boolean isPermisoActualizarAutoriPagoOrdenCompra) {
		this.isPermisoActualizarAutoriPagoOrdenCompra = isPermisoActualizarAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoEliminarAutoriPagoOrdenCompra() {
		return isPermisoEliminarAutoriPagoOrdenCompra;
	}

	public void setIsPermisoEliminarAutoriPagoOrdenCompra(Boolean isPermisoEliminarAutoriPagoOrdenCompra) {
		this.isPermisoEliminarAutoriPagoOrdenCompra = isPermisoEliminarAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoGuardarCambiosAutoriPagoOrdenCompra() {
		return isPermisoGuardarCambiosAutoriPagoOrdenCompra;
	}

	public void setIsPermisoGuardarCambiosAutoriPagoOrdenCompra(Boolean isPermisoGuardarCambiosAutoriPagoOrdenCompra) {
		this.isPermisoGuardarCambiosAutoriPagoOrdenCompra = isPermisoGuardarCambiosAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoConsultaAutoriPagoOrdenCompra() {
		return isPermisoConsultaAutoriPagoOrdenCompra;
	}

	public void setIsPermisoConsultaAutoriPagoOrdenCompra(Boolean isPermisoConsultaAutoriPagoOrdenCompra) {
		this.isPermisoConsultaAutoriPagoOrdenCompra = isPermisoConsultaAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoBusquedaAutoriPagoOrdenCompra() {
		return isPermisoBusquedaAutoriPagoOrdenCompra;
	}

	public void setIsPermisoBusquedaAutoriPagoOrdenCompra(Boolean isPermisoBusquedaAutoriPagoOrdenCompra) {
		this.isPermisoBusquedaAutoriPagoOrdenCompra = isPermisoBusquedaAutoriPagoOrdenCompra;
	}

	public Boolean getIsPermisoReporteAutoriPagoOrdenCompra() {
		return isPermisoReporteAutoriPagoOrdenCompra;
	}

	public void setIsPermisoReporteAutoriPagoOrdenCompra(Boolean isPermisoReporteAutoriPagoOrdenCompra) {
		this.isPermisoReporteAutoriPagoOrdenCompra = isPermisoReporteAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioAutoriPagoOrdenCompra() {
		return isPermisoPaginacionMedioAutoriPagoOrdenCompra;
	}

	public void setIsPermisoPaginacionMedioAutoriPagoOrdenCompra(Boolean isPermisoPaginacionMedioAutoriPagoOrdenCompra) {
		this.isPermisoPaginacionMedioAutoriPagoOrdenCompra = isPermisoPaginacionMedioAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoAutoriPagoOrdenCompra() {
		return isPermisoPaginacionTodoAutoriPagoOrdenCompra;
	}

	public void setIsPermisoPaginacionTodoAutoriPagoOrdenCompra(Boolean isPermisoPaginacionTodoAutoriPagoOrdenCompra) {
		this.isPermisoPaginacionTodoAutoriPagoOrdenCompra = isPermisoPaginacionTodoAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoAutoriPagoOrdenCompra() {
		return isPermisoPaginacionAltoAutoriPagoOrdenCompra;
	}

	public void setIsPermisoPaginacionAltoAutoriPagoOrdenCompra(Boolean isPermisoPaginacionAltoAutoriPagoOrdenCompra) {
		this.isPermisoPaginacionAltoAutoriPagoOrdenCompra = isPermisoPaginacionAltoAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoCopiarAutoriPagoOrdenCompra() {
		return isPermisoCopiarAutoriPagoOrdenCompra;
	}

	public void setIsPermisoCopiarAutoriPagoOrdenCompra(Boolean isPermisoCopiarAutoriPagoOrdenCompra) {
		this.isPermisoCopiarAutoriPagoOrdenCompra = isPermisoCopiarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoVerFormAutoriPagoOrdenCompra() {
		return isPermisoVerFormAutoriPagoOrdenCompra;
	}

	public void setIsPermisoVerFormAutoriPagoOrdenCompra(Boolean isPermisoVerFormAutoriPagoOrdenCompra) {
		this.isPermisoVerFormAutoriPagoOrdenCompra = isPermisoVerFormAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoDuplicarAutoriPagoOrdenCompra() {
		return isPermisoDuplicarAutoriPagoOrdenCompra;
	}

	public void setIsPermisoDuplicarAutoriPagoOrdenCompra(Boolean isPermisoDuplicarAutoriPagoOrdenCompra) {
		this.isPermisoDuplicarAutoriPagoOrdenCompra = isPermisoDuplicarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsPermisoOrdenAutoriPagoOrdenCompra() {
		return isPermisoOrdenAutoriPagoOrdenCompra;
	}

	public void setIsPermisoOrdenAutoriPagoOrdenCompra(Boolean isPermisoOrdenAutoriPagoOrdenCompra) {
		this.isPermisoOrdenAutoriPagoOrdenCompra = isPermisoOrdenAutoriPagoOrdenCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaNuevoAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaNuevoAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra = isVisibilidadCeldaNuevoAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaDuplicarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra = isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaCopiarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaCopiarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaCopiarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra = isVisibilidadCeldaCopiarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaVerFormAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaVerFormAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaVerFormAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra = isVisibilidadCeldaVerFormAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaOrdenAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaOrdenAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaOrdenAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra = isVisibilidadCeldaOrdenAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra = isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaModificarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaModificarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaModificarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra = isVisibilidadCeldaModificarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaActualizarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaActualizarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaActualizarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra = isVisibilidadCeldaActualizarAutoriPagoOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaEliminarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaEliminarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaEliminarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra = isVisibilidadCeldaEliminarAutoriPagoOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaCancelarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaCancelarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaCancelarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra = isVisibilidadCeldaCancelarAutoriPagoOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaGuardarAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaGuardarAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra = isVisibilidadCeldaGuardarAutoriPagoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra() {
		return isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra(Boolean isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra) {
		this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra = isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra;
	}
		
	public AutoriPagoOrdenCompraSessionBean getautoripagoordencompraSessionBean() {
		return this.autoripagoordencompraSessionBean;
	}
	
	public void setautoripagoordencompraSessionBean(AutoriPagoOrdenCompraSessionBean autoripagoordencompraSessionBean) {
		this.autoripagoordencompraSessionBean=autoripagoordencompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdBanco() {
		return this.isVisibilidadFK_IdBanco;
	}

	public void setisVisibilidadFK_IdBanco(Boolean isVisibilidadFK_IdBanco) {
		this.isVisibilidadFK_IdBanco=isVisibilidadFK_IdBanco;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCuentaBanco() {
		return this.isVisibilidadFK_IdCuentaBanco;
	}

	public void setisVisibilidadFK_IdCuentaBanco(Boolean isVisibilidadFK_IdCuentaBanco) {
		this.isVisibilidadFK_IdCuentaBanco=isVisibilidadFK_IdCuentaBanco;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdOrdenCompra() {
		return this.isVisibilidadFK_IdOrdenCompra;
	}

	public void setisVisibilidadFK_IdOrdenCompra(Boolean isVisibilidadFK_IdOrdenCompra) {
		this.isVisibilidadFK_IdOrdenCompra=isVisibilidadFK_IdOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra)throws Exception {
		try {
			
				this.setActualParaGuardarTipoCambioForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarMonedaForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarClienteForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarEmpresaForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarSucursalForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarOrdenCompraForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarTransaccionForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarModuloForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarEjercicioForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarUsuarioForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarAsientoContableForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarBancoForeignKey(autoripagoordencompra,null);
				this.setActualParaGuardarCuentaBancoForeignKey(autoripagoordencompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(AutoriPagoOrdenCompra autoripagoordencompra,AutoriPagoOrdenCompra autoripagoordencompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalAutoriPagoOrdenCompra(autoripagoordencompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		autoripagoordencompraAux.setId(autoripagoordencompra.getId());
		autoripagoordencompraAux.setVersionRow(autoripagoordencompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessAutoriPagoOrdenCompra();
		
			int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = autoripagoordencompraValidator.getInvalidValues(this.autoripagoordencompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			autoripagoordencompraLogic.setDatosCliente(datosCliente);
			autoripagoordencompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				autoripagoordencompraAux=new  AutoriPagoOrdenCompra();
				
				autoripagoordencompraAux.setIsNew(true);
				autoripagoordencompraAux.setIsChanged(true);
				
				autoripagoordencompraAux.setAutoriPagoOrdenCompraOriginal(this.autoripagoordencompra);
				
				autoripagoordencompraAux.setId(this.autoripagoordencompra.getId());	
				autoripagoordencompraAux.setVersionRow(this.autoripagoordencompra.getVersionRow());	
				autoripagoordencompraAux.setid_tipo_cambio(this.autoripagoordencompra.getid_tipo_cambio());	
				autoripagoordencompraAux.setid_moneda(this.autoripagoordencompra.getid_moneda());	
				autoripagoordencompraAux.setid_cliente(this.autoripagoordencompra.getid_cliente());	
				autoripagoordencompraAux.setid_empresa(this.autoripagoordencompra.getid_empresa());	
				autoripagoordencompraAux.setid_sucursal(this.autoripagoordencompra.getid_sucursal());	
				autoripagoordencompraAux.setid_orden_compra(this.autoripagoordencompra.getid_orden_compra());	
				autoripagoordencompraAux.setid_transaccion(this.autoripagoordencompra.getid_transaccion());	
				autoripagoordencompraAux.setid_modulo(this.autoripagoordencompra.getid_modulo());	
				autoripagoordencompraAux.setid_ejercicio(this.autoripagoordencompra.getid_ejercicio());	
				autoripagoordencompraAux.setid_usuario(this.autoripagoordencompra.getid_usuario());	
				autoripagoordencompraAux.setid_asiento_contable(this.autoripagoordencompra.getid_asiento_contable());	
				autoripagoordencompraAux.setid_banco(this.autoripagoordencompra.getid_banco());	
				autoripagoordencompraAux.setid_cuenta_banco(this.autoripagoordencompra.getid_cuenta_banco());	
				autoripagoordencompraAux.setnumero_comprobante(this.autoripagoordencompra.getnumero_comprobante());	
				autoripagoordencompraAux.setfecha(this.autoripagoordencompra.getfecha());	
				autoripagoordencompraAux.setfecha_autori(this.autoripagoordencompra.getfecha_autori());	
				autoripagoordencompraAux.settotal(this.autoripagoordencompra.gettotal());	
				autoripagoordencompraAux.setfecha_servidor(this.autoripagoordencompra.getfecha_servidor());	
				autoripagoordencompraAux.setcodigo_asiento(this.autoripagoordencompra.getcodigo_asiento());	
				autoripagoordencompraAux.setfecha_asiento(this.autoripagoordencompra.getfecha_asiento());	
				autoripagoordencompraAux.setvalor_asiento(this.autoripagoordencompra.getvalor_asiento());	
				autoripagoordencompraAux.settotal_saldo(this.autoripagoordencompra.gettotal_saldo());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.saveAutoriPagoOrdenCompras();//WithConnection
						//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);
					
					this.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								autoripagoordencompraLogic.saveAutoriPagoOrdenCompraRelaciones(autoripagoordencompraAux);//WithConnection
								//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				autoripagoordencompraAux=new  AutoriPagoOrdenCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado() 
					|| (this.autoripagoordencompraSessionBean.getEsGuardarRelacionado() && this.autoripagoordencompra.getId()>=0)) {
						
					autoripagoordencompraAux.setIsNew(false);
				}
				
				autoripagoordencompraAux.setIsDeleted(false);
			
				autoripagoordencompraAux.setId(this.autoripagoordencompra.getId());	
				autoripagoordencompraAux.setVersionRow(this.autoripagoordencompra.getVersionRow());	
				autoripagoordencompraAux.setid_tipo_cambio(this.autoripagoordencompra.getid_tipo_cambio());	
				autoripagoordencompraAux.setid_moneda(this.autoripagoordencompra.getid_moneda());	
				autoripagoordencompraAux.setid_cliente(this.autoripagoordencompra.getid_cliente());	
				autoripagoordencompraAux.setid_empresa(this.autoripagoordencompra.getid_empresa());	
				autoripagoordencompraAux.setid_sucursal(this.autoripagoordencompra.getid_sucursal());	
				autoripagoordencompraAux.setid_orden_compra(this.autoripagoordencompra.getid_orden_compra());	
				autoripagoordencompraAux.setid_transaccion(this.autoripagoordencompra.getid_transaccion());	
				autoripagoordencompraAux.setid_modulo(this.autoripagoordencompra.getid_modulo());	
				autoripagoordencompraAux.setid_ejercicio(this.autoripagoordencompra.getid_ejercicio());	
				autoripagoordencompraAux.setid_usuario(this.autoripagoordencompra.getid_usuario());	
				autoripagoordencompraAux.setid_asiento_contable(this.autoripagoordencompra.getid_asiento_contable());	
				autoripagoordencompraAux.setid_banco(this.autoripagoordencompra.getid_banco());	
				autoripagoordencompraAux.setid_cuenta_banco(this.autoripagoordencompra.getid_cuenta_banco());	
				autoripagoordencompraAux.setnumero_comprobante(this.autoripagoordencompra.getnumero_comprobante());	
				autoripagoordencompraAux.setfecha(this.autoripagoordencompra.getfecha());	
				autoripagoordencompraAux.setfecha_autori(this.autoripagoordencompra.getfecha_autori());	
				autoripagoordencompraAux.settotal(this.autoripagoordencompra.gettotal());	
				autoripagoordencompraAux.setfecha_servidor(this.autoripagoordencompra.getfecha_servidor());	
				autoripagoordencompraAux.setcodigo_asiento(this.autoripagoordencompra.getcodigo_asiento());	
				autoripagoordencompraAux.setfecha_asiento(this.autoripagoordencompra.getfecha_asiento());	
				autoripagoordencompraAux.setvalor_asiento(this.autoripagoordencompra.getvalor_asiento());	
				autoripagoordencompraAux.settotal_saldo(this.autoripagoordencompra.gettotal_saldo());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.saveAutoriPagoOrdenCompras();//WithConnection
						//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);
					
					this.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								autoripagoordencompraLogic.saveAutoriPagoOrdenCompraRelaciones(autoripagoordencompraAux);//WithConnection
								//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.autoripagoordencompra,autoripagoordencompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				autoripagoordencompraAux=new  AutoriPagoOrdenCompra();
				
				autoripagoordencompraAux.setIsNew(false);
				autoripagoordencompraAux.setIsChanged(false);
				
				autoripagoordencompraAux.setIsDeleted(true);
				
				autoripagoordencompraAux.setId(this.autoripagoordencompra.getId());	
				autoripagoordencompraAux.setVersionRow(this.autoripagoordencompra.getVersionRow());	
				autoripagoordencompraAux.setid_tipo_cambio(this.autoripagoordencompra.getid_tipo_cambio());	
				autoripagoordencompraAux.setid_moneda(this.autoripagoordencompra.getid_moneda());	
				autoripagoordencompraAux.setid_cliente(this.autoripagoordencompra.getid_cliente());	
				autoripagoordencompraAux.setid_empresa(this.autoripagoordencompra.getid_empresa());	
				autoripagoordencompraAux.setid_sucursal(this.autoripagoordencompra.getid_sucursal());	
				autoripagoordencompraAux.setid_orden_compra(this.autoripagoordencompra.getid_orden_compra());	
				autoripagoordencompraAux.setid_transaccion(this.autoripagoordencompra.getid_transaccion());	
				autoripagoordencompraAux.setid_modulo(this.autoripagoordencompra.getid_modulo());	
				autoripagoordencompraAux.setid_ejercicio(this.autoripagoordencompra.getid_ejercicio());	
				autoripagoordencompraAux.setid_usuario(this.autoripagoordencompra.getid_usuario());	
				autoripagoordencompraAux.setid_asiento_contable(this.autoripagoordencompra.getid_asiento_contable());	
				autoripagoordencompraAux.setid_banco(this.autoripagoordencompra.getid_banco());	
				autoripagoordencompraAux.setid_cuenta_banco(this.autoripagoordencompra.getid_cuenta_banco());	
				autoripagoordencompraAux.setnumero_comprobante(this.autoripagoordencompra.getnumero_comprobante());	
				autoripagoordencompraAux.setfecha(this.autoripagoordencompra.getfecha());	
				autoripagoordencompraAux.setfecha_autori(this.autoripagoordencompra.getfecha_autori());	
				autoripagoordencompraAux.settotal(this.autoripagoordencompra.gettotal());	
				autoripagoordencompraAux.setfecha_servidor(this.autoripagoordencompra.getfecha_servidor());	
				autoripagoordencompraAux.setcodigo_asiento(this.autoripagoordencompra.getcodigo_asiento());	
				autoripagoordencompraAux.setfecha_asiento(this.autoripagoordencompra.getfecha_asiento());	
				autoripagoordencompraAux.setvalor_asiento(this.autoripagoordencompra.getvalor_asiento());	
				autoripagoordencompraAux.settotal_saldo(this.autoripagoordencompra.gettotal_saldo());	
				
				if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.autoripagoordencompraAux.getId()>=0) {	
						this.autoripagoordencomprasEliminados.add(autoripagoordencompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.saveAutoriPagoOrdenCompras();//WithConnection
						//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								autoripagoordencompraLogic.saveAutoriPagoOrdenCompraRelaciones(autoripagoordencompraAux);//WithConnection
								//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(autoripagoordencompraAux,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(autoripagoordencompraAux,autoripagoordencompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(this.autoripagoordencomprasEliminados);
					
					autoripagoordencompraLogic.saveAutoriPagoOrdenCompras();//WithConnection
					//autoripagoordencompraLogic.getSetVersionRowAutoriPagoOrdenCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra();
				
				this.autoripagoordencomprasEliminados= new ArrayList<AutoriPagoOrdenCompra>();		
			}
			
			if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Autori Pago Orden Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.autoripagoordencompra=autoripagoordencompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessAutoriPagoOrdenCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(AutoriPagoOrdenCompra autoripagoordencompraLocal) throws Exception {
		
		if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(AutoriPagoOrdenCompra autoripagoordencompraLocal) throws Exception {	
		if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				autoripagoordencompraLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				autoripagoordencompraLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				autoripagoordencompraLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				autoripagoordencompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				autoripagoordencompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(OrdenCompraDetalleFormJInternalFrame.class)) {
				OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrameLocal=(OrdenCompraBeanSwingJInternalFrame) ((OrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.getordencompra(),true);
				ordencompraBeanSwingJInternalFrameLocal.actualizarLista(ordencompraBeanSwingJInternalFrameLocal.ordencompra,this.ordencomprasForeignKey);

				ordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				autoripagoordencompraLocal.setOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey("Formulario");
				this.setActualOrdenCompraForeignKey(ordencompraBeanSwingJInternalFrameLocal.ordencompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				autoripagoordencompraLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				autoripagoordencompraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				autoripagoordencompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				autoripagoordencompraLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				autoripagoordencompraLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BancoDetalleFormJInternalFrame.class)) {
				BancoBeanSwingJInternalFrame bancoBeanSwingJInternalFrameLocal=(BancoBeanSwingJInternalFrame) ((BancoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bancoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBanco(bancoBeanSwingJInternalFrameLocal.getbanco(),true);
				bancoBeanSwingJInternalFrameLocal.actualizarLista(bancoBeanSwingJInternalFrameLocal.banco,this.bancosForeignKey);

				bancoBeanSwingJInternalFrameLocal.actualizarRelaciones(bancoBeanSwingJInternalFrameLocal.banco);

				autoripagoordencompraLocal.setBanco(bancoBeanSwingJInternalFrameLocal.banco);

				this.addItemDefectoCombosForeignKeyBanco();
				this.cargarCombosFrameBancosForeignKey("Formulario");
				this.setActualBancoForeignKey(bancoBeanSwingJInternalFrameLocal.banco.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaBancoDetalleFormJInternalFrame.class)) {
				CuentaBancoBeanSwingJInternalFrame cuentabancoBeanSwingJInternalFrameLocal=(CuentaBancoBeanSwingJInternalFrame) ((CuentaBancoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentabancoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaBanco(cuentabancoBeanSwingJInternalFrameLocal.getcuentabanco(),true);
				cuentabancoBeanSwingJInternalFrameLocal.actualizarLista(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco,this.cuentabancosForeignKey);

				cuentabancoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco);

				autoripagoordencompraLocal.setCuentaBanco(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco);

				this.addItemDefectoCombosForeignKeyCuentaBanco();
				this.cargarCombosFrameCuentaBancosForeignKey("Formulario");
				this.setActualCuentaBancoForeignKey(cuentabancoBeanSwingJInternalFrameLocal.cuentabanco.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarAutoriPagoOrdenCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = autoripagoordencompraValidator.getInvalidValues(this.autoripagoordencompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(AutoriPagoOrdenCompra autoripagoordencompra,List<AutoriPagoOrdenCompra> autoripagoordencompras) throws Exception {
		try	{		
			AutoriPagoOrdenCompraConstantesFunciones.actualizarLista(autoripagoordencompra,autoripagoordencompras,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(AutoriPagoOrdenCompra autoripagoordencompra,List<AutoriPagoOrdenCompra> autoripagoordencompras) throws Exception {
		try	{			
			AutoriPagoOrdenCompraConstantesFunciones.actualizarSelectedLista(autoripagoordencompra,autoripagoordencompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<AutoriPagoOrdenCompra> autoripagoordencomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				autoripagoordencomprasLocal=this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				autoripagoordencomprasLocal=this.autoripagoordencompras;
			}
			//ARCHITECTURE
		
			for(AutoriPagoOrdenCompra autoripagoordencompraLocal:autoripagoordencomprasLocal) {
				if(this.permiteMantenimiento(autoripagoordencompraLocal) && autoripagoordencompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.getAutoriPagoOrdenCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_tipo_cambioAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_monedaAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_clienteAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_empresaAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_sucursalAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_orden_compraAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_transaccionAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_moduloAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_ejercicioAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_usuarioAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_asiento_contableAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDBANCO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_bancoAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.IDCUENTABANCO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_cuenta_bancoAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelnumero_comprobanteAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfechaAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.FECHAAUTORI)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_autoriAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotalAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.FECHASERVIDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_servidorAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.CODIGOASIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelcodigo_asientoAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.FECHAASIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_asientoAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.VALORASIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelvalor_asientoAutoriPagoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AutoriPagoOrdenCompraConstantesFunciones.TOTALSALDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotal_saldoAutoriPagoOrdenCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_tipo_cambioAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_monedaAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_clienteAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_empresaAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_sucursalAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_orden_compraAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_transaccionAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_moduloAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_ejercicioAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_usuarioAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_asiento_contableAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_bancoAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelid_cuenta_bancoAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelnumero_comprobanteAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfechaAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_autoriAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotalAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_servidorAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelcodigo_asientoAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_asientoAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelvalor_asientoAutoriPagoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotal_saldoAutoriPagoOrdenCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoAutoriPagoOrdenCompra--;	
		
		
		this.autoripagoordencompraAux=new AutoriPagoOrdenCompra();
		
		this.autoripagoordencompraAux.setId(this.iIdNuevoAutoriPagoOrdenCompra);
		this.autoripagoordencompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().add(this.autoripagoordencompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.autoripagoordencompras.add(this.autoripagoordencompraAux);
		}
		//ARCHITECTURE
		
		this.autoripagoordencompra=this.autoripagoordencompraAux;
		
		if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompra);
			this.setVariablesObjetoActualToFormularioForeignKeyAutoriPagoOrdenCompra(this.autoripagoordencompra);
		}
				
		//this.setDefaultControlesAutoriPagoOrdenCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyAutoriPagoOrdenCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyAutoriPagoOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyAutoriPagoOrdenCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompraBean,this.autoripagoordencompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
			classes=AutoriPagoOrdenCompraConstantesFunciones.getClassesRelationshipsOfAutoriPagoOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.procesarEventosAutoriPagoOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this.autoripagoordencompra,this.autoripagoordencompraParameterGeneral,this.isEsNuevoAutoriPagoOrdenCompra,classes);//this.autoripagoordencompraLogic.getAutoriPagoOrdenCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral,this.autoripagoordencompraBean,false);
		
		if(this.autoripagoordencompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra());
		}
		
		if(this.autoripagoordencompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra(),classes);//this.autoripagoordencompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyAutoriPagoOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyAutoriPagoOrdenCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.RecargarFormAutoriPagoOrdenCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
						
			if(autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();
			}
			
			this.actualizarVisualTableDatosAutoriPagoOrdenCompra();
			
			this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoAutoriPagoOrdenCompra(), this.getIndiceNuevoAutoriPagoOrdenCompra());
			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
						
			this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesAutoriPagoOrdenCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarnumero_comprobanteAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarfechaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarfecha_autoriAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activartotalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarfecha_servidorAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarcodigo_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarfecha_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarvalor_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activartotal_saldoAutoriPagoOrdenCompra);	
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_tipo_cambioAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_monedaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_clienteAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_empresaAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_sucursalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_orden_compraAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_transaccionAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_moduloAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_ejercicioAutoriPagoOrdenCompra);//
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_usuarioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_asiento_contableAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_bancoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setEnabled(isHabilitar && this.autoripagoordencompraConstantesFunciones.activarid_cuenta_bancoAutoriPagoOrdenCompra);
	};
	
	public void setDefaultControlesAutoriPagoOrdenCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoAutoriPagoOrdenCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.autoripagoordencompraSessionBean.setConGuardarRelaciones(true);			
			this.autoripagoordencompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.setVisible(true);
			
					
		} else {
			//this.autoripagoordencompraSessionBean.setConGuardarRelaciones(false);			
			this.autoripagoordencompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoAutoriPagoOrdenCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				if(autoripagoordencompraAux.getId().equals(this.iIdNuevoAutoriPagoOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompras) {
				if(autoripagoordencompraAux.getId().equals(this.iIdNuevoAutoriPagoOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				if(autoripagoordencompraAux.getId().equals(autoripagoordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompras) {
				if(autoripagoordencompraAux.getId().equals(autoripagoordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				if(autoripagoordencompraAux.getAutoriPagoOrdenCompraOriginal().getId().equals(autoripagoordencompraOriginal.getId())) {
					existe=true;
					autoripagoordencompraOriginal.setId(autoripagoordencompraAux.getId());
					autoripagoordencompraOriginal.setVersionRow(autoripagoordencompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompras) {
				if(autoripagoordencompraAux.getAutoriPagoOrdenCompraOriginal().getId().equals(autoripagoordencompraOriginal.getId())) {
					existe=true;
					autoripagoordencompraOriginal.setId(autoripagoordencompraAux.getId());
					autoripagoordencompraOriginal.setVersionRow(autoripagoordencompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosAutoriPagoOrdenCompra(Boolean esParaCancelar) throws Exception {
		autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
		autoripagoordencompraAux=new AutoriPagoOrdenCompra();
		
		if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
					if(autoripagoordencompraAux.getId()<0) {
						autoripagoordencomprasAux.add(autoripagoordencompraAux);
					}		
				}
				this.iIdNuevoAutoriPagoOrdenCompra=0L;
				this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().removeAll(autoripagoordencomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompras) {
					if(autoripagoordencompraAux.getId()<0) {
						autoripagoordencomprasAux.add(autoripagoordencompraAux);
					}		
				}
				this.iIdNuevoAutoriPagoOrdenCompra=0L;
				this.autoripagoordencompras.removeAll(autoripagoordencomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoAutoriPagoOrdenCompra 
					&& this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()>0
					) {
					autoripagoordencompraAux=this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().get(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size() - 1);
				
					if(autoripagoordencompraAux.getId()<0) {
						this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().remove(autoripagoordencompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoAutoriPagoOrdenCompra && this.autoripagoordencompras.size()>0) {
					autoripagoordencompraAux=this.autoripagoordencompras.get(this.autoripagoordencompras.size() - 1);
				
					if(autoripagoordencompraAux.getId()<0) {
						this.autoripagoordencompras.remove(autoripagoordencompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoAutoriPagoOrdenCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(autoripagoordencompra.getId()<0) {
				this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().remove(this.autoripagoordencompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(autoripagoordencompra.getId()<0) {
				this.autoripagoordencompras.remove(this.autoripagoordencompra);
			}
		}			
	}
	
	public void setEstadosInicialesAutoriPagoOrdenCompra(List<AutoriPagoOrdenCompra> autoripagoordencomprasAux) throws Exception {
		AutoriPagoOrdenCompraConstantesFunciones.setEstadosInicialesAutoriPagoOrdenCompra(autoripagoordencomprasAux);
	}
	
	public void setEstadosInicialesAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompraAux) throws Exception {
		AutoriPagoOrdenCompraConstantesFunciones.setEstadosInicialesAutoriPagoOrdenCompra(autoripagoordencompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarAutoriPagoOrdenCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarAutoriPagoOrdenCompraActual()) {
				if(!this.isEsNuevoAutoriPagoOrdenCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoAutoriPagoOrdenCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarAutoriPagoOrdenCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Autori Pago Orden Compra ?", "MANTENIMIENTO DE Autori Pago Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(AutoriPagoOrdenCompra autoripagoordencompra) throws Exception {
		AutoriPagoOrdenCompraConstantesFunciones.seleccionarAsignar(this.autoripagoordencompra,autoripagoordencompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarAutoriPagoOrdenCompra=this.isPermisoActualizarOriginalAutoriPagoOrdenCompra;
			
			
			this.seleccionarAsignar(autoripagoordencompra);
			
			

			idTipoCambioActual=autoripagoordencompra.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idClienteActual=autoripagoordencompra.getid_cliente();
			this.seleccionarClienteActual();

			idAsientoContableActual=autoripagoordencompra.getid_asiento_contable();
			this.seleccionarAsientoContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AutoriPagoOrdenCompraConstantesFunciones.quitarEspaciosAutoriPagoOrdenCompra(this.autoripagoordencompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.autoripagoordencompraSessionBean.setsFuncionBusquedaRapida(this.autoripagoordencompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoAutoriPagoOrdenCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosAutoriPagoOrdenCompra(esParaCancelar);				
				this.cancelarNuevoAutoriPagoOrdenCompra(esParaCancelar);								
			}
			
			this.autoripagoordencompra=new AutoriPagoOrdenCompra();
			
			this.inicializarAutoriPagoOrdenCompra();
			
			this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarAutoriPagoOrdenCompra() throws Exception {
		try {
			AutoriPagoOrdenCompraConstantesFunciones.inicializarAutoriPagoOrdenCompra(this.autoripagoordencompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteAutoriPagoOrdenCompras(String sAccionBusqueda,List<AutoriPagoOrdenCompra> autoripagoordencomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="AutoriPagoOrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="AutoriPagoOrdenCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("AutoriPagoOrdenCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="AutoriPagoOrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Autori Pago Orden Compras");		
		parameters.put("busquedapor", AutoriPagoOrdenCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceAutoriPagoOrdenCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			AutoriPagoOrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			AutoriPagoOrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceAutoriPagoOrdenCompra=new JRBeanArrayDataSource(AutoriPagoOrdenCompraJInternalFrame.TraerAutoriPagoOrdenCompraBeans(autoripagoordencomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceAutoriPagoOrdenCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+AutoriPagoOrdenCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(AutoriPagoOrdenCompraBean.TraerAutoriPagoOrdenCompraBeans(autoripagoordencomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompraActionPerformed(null);
					//this.generarExcelReporteAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesAutoriPagoOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,autoripagoordencomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteAutoriPagoOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<AutoriPagoOrdenCompra> autoripagoordencomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AutoriPagoOrdenCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAutoriPagoOrdenCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(AutoriPagoOrdenCompra autoripagoordencompra : autoripagoordencomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			AutoriPagoOrdenCompraConstantesFunciones.generarExcelReporteDataAutoriPagoOrdenCompra("NORMAL",row,workbook,autoripagoordencompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderAutoriPagoOrdenCompra(String sTipo,Row row,Workbook workbook) {
		
		AutoriPagoOrdenCompraConstantesFunciones.generarExcelReporteHeaderAutoriPagoOrdenCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalAutoriPagoOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<AutoriPagoOrdenCompra> autoripagoordencomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AutoriPagoOrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(AutoriPagoOrdenCompra autoripagoordencompra : autoripagoordencomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.getAutoriPagoOrdenCompraDescripcion(autoripagoordencompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getbanco_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getcuentabanco_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getnumero_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getfecha_autori());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getfecha_servidor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getcodigo_asiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getfecha_asiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.getvalor_asiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(autoripagoordencompra.gettotal_saldo());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesAutoriPagoOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<AutoriPagoOrdenCompra> autoripagoordencomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<AutoriPagoOrdenCompra> autoripagoordencomprasRespaldo=null;
		
		classes=AutoriPagoOrdenCompraConstantesFunciones.getClassesRelationshipsOfAutoriPagoOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.autoripagoordencompraLogic.setDatosCliente(this.datosCliente);
		this.autoripagoordencompraLogic.setDatosDeep(this.datosDeep);
		this.autoripagoordencompraLogic.setIsConDeep(true);
		
		autoripagoordencomprasRespaldo=this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras();
		
		this.autoripagoordencompraLogic.setAutoriPagoOrdenCompras(autoripagoordencomprasParaReportes);	
		this.autoripagoordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		autoripagoordencomprasParaReportes=this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras();
		this.autoripagoordencompraLogic.setAutoriPagoOrdenCompras(autoripagoordencomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AutoriPagoOrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAutoriPagoOrdenCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(AutoriPagoOrdenCompra autoripagoordencompra : autoripagoordencomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderAutoriPagoOrdenCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			AutoriPagoOrdenCompraConstantesFunciones.generarExcelReporteDataAutoriPagoOrdenCompra("NORMAL",row,workbook,autoripagoordencompra,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.getAutoriPagoOrdenCompraDescripcion(autoripagoordencompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessAutoriPagoOrdenCompra() throws Exception {		
		this.startProcessAutoriPagoOrdenCompra(true);
	}
	
	public void startProcessAutoriPagoOrdenCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasAutoriPagoOrdenCompra ,this.jPanelParametrosReportesAutoriPagoOrdenCompra, this.jScrollPanelDatosAutoriPagoOrdenCompra,this.jPanelPaginacionAutoriPagoOrdenCompra, this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra, this.jPanelAccionesAutoriPagoOrdenCompra,this.jPanelAccionesFormularioAutoriPagoOrdenCompra,this.jmenuBarAutoriPagoOrdenCompra,this.jmenuBarDetalleAutoriPagoOrdenCompra,this.jTtoolBarAutoriPagoOrdenCompra,this.jTtoolBarDetalleAutoriPagoOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasAutoriPagoOrdenCompra=this.jTabbedPaneBusquedasAutoriPagoOrdenCompra; 
		
		final JPanel jPanelParametrosReportesAutoriPagoOrdenCompra=this.jPanelParametrosReportesAutoriPagoOrdenCompra;
		//final JScrollPane jScrollPanelDatosAutoriPagoOrdenCompra=this.jScrollPanelDatosAutoriPagoOrdenCompra;
		final JTable jTableDatosAutoriPagoOrdenCompra=this.jTableDatosAutoriPagoOrdenCompra;		
		final JPanel jPanelPaginacionAutoriPagoOrdenCompra=this.jPanelPaginacionAutoriPagoOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionAutoriPagoOrdenCompra=this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra;
		final JPanel jPanelAccionesAutoriPagoOrdenCompra=this.jPanelAccionesAutoriPagoOrdenCompra;
		
		JPanel jPanelCamposAuxiliarAutoriPagoOrdenCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			jPanelCamposAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelCamposAutoriPagoOrdenCompra;
			jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelAccionesFormularioAutoriPagoOrdenCompra;
		}
		
		final JPanel jPanelCamposAutoriPagoOrdenCompra=jPanelCamposAuxiliarAutoriPagoOrdenCompra;
		final JPanel jPanelAccionesFormularioAutoriPagoOrdenCompra=jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra;
		
		
		final JMenuBar jmenuBarAutoriPagoOrdenCompra=this.jmenuBarAutoriPagoOrdenCompra;
		final JToolBar jTtoolBarAutoriPagoOrdenCompra=this.jTtoolBarAutoriPagoOrdenCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jmenuBarDetalleAutoriPagoOrdenCompra;
			jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTtoolBarDetalleAutoriPagoOrdenCompra;
		}
		
		final JMenuBar jmenuBarDetalleAutoriPagoOrdenCompra=jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra;
		final JToolBar jTtoolBarDetalleAutoriPagoOrdenCompra=jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAutoriPagoOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAutoriPagoOrdenCompra;
			processRunnable.jTableDatos=jTableDatosAutoriPagoOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposAutoriPagoOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionAutoriPagoOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesAutoriPagoOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAutoriPagoOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarAutoriPagoOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAutoriPagoOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarAutoriPagoOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAutoriPagoOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAutoriPagoOrdenCompra ,jPanelParametrosReportesAutoriPagoOrdenCompra,jTableDatosAutoriPagoOrdenCompra, /*jScrollPanelDatosAutoriPagoOrdenCompra,*/jPanelCamposAutoriPagoOrdenCompra,jPanelPaginacionAutoriPagoOrdenCompra, /*jScrollPanelDatosEdicionAutoriPagoOrdenCompra,*/ jPanelAccionesAutoriPagoOrdenCompra,jPanelAccionesFormularioAutoriPagoOrdenCompra,jmenuBarAutoriPagoOrdenCompra,jmenuBarDetalleAutoriPagoOrdenCompra,jTtoolBarAutoriPagoOrdenCompra,jTtoolBarDetalleAutoriPagoOrdenCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAutoriPagoOrdenCompra ,jPanelParametrosReportesAutoriPagoOrdenCompra, jScrollPanelDatosAutoriPagoOrdenCompra,jPanelPaginacionAutoriPagoOrdenCompra, jScrollPanelDatosEdicionAutoriPagoOrdenCompra, jPanelAccionesAutoriPagoOrdenCompra,jPanelAccionesFormularioAutoriPagoOrdenCompra,jmenuBarAutoriPagoOrdenCompra,jmenuBarDetalleAutoriPagoOrdenCompra,jTtoolBarAutoriPagoOrdenCompra,jTtoolBarDetalleAutoriPagoOrdenCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessAutoriPagoOrdenCompra() {// throws Exception 
		this.finishProcessAutoriPagoOrdenCompra(true);
	}
	
	public void finishProcessAutoriPagoOrdenCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasAutoriPagoOrdenCompra ,this.jPanelParametrosReportesAutoriPagoOrdenCompra, this.jScrollPanelDatosAutoriPagoOrdenCompra,this.jPanelPaginacionAutoriPagoOrdenCompra, this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra, this.jPanelAccionesAutoriPagoOrdenCompra,this.jPanelAccionesFormularioAutoriPagoOrdenCompra,this.jmenuBarAutoriPagoOrdenCompra,this.jmenuBarDetalleAutoriPagoOrdenCompra,this.jTtoolBarAutoriPagoOrdenCompra,this.jTtoolBarDetalleAutoriPagoOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasAutoriPagoOrdenCompra=this.jTabbedPaneBusquedasAutoriPagoOrdenCompra; 
		
		final JPanel jPanelParametrosReportesAutoriPagoOrdenCompra=this.jPanelParametrosReportesAutoriPagoOrdenCompra;
		//final JScrollPane jScrollPanelDatosAutoriPagoOrdenCompra=this.jScrollPanelDatosAutoriPagoOrdenCompra;
		final JTable jTableDatosAutoriPagoOrdenCompra=this.jTableDatosAutoriPagoOrdenCompra;		
		final JPanel jPanelPaginacionAutoriPagoOrdenCompra=this.jPanelPaginacionAutoriPagoOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionAutoriPagoOrdenCompra=this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra;
		final JPanel jPanelAccionesAutoriPagoOrdenCompra=this.jPanelAccionesAutoriPagoOrdenCompra;
		
		JPanel jPanelCamposAuxiliarAutoriPagoOrdenCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			jPanelCamposAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelCamposAutoriPagoOrdenCompra;
			jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelAccionesFormularioAutoriPagoOrdenCompra;
		}
		
		final JPanel jPanelCamposAutoriPagoOrdenCompra=jPanelCamposAuxiliarAutoriPagoOrdenCompra;
		final JPanel jPanelAccionesFormularioAutoriPagoOrdenCompra=jPanelAccionesFormularioAuxiliarAutoriPagoOrdenCompra;
		
		
		final JMenuBar jmenuBarAutoriPagoOrdenCompra=this.jmenuBarAutoriPagoOrdenCompra;		
		final JToolBar jTtoolBarAutoriPagoOrdenCompra=this.jTtoolBarAutoriPagoOrdenCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jmenuBarDetalleAutoriPagoOrdenCompra;
			jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTtoolBarDetalleAutoriPagoOrdenCompra;		
		}
		
		final JMenuBar jmenuBarDetalleAutoriPagoOrdenCompra=jmenuBarDetalleAuxiliarAutoriPagoOrdenCompra;
		final JToolBar jTtoolBarDetalleAutoriPagoOrdenCompra=jTtoolBarDetalleAuxiliarAutoriPagoOrdenCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAutoriPagoOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAutoriPagoOrdenCompra;
			processRunnable.jTableDatos=jTableDatosAutoriPagoOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposAutoriPagoOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionAutoriPagoOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesAutoriPagoOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAutoriPagoOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarAutoriPagoOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAutoriPagoOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarAutoriPagoOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAutoriPagoOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasAutoriPagoOrdenCompra ,jPanelParametrosReportesAutoriPagoOrdenCompra, jTableDatosAutoriPagoOrdenCompra,/*jScrollPanelDatosAutoriPagoOrdenCompra,*/jPanelCamposAutoriPagoOrdenCompra,jPanelPaginacionAutoriPagoOrdenCompra, /*jScrollPanelDatosEdicionAutoriPagoOrdenCompra,*/ jPanelAccionesAutoriPagoOrdenCompra,jPanelAccionesFormularioAutoriPagoOrdenCompra,jmenuBarAutoriPagoOrdenCompra,jmenuBarDetalleAutoriPagoOrdenCompra,jTtoolBarAutoriPagoOrdenCompra,jTtoolBarDetalleAutoriPagoOrdenCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesAutoriPagoOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarAutoriPagoOrdenCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuAutoriPagoOrdenCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarAutoriPagoOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarAutoriPagoOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleAutoriPagoOrdenCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuAutoriPagoOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarAutoriPagoOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleAutoriPagoOrdenCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.autoripagoordencompraConstantesFunciones.getsFinalQueryAutoriPagoOrdenCompra();
		String  finalQueryPaginacionTodos=this.autoripagoordencompraConstantesFunciones.getsFinalQueryAutoriPagoOrdenCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=AutoriPagoOrdenCompraConstantesFunciones.getArrayColumnasGlobalesNoAutoriPagoOrdenCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=AutoriPagoOrdenCompraConstantesFunciones.getArrayColumnasGlobalesAutoriPagoOrdenCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,AutoriPagoOrdenCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.autoripagoordencomprasEliminados= new ArrayList<AutoriPagoOrdenCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessAutoriPagoOrdenCompra();
		
				///*AutoriPagoOrdenCompraSessionBean*/this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			
			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=AutoriPagoOrdenCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=AutoriPagoOrdenCompraConstantesFunciones.getClassesForeignKeysOfAutoriPagoOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/autoripagoordencompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			autoripagoordencomprasAux= new ArrayList<AutoriPagoOrdenCompra>();
			
				
			autoripagoordencompraLogic.setDatosCliente(this.datosCliente);
			autoripagoordencompraLogic.setDatosDeep(this.datosDeep);
			autoripagoordencompraLogic.setIsConDeep(true);
			
			
			autoripagoordencompraLogic.getAutoriPagoOrdenCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					autoripagoordencompraLogic.getTodosAutoriPagoOrdenCompras(finalQueryGlobal,pagination);
					
					//autoripagoordencompraLogic.getTodosAutoriPagoOrdenComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null|| autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							autoripagoordencomprasAux= new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux= new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							autoripagoordencompraLogic.getTodosAutoriPagoOrdenCompras(finalQueryGlobal+"",this.pagination);												
							
							//autoripagoordencompraLogic.getTodosAutoriPagoOrdenComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencompraLogic.getAutoriPagoOrdenCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());					
							autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idAutoriPagoOrdenCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idAutoriPagoOrdenCompra=this.idActual;
				
				} else if(this.idAutoriPagoOrdenCompraActual!=null && this.idAutoriPagoOrdenCompraActual!=0L) {
					idAutoriPagoOrdenCompra=idAutoriPagoOrdenCompraActual;
				}
				
					
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndicePorId(idAutoriPagoOrdenCompra);
				
				this.autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					autoripagoordencompraLogic.getEntity(idAutoriPagoOrdenCompra);
					
					//autoripagoordencompraLogic.getEntityWithConnection(idAutoriPagoOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
					autoripagoordencompraLogic.getAutoriPagoOrdenCompras().add(autoripagoordencompraLogic.getAutoriPagoOrdenCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
					this.autoripagoordencompras.add(autoripagoordencompra);
				}
				
				if(autoripagoordencompraLogic.getAutoriPagoOrdenCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdAsientoContable",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdAsientoContable",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBanco")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdBanco(finalQueryGlobal,pagination,id_bancoFK_IdBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdBanco(finalQueryGlobal,pagination,id_bancoFK_IdBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdBanco",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdBanco",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdCliente",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdCliente",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaBanco")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCuentaBanco(finalQueryGlobal,pagination,id_cuenta_bancoFK_IdCuentaBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCuentaBanco(finalQueryGlobal,pagination,id_cuenta_bancoFK_IdCuentaBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCuentaBanco(id_cuenta_bancoFK_IdCuentaBanco);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdCuentaBanco",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdCuentaBanco",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdEjercicio",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdEjercicio",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdEmpresa",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdEmpresa",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdModulo",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdModulo",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdMoneda",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdMoneda",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdOrdenCompra")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdOrdenCompra",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdOrdenCompra",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdSucursal",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdSucursal",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdTipoCambio",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdTipoCambio",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdTransaccion",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdTransaccion",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras()==null||autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=autoripagoordencompras==null|| autoripagoordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
						autoripagoordencomprasAux.addAll(autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencomprasAux=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencomprasAux.addAll(autoripagoordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AutoriPagoOrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAutoriPagoOrdenCompras("FK_IdUsuario",autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAutoriPagoOrdenCompras("FK_IdUsuario",autoripagoordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraLogic.setAutoriPagoOrdenCompras(new ArrayList<AutoriPagoOrdenCompra>());
						autoripagoordencompraLogic.getAutoriPagoOrdenCompras().addAll(autoripagoordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompras=new ArrayList<AutoriPagoOrdenCompra>();
							autoripagoordencompras.addAll(autoripagoordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesAutoriPagoOrdenCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessAutoriPagoOrdenCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=autoripagoordencompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=autoripagoordencompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(AutoriPagoOrdenCompra autoripagoordencompra) {
		Boolean permite=true;
		
		if(this.autoripagoordencompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=AutoriPagoOrdenCompraConstantesFunciones.getOrderByListaAutoriPagoOrdenCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=AutoriPagoOrdenCompraConstantesFunciones.getOrderByListaAutoriPagoOrdenCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				if(autoripagoordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					autoripagoordencompraTotales=autoripagoordencompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AutoriPagoOrdenCompra autoripagoordencompra:this.autoripagoordencompras) {
				if(autoripagoordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					autoripagoordencompraTotales=autoripagoordencompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.autoripagoordencompraAux=new AutoriPagoOrdenCompra();
			this.autoripagoordencompraAux.setsType(Constantes2.S_TOTALES);
			this.autoripagoordencompraAux.setIsNew(false);
			this.autoripagoordencompraAux.setIsChanged(false);
			this.autoripagoordencompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				AutoriPagoOrdenCompraConstantesFunciones.TotalizarValoresFilaAutoriPagoOrdenCompra(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this.autoripagoordencompraAux);
				
				this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().add(this.autoripagoordencompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				AutoriPagoOrdenCompraConstantesFunciones.TotalizarValoresFilaAutoriPagoOrdenCompra(this.autoripagoordencompras,this.autoripagoordencompraAux);
				
				this.autoripagoordencompras.add(this.autoripagoordencompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		autoripagoordencompraTotales=new AutoriPagoOrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().remove(autoripagoordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.autoripagoordencompras.remove(autoripagoordencompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		autoripagoordencompraTotales=new AutoriPagoOrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				if(autoripagoordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					autoripagoordencompraTotales=autoripagoordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AutoriPagoOrdenCompraConstantesFunciones.TotalizarValoresFilaAutoriPagoOrdenCompra(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),autoripagoordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AutoriPagoOrdenCompra autoripagoordencompra:this.autoripagoordencompras) {
				if(autoripagoordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					autoripagoordencompraTotales=autoripagoordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AutoriPagoOrdenCompraConstantesFunciones.TotalizarValoresFilaAutoriPagoOrdenCompra(this.autoripagoordencompras,autoripagoordencompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getAutoriPagoOrdenComprasFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdBanco()throws Exception {
		try {
			sAccionBusqueda="FK_IdBanco";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdCuentaBanco()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaBanco";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdOrdenCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdOrdenCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getAutoriPagoOrdenComprasFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdBanco(String sFinalQuery,Long id_banco)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdBanco(sFinalQuery,this.pagination,id_banco);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdCuentaBanco(String sFinalQuery,Long id_cuenta_banco)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdCuentaBanco(sFinalQuery,this.pagination,id_cuenta_banco);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdOrdenCompra(String sFinalQuery,Long id_orden_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdOrdenCompra(sFinalQuery,this.pagination,id_orden_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAutoriPagoOrdenComprasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLogic.getAutoriPagoOrdenComprasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosAutoriPagoOrdenCompra() {
		this.isPermisoTodoAutoriPagoOrdenCompra=false;
		this.isPermisoNuevoAutoriPagoOrdenCompra=false;
		this.isPermisoActualizarAutoriPagoOrdenCompra=false;
		this.isPermisoActualizarOriginalAutoriPagoOrdenCompra=false;
		this.isPermisoEliminarAutoriPagoOrdenCompra=false;
		this.isPermisoGuardarCambiosAutoriPagoOrdenCompra=false;
		this.isPermisoConsultaAutoriPagoOrdenCompra=false;
		this.isPermisoBusquedaAutoriPagoOrdenCompra=false;
		this.isPermisoReporteAutoriPagoOrdenCompra=false;		
		this.isPermisoOrdenAutoriPagoOrdenCompra=false;		
		this.isPermisoPaginacionMedioAutoriPagoOrdenCompra=false;		
		this.isPermisoPaginacionAltoAutoriPagoOrdenCompra=false;
		this.isPermisoPaginacionTodoAutoriPagoOrdenCompra=false;
		this.isPermisoCopiarAutoriPagoOrdenCompra=false;		
		this.isPermisoVerFormAutoriPagoOrdenCompra=false;		
		this.isPermisoDuplicarAutoriPagoOrdenCompra=false;		
		this.isPermisoOrdenAutoriPagoOrdenCompra=false;		
	}
	
	public void setPermisosUsuarioAutoriPagoOrdenCompra(Boolean isPermiso) {
		this.isPermisoTodoAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoNuevoAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoActualizarAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoEliminarAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoConsultaAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoBusquedaAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoReporteAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoOrdenAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoPaginacionMedioAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoPaginacionAltoAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoPaginacionTodoAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoCopiarAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoVerFormAutoriPagoOrdenCompra=isPermiso;		
		this.isPermisoDuplicarAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoOrdenAutoriPagoOrdenCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioAutoriPagoOrdenCompra(Boolean isPermiso) {
		//this.isPermisoTodoAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoNuevoAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoActualizarAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoEliminarAutoriPagoOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosAutoriPagoOrdenCompra=isPermiso;
		//this.isPermisoConsultaAutoriPagoOrdenCompra=isPermiso;
		//this.isPermisoBusquedaAutoriPagoOrdenCompra=isPermiso;
		//this.isPermisoReporteAutoriPagoOrdenCompra=isPermiso;
		//this.isPermisoOrdenAutoriPagoOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionMedioAutoriPagoOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionAltoAutoriPagoOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionTodoAutoriPagoOrdenCompra=isPermiso;		
		//this.isPermisoCopiarAutoriPagoOrdenCompra=isPermiso;		
		//this.isPermisoDuplicarAutoriPagoOrdenCompra=isPermiso;
		//this.isPermisoOrdenAutoriPagoOrdenCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioAutoriPagoOrdenCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(AutoriPagoOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioAutoriPagoOrdenCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioAutoriPagoOrdenCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionAutoriPagoOrdenCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioAutoriPagoOrdenCompraClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioAutoriPagoOrdenCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(AutoriPagoOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoAutoriPagoOrdenCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarAutoriPagoOrdenCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalAutoriPagoOrdenCompra=this.isPermisoActualizarAutoriPagoOrdenCompra;
			this.isPermisoEliminarAutoriPagoOrdenCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosAutoriPagoOrdenCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaAutoriPagoOrdenCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaAutoriPagoOrdenCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoAutoriPagoOrdenCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteAutoriPagoOrdenCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAutoriPagoOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioAutoriPagoOrdenCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoAutoriPagoOrdenCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoAutoriPagoOrdenCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarAutoriPagoOrdenCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormAutoriPagoOrdenCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarAutoriPagoOrdenCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAutoriPagoOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosAutoriPagoOrdenCompra.setToolTipText(this.jTableDatosAutoriPagoOrdenCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioAutoriPagoOrdenCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioAutoriPagoOrdenCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioAutoriPagoOrdenCompra() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyAutoriPagoOrdenCompraListas()throws Exception {
		try	{						
			
				this.tipocambiosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ordencomprasForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.bancosForeignKey=new ArrayList();
				this.cuentabancosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyAutoriPagoOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(AutoriPagoOrdenCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyAutoriPagoOrdenCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaBancoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=OrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBancoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bancosForeignKey==null||this.bancosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BancoConstantesFunciones.SFINALQUERY;

				this.cargarCombosBancosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBancoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentabancosForeignKey==null||this.cuentabancosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaBancoConstantesFunciones.getArrayColumnasGlobalesCuentaBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaBancoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaBancosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyAutoriPagoOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraReturnGeneral=new AutoriPagoOrdenCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_tipo_cambioAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_tipo_cambioAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_monedaAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_monedaAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_clienteAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_clienteAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_empresaAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_empresaAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_sucursalAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_sucursalAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalOrdenCompra="";

				if(((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_orden_compraAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_orden_compraAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalOrdenCompra, "");
						finalQueryGlobalOrdenCompra+=OrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalOrdenCompra=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidOrdenCompraActual();
					}
				} else {
					finalQueryGlobalOrdenCompra="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_transaccionAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_transaccionAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_moduloAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_moduloAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_ejercicioAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_ejercicioAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_usuarioAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_usuarioAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_asiento_contableAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_asiento_contableAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalBanco="";

				if(((this.bancosForeignKey==null||this.bancosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_bancoAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_bancoAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBanco=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

						finalQueryGlobalBanco=Funciones.GetFinalQueryAppend(finalQueryGlobalBanco, "");
						finalQueryGlobalBanco+=BancoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBancosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBanco=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidBancoActual();
					}
				} else {
					finalQueryGlobalBanco="NONE";
				}


				String finalQueryGlobalCuentaBanco="";

				if(((this.cuentabancosForeignKey==null||this.cuentabancosForeignKey.size()<=0) && this.autoripagoordencompraConstantesFunciones.cargarid_cuenta_bancoAutoriPagoOrdenCompra)
					 || (this.esRecargarFks && this.autoripagoordencompraConstantesFunciones.cargarid_cuenta_bancoAutoriPagoOrdenCompra)) {

					if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CuentaBancoConstantesFunciones.getArrayColumnasGlobalesCuentaBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaBanco=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaBanco=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaBanco, "");
						finalQueryGlobalCuentaBanco+=CuentaBancoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaBancosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaBanco=" WHERE " + ConstantesSql.ID + "="+autoripagoordencompraSessionBean.getlidCuentaBancoActual();
					}
				} else {
					finalQueryGlobalCuentaBanco="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.cargarCombosLoteForeignKeyAutoriPagoOrdenCompra(finalQueryGlobalTipoCambio,finalQueryGlobalMoneda,finalQueryGlobalCliente,finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalOrdenCompra,finalQueryGlobalTransaccion,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalUsuario,finalQueryGlobalAsientoContable,finalQueryGlobalBanco,finalQueryGlobalCuentaBanco);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=autoripagoordencompraReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=autoripagoordencompraReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=autoripagoordencompraReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=autoripagoordencompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=autoripagoordencompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalOrdenCompra.equals("NONE")) {
				this.ordencomprasForeignKey=autoripagoordencompraReturnGeneral.getordencomprasForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=autoripagoordencompraReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=autoripagoordencompraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=autoripagoordencompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=autoripagoordencompraReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=autoripagoordencompraReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalBanco.equals("NONE")) {
				this.bancosForeignKey=autoripagoordencompraReturnGeneral.getbancosForeignKey();
			}

			if(!finalQueryGlobalCuentaBanco.equals("NONE")) {
				this.cuentabancosForeignKey=autoripagoordencompraReturnGeneral.getcuentabancosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyAutoriPagoOrdenCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyOrdenCompra();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyBanco();
			this.addItemDefectoCombosForeignKeyCuentaBanco();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {
			if(this.autoripagoordencompraSessionBean==null) {
				this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyOrdenCompra()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				OrdenCompra ordencompra=new OrdenCompra();
				OrdenCompraConstantesFunciones.setOrdenCompraDescripcion(ordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				ordencompra.setId(null);

				if(!OrdenCompraConstantesFunciones.ExisteEnLista(this.ordencomprasForeignKey,ordencompra,true)) {

					this.ordencomprasForeignKey.add(0,ordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBanco()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {
				Banco banco=new Banco();
				BancoConstantesFunciones.setBancoDescripcion(banco,Constantes.SMENSAJE_ESCOJA_OPCION);
				banco.setId(null);

				if(!BancoConstantesFunciones.ExisteEnLista(this.bancosForeignKey,banco,true)) {

					this.bancosForeignKey.add(0,banco);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaBanco()throws Exception {
		try {

			if(!this.autoripagoordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBanco()) {
				CuentaBanco cuentabanco=new CuentaBanco();
				CuentaBancoConstantesFunciones.setCuentaBancoDescripcion(cuentabanco,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentabanco.setId(null);

				if(!CuentaBancoConstantesFunciones.ExisteEnLista(this.cuentabancosForeignKey,cuentabanco,true)) {

					this.cuentabancosForeignKey.add(0,cuentabanco);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyAutoriPagoOrdenCompra()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyAutoriPagoOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyAutoriPagoOrdenCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
			
			
				this.autoripagoordencompra.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.autoripagoordencompra.setfecha_autori(this.parametroGeneralUsuario.getfecha_sistema());
				this.autoripagoordencompra.setfecha_servidor(this.parametroGeneralUsuario.getfecha_sistema());
				this.autoripagoordencompra.setfecha_asiento(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyAutoriPagoOrdenCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra)throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(autoripagoordencompra.getid_tipo_cambio(),false,"Formulario");
			this.setActualClienteForeignKey(autoripagoordencompra.getid_cliente(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(autoripagoordencompra.getid_orden_compra(),false,"Formulario");
			this.setActualTransaccionForeignKey(autoripagoordencompra.getid_transaccion(),false,"Formulario");
			this.setActualAsientoContableForeignKey(autoripagoordencompra.getid_asiento_contable(),false,"Formulario");
			this.setActualBancoForeignKey(autoripagoordencompra.getid_banco(),false,"Formulario");
			this.setActualCuentaBancoForeignKey(autoripagoordencompra.getid_cuenta_banco(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(autoripagoordencompra.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioAutoriPagoOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(autoripagoordencompra.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(autoripagoordencompra.getCliente()!=null && !sTipoEvento.equals("id_clienteAutoriPagoOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(autoripagoordencompra.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(autoripagoordencompra.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableAutoriPagoOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(autoripagoordencompra.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyAutoriPagoOrdenCompra()throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(this.autoripagoordencompraConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualClienteForeignKey(this.autoripagoordencompraConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(this.autoripagoordencompraConstantesFunciones.getid_orden_compra(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.autoripagoordencompraConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.autoripagoordencompraConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualBancoForeignKey(this.autoripagoordencompraConstantesFunciones.getid_banco(),false,"Formulario");
			this.setActualCuentaBancoForeignKey(this.autoripagoordencompraConstantesFunciones.getid_cuenta_banco(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyAutoriPagoOrdenCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.getSelectedItem();
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyAutoriPagoOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyAutoriPagoOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroAutoriPagoOrdenCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyAutoriPagoOrdenCompra()throws Exception {
		try {
			

			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameOrdenComprasForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameBancosForeignKey("Todos");
			this.cargarCombosFrameCuentaBancosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyAutoriPagoOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBancosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaBancosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyAutoriPagoOrdenCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


























	
	

	public AutoriPagoOrdenCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public AutoriPagoOrdenCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public AutoriPagoOrdenCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean(); 
		this.autoripagoordencompraConstantesFunciones=new AutoriPagoOrdenCompraConstantesFunciones(); 
		this.autoripagoordencompraBean=new AutoriPagoOrdenCompra();//(this.autoripagoordencompraConstantesFunciones); 		
		this.autoripagoordencompraReturnGeneral=new AutoriPagoOrdenCompraParameterReturnGeneral(); 
		
		this.autoripagoordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.autoripagoordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public AutoriPagoOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public AutoriPagoOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public AutoriPagoOrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessAutoriPagoOrdenCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.autoripagoordencompraConstantesFunciones=new AutoriPagoOrdenCompraConstantesFunciones(); 
			this.autoripagoordencompraBean=new AutoriPagoOrdenCompra();//this.autoripagoordencompraConstantesFunciones); 			
			this.autoripagoordencompraReturnGeneral=new AutoriPagoOrdenCompraParameterReturnGeneral(); 
		
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Autori Pago Orden Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.autoripagoordencompra=new AutoriPagoOrdenCompra();
			this.autoripagoordencompras = new ArrayList<AutoriPagoOrdenCompra>();
			this.autoripagoordencomprasAux = new ArrayList<AutoriPagoOrdenCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic=new AutoriPagoOrdenCompraLogic();
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.autoripagoordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.autoripagoordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra);	
					}
					
					if(this.jInternalFrameImportacionAutoriPagoOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAutoriPagoOrdenCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByAutoriPagoOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByAutoriPagoOrdenCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra);
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setVisible(false);
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra);
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionAutoriPagoOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionAutoriPagoOrdenCompra);
					this.jInternalFrameImportacionAutoriPagoOrdenCompra.setVisible(false);
					this.jInternalFrameImportacionAutoriPagoOrdenCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByAutoriPagoOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByAutoriPagoOrdenCompra);
					this.jInternalFrameOrderByAutoriPagoOrdenCompra.setVisible(false);
					this.jInternalFrameOrderByAutoriPagoOrdenCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idAutoriPagoOrdenCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=AutoriPagoOrdenCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.autoripagoordencompraReturnGeneral=new AutoriPagoOrdenCompraParameterReturnGeneral();
			
			this.autoripagoordencompraParameterGeneral=new AutoriPagoOrdenCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.autoripagoordencompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),this.autoripagoordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),this.autoripagoordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			
			
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdBanco=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCuentaBanco=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdOrdenCompra=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTransaccion=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosAutoriPagoOrdenCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioAutoriPagoOrdenCompra(false);
			
			this.setPermisosUsuarioAutoriPagoOrdenCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado() 
				|| (this.autoripagoordencompraSessionBean.getEsGuardarRelacionado() && this.autoripagoordencompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioAutoriPagoOrdenCompraClasesRelacionadas();
			}
			
			if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioAutoriPagoOrdenCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosAutoriPagoOrdenCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualAutoriPagoOrdenCompra();
			}
			
			if(!this.isPermisoBusquedaAutoriPagoOrdenCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioAutoriPagoOrdenCompra,this.isPermisoPaginacionMedioAutoriPagoOrdenCompra,this.isPermisoPaginacionTodoAutoriPagoOrdenCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(AutoriPagoOrdenCompraConstantesFunciones.getTiposSeleccionarAutoriPagoOrdenCompra());
				
				this.tiposColumnasSelect=AutoriPagoOrdenCompraConstantesFunciones.getTiposSeleccionarAutoriPagoOrdenCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioAutoriPagoOrdenCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioAutoriPagoOrdenCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioAutoriPagoOrdenCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesAutoriPagoOrdenCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.tipocambioLogic=new TipoCambioLogic();
			this.monedaLogic=new MonedaLogic();
			this.clienteLogic=new ClienteLogic();
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ordencompraLogic=new OrdenCompraLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.bancoLogic=new BancoLogic();
			this.cuentabancoLogic=new CuentaBancoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				autoripagoordencompraImplementable= (AutoriPagoOrdenCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AutoriPagoOrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				autoripagoordencompraImplementableHome= (AutoriPagoOrdenCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AutoriPagoOrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.autoripagoordencompras= new ArrayList<AutoriPagoOrdenCompra>();
			this.autoripagoordencomprasEliminados= new ArrayList<AutoriPagoOrdenCompra>();
						
			this.isEsNuevoAutoriPagoOrdenCompra=false;
			this.esParaAccionDesdeFormularioAutoriPagoOrdenCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idTipoCambioActual=0L;
			this.idClienteActual=0L;
			this.idAsientoContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.bancosForeignKey=new ArrayList<Banco>() ;
			this.cuentabancosForeignKey=new ArrayList<CuentaBanco>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyAutoriPagoOrdenCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroAutoriPagoOrdenCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=AutoriPagoOrdenCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioAutoriPagoOrdenCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioAutoriPagoOrdenCompra();
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessAutoriPagoOrdenCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga AutoriPagoOrdenCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectAutoriPagoOrdenCompra() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesAutoriPagoOrdenCompra")) {
				iIndex=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessAutoriPagoOrdenCompra();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyAutoriPagoOrdenCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyAutoriPagoOrdenCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyAutoriPagoOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyAutoriPagoOrdenCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyAutoriPagoOrdenCompra();
		
		this.cargarCombosFrameForeignKeyAutoriPagoOrdenCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyAutoriPagoOrdenCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyAutoriPagoOrdenCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaOrdenCompra(this.ordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBanco(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBanco();
				this.cargarCombosFrameBancosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBanco(this.bancosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBanco(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaBanco();
				this.cargarCombosFrameCuentaBancosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaBanco(this.cuentabancosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			
			if(jTableDatosAutoriPagoOrdenCompra.getRowCount()>=1) {
				jTableDatosAutoriPagoOrdenCompra.removeRowSelectionInterval(0, jTableDatosAutoriPagoOrdenCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoAutoriPagoOrdenCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoAutoriPagoOrdenCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(true);			
			//this.autoripagoordencompra=new AutoriPagoOrdenCompra();
			//this.autoripagoordencompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra() ;
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAutoriPagoOrdenCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.autoripagoordencompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);				
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar AutoriPagoOrdenCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRows().length;			
			}
			
			autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoAutoriPagoOrdenCompra--;			
				//AutoriPagoOrdenCompra autoripagoordencompraAux= new AutoriPagoOrdenCompra();			
				//autoripagoordencompraAux.setId(this.iIdNuevoAutoriPagoOrdenCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//AutoriPagoOrdenCompra autoripagoordencompraOrigen=new AutoriPagoOrdenCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(AutoriPagoOrdenCompra autoripagoordencompraOrigen : autoripagoordencomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							autoripagoordencompraOrigen =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							autoripagoordencompraOrigen =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaAutoriPagoOrdenCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.autoripagoordencompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosAutoriPagoOrdenCompra(autoripagoordencompraOrigen,this.autoripagoordencompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().add(this.autoripagoordencompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompras.add(this.autoripagoordencompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
				
				this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoAutoriPagoOrdenCompra(), this.getIndiceNuevoAutoriPagoOrdenCompra());
				
				int iLastRow =  this.jTableDatosAutoriPagoOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAutoriPagoOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAutoriPagoOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();									
		
			AutoriPagoOrdenCompra autoripagoordencompraOrigen=new AutoriPagoOrdenCompra();
			AutoriPagoOrdenCompra autoripagoordencompraDestino=new AutoriPagoOrdenCompra();
				
			autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || autoripagoordencomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosAutoriPagoOrdenCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraOrigen =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						autoripagoordencompraOrigen =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						autoripagoordencompraDestino =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						autoripagoordencompraDestino =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				autoripagoordencompraOrigen =autoripagoordencomprasSeleccionados.get(0);
				autoripagoordencompraDestino =autoripagoordencomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosAutoriPagoOrdenCompra(autoripagoordencompraOrigen,autoripagoordencompraDestino,true,false);
				
				autoripagoordencompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(autoripagoordencompraDestino,autoripagoordencompraLogic.getAutoriPagoOrdenCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(autoripagoordencompraDestino,autoripagoordencompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
				
				//this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoAutoriPagoOrdenCompra(), this.getIndiceNuevoAutoriPagoOrdenCompra());
				
				int iLastRow =  this.jTableDatosAutoriPagoOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAutoriPagoOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAutoriPagoOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesAutoriPagoOrdenCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(!isVisible);
			this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(!isVisible);
			this.jPanelAccionesAutoriPagoOrdenCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameAutoriPagoOrdenCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoAutoriPagoOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionAutoriPagoOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByAutoriPagoOrdenCompra();
			
			this.abrirFrameOrderByAutoriPagoOrdenCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByAutoriPagoOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleAutoriPagoOrdenCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormAutoriPagoOrdenCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.isMaximum()) {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSize(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.iWidthFormulario,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.isMaximum()) {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jContentPaneDetalleAutoriPagoOrdenCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jContentPaneDetalleAutoriPagoOrdenCompra.getWidth(),AutoriPagoOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jContentPaneDetalleAutoriPagoOrdenCompra.getWidth(),AutoriPagoOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jContentPaneDetalleAutoriPagoOrdenCompra.getWidth(),AutoriPagoOrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setVisible(true);
	        this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByAutoriPagoOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByAutoriPagoOrdenCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByAutoriPagoOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAutoriPagoOrdenCompra,false,this);
				} else {
					this.jInternalFrameOrderByAutoriPagoOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAutoriPagoOrdenCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByAutoriPagoOrdenCompra);
				this.jInternalFrameOrderByAutoriPagoOrdenCompra.setVisible(false);
				this.jInternalFrameOrderByAutoriPagoOrdenCompra.setSelected(false);
				
				this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAutoriPagoOrdenCompra"));
				
				this.inicializarActualizarBindingTablaOrderByAutoriPagoOrdenCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionAutoriPagoOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionAutoriPagoOrdenCompra==null) {
				
				this.jInternalFrameImportacionAutoriPagoOrdenCompra=new ImportacionJInternalFrame(AutoriPagoOrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAutoriPagoOrdenCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionAutoriPagoOrdenCompra);
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.setVisible(false);
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.setSelected(false);


				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAutoriPagoOrdenCompra"));
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAutoriPagoOrdenCompra"));
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAutoriPagoOrdenCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoAutoriPagoOrdenCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra==null) {
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra=new ReporteDinamicoJInternalFrame(AutoriPagoOrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra);
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAutoriPagoOrdenCompra"));
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAutoriPagoOrdenCompra"));
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAutoriPagoOrdenCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAutoriPagoOrdenCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleAutoriPagoOrdenCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormAutoriPagoOrdenCompra);
			
	       	this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setVisible(false);
	        this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.dispose();
			//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoAutoriPagoOrdenCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionAutoriPagoOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionAutoriPagoOrdenCompra.setVisible(true);
	        this.jInternalFrameImportacionAutoriPagoOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByAutoriPagoOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByAutoriPagoOrdenCompra.setVisible(true);
	        this.jInternalFrameOrderByAutoriPagoOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByAutoriPagoOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByAutoriPagoOrdenCompra.setVisible(false);
	        this.jInternalFrameOrderByAutoriPagoOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoAutoriPagoOrdenCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionAutoriPagoOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionAutoriPagoOrdenCompra.setVisible(false);
	        this.jInternalFrameImportacionAutoriPagoOrdenCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeOrdenCompra(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.sTipoBusqueda="OrdenCompra";
						}

						ordencompraBeanSwingJInternalFrame.getTodosOrdenCompraArbol();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setOrdenCompras(ordencompraBeanSwingJInternalFrame.ordencomprasArbol);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.CargarTreeOrdenCompra();
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setVisible(true);
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						ordencompraBeanSwingJInternalFrame.jInternalFrameTreeOrdenCompra.jInternalFrameParent=this;
						TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
						TitledBorder titledBorderOrdenCompra=(TitledBorder)ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

						titledBorderOrdenCompra.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> OrdenCompra");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,ordencompraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(ordencompraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeOrdenCompra(OrdenCompraBeanSwingJInternalFrame jInternalFrameTreeOrdenCompra) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeOrdenCompra);
						jInternalFrameTreeOrdenCompra.setVisible(false);
						jInternalFrameTreeOrdenCompra.setSelected(false);
						//jInternalFrameTreeOrdenCompra.dispose();
						//jInternalFrameTreeOrdenCompra=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarAutoriPagoOrdenCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarAutoriPagoOrdenCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(true);
			//this.isEsNuevoAutoriPagoOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false) ;
			
			if(autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAutoriPagoOrdenCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaAutoriPagoOrdenCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarAutoriPagoOrdenCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(true);
			//this.isEsNuevoAutoriPagoOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.autoripagoordencompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false) ;
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAutoriPagoOrdenCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("TipoCambio")) {
				if(!this.autoripagoordencompraConstantesFunciones.cargarid_tipo_cambioAutoriPagoOrdenCompra) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.autoripagoordencompraConstantesFunciones.cargarid_clienteAutoriPagoOrdenCompra) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.autoripagoordencompraConstantesFunciones.cargarid_asiento_contableAutoriPagoOrdenCompra) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaOrdenCompra(List<OrdenCompra> ordencomprasForeignKey)throws Exception{
		TableColumn tableColumnOrdenCompra=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA));
		TableCellEditor tableCellEditorOrdenCompra =tableColumnOrdenCompra.getCellEditor();

		OrdenCompraTableCell ordencompraTableCellFk=(OrdenCompraTableCell)tableCellEditorOrdenCompra;

		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.setordencomprasForeignKey(ordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ordencompraTableCellFk.setRowActual(intSelectedRow);
			//ordencompraTableCellFk.setordencomprasForeignKeyActual(ordencomprasForeignKey);
		//}


		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.RecargarOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
				
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBanco(List<Banco> bancosForeignKey)throws Exception{
		TableColumn tableColumnBanco=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO));
		TableCellEditor tableCellEditorBanco =tableColumnBanco.getCellEditor();

		BancoTableCell bancoTableCellFk=(BancoTableCell)tableCellEditorBanco;

		if(bancoTableCellFk!=null) {
			bancoTableCellFk.setbancosForeignKey(bancosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bancoTableCellFk.setRowActual(intSelectedRow);
			//bancoTableCellFk.setbancosForeignKeyActual(bancosForeignKey);
		//}


		if(bancoTableCellFk!=null) {
			bancoTableCellFk.RecargarBancosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaBanco(List<CuentaBanco> cuentabancosForeignKey)throws Exception{
		TableColumn tableColumnCuentaBanco=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO));
		TableCellEditor tableCellEditorCuentaBanco =tableColumnCuentaBanco.getCellEditor();

		CuentaBancoTableCell cuentabancoTableCellFk=(CuentaBancoTableCell)tableCellEditorCuentaBanco;

		if(cuentabancoTableCellFk!=null) {
			cuentabancoTableCellFk.setcuentabancosForeignKey(cuentabancosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentabancoTableCellFk.setRowActual(intSelectedRow);
			//cuentabancoTableCellFk.setcuentabancosForeignKeyActual(cuentabancosForeignKey);
		//}


		if(cuentabancoTableCellFk!=null) {
			cuentabancoTableCellFk.RecargarCuentaBancosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesAutoriPagoOrdenCompra(false);
			
			//if(!this.isEsNuevoAutoriPagoOrdenCompra) {								
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				
			}
			
			if(this.permiteMantenimiento(this.autoripagoordencompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoAutoriPagoOrdenCompra=true;
					this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
					this.isEsNuevoAutoriPagoOrdenCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoAutoriPagoOrdenCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoAutoriPagoOrdenCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(false);
			
												
				
				if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleAutoriPagoOrdenCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,autoripagoordencompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualAutoriPagoOrdenCompra(this.autoripagoordencompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,autoripagoordencompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.autoripagoordencompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.autoripagoordencompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.autoripagoordencompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.autoripagoordencompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((AutoriPagoOrdenCompraModel) this.jTableDatosAutoriPagoOrdenCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoAutoriPagoOrdenCompra=true;
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
				this.isEsNuevoAutoriPagoOrdenCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(false);
				
				
				
				if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleAutoriPagoOrdenCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosAutoriPagoOrdenCompra.getRowCount()>=1) {
				jTableDatosAutoriPagoOrdenCompra.removeRowSelectionInterval(0, jTableDatosAutoriPagoOrdenCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesAutoriPagoOrdenCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(false) ;
			
			this.isEsNuevoAutoriPagoOrdenCompra=false;
			
			if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleAutoriPagoOrdenCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				
				//SI ES MANUAL
				if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoAutoriPagoOrdenCompra--;			
			//AutoriPagoOrdenCompra autoripagoordencompraAux= new AutoriPagoOrdenCompra();			
			//autoripagoordencompraAux.setId(this.iIdNuevoAutoriPagoOrdenCompra);
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaAutoriPagoOrdenCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
			
			this.autoripagoordencompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().add(this.autoripagoordencompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.autoripagoordencompras.add(this.autoripagoordencompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			
			this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoAutoriPagoOrdenCompra(), this.getIndiceNuevoAutoriPagoOrdenCompra());
			
			int iLastRow =  this.jTableDatosAutoriPagoOrdenCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosAutoriPagoOrdenCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosAutoriPagoOrdenCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
			
			//SI ES MANUAL
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();
			}
			
			//this.abrirFrameTreeAutoriPagoOrdenCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Autori Pago Orden CompraS ?", "MANTENIMIENTO DE Autori Pago Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionAutoriPagoOrdenCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralAutoriPagoOrdenCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.procesarImportacionAutoriPagoOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.autoripagoordencompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarAutoriPagoOrdenCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionAutoriPagoOrdenCompra.setFileImportacion(this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionAutoriPagoOrdenCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionAutoriPagoOrdenCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		

		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("AutoriPagoOrdenCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"AutoriPagoOrdenCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Banco_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Banco_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Banco_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Banco_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaBanco_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaBanco_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaBanco_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaBanco_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaAutori_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaAutori_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaAutori_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaAutori_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaServidor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaServidor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaServidor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaServidor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digoAsiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digoAsiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digoAsiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digoAsiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaAsiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaAsiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaAsiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaAsiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorAsiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorAsiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorAsiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorAsiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSaldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSaldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSaldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSaldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoria="id_orden_compra";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO:
					sNombreCampoCategoria="id_banco";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO:
					sNombreCampoCategoria="id_cuenta_banco";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI:
					sNombreCampoCategoria="fecha_autori";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoria="fecha_servidor";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO:
					sNombreCampoCategoria="codigo_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO:
					sNombreCampoCategoria="fecha_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO:
					sNombreCampoCategoria="valor_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO:
					sNombreCampoCategoria="total_saldo";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoriaValor="id_orden_compra";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO:
					sNombreCampoCategoriaValor="id_banco";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO:
					sNombreCampoCategoriaValor="id_cuenta_banco";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI:
					sNombreCampoCategoriaValor="fecha_autori";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoriaValor="fecha_servidor";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO:
					sNombreCampoCategoriaValor="codigo_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO:
					sNombreCampoCategoriaValor="fecha_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO:
					sNombreCampoCategoriaValor="valor_asiento";
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO:
					sNombreCampoCategoriaValor="total_saldo";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_orden_compra");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Banco",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_banco");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Banco",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_banco");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Autori",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_autori");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Servidor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_servidor");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Asiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo_asiento");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Asiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_asiento");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Asiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_asiento");
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Saldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_saldo");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("AutoriPagoOrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getbanco_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getcuentabanco_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getfecha_autori());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getfecha_servidor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getcodigo_asiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getfecha_asiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.getvalor_asiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO);
					iRow++;

					for(AutoriPagoOrdenCompra autoripagoordencompra:autoripagoordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(autoripagoordencompra.gettotal_saldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelAutoriPagoOrdenCompra(row);				
			//	iRow++;
			//}				
			
			//for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelAutoriPagoOrdenCompra(autoripagoordencompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
			
			//SI ES MANUAL
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
			
			//SI ES MANUAL
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
			
			//SI ES MANUAL
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAutoriPagoOrdenCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaAutoriPagoOrdenCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosAutoriPagoOrdenCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosAutoriPagoOrdenCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosAutoriPagoOrdenCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosAutoriPagoOrdenCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosAutoriPagoOrdenCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosAutoriPagoOrdenCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosAutoriPagoOrdenCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingAutoriPagoOrdenCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingAutoriPagoOrdenCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingAutoriPagoOrdenCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasAutoriPagoOrdenCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAutoriPagoOrdenCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesAutoriPagoOrdenCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualAutoriPagoOrdenCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra();
		
		this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualAutoriPagoOrdenCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAutoriPagoOrdenCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualAutoriPagoOrdenCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualAutoriPagoOrdenCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosAutoriPagoOrdenCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosAutoriPagoOrdenCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteAutoriPagoOrdenCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionNuevoAutoriPagoOrdenCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionSinCerrarAutoriPagoOrdenCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionSinMensajeAutoriPagoOrdenCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosAutoriPagoOrdenCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosAutoriPagoOrdenCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteAutoriPagoOrdenCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionNuevoAutoriPagoOrdenCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionSinCerrarAutoriPagoOrdenCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jCheckBoxPostAccionSinMensajeAutoriPagoOrdenCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesAutoriPagoOrdenCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralAutoriPagoOrdenCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesAutoriPagoOrdenCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualAutoriPagoOrdenCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesAutoriPagoOrdenCompra() throws Exception {
		try	{
			if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualAutoriPagoOrdenCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAutoriPagoOrdenCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualAutoriPagoOrdenCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			
			if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionAutoriPagoOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAutoriPagoOrdenCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAutoriPagoOrdenCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=AutoriPagoOrdenCompraConstantesFunciones.getTiposSeleccionarAutoriPagoOrdenCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=AutoriPagoOrdenCompraConstantesFunciones.getTiposSeleccionarAutoriPagoOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=AutoriPagoOrdenCompraConstantesFunciones.getTiposSeleccionarAutoriPagoOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualAutoriPagoOrdenCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_bancoFK_IdBanco=((Banco)this.jComboBoxid_bancoFK_IdBancoAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_cuenta_bancoFK_IdCuentaBanco=((CuentaBanco)this.jComboBoxid_cuenta_bancoFK_IdCuentaBancoAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_orden_compraFK_IdOrdenCompra=((OrdenCompra)this.jComboBoxid_orden_compraFK_IdOrdenCompraAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionAutoriPagoOrdenCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasAutoriPagoOrdenCompra(Boolean esInicializar) throws Exception {				
		if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualAutoriPagoOrdenCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaAutoriPagoOrdenCompra() throws Exception {
		this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByAutoriPagoOrdenCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosAutoriPagoOrdenCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaAutoriPagoOrdenCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=autoripagoordencompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosAutoriPagoOrdenCompra.setModel(new AutoriPagoOrdenCompraModel(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosAutoriPagoOrdenCompra.setModel(new AutoriPagoOrdenCompraModel(this.autoripagoordencompras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByAutoriPagoOrdenCompra!=null && this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByAutoriPagoOrdenCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+AutoriPagoOrdenCompraConstantesFunciones.SCLASSWEBTITULO,autoripagoordencompraConstantesFunciones.resaltarSeleccionarAutoriPagoOrdenCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+AutoriPagoOrdenCompraConstantesFunciones.SCLASSWEBTITULO,autoripagoordencompraConstantesFunciones.resaltarSeleccionarAutoriPagoOrdenCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_ID));

		if(this.autoripagoordencompraConstantesFunciones.mostraridAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.autoripagoordencompraConstantesFunciones.resaltaridAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activaridAutoriPagoOrdenCompra,iSizeTabla,this,true,"idAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltaridAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activaridAutoriPagoOrdenCompra,this,true,"idAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_tipo_cambioAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCambioTableCell(this.tipocambiosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_tipo_cambioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_tipo_cambioAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new TipoCambioTableCell(this.tipocambiosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_tipo_cambioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_tipo_cambioAutoriPagoOrdenCompra,true,"id_tipo_cambioAutoriPagoOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_monedaAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_monedaAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_monedaAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_monedaAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_monedaAutoriPagoOrdenCompra,false,"id_monedaAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_clienteAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_clienteAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_clienteAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_clienteAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_clienteAutoriPagoOrdenCompra,true,"id_clienteAutoriPagoOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_empresaAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_empresaAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_empresaAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_empresaAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_empresaAutoriPagoOrdenCompra,false,"id_empresaAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_sucursalAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_sucursalAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_sucursalAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_sucursalAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_sucursalAutoriPagoOrdenCompra,false,"id_sucursalAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_orden_compraAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_orden_compraAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_orden_compraAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new OrdenCompraTableCell(this.ordencomprasForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_orden_compraAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_orden_compraAutoriPagoOrdenCompra,true,"id_orden_compraAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_transaccionAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_transaccionAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_transaccionAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_transaccionAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_transaccionAutoriPagoOrdenCompra,true,"id_transaccionAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_moduloAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_moduloAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_moduloAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_moduloAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_moduloAutoriPagoOrdenCompra,false,"id_moduloAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_ejercicioAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_ejercicioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_ejercicioAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_ejercicioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_ejercicioAutoriPagoOrdenCompra,false,"id_ejercicioAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_usuarioAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_usuarioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_usuarioAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_usuarioAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_usuarioAutoriPagoOrdenCompra,false,"id_usuarioAutoriPagoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_asiento_contableAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableTableCell(this.asientocontablesForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_asiento_contableAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_asiento_contableAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableTableCell(this.asientocontablesForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_asiento_contableAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_asiento_contableAutoriPagoOrdenCompra,true,"id_asiento_contableAutoriPagoOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_bancoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BancoTableCell(this.bancosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_bancoAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_bancoAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new BancoTableCell(this.bancosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_bancoAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_bancoAutoriPagoOrdenCompra,true,"id_bancoAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarid_cuenta_bancoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaBancoTableCell(this.cuentabancosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_cuenta_bancoAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_cuenta_bancoAutoriPagoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new CuentaBancoTableCell(this.cuentabancosForeignKey,this.autoripagoordencompraConstantesFunciones.resaltarid_cuenta_bancoAutoriPagoOrdenCompra,this,this.autoripagoordencompraConstantesFunciones.activarid_cuenta_bancoAutoriPagoOrdenCompra,true,"id_cuenta_bancoAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE));

		if(this.autoripagoordencompraConstantesFunciones.mostrarnumero_comprobanteAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.autoripagoordencompraConstantesFunciones.resaltarnumero_comprobanteAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarnumero_comprobanteAutoriPagoOrdenCompra,iSizeTabla,this,true,"numero_comprobanteAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarnumero_comprobanteAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarnumero_comprobanteAutoriPagoOrdenCompra,this,true,"numero_comprobanteAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA));

		if(this.autoripagoordencompraConstantesFunciones.mostrarfechaAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfechaAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfechaAutoriPagoOrdenCompra,iSizeTabla,this,true,"fechaAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfechaAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfechaAutoriPagoOrdenCompra,this,true,"fechaAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI));

		if(this.autoripagoordencompraConstantesFunciones.mostrarfecha_autoriAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_autoriAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_autoriAutoriPagoOrdenCompra,iSizeTabla,this,true,"fecha_autoriAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_autoriAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_autoriAutoriPagoOrdenCompra,this,true,"fecha_autoriAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL));

		if(this.autoripagoordencompraConstantesFunciones.mostrartotalAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.autoripagoordencompraConstantesFunciones.resaltartotalAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activartotalAutoriPagoOrdenCompra,iSizeTabla,this,true,"totalAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltartotalAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activartotalAutoriPagoOrdenCompra,this,true,"totalAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR));

		if(this.autoripagoordencompraConstantesFunciones.mostrarfecha_servidorAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_servidorAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_servidorAutoriPagoOrdenCompra,iSizeTabla,this,true,"fecha_servidorAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_servidorAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_servidorAutoriPagoOrdenCompra,this,true,"fecha_servidorAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarcodigo_asientoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.autoripagoordencompraConstantesFunciones.resaltarcodigo_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarcodigo_asientoAutoriPagoOrdenCompra,iSizeTabla,this,true,"codigo_asientoAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarcodigo_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarcodigo_asientoAutoriPagoOrdenCompra,this,true,"codigo_asientoAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarfecha_asientoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_asientoAutoriPagoOrdenCompra,iSizeTabla,this,true,"fecha_asientoAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarfecha_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarfecha_asientoAutoriPagoOrdenCompra,this,true,"fecha_asientoAutoriPagoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO));

		if(this.autoripagoordencompraConstantesFunciones.mostrarvalor_asientoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.autoripagoordencompraConstantesFunciones.resaltarvalor_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarvalor_asientoAutoriPagoOrdenCompra,iSizeTabla,this,true,"valor_asientoAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltarvalor_asientoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activarvalor_asientoAutoriPagoOrdenCompra,this,true,"valor_asientoAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO));

		if(this.autoripagoordencompraConstantesFunciones.mostrartotal_saldoAutoriPagoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.autoripagoordencompraConstantesFunciones.resaltartotal_saldoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activartotal_saldoAutoriPagoOrdenCompra,iSizeTabla,this,true,"total_saldoAutoriPagoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.autoripagoordencompraConstantesFunciones.resaltartotal_saldoAutoriPagoOrdenCompra,this.autoripagoordencompraConstantesFunciones.activartotal_saldoAutoriPagoOrdenCompra,this,true,"total_saldoAutoriPagoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new AutoriPagoOrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosAutoriPagoOrdenCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosAutoriPagoOrdenCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosAutoriPagoOrdenCompra.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosAutoriPagoOrdenCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosAutoriPagoOrdenCompra.moveColumn(this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosAutoriPagoOrdenCompra.moveColumn(this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosAutoriPagoOrdenCompra.moveColumn(this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosAutoriPagoOrdenCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosAutoriPagoOrdenCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosAutoriPagoOrdenCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosAutoriPagoOrdenCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosAutoriPagoOrdenCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosAutoriPagoOrdenCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=autoripagoordencompraLogic.getAutoriPagoOrdenCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=autoripagoordencompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosAutoriPagoOrdenCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosAutoriPagoOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosAutoriPagoOrdenCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoAutoriPagoOrdenCompra=false;
					
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
				if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAutoriPagoOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.autoripagoordencompra.getsType().equals("DUPLICADO")
				   || this.autoripagoordencompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoAutoriPagoOrdenCompra=true;
				
				} else {
					this.isEsNuevoAutoriPagoOrdenCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					if(this.autoripagoordencompra.getId()>=0 && !this.autoripagoordencompra.getIsNew()) {						
						this.isEsNuevoAutoriPagoOrdenCompra=false;
						
					} else {
						this.isEsNuevoAutoriPagoOrdenCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoAutoriPagoOrdenCompra(esRelaciones);						
				
				this.seleccionarAutoriPagoOrdenCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.autoripagoordencompra.getId()<0) {
					this.isEsNuevoAutoriPagoOrdenCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarAutoriPagoOrdenCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarAutoriPagoOrdenCompra(evt,rowIndex);
				}	
				
				if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion AutoriPagoOrdenCompra: " + this.dDif); 
					}
				}								
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarAutoriPagoOrdenCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.autoripagoordencompra)) {
					if(this.autoripagoordencompra.getId()>0) {
						this.autoripagoordencompra.setIsDeleted(true);
						
						this.autoripagoordencomprasEliminados.add(this.autoripagoordencompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().remove(this.autoripagoordencompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompras.remove(this.autoripagoordencompra);				
					}
					
					
					((AutoriPagoOrdenCompraModel) this.jTableDatosAutoriPagoOrdenCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarAutoriPagoOrdenCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoAutoriPagoOrdenCompra) {
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAutoriPagoOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}
				
				//ARCHITECTURE
				try {
					

					//TipoCambio
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_tipo_cambioAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_tipo_cambioAutoriPagoOrdenCompra) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_tipo_cambio());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(autoripagoordencompra.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(autoripagoordencompra.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.autoripagoordencompra.getid_tipo_cambio(),false,"Formulario");

					//Moneda
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_monedaAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_monedaAutoriPagoOrdenCompra) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.autoripagoordencompra.getid_moneda());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(autoripagoordencompra.getMoneda()!=null) {
							this.monedasForeignKey.add(autoripagoordencompra.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.autoripagoordencompra.getid_moneda(),false,"Formulario");

					//Cliente
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_clienteAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_clienteAutoriPagoOrdenCompra) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.autoripagoordencompra.getid_cliente());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(autoripagoordencompra.getCliente()!=null) {
							this.clientesForeignKey.add(autoripagoordencompra.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.autoripagoordencompra.getid_cliente(),false,"Formulario");

					//Empresa
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_empresaAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_empresaAutoriPagoOrdenCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.autoripagoordencompra.getid_empresa());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(autoripagoordencompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(autoripagoordencompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.autoripagoordencompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_sucursalAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_sucursalAutoriPagoOrdenCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.autoripagoordencompra.getid_sucursal());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(autoripagoordencompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(autoripagoordencompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.autoripagoordencompra.getid_sucursal(),false,"Formulario");

					//OrdenCompra
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_orden_compraAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_orden_compraAutoriPagoOrdenCompra) {
						//this.cargarCombosOrdenComprasForeignKeyLista(" where id="+this.autoripagoordencompra.getid_orden_compra());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

						if(autoripagoordencompra.getOrdenCompra()!=null) {
							this.ordencomprasForeignKey.add(autoripagoordencompra.getOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyOrdenCompra();
						this.cargarCombosFrameOrdenComprasForeignKey("Todos");
					}
					this.setActualOrdenCompraForeignKey(this.autoripagoordencompra.getid_orden_compra(),false,"Formulario");

					//Transaccion
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_transaccionAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_transaccionAutoriPagoOrdenCompra) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.autoripagoordencompra.getid_transaccion());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(autoripagoordencompra.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(autoripagoordencompra.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.autoripagoordencompra.getid_transaccion(),false,"Formulario");

					//Modulo
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_moduloAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_moduloAutoriPagoOrdenCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_modulo());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(autoripagoordencompra.getModulo()!=null) {
							this.modulosForeignKey.add(autoripagoordencompra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.autoripagoordencompra.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_ejercicioAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_ejercicioAutoriPagoOrdenCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_ejercicio());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(autoripagoordencompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(autoripagoordencompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.autoripagoordencompra.getid_ejercicio(),false,"Formulario");

					//Usuario
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_usuarioAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_usuarioAutoriPagoOrdenCompra) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_usuario());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(autoripagoordencompra.getUsuario()!=null) {
							this.usuariosForeignKey.add(autoripagoordencompra.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.autoripagoordencompra.getid_usuario(),false,"Formulario");

					//AsientoContable
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_asiento_contableAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_asiento_contableAutoriPagoOrdenCompra) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.autoripagoordencompra.getid_asiento_contable());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(autoripagoordencompra.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(autoripagoordencompra.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.autoripagoordencompra.getid_asiento_contable(),false,"Formulario");

					//Banco
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_bancoAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_bancoAutoriPagoOrdenCompra) {
						//this.cargarCombosBancosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_banco());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.bancosForeignKey=new ArrayList<Banco>();

						if(autoripagoordencompra.getBanco()!=null) {
							this.bancosForeignKey.add(autoripagoordencompra.getBanco());
						}

						this.addItemDefectoCombosForeignKeyBanco();
						this.cargarCombosFrameBancosForeignKey("Todos");
					}
					this.setActualBancoForeignKey(this.autoripagoordencompra.getid_banco(),false,"Formulario");

					//CuentaBanco
					if(!this.autoripagoordencompraConstantesFunciones.cargarid_cuenta_bancoAutoriPagoOrdenCompra || this.autoripagoordencompraConstantesFunciones.event_dependid_cuenta_bancoAutoriPagoOrdenCompra) {
						//this.cargarCombosCuentaBancosForeignKeyLista(" where id="+this.autoripagoordencompra.getid_cuenta_banco());
									//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
						this.cuentabancosForeignKey=new ArrayList<CuentaBanco>();

						if(autoripagoordencompra.getCuentaBanco()!=null) {
							this.cuentabancosForeignKey.add(autoripagoordencompra.getCuentaBanco());
						}

						this.addItemDefectoCombosForeignKeyCuentaBanco();
						this.cargarCombosFrameCuentaBancosForeignKey("Todos");
					}
					this.setActualCuentaBancoForeignKey(this.autoripagoordencompra.getid_cuenta_banco(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoAutoriPagoOrdenCompra(autoripagoordencompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(autoripagoordencompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyAutoriPagoOrdenCompra(autoripagoordencompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyAutoriPagoOrdenCompra(autoripagoordencompra);
	}
	
	public void setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setText(autoripagoordencompra.getId().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setText(autoripagoordencompra.getnumero_comprobante());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_autori());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setText(autoripagoordencompra.gettotal().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_servidor());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompra.getcodigo_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompra.getvalor_asiento().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setText(autoripagoordencompra.gettotal_saldo().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,AutoriPagoOrdenCompra autoripagoordencompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,autoripagoordencompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,AutoriPagoOrdenCompra autoripagoordencompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				autoripagoordencompraLocal=this.autoripagoordencompra;
			} else {
				autoripagoordencompraLocal=this.autoripagoordencompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(autoripagoordencompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoAutoriPagoOrdenCompra(autoripagoordencompraLocal,true);
					
					if(autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(autoripagoordencompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(autoripagoordencompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(autoripagoordencompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(autoripagoordencompra);
	}
	
	public void setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(autoripagoordencompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.getText()==null || this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.getText()=="" || this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setText("0");
			}

			if(conColumnasBase) {autoripagoordencompra.setId(Long.parseLong(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelIdAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setnumero_comprobante(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelnumero_comprobanteAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setfecha(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfechaAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setfecha_autori(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_autoriAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.settotal(Double.parseDouble(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotalAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setfecha_servidor(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_servidorAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setcodigo_asiento(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelcodigo_asientoAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setfecha_asiento(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelfecha_asientoAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.setvalor_asiento(Double.parseDouble(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelvalor_asientoAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			autoripagoordencompra.settotal_saldo(Double.parseDouble(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabeltotal_saldoAutoriPagoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompraBean,AutoriPagoOrdenCompra autoripagoordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_tipo_cambio()!=null && !autoripagoordencompraBean.getid_tipo_cambio().equals(null))) {autoripagoordencompra.setid_tipo_cambio(autoripagoordencompraBean.getid_tipo_cambio());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_cliente()!=null && !autoripagoordencompraBean.getid_cliente().equals(-1L))) {autoripagoordencompra.setid_cliente(autoripagoordencompraBean.getid_cliente());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_orden_compra()!=null && !autoripagoordencompraBean.getid_orden_compra().equals(-1L))) {autoripagoordencompra.setid_orden_compra(autoripagoordencompraBean.getid_orden_compra());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_transaccion()!=null && !autoripagoordencompraBean.getid_transaccion().equals(-1L))) {autoripagoordencompra.setid_transaccion(autoripagoordencompraBean.getid_transaccion());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_asiento_contable()!=null && !autoripagoordencompraBean.getid_asiento_contable().equals(-1L))) {autoripagoordencompra.setid_asiento_contable(autoripagoordencompraBean.getid_asiento_contable());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_banco()!=null && !autoripagoordencompraBean.getid_banco().equals(-1L))) {autoripagoordencompra.setid_banco(autoripagoordencompraBean.getid_banco());}
			if(conDefault || (!conDefault && autoripagoordencompraBean.getid_cuenta_banco()!=null && !autoripagoordencompraBean.getid_cuenta_banco().equals(-1L))) {autoripagoordencompra.setid_cuenta_banco(autoripagoordencompraBean.getid_cuenta_banco());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompraOrigen,AutoriPagoOrdenCompra autoripagoordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && autoripagoordencompraOrigen.getId()!=null && !autoripagoordencompraOrigen.getId().equals(0L))) {autoripagoordencompra.setId(autoripagoordencompraOrigen.getId());}}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_tipo_cambio()!=null && !autoripagoordencompraOrigen.getid_tipo_cambio().equals(null))) {autoripagoordencompra.setid_tipo_cambio(autoripagoordencompraOrigen.getid_tipo_cambio());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_cliente()!=null && !autoripagoordencompraOrigen.getid_cliente().equals(-1L))) {autoripagoordencompra.setid_cliente(autoripagoordencompraOrigen.getid_cliente());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_orden_compra()!=null && !autoripagoordencompraOrigen.getid_orden_compra().equals(-1L))) {autoripagoordencompra.setid_orden_compra(autoripagoordencompraOrigen.getid_orden_compra());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_transaccion()!=null && !autoripagoordencompraOrigen.getid_transaccion().equals(-1L))) {autoripagoordencompra.setid_transaccion(autoripagoordencompraOrigen.getid_transaccion());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_asiento_contable()!=null && !autoripagoordencompraOrigen.getid_asiento_contable().equals(-1L))) {autoripagoordencompra.setid_asiento_contable(autoripagoordencompraOrigen.getid_asiento_contable());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_banco()!=null && !autoripagoordencompraOrigen.getid_banco().equals(-1L))) {autoripagoordencompra.setid_banco(autoripagoordencompraOrigen.getid_banco());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getid_cuenta_banco()!=null && !autoripagoordencompraOrigen.getid_cuenta_banco().equals(-1L))) {autoripagoordencompra.setid_cuenta_banco(autoripagoordencompraOrigen.getid_cuenta_banco());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getnumero_comprobante()!=null && !autoripagoordencompraOrigen.getnumero_comprobante().equals(""))) {autoripagoordencompra.setnumero_comprobante(autoripagoordencompraOrigen.getnumero_comprobante());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getfecha()!=null && !autoripagoordencompraOrigen.getfecha().equals(new Date()))) {autoripagoordencompra.setfecha(autoripagoordencompraOrigen.getfecha());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getfecha_autori()!=null && !autoripagoordencompraOrigen.getfecha_autori().equals(new Date()))) {autoripagoordencompra.setfecha_autori(autoripagoordencompraOrigen.getfecha_autori());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.gettotal()!=null && !autoripagoordencompraOrigen.gettotal().equals(0.0))) {autoripagoordencompra.settotal(autoripagoordencompraOrigen.gettotal());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getfecha_servidor()!=null && !autoripagoordencompraOrigen.getfecha_servidor().equals(new Date()))) {autoripagoordencompra.setfecha_servidor(autoripagoordencompraOrigen.getfecha_servidor());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getcodigo_asiento()!=null && !autoripagoordencompraOrigen.getcodigo_asiento().equals(""))) {autoripagoordencompra.setcodigo_asiento(autoripagoordencompraOrigen.getcodigo_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getfecha_asiento()!=null && !autoripagoordencompraOrigen.getfecha_asiento().equals(new Date()))) {autoripagoordencompra.setfecha_asiento(autoripagoordencompraOrigen.getfecha_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.getvalor_asiento()!=null && !autoripagoordencompraOrigen.getvalor_asiento().equals(0.0))) {autoripagoordencompra.setvalor_asiento(autoripagoordencompraOrigen.getvalor_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraOrigen.gettotal_saldo()!=null && !autoripagoordencompraOrigen.gettotal_saldo().equals(0.0))) {autoripagoordencompra.settotal_saldo(autoripagoordencompraOrigen.gettotal_saldo());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setText(autoripagoordencompra.getId().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setText(autoripagoordencompra.getnumero_comprobante());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_autori());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setText(autoripagoordencompra.gettotal().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_servidor());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompra.getcodigo_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setDate(autoripagoordencompra.getfecha_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompra.getvalor_asiento().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setText(autoripagoordencompra.gettotal_saldo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAutoriPagoOrdenCompra(AutoriPagoOrdenCompraBean autoripagoordencompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.getId().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.getnumero_comprobante());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setDate(autoripagoordencompraBean.getfecha());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setDate(autoripagoordencompraBean.getfecha_autori());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.gettotal().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setDate(autoripagoordencompraBean.getfecha_servidor());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.getcodigo_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setDate(autoripagoordencompraBean.getfecha_asiento());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.getvalor_asiento().toString());
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setText(autoripagoordencompraBean.gettotal_saldo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanAutoriPagoOrdenCompra(AutoriPagoOrdenCompraParameterReturnGeneral autoripagoordencompraReturnGeneral,AutoriPagoOrdenCompraBean autoripagoordencompraBean,Boolean conDefault) throws Exception { 
		try {
			AutoriPagoOrdenCompra autoripagoordencompraLocal=new AutoriPagoOrdenCompra();
			
			autoripagoordencompraLocal=autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && autoripagoordencompraLocal.getId()!=null && !autoripagoordencompraLocal.getId().equals(0L))) {autoripagoordencompraBean.setId(autoripagoordencompraLocal.getId());}}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_tipo_cambio()!=null && !autoripagoordencompraLocal.getid_tipo_cambio().equals(null))) {autoripagoordencompraBean.setid_tipo_cambio(autoripagoordencompraLocal.getid_tipo_cambio());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_cliente()!=null && !autoripagoordencompraLocal.getid_cliente().equals(-1L))) {autoripagoordencompraBean.setid_cliente(autoripagoordencompraLocal.getid_cliente());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_orden_compra()!=null && !autoripagoordencompraLocal.getid_orden_compra().equals(-1L))) {autoripagoordencompraBean.setid_orden_compra(autoripagoordencompraLocal.getid_orden_compra());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_transaccion()!=null && !autoripagoordencompraLocal.getid_transaccion().equals(-1L))) {autoripagoordencompraBean.setid_transaccion(autoripagoordencompraLocal.getid_transaccion());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_asiento_contable()!=null && !autoripagoordencompraLocal.getid_asiento_contable().equals(-1L))) {autoripagoordencompraBean.setid_asiento_contable(autoripagoordencompraLocal.getid_asiento_contable());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_banco()!=null && !autoripagoordencompraLocal.getid_banco().equals(-1L))) {autoripagoordencompraBean.setid_banco(autoripagoordencompraLocal.getid_banco());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getid_cuenta_banco()!=null && !autoripagoordencompraLocal.getid_cuenta_banco().equals(-1L))) {autoripagoordencompraBean.setid_cuenta_banco(autoripagoordencompraLocal.getid_cuenta_banco());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getnumero_comprobante()!=null && !autoripagoordencompraLocal.getnumero_comprobante().equals(""))) {autoripagoordencompraBean.setnumero_comprobante(autoripagoordencompraLocal.getnumero_comprobante());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getfecha()!=null && !autoripagoordencompraLocal.getfecha().equals(new Date()))) {autoripagoordencompraBean.setfecha(autoripagoordencompraLocal.getfecha());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getfecha_autori()!=null && !autoripagoordencompraLocal.getfecha_autori().equals(new Date()))) {autoripagoordencompraBean.setfecha_autori(autoripagoordencompraLocal.getfecha_autori());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.gettotal()!=null && !autoripagoordencompraLocal.gettotal().equals(0.0))) {autoripagoordencompraBean.settotal(autoripagoordencompraLocal.gettotal());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getfecha_servidor()!=null && !autoripagoordencompraLocal.getfecha_servidor().equals(new Date()))) {autoripagoordencompraBean.setfecha_servidor(autoripagoordencompraLocal.getfecha_servidor());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getcodigo_asiento()!=null && !autoripagoordencompraLocal.getcodigo_asiento().equals(""))) {autoripagoordencompraBean.setcodigo_asiento(autoripagoordencompraLocal.getcodigo_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getfecha_asiento()!=null && !autoripagoordencompraLocal.getfecha_asiento().equals(new Date()))) {autoripagoordencompraBean.setfecha_asiento(autoripagoordencompraLocal.getfecha_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.getvalor_asiento()!=null && !autoripagoordencompraLocal.getvalor_asiento().equals(0.0))) {autoripagoordencompraBean.setvalor_asiento(autoripagoordencompraLocal.getvalor_asiento());}
			if(conDefault || (!conDefault && autoripagoordencompraLocal.gettotal_saldo()!=null && !autoripagoordencompraLocal.gettotal_saldo().equals(0.0))) {autoripagoordencompraBean.settotal_saldo(autoripagoordencompraLocal.gettotal_saldo());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxAutoriPagoOrdenCompraGenerico(Long idAutoriPagoOrdenCompraSeleccionado,JComboBox jComboBoxAutoriPagoOrdenCompra,List<AutoriPagoOrdenCompra> autoripagoordencomprasLocal)throws Exception {
		try {
			AutoriPagoOrdenCompra  autoripagoordencompraTemp=null;

			for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasLocal) {
				if(autoripagoordencompraAux.getId()!=null && autoripagoordencompraAux.getId().equals(idAutoriPagoOrdenCompraSeleccionado)) {
					autoripagoordencompraTemp=autoripagoordencompraAux;
					break;
				}
			}

			jComboBoxAutoriPagoOrdenCompra.setSelectedItem(autoripagoordencompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxAutoriPagoOrdenCompraGenerico(JComboBox jComboBoxAutoriPagoOrdenCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxAutoriPagoOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAutoriPagoOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxAutoriPagoOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAutoriPagoOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAutoriPagoOrdenCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxAutoriPagoOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAutoriPagoOrdenCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxAutoriPagoOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxAutoriPagoOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxAutoriPagoOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			autoripagoordencompra=(AutoriPagoOrdenCompra) autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			autoripagoordencompra =(AutoriPagoOrdenCompra) autoripagoordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("OrdenCompra")) {
			//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getordencompra_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getusuario_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("Banco")) {
			//sDescripcion=this.getActualBancoForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getbanco_descripcion();
			} else {
				//sDescripcion=this.getActualBancoForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getbanco_descripcion();
			}
		}

		if(sTipo.equals("CuentaBanco")) {
			//sDescripcion=this.getActualCuentaBancoForeignKeyDescripcion((Long)value);
			if(!autoripagoordencompra.getIsNew() && !autoripagoordencompra.getIsChanged() && !autoripagoordencompra.getIsDeleted()) {
				sDescripcion=autoripagoordencompra.getcuentabanco_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaBancoForeignKeyDescripcion((Long)value);
				sDescripcion=autoripagoordencompra.getcuentabanco_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		AutoriPagoOrdenCompra autoripagoordencompraRow=new AutoriPagoOrdenCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			autoripagoordencompraRow=(AutoriPagoOrdenCompra) autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			autoripagoordencompraRow=(AutoriPagoOrdenCompra) autoripagoordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));			
			this.jButtonDuplicarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra && this.isPermisoDuplicarAutoriPagoOrdenCompra));			
			this.jButtonCopiarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra && this.isPermisoCopiarAutoriPagoOrdenCompra));
			this.jButtonVerFormAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra && this.isPermisoVerFormAutoriPagoOrdenCompra));
			
			this.jButtonAbrirOrderByAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));			
			
			this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));			
			this.jButtonNuevoGuardarCambiosAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra && this.isPermisoEliminarAutoriPagoOrdenCompra));
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra);							
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));						
			this.jButtonDuplicarToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra && this.isPermisoDuplicarAutoriPagoOrdenCompra));						
			this.jButtonCopiarToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra && this.isPermisoCopiarAutoriPagoOrdenCompra));			
			this.jButtonVerFormToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra && this.isPermisoVerFormAutoriPagoOrdenCompra));			
			this.jButtonAbrirOrderByToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));
			this.jButtonNuevoRelacionesToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));			
			this.jButtonNuevoGuardarCambiosToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));			
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra  && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra && this.isPermisoEliminarAutoriPagoOrdenCompra));
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarToolBarAutoriPagoOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra);				
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));			
			this.jMenuItemDuplicarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra && this.isPermisoDuplicarAutoriPagoOrdenCompra));			
			this.jMenuItemCopiarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra && this.isPermisoCopiarAutoriPagoOrdenCompra));			
			this.jMenuItemVerFormAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra && this.isPermisoVerFormAutoriPagoOrdenCompra));			
			this.jMenuItemAbrirOrderByAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));			
			//this.jMenuItemMostrarOcultarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));
			this.jMenuItemDetalleAbrirOrderByAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));			
			//this.jMenuItemDetalleMostrarOcultarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra && this.isPermisoOrdenAutoriPagoOrdenCompra));			
			this.jMenuItemNuevoRelacionesAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra));			
			this.jMenuItemNuevoGuardarCambiosAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra && this.isPermisoNuevoAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));									
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemModificarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemActualizarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra && this.isPermisoActualizarAutoriPagoOrdenCompra));	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemEliminarAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra && this.isPermisoEliminarAutoriPagoOrdenCompra));
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemCancelarAutoriPagoOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra);				
			}
			
			this.jMenuItemGuardarCambiosAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));						
			this.jMenuItemGuardarCambiosTablaAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=this.jButtonNuevoAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra=this.jButtonDuplicarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra=this.jButtonCopiarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra=this.jButtonVerFormAutoriPagoOrdenCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenAutoriPagoOrdenCompra=this.jButtonAbrirOrderByAutoriPagoOrdenCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=this.jButtonModificarAutoriPagoOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=this.jButtonGuardarCambiosTablaAutoriPagoOrdenCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=this.jButtonNuevoToolBarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=this.jButtonNuevoRelacionesToolBarAutoriPagoOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarToolBarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarToolBarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarToolBarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarToolBarAutoriPagoOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=this.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=this.jButtonGuardarCambiosTablaToolBarAutoriPagoOrdenCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=this.jMenuItemNuevoAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=this.jMenuItemNuevoRelacionesAutoriPagoOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemModificarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemActualizarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemEliminarAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemCancelarAutoriPagoOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=this.jMenuItemGuardarCambiosAutoriPagoOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=this.jMenuItemGuardarCambiosTablaAutoriPagoOrdenCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesAutoriPagoOrdenCompra(Boolean esInicializar) {
		if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
				//if(this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesAutoriPagoOrdenCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualAutoriPagoOrdenCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualAutoriPagoOrdenCompra() {
		this.jButtonNuevoAutoriPagoOrdenCompra.setVisible(this.isPermisoNuevoAutoriPagoOrdenCompra);			
		this.jButtonDuplicarAutoriPagoOrdenCompra.setVisible(this.isPermisoDuplicarAutoriPagoOrdenCompra);			
		this.jButtonCopiarAutoriPagoOrdenCompra.setVisible(this.isPermisoCopiarAutoriPagoOrdenCompra);			
		this.jButtonVerFormAutoriPagoOrdenCompra.setVisible(this.isPermisoVerFormAutoriPagoOrdenCompra);			
		
		this.jButtonAbrirOrderByAutoriPagoOrdenCompra.setVisible(this.isPermisoOrdenAutoriPagoOrdenCompra);					
		
		this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.setVisible(this.isPermisoNuevoAutoriPagoOrdenCompra);			
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarAutoriPagoOrdenCompra.setVisible(this.isPermisoActualizarAutoriPagoOrdenCompra);	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.setVisible(this.isPermisoActualizarAutoriPagoOrdenCompra);	
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.setVisible(this.isPermisoEliminarAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra);						
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.setVisible(this.isPermisoGuardarCambiosAutoriPagoOrdenCompra);							
		}
		
		this.jButtonGuardarCambiosTablaAutoriPagoOrdenCompra.setVisible(this.isPermisoActualizarAutoriPagoOrdenCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleAutoriPagoOrdenCompra() {
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarAutoriPagoOrdenCompra.setVisible(this.isPermisoActualizarAutoriPagoOrdenCompra);	
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.setVisible(this.isPermisoActualizarAutoriPagoOrdenCompra);	
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.setVisible(this.isPermisoEliminarAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra);							
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra && this.isPermisoGuardarCambiosAutoriPagoOrdenCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosAutoriPagoOrdenCompra() {
		if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualAutoriPagoOrdenCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesAutoriPagoOrdenCompra() {
	}
	
	public void jTableDatosAutoriPagoOrdenCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarAutoriPagoOrdenCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.autoripagoordencompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAutoriPagoOrdenCompra=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.autoripagoordencompra.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.autoripagoordencompra.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAutoriPagoOrdenCompra=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.autoripagoordencompra.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.autoripagoordencompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.autoripagoordencompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_orden_compraAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoordencompra=true;

			idTienePermisoordencompra=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(OrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ordencompraBeanSwingJInternalFrame.getOrdenCompraLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_orden_compra()!=null) {
					this.ordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ordencompraBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_orden_compra());
					this.ordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.ordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderordencompra=(TitledBorder)this.ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

				titledBorderordencompra.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> OrdenCompra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_orden_compraAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_orden_compra = "+this.autoripagoordencompra.getid_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.autoripagoordencompra.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.autoripagoordencompra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.autoripagoordencompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.autoripagoordencompra.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAutoriPagoOrdenCompra=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.autoripagoordencompra.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bancoAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobanco=true;

			idTienePermisobanco=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(BancoConstantesFunciones.CLASSNAME);

			if(idTienePermisobanco) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.bancoBeanSwingJInternalFrame=new BancoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bancoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bancoBeanSwingJInternalFrame.getBancoLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_banco()!=null) {
					this.bancoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bancoBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_banco());
					this.bancoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bancoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBanco();
				}

				JInternalFrameBase jinternalFrame =this.bancoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBorderbanco=(TitledBorder)this.bancoBeanSwingJInternalFrame.jScrollPanelDatosBanco.getBorder();

				titledBorderbanco.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_banco()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_banco = "+this.autoripagoordencompra.getid_banco().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentabanco=true;

			idTienePermisocuentabanco=this.tienePermisosUsuarioEnPaginaWebAutoriPagoOrdenCompra(CuentaBancoConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentabanco) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAutoriPagoOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAutoriPagoOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);

				this.cuentabancoBeanSwingJInternalFrame=new CuentaBancoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentabancoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentabancoBeanSwingJInternalFrame.getCuentaBancoLogic().setConnexion(this.autoripagoordencompraLogic.getConnexion());

				if(this.autoripagoordencompra.getid_cuenta_banco()!=null) {
					this.cuentabancoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentabancoBeanSwingJInternalFrame.setIdActual(this.autoripagoordencompra.getid_cuenta_banco());
					this.cuentabancoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentabancoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentabancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaBanco();
				}

				JInternalFrameBase jinternalFrame =this.cuentabancoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAutoriPagoOrdenCompra=(TitledBorder)this.jScrollPanelDatosAutoriPagoOrdenCompra.getBorder();
				TitledBorder titledBordercuentabanco=(TitledBorder)this.cuentabancoBeanSwingJInternalFrame.jScrollPanelDatosCuentaBanco.getBorder();

				titledBordercuentabanco.setTitle(titledBorderAutoriPagoOrdenCompra.getTitle() + " -> Cuenta Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getid_cuenta_banco()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_banco = "+this.autoripagoordencompra.getid_cuenta_banco().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.autoripagoordencompra.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.autoripagoordencompra.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_autoriAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getfecha_autori()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_autori = '"+Funciones2.getStringPostgresDate(this.autoripagoordencompra.getfecha_autori())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.autoripagoordencompra.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_servidorAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getfecha_servidor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_servidor = '"+Funciones2.getStringPostgresDate(this.autoripagoordencompra.getfecha_servidor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigo_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getcodigo_asiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo_asiento like '%"+this.autoripagoordencompra.getcodigo_asiento()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getfecha_asiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_asiento = '"+Funciones2.getStringPostgresDate(this.autoripagoordencompra.getfecha_asiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.getvalor_asiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_asiento = "+this.autoripagoordencompra.getvalor_asiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_saldoAutoriPagoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.getautoripagoordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.autoripagoordencompra==null) {
						this.autoripagoordencompra = new AutoriPagoOrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);
				}

				if(this.autoripagoordencompra.gettotal_saldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_saldo = "+this.autoripagoordencompra.gettotal_saldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAsientoContableAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdAsientoContable();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBancoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdBanco();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdCliente();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaBancoAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdCuentaBanco();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdEjercicio();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdEmpresa();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdModulo();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdMoneda();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdOrdenCompraAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdOrdenCompra();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdSucursal();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdTipoCambio();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdTransaccion();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioAutoriPagoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);

			this.getAutoriPagoOrdenComprasFK_IdUsuario();

			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);

			//if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.autoripagoordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameAutoriPagoOrdenCompra() {
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.dispose();
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.dispose();
			this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra=null;
		}
		
		if(this.jInternalFrameImportacionAutoriPagoOrdenCompra!=null) {
			this.jInternalFrameImportacionAutoriPagoOrdenCompra.setVisible(false);	    			
			this.jInternalFrameImportacionAutoriPagoOrdenCompra.dispose();
			this.jInternalFrameImportacionAutoriPagoOrdenCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessAutoriPagoOrdenCompra();
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarAutoriPagoOrdenCompra")) {
				jButtonDuplicarAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarAutoriPagoOrdenCompra")) {
				jButtonCopiarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormAutoriPagoOrdenCompra")) {
				jButtonVerFormAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarAutoriPagoOrdenCompra")) {
				jButtonDuplicarAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarAutoriPagoOrdenCompra")) {
				jButtonDuplicarAutoriPagoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarAutoriPagoOrdenCompra")) {
				jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarAutoriPagoOrdenCompra")) {
				jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarAutoriPagoOrdenCompra")) {
				jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarAutoriPagoOrdenCompra")) {
				jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarAutoriPagoOrdenCompra")) {
				jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarAutoriPagoOrdenCompra")) {
				jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarAutoriPagoOrdenCompra")) {
				jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarAutoriPagoOrdenCompra")) {
				jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarAutoriPagoOrdenCompra")) {
				jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarAutoriPagoOrdenCompra")) {
				jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarAutoriPagoOrdenCompra")) {
				jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarAutoriPagoOrdenCompra")) {
				jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarAutoriPagoOrdenCompra")) {
				jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarAutoriPagoOrdenCompra")) {
				jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarAutoriPagoOrdenCompra")) {
				jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarAutoriPagoOrdenCompra")) {
				jButtonMostrarOcultarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarAutoriPagoOrdenCompra")) {
				jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarAutoriPagoOrdenCompra")) {
				jButtonCopiarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarAutoriPagoOrdenCompra")) {
				jButtonVerFormAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarAutoriPagoOrdenCompra")) {
				jButtonCopiarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormAutoriPagoOrdenCompra")) {
				jButtonVerFormAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionAutoriPagoOrdenCompra")) {
				jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarAutoriPagoOrdenCompra")) {
				jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionAutoriPagoOrdenCompra")) {
				jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresAutoriPagoOrdenCompra")) {
				jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarAutoriPagoOrdenCompra")) {
				jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreAutoriPagoOrdenCompra")) {
				jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesAutoriPagoOrdenCompra")) {
				jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarAutoriPagoOrdenCompra")) {
				jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesAutoriPagoOrdenCompra")) {
				jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByAutoriPagoOrdenCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByAutoriPagoOrdenCompra")) {
				jButtonAbrirOrderByAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarAutoriPagoOrdenCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarAutoriPagoOrdenCompra")) {
				jButtonMostrarOcultarAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarAutoriPagoOrdenCompra")) {
				jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoAutoriPagoOrdenCompra")) {
				jButtonCerrarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoAutoriPagoOrdenCompra")) {
				jButtonGenerarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoAutoriPagoOrdenCompra")) {
				
				jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionAutoriPagoOrdenCompra")) {
				jButtonCerrarImportacionAutoriPagoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionAutoriPagoOrdenCompra")) {
				
				jButtonGenerarImportacionAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionAutoriPagoOrdenCompra")) {
				
				jButtonAbrirImportacionAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesAutoriPagoOrdenCompra")) {
				jComboBoxTiposAccionesAutoriPagoOrdenCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesAutoriPagoOrdenCompra")) {
				jComboBoxTiposRelacionesAutoriPagoOrdenCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioAutoriPagoOrdenCompra")) {
				jComboBoxTiposAccionesAutoriPagoOrdenCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarAutoriPagoOrdenCompra")) {
				
				jComboBoxTiposSeleccionarAutoriPagoOrdenCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralAutoriPagoOrdenCompra")) {
				jTextFieldValorCampoGeneralAutoriPagoOrdenCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByAutoriPagoOrdenCompra")) {
				jButtonAbrirOrderByAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarAutoriPagoOrdenCompra")) {
				jButtonAbrirOrderByAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByAutoriPagoOrdenCompra")) {
				jButtonCerrarOrderByAutoriPagoOrdenCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonidAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompra")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_monedaAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_monedaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompra")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_empresaAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_empresaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_sucursalAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_sucursalAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_orden_compraAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_transaccionAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_transaccionAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_moduloAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_moduloAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_ejercicioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_usuarioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_usuarioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompra")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bancoAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_bancoAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bancoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_bancoAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_bancoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfechaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_autoriAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_autoriAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalAutoriPagoOrdenCompraBusqueda")) {
				this.jButtontotalAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_servidorAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtoncodigo_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonvalor_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_saldoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtontotal_saldoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompra")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompra")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompra")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdAsientoContableAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBancoAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdBancoAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdClienteAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaBancoAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdCuentaBancoAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdOrdenCompraAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdOrdenCompraAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdTipoCambioAutoriPagoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionAutoriPagoOrdenCompra")) {
				this.jButtonFK_IdTransaccionAutoriPagoOrdenCompraActionPerformed(evt);
			}
			
			;
			
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessAutoriPagoOrdenCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			AutoriPagoOrdenCompra autoripagoordencompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				autoripagoordencompraLocal=this.autoripagoordencompra;
			} else {
				autoripagoordencompraLocal=this.autoripagoordencompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
							
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
								
						
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
								
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
							
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
								
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosAutoriPagoOrdenCompra")) {
					jCheckBoxSeleccionarTodosAutoriPagoOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosAutoriPagoOrdenCompra")) {
					jCheckBoxSeleccionadosAutoriPagoOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarAutoriPagoOrdenCompra")) {
					
				}
				
				


				
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
												
				
				


				
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.autoripagoordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.autoripagoordencompra);
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AutoriPagoOrdenCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AutoriPagoOrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAutoriPagoOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.autoripagoordencompraAnterior =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarAutoriPagoOrdenCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosAutoriPagoOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosAutoriPagoOrdenCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.autoripagoordencompra =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.autoripagoordencompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarAutoriPagoOrdenCompra")) {
				
				}
				
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarAutoriPagoOrdenCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosAutoriPagoOrdenCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarAutoriPagoOrdenCompra")) {
			
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessAutoriPagoOrdenCompra();
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			if(sTipo.equals("NuevoAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarAutoriPagoOrdenCompra")) {
				jButtonDuplicarAutoriPagoOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarAutoriPagoOrdenCompra")) {
				jButtonCopiarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormAutoriPagoOrdenCompra")) {
				jButtonVerFormAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesAutoriPagoOrdenCompra")) {
				jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarAutoriPagoOrdenCompra")) {
				jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarAutoriPagoOrdenCompra")) {
				jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarAutoriPagoOrdenCompra")) {
				jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarAutoriPagoOrdenCompra")) {
				jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarAutoriPagoOrdenCompra")) {
				jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosAutoriPagoOrdenCompra")) {
				jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByAutoriPagoOrdenCompra")) {
				jButtonAbrirOrderByAutoriPagoOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionAutoriPagoOrdenCompra")) {
				jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresAutoriPagoOrdenCompra")) {
				jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesAutoriPagoOrdenCompra")) {
				jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonidAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompra")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_tipo_cambioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_monedaAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_monedaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompra")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_clienteAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_empresaAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_empresaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_sucursalAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_sucursalAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_orden_compraAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_transaccionAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_transaccionAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_moduloAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_moduloAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_ejercicioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_usuarioAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_usuarioAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompra")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_asiento_contableAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bancoAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_bancoAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bancoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_bancoAutoriPagoOrdenCompraUpdate")) {
				this.jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_bancoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfechaAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_autoriAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_autoriAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalAutoriPagoOrdenCompraBusqueda")) {
				this.jButtontotalAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_servidorAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtoncodigo_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonfecha_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_asientoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtonvalor_asientoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_saldoAutoriPagoOrdenCompraBusqueda")) {
				this.jButtontotal_saldoAutoriPagoOrdenCompraBusquedaActionPerformed(evt);
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessAutoriPagoOrdenCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameAutoriPagoOrdenCompra")) {
				closingInternalFrameAutoriPagoOrdenCompra();
				
			} else if(sTipo.equals("jButtonCancelarAutoriPagoOrdenCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormAutoriPagoOrdenCompra = (JInternalFrameBase)evt.getSource();
	            	
	            AutoriPagoOrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(AutoriPagoOrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormAutoriPagoOrdenCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarAutoriPagoOrdenCompraActionPerformed(null);
			}
			
			AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.autoripagoordencompra,new Object(),this.autoripagoordencompraParameterGeneral,this.autoripagoordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormAutoriPagoOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormAutoriPagoOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormAutoriPagoOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.autoripagoordencompra)) {
			if(!esControlTabla) {
				if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);			
				}
				
				if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.procesarEventosAutoriPagoOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this.autoripagoordencompra,this.autoripagoordencompraParameterGeneral,this.isEsNuevoAutoriPagoOrdenCompra,classes);//this.autoripagoordencompraLogic.getAutoriPagoOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral,this.autoripagoordencompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanAutoriPagoOrdenCompra(classes,this.autoripagoordencompraReturnGeneral,this.autoripagoordencompraBean,false);
					}
						
					if(this.autoripagoordencompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra());	
					}
						
					if(this.autoripagoordencompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra(),classes);//this.autoripagoordencompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioAutoriPagoOrdenCompra(this.autoripagoordencompra,classes);//this.autoripagoordencompraBean);									
				}
			
				if(AutoriPagoOrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualAutoriPagoOrdenCompra(this.autoripagoordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAutoriPagoOrdenCompra(this.autoripagoordencompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.autoripagoordencompraAnterior!=null) {
						this.autoripagoordencompra=this.autoripagoordencompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.procesarEventosAutoriPagoOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this.autoripagoordencompra,this.autoripagoordencompraParameterGeneral,this.isEsNuevoAutoriPagoOrdenCompra,classes);//this.autoripagoordencompraLogic.getAutoriPagoOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.autoripagoordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.autoripagoordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra(),autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra(),this.autoripagoordencompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosAutoriPagoOrdenCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosAutoriPagoOrdenCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosAutoriPagoOrdenCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosAutoriPagoOrdenCompra() throws Exception {
		
		AutoriPagoOrdenCompraModel autoripagoordencompraModel=(AutoriPagoOrdenCompraModel)this.jTableDatosAutoriPagoOrdenCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			autoripagoordencompraModel.autoripagoordencompras=this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			autoripagoordencompraModel.autoripagoordencompras=this.autoripagoordencompras;
		}
		
		
		((AutoriPagoOrdenCompraModel) this.jTableDatosAutoriPagoOrdenCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaAutoriPagoOrdenCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getautoripagoordencompraAnterior(),this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getautoripagoordencompraAnterior(),this.autoripagoordencompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosAutoriPagoOrdenCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.autoripagoordencompra,new Object(),generalEntityParameterGeneral,this.autoripagoordencompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=AutoriPagoOrdenCompraConstantesFunciones.getClassesRelationshipsOfAutoriPagoOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=AutoriPagoOrdenCompraConstantesFunciones.getClassesRelationshipsFromStringsOfAutoriPagoOrdenCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormAutoriPagoOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.autoripagoordencompra,new Object(),generalEntityParameterGeneral,this.autoripagoordencompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioAutoriPagoOrdenCompra(AutoriPagoOrdenCompraBean autoripagoordencompraBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanAutoriPagoOrdenCompra(ArrayList<Classe> classes,AutoriPagoOrdenCompraReturnGeneral autoripagoordencompraReturnGeneral,AutoriPagoOrdenCompraBean autoripagoordencompraBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.autoripagoordencompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra = new AutoriPagoOrdenCompraDetalleFormJInternalFrame(jDesktopPane,this.autoripagoordencompraSessionBean.getConGuardarRelaciones(),this.autoripagoordencompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setVisible(false);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.autoripagoordencompraLogic=this.autoripagoordencompraLogic;
		
		this.cargarCombosFrameForeignKeyAutoriPagoOrdenCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleAutoriPagoOrdenCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAutoriPagoOrdenCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyAutoriPagoOrdenCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyAutoriPagoOrdenCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAutoriPagoOrdenCompra"));
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarAutoriPagoOrdenCompra"));

		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarAutoriPagoOrdenCompra"));
					
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemModificarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarAutoriPagoOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarAutoriPagoOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAutoriPagoOrdenCompra"));
						
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemActualizarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAutoriPagoOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarAutoriPagoOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarAutoriPagoOrdenCompra"));
								
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemEliminarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAutoriPagoOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarAutoriPagoOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarAutoriPagoOrdenCompra"));
					
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemCancelarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAutoriPagoOrdenCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemDetalleCerrarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAutoriPagoOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAutoriPagoOrdenCompra"));
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAutoriPagoOrdenCompra"));
		
		
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAutoriPagoOrdenCompra"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonidAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_clienteAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonnumero_comprobanteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfechaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_autoriAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autoriAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_servidorAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtoncodigo_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"codigo_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonvalor_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotal_saldoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_saldoAutoriPagoOrdenCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAutoriPagoOrdenCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameAutoriPagoOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAutoriPagoOrdenCompra"));
		}
		
		this.jTableDatosAutoriPagoOrdenCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarAutoriPagoOrdenCompra"));
		
		this.jTableDatosAutoriPagoOrdenCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarAutoriPagoOrdenCompra"));
		
		this.jButtonNuevoAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoAutoriPagoOrdenCompra"));
		
		this.jButtonDuplicarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarAutoriPagoOrdenCompra"));
		
		this.jButtonCopiarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"CopiarAutoriPagoOrdenCompra"));
		
		this.jButtonVerFormAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"VerFormAutoriPagoOrdenCompra"));
		
		
		this.jButtonNuevoToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarAutoriPagoOrdenCompra"));
			
		this.jButtonDuplicarToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemNuevoAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoAutoriPagoOrdenCompra"));
			
		this.jMenuItemDuplicarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarAutoriPagoOrdenCompra"));		
		
		
		this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesAutoriPagoOrdenCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemNuevoRelacionesAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesAutoriPagoOrdenCompra"));		
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarAutoriPagoOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonModificarToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarAutoriPagoOrdenCompra"));
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemModificarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarAutoriPagoOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarAutoriPagoOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonActualizarToolBarAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAutoriPagoOrdenCompra"));
				
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemActualizarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAutoriPagoOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarAutoriPagoOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonEliminarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarAutoriPagoOrdenCompra"));
						
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemEliminarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAutoriPagoOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarAutoriPagoOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonCancelarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarAutoriPagoOrdenCompra"));
			
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemCancelarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAutoriPagoOrdenCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarAutoriPagoOrdenCompra"));		
		
		
		this.jButtonCerrarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarAutoriPagoOrdenCompra"));
		
		
		this.jButtonCerrarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemCerrarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarAutoriPagoOrdenCompra"));
			
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jMenuItemDetalleCerrarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAutoriPagoOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosAutoriPagoOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAutoriPagoOrdenCompra"));
		}
		
		this.jButtonCopiarToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarAutoriPagoOrdenCompra"));
			
		this.jButtonVerFormToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarAutoriPagoOrdenCompra"));
		
		this.jMenuItemGuardarCambiosAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosAutoriPagoOrdenCompra"));
			
		this.jMenuItemCopiarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarAutoriPagoOrdenCompra"));		
		
		this.jMenuItemVerFormAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormAutoriPagoOrdenCompra"));		
		
		
		this.jButtonGuardarCambiosTablaAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAutoriPagoOrdenCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemGuardarCambiosTablaAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAutoriPagoOrdenCompra"));		
		
		
		
		this.jButtonRecargarInformacionAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionAutoriPagoOrdenCompra"));
					
		this.jButtonRecargarInformacionToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarAutoriPagoOrdenCompra"));
		
		this.jMenuItemRecargarInformacionAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionAutoriPagoOrdenCompra"));		
		
		
		
		this.jButtonAnterioresAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresAutoriPagoOrdenCompra"));
		
		
		this.jButtonAnterioresToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarAutoriPagoOrdenCompra"));
		
		this.jMenuItemAnterioresAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresAutoriPagoOrdenCompra"));		
		
		
		this.jButtonSiguientesAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesAutoriPagoOrdenCompra"));
		
		
		this.jButtonSiguientesToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemSiguientesAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesAutoriPagoOrdenCompra"));
			
		this.jMenuItemAbrirOrderByAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByAutoriPagoOrdenCompra"));
			
		this.jMenuItemMostrarOcultarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarAutoriPagoOrdenCompra"));
			
		this.jMenuItemDetalleAbrirOrderByAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByAutoriPagoOrdenCompra"));
			
		this.jMenuItemDetalleMostarOcultarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarAutoriPagoOrdenCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosAutoriPagoOrdenCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarAutoriPagoOrdenCompra"));
			
		this.jMenuItemNuevoGuardarCambiosAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosAutoriPagoOrdenCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosAutoriPagoOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosAutoriPagoOrdenCompra"));

		this.jCheckBoxSeleccionadosAutoriPagoOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosAutoriPagoOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAutoriPagoOrdenCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesAutoriPagoOrdenCompra"));
			
		this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesAutoriPagoOrdenCompra"));
					
		this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarAutoriPagoOrdenCompra"));
			
		this.jTextFieldValorCampoGeneralAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralAutoriPagoOrdenCompra"));		
		
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonidAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_clienteAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonnumero_comprobanteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfechaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_autoriAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autoriAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_servidorAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtoncodigo_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"codigo_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonvalor_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotal_saldoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_saldoAutoriPagoOrdenCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableAutoriPagoOrdenCompra"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompra"));

			this.jButtonFK_IdBancoAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdBancoAutoriPagoOrdenCompra"));

			this.jButtonFK_IdClienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteAutoriPagoOrdenCompra"));

			this.jButtonBuscarFK_IdClienteid_clienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompra"));

			this.jButtonFK_IdCuentaBancoAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoAutoriPagoOrdenCompra"));

			this.jButtonFK_IdOrdenCompraAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraAutoriPagoOrdenCompra"));

			this.jButtonFK_IdTipoCambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioAutoriPagoOrdenCompra"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompra"));

			this.jButtonFK_IdTransaccionAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionAutoriPagoOrdenCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAutoriPagoOrdenCompra"));
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAutoriPagoOrdenCompra"));
				this.jInternalFrameReporteDinamicoAutoriPagoOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAutoriPagoOrdenCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAutoriPagoOrdenCompra"));				
			//this.jButtonGenerarReporteDinamicoAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAutoriPagoOrdenCompra"));
			//this.jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAutoriPagoOrdenCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAutoriPagoOrdenCompra"));
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAutoriPagoOrdenCompra"));
				this.jInternalFrameImportacionAutoriPagoOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAutoriPagoOrdenCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByAutoriPagoOrdenCompra"));
			
			this.jButtonAbrirOrderByToolBarAutoriPagoOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarAutoriPagoOrdenCompra"));			
			
			if(this.jInternalFrameOrderByAutoriPagoOrdenCompra!=null) {
				this.jInternalFrameOrderByAutoriPagoOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAutoriPagoOrdenCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTabbedPaneRelacionesAutoriPagoOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAutoriPagoOrdenCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameAutoriPagoOrdenCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormAutoriPagoOrdenCompra = (JInternalFrameBase)event.getSource();
	            	
	            AutoriPagoOrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(AutoriPagoOrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormAutoriPagoOrdenCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarAutoriPagoOrdenCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosAutoriPagoOrdenCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosAutoriPagoOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosAutoriPagoOrdenCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosAutoriPagoOrdenCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoAutoriPagoOrdenCompra";
		inputMap = this.jButtonNuevoAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesAutoriPagoOrdenCompra";
		inputMap = this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAutoriPagoOrdenCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarAutoriPagoOrdenCompra";
		inputMap = this.jButtonModificarAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarAutoriPagoOrdenCompra";
		inputMap = this.jButtonActualizarAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarAutoriPagoOrdenCompra";
		inputMap = this.jButtonEliminarAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarAutoriPagoOrdenCompra";
		inputMap = this.jButtonCancelarAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarAutoriPagoOrdenCompra";
		inputMap = this.jButtonCerrarAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosAutoriPagoOrdenCompra";
		inputMap = this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonGuardarCambiosAutoriPagoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosAutoriPagoOrdenCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosAutoriPagoOrdenCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesAutoriPagoOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarAutoriPagoOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralAutoriPagoOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralAutoriPagoOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonidAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_monedaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_clienteAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_empresaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_sucursalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_orden_compraAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_transaccionAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_moduloAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_ejercicioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_usuarioAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAutoriPagoOrdenCompraBusqueda"));
		//jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableAutoriPagoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoAutoriPagoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_cuenta_bancoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_bancoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonnumero_comprobanteAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfechaAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_autoriAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_autoriAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotalAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_servidorAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtoncodigo_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"codigo_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonfecha_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonvalor_asientoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_asientoAutoriPagoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtontotal_saldoAutoriPagoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_saldoAutoriPagoOrdenCompraBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableAutoriPagoOrdenCompra"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableAutoriPagoOrdenCompra"));

		this.jButtonFK_IdBancoAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdBancoAutoriPagoOrdenCompra"));

		this.jButtonFK_IdClienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteAutoriPagoOrdenCompra"));

		this.jButtonBuscarFK_IdClienteid_clienteAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteAutoriPagoOrdenCompra"));

		this.jButtonFK_IdCuentaBancoAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoAutoriPagoOrdenCompra"));

		this.jButtonFK_IdOrdenCompraAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraAutoriPagoOrdenCompra"));

		this.jButtonFK_IdTipoCambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioAutoriPagoOrdenCompra"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioAutoriPagoOrdenCompra"));

		this.jButtonFK_IdTransaccionAutoriPagoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionAutoriPagoOrdenCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionAutoriPagoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionAutoriPagoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarAutoriPagoOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarAutoriPagoOrdenCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosAutoriPagoOrdenCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
					autoripagoordencompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompras) {
					autoripagoordencompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosAutoriPagoOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
						autoripagoordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompras) {
						autoripagoordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAutoriPagoOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAutoriPagoOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosAutoriPagoOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosAutoriPagoOrdenCompra.getSelectedRows();
			
			AutoriPagoOrdenCompra autoripagoordencompraLocal=new AutoriPagoOrdenCompra();
			
			//this.seleccionarTodosAutoriPagoOrdenCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					autoripagoordencompraLocal =(AutoriPagoOrdenCompra) this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras().toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					autoripagoordencompraLocal =(AutoriPagoOrdenCompra) this.autoripagoordencompras.toArray()[this.jTableDatosAutoriPagoOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				autoripagoordencompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
						autoripagoordencompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompras) {
						autoripagoordencompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAutoriPagoOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAutoriPagoOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAutoriPagoOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualAutoriPagoOrdenCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarAutoriPagoOrdenCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralAutoriPagoOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralAutoriPagoOrdenCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
				
						if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							autoripagoordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							autoripagoordencompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI)) {
							existe=true;
							autoripagoordencompraAux.setfecha_autori(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							autoripagoordencompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							autoripagoordencompraAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setcodigo_asiento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setfecha_asiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setvalor_asiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO)) {
							existe=true;
							autoripagoordencompraAux.settotal_saldo(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompras) {
					
						if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							autoripagoordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							autoripagoordencompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI)) {
							existe=true;
							autoripagoordencompraAux.setfecha_autori(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							autoripagoordencompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							autoripagoordencompraAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setcodigo_asiento(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setfecha_asiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO)) {
							existe=true;
							autoripagoordencompraAux.setvalor_asiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO)) {
							existe=true;
							autoripagoordencompraAux.settotal_saldo(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesAutoriPagoOrdenCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioAutoriPagoOrdenCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteAutoriPagoOrdenCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessAutoriPagoOrdenCompra(conSplash);
				
					this.generarReporteAutoriPagoOrdenComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoAutoriPagoOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAutoriPagoOrdenComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAutoriPagoOrdenComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAutoriPagoOrdenCompra();
				
				this.exportarAutoriPagoOrdenComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionAutoriPagoOrdenCompras();
				//this.importarAutoriPagoOrdenCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAutoriPagoOrdenCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelAutoriPagoOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Autori Pago Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessAutoriPagoOrdenCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoAutoriPagoOrdenCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyAutoriPagoOrdenCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(AutoriPagoOrdenCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteAutoriPagoOrdenCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessAutoriPagoOrdenCompra(conSplash);
					
						//this.actualizarParametrosGeneralAutoriPagoOrdenCompra();
						
						this.generarReporteProcesoAccionAutoriPagoOrdenComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Autori Pago Orden CompraS SELECCIONADOS?", "MANTENIMIENTO DE Autori Pago Orden Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessAutoriPagoOrdenCompra();
				
						this.actualizarParametrosGeneralAutoriPagoOrdenCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.autoripagoordencompraReturnGeneral=autoripagoordencompraLogic.procesarAccionAutoriPagoOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras(),this.autoripagoordencompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarAutoriPagoOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralAutoriPagoOrdenCompra();
					
					AutoriPagoOrdenCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarAutoriPagoOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAutoriPagoOrdenCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxTiposAccionesFormularioAutoriPagoOrdenCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessAutoriPagoOrdenCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesAutoriPagoOrdenCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessAutoriPagoOrdenCompra();
			
			if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
			AutoriPagoOrdenCompra autoripagoordencompra=new AutoriPagoOrdenCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesAutoriPagoOrdenCompra.getSelectedItem();
			
			
			
			
			autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(autoripagoordencomprasSeleccionados.size()==1) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
					autoripagoordencompra=autoripagoordencompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessAutoriPagoOrdenCompra();
			
      		//this.finishProcessAutoriPagoOrdenCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarAutoriPagoOrdenCompraReturnGeneral() throws Exception {
		if(this.autoripagoordencompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.autoripagoordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.autoripagoordencompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.autoripagoordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.autoripagoordencompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.autoripagoordencompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
		}
		
		if(this.autoripagoordencompraReturnGeneral.getConRetornoLista() || this.autoripagoordencompraReturnGeneral.getConRetornoObjeto()) {
			if(this.autoripagoordencompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.autoripagoordencompraLogic.setAutoriPagoOrdenCompras(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.autoripagoordencompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.autoripagoordencompraLogic.setAutoriPagoOrdenCompra(this.autoripagoordencompraReturnGeneral.getAutoriPagoOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingAutoriPagoOrdenCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralAutoriPagoOrdenCompra() throws Exception {
		
		
	}
	
	public ArrayList<AutoriPagoOrdenCompra> getAutoriPagoOrdenComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioAutoriPagoOrdenCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencompraLogic.getAutoriPagoOrdenCompras()) {
					if(autoripagoordencompraAux.getIsSelected()) {
						autoripagoordencomprasSeleccionados.add(autoripagoordencompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AutoriPagoOrdenCompra autoripagoordencompraAux:this.autoripagoordencompras) {
					if(autoripagoordencompraAux.getIsSelected()) {
						autoripagoordencomprasSeleccionados.add(autoripagoordencompraAux);				
					}
				}
			}
			
			if(autoripagoordencomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						autoripagoordencomprasSeleccionados.addAll(this.autoripagoordencompraLogic.getAutoriPagoOrdenCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						autoripagoordencomprasSeleccionados.addAll(this.autoripagoordencompras);				
					}
				}
			}
		} else {
			autoripagoordencomprasSeleccionados.add(this.autoripagoordencompra);
		}
		
		return autoripagoordencomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteAutoriPagoOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalAutoriPagoOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoAutoriPagoOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAutoriPagoOrdenComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAutoriPagoOrdenComprasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Autori Pago Orden Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionAutoriPagoOrdenComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoAutoriPagoOrdenCompra();
		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoAutoriPagoOrdenCompra();
		
		
		//this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados ,autoripagoordencompraImplementable,autoripagoordencompraImplementableHome);
	}
	
	public void mostrarImportacionAutoriPagoOrdenCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionAutoriPagoOrdenCompra();
		
		this.abrirFrameImportacionAutoriPagoOrdenCompra();		
		
			
		//this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados ,autoripagoordencompraImplementable,autoripagoordencompraImplementableHome);
	}
	
	public void importarAutoriPagoOrdenCompras() throws Exception {		
	
	}
	
	public void exportarAutoriPagoOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelAutoriPagoOrdenComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoAutoriPagoOrdenComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlAutoriPagoOrdenComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Autori Pago Orden Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarAutoriPagoOrdenCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarAutoriPagoOrdenCompra(autoripagoordencompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//autoripagoordencompraAux.setsDetalleGeneralEntityReporte(autoripagoordencompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarAutoriPagoOrdenCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=autoripagoordencompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getbanco_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getcuentabanco_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getnumero_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getfecha_autori().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getfecha_servidor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getcodigo_asiento();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getfecha_asiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.getvalor_asiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=autoripagoordencompra.gettotal_saldo().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("AutoriPagoOrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelAutoriPagoOrdenCompra(row);				
				iRow++;
			}				
			
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelAutoriPagoOrdenCompra(autoripagoordencompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlAutoriPagoOrdenComprasSeleccionados() throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();		
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"autoripagoordencompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("autoripagoordencompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("autoripagoordencompra");
			//elementRoot.appendChild(element);
		
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
				element = document.createElement("autoripagoordencompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlAutoriPagoOrdenCompra(autoripagoordencompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Autori Pago Orden Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelAutoriPagoOrdenCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_VALORASIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(AutoriPagoOrdenCompraConstantesFunciones.LABEL_TOTALSALDO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getbanco_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getcuentabanco_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getnumero_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getfecha_autori());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getfecha_servidor());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getcodigo_asiento());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getfecha_asiento());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.getvalor_asiento());
		cell = row.createCell(iColumn++);cell.setCellValue(autoripagoordencompra.gettotal_saldo());				
	}
	
	public void setFilaDatosExportarXmlAutoriPagoOrdenCompra(AutoriPagoOrdenCompra autoripagoordencompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(autoripagoordencompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(autoripagoordencompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementtipocambio_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(autoripagoordencompra.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementmoneda_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcliente_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementempresa_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementordencompra_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDORDENCOMPRA);
		elementordencompra_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getordencompra_descripcion()));
		element.appendChild(elementordencompra_descripcion);

		Element elementtransaccion_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(autoripagoordencompra.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementmodulo_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementusuario_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementasientocontable_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementbanco_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDBANCO);
		elementbanco_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getbanco_descripcion()));
		element.appendChild(elementbanco_descripcion);

		Element elementcuentabanco_descripcion = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.IDCUENTABANCO);
		elementcuentabanco_descripcion.appendChild(document.createTextNode(autoripagoordencompra.getcuentabanco_descripcion()));
		element.appendChild(elementcuentabanco_descripcion);

		Element elementnumero_comprobante = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(autoripagoordencompra.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);

		Element elementfecha = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(autoripagoordencompra.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_autori = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.FECHAAUTORI);
		elementfecha_autori.appendChild(document.createTextNode(autoripagoordencompra.getfecha_autori().toString().trim()));
		element.appendChild(elementfecha_autori);

		Element elementtotal = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(autoripagoordencompra.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementfecha_servidor = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.FECHASERVIDOR);
		elementfecha_servidor.appendChild(document.createTextNode(autoripagoordencompra.getfecha_servidor().toString().trim()));
		element.appendChild(elementfecha_servidor);

		Element elementcodigo_asiento = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.CODIGOASIENTO);
		elementcodigo_asiento.appendChild(document.createTextNode(autoripagoordencompra.getcodigo_asiento().trim()));
		element.appendChild(elementcodigo_asiento);

		Element elementfecha_asiento = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.FECHAASIENTO);
		elementfecha_asiento.appendChild(document.createTextNode(autoripagoordencompra.getfecha_asiento().toString().trim()));
		element.appendChild(elementfecha_asiento);

		Element elementvalor_asiento = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.VALORASIENTO);
		elementvalor_asiento.appendChild(document.createTextNode(autoripagoordencompra.getvalor_asiento().toString().trim()));
		element.appendChild(elementvalor_asiento);

		Element elementtotal_saldo = document.createElement(AutoriPagoOrdenCompraConstantesFunciones.TOTALSALDO);
		elementtotal_saldo.appendChild(document.createTextNode(autoripagoordencompra.gettotal_saldo().toString().trim()));
		element.appendChild(elementtotal_saldo);
	}
	
	public void generarReporteGroupGenericoAutoriPagoOrdenComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados=new ArrayList<AutoriPagoOrdenCompra>();
		
		autoripagoordencomprasSeleccionados=this.getAutoriPagoOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoAutoriPagoOrdenCompra(autoripagoordencomprasSeleccionados);
		
		this.generarReporteAutoriPagoOrdenCompras("Todos",autoripagoordencomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoAutoriPagoOrdenCompra(ArrayList<AutoriPagoOrdenCompra> autoripagoordencomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(AutoriPagoOrdenCompra autoripagoordencompraAux:autoripagoordencomprasSeleccionados) {
				autoripagoordencompraAux.setsDetalleGeneralEntityReporte(autoripagoordencompraAux.toString());
			
				if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDBANCO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getbanco_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_IDCUENTABANCO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getcuentabanco_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getnumero_comprobante());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(autoripagoordencompraAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAAUTORI)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(autoripagoordencompraAux.getfecha_autori()));
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHASERVIDOR)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(autoripagoordencompraAux.getfecha_servidor()));
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_CODIGOASIENTO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(autoripagoordencompraAux.getcodigo_asiento());
				}
				 else if(sTipoSeleccionar.equals(AutoriPagoOrdenCompraConstantesFunciones.LABEL_FECHAASIENTO)) {
					existe=true;
					autoripagoordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(autoripagoordencompraAux.getfecha_asiento()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AutoriPagoOrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesAutoriPagoOrdenCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=true;
				this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=true;
			}
			
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaModificarAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaCancelarAutoriPagoOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarAutoriPagoOrdenCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(AutoriPagoOrdenCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=true;
		} else {
			this.actualizarEstadoPanelsAutoriPagoOrdenCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarAutoriPagoOrdenCompra=false;
			//this.isVisibilidadCeldaVerFormAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarAutoriPagoOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!autoripagoordencompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosAutoriPagoOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!autoripagoordencompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;												
			}
			
			this.jButtonCerrarAutoriPagoOrdenCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesAutoriPagoOrdenCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.autoripagoordencompra)) {
			this.isVisibilidadCeldaActualizarAutoriPagoOrdenCompra=false;
			this.isVisibilidadCeldaEliminarAutoriPagoOrdenCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesAutoriPagoOrdenCompra() {
	}
	
	public void actualizarEstadoPanelsAutoriPagoOrdenCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionAutoriPagoOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAutoriPagoOrdenCompra!=null) {
				this.jScrollPanelDatosAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionAutoriPagoOrdenCompra!=null) {
				this.jPanelPaginacionAutoriPagoOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
					this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.autoripagoordencompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra!=null) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesAutoriPagoOrdenCompra!=null) {
				this.jPanelParametrosReportesAutoriPagoOrdenCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdAsientoContable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaOrdenCompra(Boolean isParaOrdenCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaOrdenCompraNegation=!isParaOrdenCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaOrdenCompra;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdAsientoContable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaBanco(Boolean isParaBanco){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBancoNegation=!isParaBanco;

			this.isVisibilidadFK_IdAsientoContable=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaBanco;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaBanco(Boolean isParaCuentaBanco){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaBancoNegation=!isParaCuentaBanco;

			this.isVisibilidadFK_IdAsientoContable=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdBanco=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdClienteAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdCuentaBanco=isParaCuentaBanco;
			if(!this.isVisibilidadFK_IdCuentaBanco) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTipoCambio=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaBancoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(jPanelFK_IdTransaccionAutoriPagoOrdenCompra);}
		}
		
	}
	
	
	
	

	public String registrarSesionAutoriPagoOrdenCompraParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(autoripagoordencompraSessionBean==null) {
				autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(autoripagoordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.autoripagoordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionAutoriPagoOrdenCompra(true);
			//tipocambioSessionBean.setlidAutoriPagoOrdenCompraActual(this.idAutoriPagoOrdenCompraActual);

			autoripagoordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAutoriPagoOrdenCompra(true);
			autoripagoordencompraSessionBean.setlIdAutoriPagoOrdenCompraActualForeignKey(this.idAutoriPagoOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionAutoriPagoOrdenCompraParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(autoripagoordencompraSessionBean==null) {
				autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(autoripagoordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.autoripagoordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionAutoriPagoOrdenCompra(true);
			//clienteSessionBean.setlidAutoriPagoOrdenCompraActual(this.idAutoriPagoOrdenCompraActual);

			autoripagoordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAutoriPagoOrdenCompra(true);
			autoripagoordencompraSessionBean.setlIdAutoriPagoOrdenCompraActualForeignKey(this.idAutoriPagoOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionAutoriPagoOrdenCompraParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(autoripagoordencompraSessionBean==null) {
				autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(autoripagoordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.autoripagoordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(AutoriPagoOrdenCompraConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionAutoriPagoOrdenCompra(true);
			//asientocontableSessionBean.setlidAutoriPagoOrdenCompraActual(this.idAutoriPagoOrdenCompraActual);

			autoripagoordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAutoriPagoOrdenCompra(true);
			autoripagoordencompraSessionBean.setlIdAutoriPagoOrdenCompraActualForeignKey(this.idAutoriPagoOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//AutoriPagoOrdenCompraSessionBean autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
		
		if(this.autoripagoordencompraSessionBean==null) {
			this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
		}
		
		this.autoripagoordencompraSessionBean.setsUltimaBusquedaAutoriPagoOrdenCompra(this.getsAccionBusqueda());
		this.autoripagoordencompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.autoripagoordencompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			autoripagoordencompraSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBanco")) {
			autoripagoordencompraSessionBean.setid_banco(this.getid_bancoFK_IdBanco());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			autoripagoordencompraSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaBanco")) {
			autoripagoordencompraSessionBean.setid_cuenta_banco(this.getid_cuenta_bancoFK_IdCuentaBanco());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			autoripagoordencompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			autoripagoordencompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			autoripagoordencompraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			autoripagoordencompraSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
			autoripagoordencompraSessionBean.setid_orden_compra(this.getid_orden_compraFK_IdOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			autoripagoordencompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			autoripagoordencompraSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			autoripagoordencompraSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			autoripagoordencompraSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//AutoriPagoOrdenCompraSessionBean autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
		
		if(this.autoripagoordencompraSessionBean==null) {
			this.autoripagoordencompraSessionBean=new AutoriPagoOrdenCompraSessionBean();
		}
		
		if(this.autoripagoordencompraSessionBean.getsUltimaBusquedaAutoriPagoOrdenCompra()!=null&&!this.autoripagoordencompraSessionBean.getsUltimaBusquedaAutoriPagoOrdenCompra().equals("")) {
			this.setsAccionBusqueda(autoripagoordencompraSessionBean.getsUltimaBusquedaAutoriPagoOrdenCompra());
			this.setiNumeroPaginacion(autoripagoordencompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(autoripagoordencompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(autoripagoordencompraSessionBean.getid_asiento_contable());
				autoripagoordencompraSessionBean.setid_asiento_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBanco")) {
				this.setid_bancoFK_IdBanco(autoripagoordencompraSessionBean.getid_banco());
				autoripagoordencompraSessionBean.setid_banco(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(autoripagoordencompraSessionBean.getid_cliente());
				autoripagoordencompraSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaBanco")) {
				this.setid_cuenta_bancoFK_IdCuentaBanco(autoripagoordencompraSessionBean.getid_cuenta_banco());
				autoripagoordencompraSessionBean.setid_cuenta_banco(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(autoripagoordencompraSessionBean.getid_ejercicio());
				autoripagoordencompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(autoripagoordencompraSessionBean.getid_empresa());
				autoripagoordencompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(autoripagoordencompraSessionBean.getid_modulo());
				autoripagoordencompraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(autoripagoordencompraSessionBean.getid_moneda());
				autoripagoordencompraSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
				this.setid_orden_compraFK_IdOrdenCompra(autoripagoordencompraSessionBean.getid_orden_compra());
				autoripagoordencompraSessionBean.setid_orden_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(autoripagoordencompraSessionBean.getid_sucursal());
				autoripagoordencompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(autoripagoordencompraSessionBean.getid_tipo_cambio());
				autoripagoordencompraSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(autoripagoordencompraSessionBean.getid_transaccion());
				autoripagoordencompraSessionBean.setid_transaccion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(autoripagoordencompraSessionBean.getid_usuario());
				autoripagoordencompraSessionBean.setid_usuario(-1L);
			}
		}
		
		this.autoripagoordencompraSessionBean.setsUltimaBusquedaAutoriPagoOrdenCompra("");
		this.autoripagoordencompraSessionBean.setiNumeroPaginacion(AutoriPagoOrdenCompraConstantesFunciones.INUMEROPAGINACION);
		this.autoripagoordencompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaAutoriPagoOrdenCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioAutoriPagoOrdenCompra() {
		this.updateBorderResaltarBusquedasFormularioAutoriPagoOrdenCompra();
		this.updateVisibilidadBusquedasFormularioAutoriPagoOrdenCompra();
		this.updateHabilitarBusquedasFormularioAutoriPagoOrdenCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioAutoriPagoOrdenCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponents().length>0) {
	

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdAsientoContableAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdAsientoContableAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdBancoAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdBancoAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdBancoAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdClienteAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdClienteAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdCuentaBancoAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdCuentaBancoAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdOrdenCompraAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdOrdenCompraAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTipoCambioAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTipoCambioAutoriPagoOrdenCompra);
			}
		}

		if(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTransaccionAutoriPagoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTransaccionAutoriPagoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTransaccionAutoriPagoOrdenCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioAutoriPagoOrdenCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdAsientoContableAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdAsientoContableAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdBancoAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdBancoAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdBancoAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdClienteAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdClienteAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdCuentaBancoAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdCuentaBancoAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdOrdenCompraAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdOrdenCompraAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdTipoCambioAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdTipoCambioAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTransaccionAutoriPagoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarFK_IdTransaccionAutoriPagoOrdenCompra);
			if(!this.autoripagoordencompraConstantesFunciones.mostrarFK_IdTransaccionAutoriPagoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioAutoriPagoOrdenCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdAsientoContableAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdAsientoContableAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdBancoAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdBancoAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdBancoAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdClienteAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdClienteAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdCuentaBancoAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdCuentaBancoAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdOrdenCompraAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdOrdenCompraAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdTipoCambioAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdTipoCambioAutoriPagoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTransaccionAutoriPagoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.autoripagoordencompraConstantesFunciones.activarFK_IdTransaccionAutoriPagoOrdenCompra);
				this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setEnabledAt(index,this.autoripagoordencompraConstantesFunciones.activarFK_IdTransaccionAutoriPagoOrdenCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaAutoriPagoOrdenCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdAsientoContableAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdAsientoContableAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBanco")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdBancoAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdBancoAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdBancoAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdClienteAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdClienteAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaBanco")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdCuentaBancoAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdCuentaBancoAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdCuentaBancoAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdOrdenCompra")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdOrdenCompraAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdOrdenCompraAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoCambioAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdTipoCambioAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTipoCambioAutoriPagoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.indexOfComponent(this.jPanelFK_IdTransaccionAutoriPagoOrdenCompra);

			this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAutoriPagoOrdenCompra.getComponent(index);

			this.autoripagoordencompraConstantesFunciones.setResaltarFK_IdTransaccionAutoriPagoOrdenCompra(resaltar);

			jPanel.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarFK_IdTransaccionAutoriPagoOrdenCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarAutoriPagoOrdenCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioAutoriPagoOrdenCompra() throws Exception {

		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioAutoriPagoOrdenCompra();
		this.updateVisibilidadResaltarControlesFormularioAutoriPagoOrdenCompra();
		this.updateHabilitarResaltarControlesFormularioAutoriPagoOrdenCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioAutoriPagoOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.autoripagoordencompraConstantesFunciones.resaltaridAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltaridAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_tipo_cambioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_tipo_cambioAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_monedaAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_monedaAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_clienteAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_clienteAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_empresaAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_empresaAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_sucursalAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_sucursalAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_orden_compraAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_orden_compraAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_transaccionAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_transaccionAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_moduloAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_moduloAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_ejercicioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_ejercicioAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_usuarioAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_usuarioAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_asiento_contableAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_asiento_contableAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_bancoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_bancoAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarid_cuenta_bancoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarid_cuenta_bancoAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarnumero_comprobanteAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarnumero_comprobanteAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarfechaAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarfechaAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarfecha_autoriAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarfecha_autoriAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltartotalAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltartotalAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarfecha_servidorAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarfecha_servidorAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarcodigo_asientoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarcodigo_asientoAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarfecha_asientoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarfecha_asientoAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltarvalor_asientoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltarvalor_asientoAutoriPagoOrdenCompra);}
		if(this.autoripagoordencompraConstantesFunciones.resaltartotal_saldoAutoriPagoOrdenCompra!=null && this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setBorder(this.autoripagoordencompraConstantesFunciones.resaltartotal_saldoAutoriPagoOrdenCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioAutoriPagoOrdenCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
	
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostraridAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelidAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostraridAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_tipo_cambioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_tipo_cambioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_tipo_cambioAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_tipo_cambioAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_monedaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_monedaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_monedaAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_clienteAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_clienteAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_clienteAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_clienteAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_empresaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_empresaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_empresaAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_sucursalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_sucursalAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_sucursalAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_orden_compraAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_orden_compraAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_orden_compraAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_transaccionAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_transaccionAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_transaccionAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_moduloAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_moduloAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_moduloAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_ejercicioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_ejercicioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_ejercicioAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_usuarioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_usuarioAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_usuarioAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_asiento_contableAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_asiento_contableAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_asiento_contableAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_asiento_contableAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_bancoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_bancoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_bancoAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_cuenta_bancoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelid_cuenta_bancoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarid_cuenta_bancoAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarnumero_comprobanteAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelnumero_comprobanteAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarnumero_comprobanteAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfechaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelfechaAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfechaAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_autoriAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelfecha_autoriAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_autoriAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrartotalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPaneltotalAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrartotalAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_servidorAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelfecha_servidorAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_servidorAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarcodigo_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelcodigo_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarcodigo_asientoAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelfecha_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarfecha_asientoAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarvalor_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPanelvalor_asientoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrarvalor_asientoAutoriPagoOrdenCompra);
		//this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrartotal_saldoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jPaneltotal_saldoAutoriPagoOrdenCompra.setVisible(this.autoripagoordencompraConstantesFunciones.mostrartotal_saldoAutoriPagoOrdenCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioAutoriPagoOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAutoriPagoOrdenCompra!=null) {
	
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jLabelidAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activaridAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_tipo_cambioAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_tipo_cambioAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_tipo_cambioAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_tipo_cambioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_monedaAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_monedaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_clienteAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_clienteAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_clienteAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_clienteAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_empresaAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_empresaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_sucursalAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_sucursalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_orden_compraAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_orden_compraAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_transaccionAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_transaccionAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_moduloAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_moduloAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_ejercicioAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_ejercicioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_usuarioAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_usuarioAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_asiento_contableAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_asiento_contableAutoriPagoOrdenCompra);
			this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jButtonid_asiento_contableAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_asiento_contableAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_bancoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_bancoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jComboBoxid_cuenta_bancoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarid_cuenta_bancoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldnumero_comprobanteAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarnumero_comprobanteAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfechaAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarfechaAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_autoriAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarfecha_autoriAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotalAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activartotalAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_servidorAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarfecha_servidorAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldcodigo_asientoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarcodigo_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jDateChooserfecha_asientoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarfecha_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldvalor_asientoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activarvalor_asientoAutoriPagoOrdenCompra);
		this.jInternalFrameDetalleFormAutoriPagoOrdenCompra.jTextFieldtotal_saldoAutoriPagoOrdenCompra.setEnabled(this.autoripagoordencompraConstantesFunciones.activartotal_saldoAutoriPagoOrdenCompra);
		}
	}
	
		
}