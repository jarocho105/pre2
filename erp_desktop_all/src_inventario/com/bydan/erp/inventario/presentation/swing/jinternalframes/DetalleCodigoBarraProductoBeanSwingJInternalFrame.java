/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.DetalleCodigoBarraProductoConstantesFunciones;
import com.bydan.erp.inventario.util.DetalleCodigoBarraProductoParameterReturnGeneral;
//import com.bydan.erp.inventario.util.DetalleCodigoBarraProductoParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.DetalleCodigoBarraProductoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleCodigoBarraProductoBeanSwingJInternalFrame extends DetalleCodigoBarraProductoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleCodigoBarraProductoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleCodigoBarraProducto> detallecodigobarraproductoValidator = new ClassValidator<DetalleCodigoBarraProducto>(DetalleCodigoBarraProducto.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleCodigoBarraProducto detallecodigobarraproducto;	
	public DetalleCodigoBarraProducto detallecodigobarraproductoAux;
	public DetalleCodigoBarraProducto detallecodigobarraproductoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleCodigoBarraProducto detallecodigobarraproductoTotales;
	public Long idDetalleCodigoBarraProductoActual;
	public Long iIdNuevoDetalleCodigoBarraProducto=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboLinea="";

	public List<Linea> lineasForeignKey;

	public List<Linea> getlineasForeignKey() {
		return lineasForeignKey;
	}

	public void setlineasForeignKey(List<Linea> lineasForeignKey) {
		this.lineasForeignKey = lineasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineaForeignKey;

	public Linea getlineaForeignKey() {
		return lineaForeignKey;
	}

	public void setlineaForeignKey(Linea lineaForeignKey) {
		this.lineaForeignKey = lineaForeignKey;
	}

	public String sFinalQueryComboLineaGrupo="";

	public List<Linea> lineagruposForeignKey;

	public List<Linea> getlineagruposForeignKey() {
		return lineagruposForeignKey;
	}

	public void setlineagruposForeignKey(List<Linea> lineagruposForeignKey) {
		this.lineagruposForeignKey = lineagruposForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineagrupoForeignKey;

	public Linea getlineagrupoForeignKey() {
		return lineagrupoForeignKey;
	}

	public void setlineagrupoForeignKey(Linea lineagrupoForeignKey) {
		this.lineagrupoForeignKey = lineagrupoForeignKey;
	}

	public String sFinalQueryComboLineaCategoria="";

	public List<Linea> lineacategoriasForeignKey;

	public List<Linea> getlineacategoriasForeignKey() {
		return lineacategoriasForeignKey;
	}

	public void setlineacategoriasForeignKey(List<Linea> lineacategoriasForeignKey) {
		this.lineacategoriasForeignKey = lineacategoriasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineacategoriaForeignKey;

	public Linea getlineacategoriaForeignKey() {
		return lineacategoriaForeignKey;
	}

	public void setlineacategoriaForeignKey(Linea lineacategoriaForeignKey) {
		this.lineacategoriaForeignKey = lineacategoriaForeignKey;
	}

	public String sFinalQueryComboLineaMarca="";

	public List<Linea> lineamarcasForeignKey;

	public List<Linea> getlineamarcasForeignKey() {
		return lineamarcasForeignKey;
	}

	public void setlineamarcasForeignKey(List<Linea> lineamarcasForeignKey) {
		this.lineamarcasForeignKey = lineamarcasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineamarcaForeignKey;

	public Linea getlineamarcaForeignKey() {
		return lineamarcaForeignKey;
	}

	public void setlineamarcaForeignKey(Linea lineamarcaForeignKey) {
		this.lineamarcaForeignKey = lineamarcaForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleCodigoBarraProducto;
	public Boolean isPermisoNuevoDetalleCodigoBarraProducto;
	public Boolean isPermisoActualizarDetalleCodigoBarraProducto;
	public Boolean isPermisoActualizarOriginalDetalleCodigoBarraProducto;
	public Boolean isPermisoEliminarDetalleCodigoBarraProducto;
	public Boolean isPermisoGuardarCambiosDetalleCodigoBarraProducto;
	public Boolean isPermisoConsultaDetalleCodigoBarraProducto;
	public Boolean isPermisoBusquedaDetalleCodigoBarraProducto;
	public Boolean isPermisoReporteDetalleCodigoBarraProducto;
	public Boolean isPermisoPaginacionMedioDetalleCodigoBarraProducto;
	public Boolean isPermisoPaginacionAltoDetalleCodigoBarraProducto;
	public Boolean isPermisoPaginacionTodoDetalleCodigoBarraProducto;
	public Boolean isPermisoCopiarDetalleCodigoBarraProducto;
	public Boolean isPermisoVerFormDetalleCodigoBarraProducto;
	public Boolean isPermisoDuplicarDetalleCodigoBarraProducto;
	public Boolean isPermisoOrdenDetalleCodigoBarraProducto;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoReturnGeneral;
	public DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleCodigoBarraProducto=false;
	public Boolean esParaAccionDesdeFormularioDetalleCodigoBarraProducto=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleCodigoBarraProductoSessionBeanAdditional detallecodigobarraproductoSessionBeanAdditional=null;
	
	public DetalleCodigoBarraProductoSessionBeanAdditional getDetalleCodigoBarraProductoSessionBeanAdditional() {
		return this.detallecodigobarraproductoSessionBeanAdditional;
	}
	
	public void setDetalleCodigoBarraProductoSessionBeanAdditional(DetalleCodigoBarraProductoSessionBeanAdditional detallecodigobarraproductoSessionBeanAdditional) {
		try {
			this.detallecodigobarraproductoSessionBeanAdditional=detallecodigobarraproductoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional detallecodigobarraproductoBeanSwingJInternalFrameAdditional=null;
	//public class DetalleCodigoBarraProductoBeanSwingJInternalFrame
	
	public DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional getDetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional() {
		return this.detallecodigobarraproductoBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional(DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional detallecodigobarraproductoBeanSwingJInternalFrameAdditional) {
		try {
			this.detallecodigobarraproductoBeanSwingJInternalFrameAdditional=detallecodigobarraproductoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleCodigoBarraProductoLogic detallecodigobarraproductoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleCodigoBarraProducto detallecodigobarraproductoBean;
	public DetalleCodigoBarraProductoConstantesFunciones detallecodigobarraproductoConstantesFunciones;
	//public DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public LineaLogic lineaLogic;
	public LineaLogic lineagrupoLogic;
	public LineaLogic lineacategoriaLogic;
	public LineaLogic lineamarcaLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleCodigoBarraProducto> detallecodigobarraproductos;	
	//public List<DetalleCodigoBarraProducto> detallecodigobarraproductosEliminados;
	//public List<DetalleCodigoBarraProducto> detallecodigobarraproductosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto=true;
	public Boolean isVisibilidadCeldaCopiarDetalleCodigoBarraProducto=true;
	public Boolean isVisibilidadCeldaVerFormDetalleCodigoBarraProducto=true;
	public Boolean isVisibilidadCeldaOrdenDetalleCodigoBarraProducto=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=false;
	public Boolean isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdLinea=false;
	public Boolean isVisibilidadFK_IdLineaCategoria=false;
	public Boolean isVisibilidadFK_IdLineaGrupo=false;
	public Boolean isVisibilidadFK_IdLineaMarca=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetalleCodigoBarraProducto() {
		return this.iIdNuevoDetalleCodigoBarraProducto;
	}

	public void setiIdNuevoDetalleCodigoBarraProducto(Long iIdNuevoDetalleCodigoBarraProducto) {
		this.iIdNuevoDetalleCodigoBarraProducto = iIdNuevoDetalleCodigoBarraProducto;
	}
	
	public Long getidDetalleCodigoBarraProductoActual() {
		return this.idDetalleCodigoBarraProductoActual;
	}

	public void setidDetalleCodigoBarraProductoActual(Long idDetalleCodigoBarraProductoActual) {
		this.idDetalleCodigoBarraProductoActual = idDetalleCodigoBarraProductoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleCodigoBarraProducto getdetallecodigobarraproducto() {
		return this.detallecodigobarraproducto;
	}

	public void setdetallecodigobarraproducto(DetalleCodigoBarraProducto detallecodigobarraproducto) {
		this.detallecodigobarraproducto = detallecodigobarraproducto;
	}
	
	public DetalleCodigoBarraProducto getdetallecodigobarraproductoAux() {
		return this.detallecodigobarraproductoAux;
	}

	public void setdetallecodigobarraproductoAux(DetalleCodigoBarraProducto detallecodigobarraproductoAux) {
		this.detallecodigobarraproductoAux = detallecodigobarraproductoAux;
	}				
	
	public DetalleCodigoBarraProducto getdetallecodigobarraproductoAnterior() {
		return this.detallecodigobarraproductoAnterior;
	}

	public void setdetallecodigobarraproductoAnterior(DetalleCodigoBarraProducto detallecodigobarraproductoAnterior) {
		this.detallecodigobarraproductoAnterior = detallecodigobarraproductoAnterior;
	}	
	
	public DetalleCodigoBarraProducto getdetallecodigobarraproductoTotales() {
		return this.detallecodigobarraproductoTotales;
	}

	public void setdetallecodigobarraproductoTotales(DetalleCodigoBarraProducto detallecodigobarraproductoTotales) {
		this.detallecodigobarraproductoTotales = detallecodigobarraproductoTotales;
	}	
	
	public DetalleCodigoBarraProducto getdetallecodigobarraproductoBean() {
		return this.detallecodigobarraproductoBean;
	}

	public void setdetallecodigobarraproductoBean(DetalleCodigoBarraProducto detallecodigobarraproductoBean) {
		this.detallecodigobarraproductoBean = detallecodigobarraproductoBean;
	}	
	
	public DetalleCodigoBarraProductoParameterReturnGeneral getdetallecodigobarraproductoReturnGeneral() {
		return this.detallecodigobarraproductoReturnGeneral;
	}

	public void setdetallecodigobarraproductoReturnGeneral(DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoReturnGeneral) {
		this.detallecodigobarraproductoReturnGeneral = detallecodigobarraproductoReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_lineaFK_IdLinea=-1L;

	public Long getid_lineaFK_IdLinea() {
		return this.id_lineaFK_IdLinea;
	}

	public void setid_lineaFK_IdLinea(Long id_lineaFK_IdLinea) {
		this.id_lineaFK_IdLinea = id_lineaFK_IdLinea;
	}

	public Long id_linea_categoriaFK_IdLineaCategoria=-1L;

	public Long getid_linea_categoriaFK_IdLineaCategoria() {
		return this.id_linea_categoriaFK_IdLineaCategoria;
	}

	public void setid_linea_categoriaFK_IdLineaCategoria(Long id_linea_categoriaFK_IdLineaCategoria) {
		this.id_linea_categoriaFK_IdLineaCategoria = id_linea_categoriaFK_IdLineaCategoria;
	}

	public Long id_linea_grupoFK_IdLineaGrupo=-1L;

	public Long getid_linea_grupoFK_IdLineaGrupo() {
		return this.id_linea_grupoFK_IdLineaGrupo;
	}

	public void setid_linea_grupoFK_IdLineaGrupo(Long id_linea_grupoFK_IdLineaGrupo) {
		this.id_linea_grupoFK_IdLineaGrupo = id_linea_grupoFK_IdLineaGrupo;
	}

	public Long id_linea_marcaFK_IdLineaMarca=-1L;

	public Long getid_linea_marcaFK_IdLineaMarca() {
		return this.id_linea_marcaFK_IdLineaMarca;
	}

	public void setid_linea_marcaFK_IdLineaMarca(Long id_linea_marcaFK_IdLineaMarca) {
		this.id_linea_marcaFK_IdLineaMarca = id_linea_marcaFK_IdLineaMarca;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleCodigoBarraProductoLogic getDetalleCodigoBarraProductoLogic()	{		
		return detallecodigobarraproductoLogic;
	}

	public void setDetalleCodigoBarraProductoLogic(DetalleCodigoBarraProductoLogic detallecodigobarraproductoLogic) {
		this.detallecodigobarraproductoLogic = detallecodigobarraproductoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleCodigoBarraProducto() {
		return isEsNuevoDetalleCodigoBarraProducto;
	}

	public void setIsEsNuevoDetalleCodigoBarraProducto(Boolean isEsNuevoDetalleCodigoBarraProducto) {
		this.isEsNuevoDetalleCodigoBarraProducto = isEsNuevoDetalleCodigoBarraProducto;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleCodigoBarraProducto() {
		return esParaAccionDesdeFormularioDetalleCodigoBarraProducto;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleCodigoBarraProducto(Boolean esParaAccionDesdeFormularioDetalleCodigoBarraProducto) {
		this.esParaAccionDesdeFormularioDetalleCodigoBarraProducto = esParaAccionDesdeFormularioDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLinea(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidLineaActual());
					this.lineasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaGruposForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineagruposForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineagrupoLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineagruposForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaGrupo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidLineaGrupoActual());
					this.lineagruposForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaCategoriasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineacategoriasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineacategoriaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineacategoriasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaCategoria(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidLineaCategoriaActual());
					this.lineacategoriasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaMarcasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineamarcasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineamarcaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineamarcasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaMarca(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(detallecodigobarraproductoSessionBean.getlidLineaMarcaActual());
					this.lineamarcasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleCodigoBarraProductoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_empresaDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto!=null) {
						jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetalleCodigoBarraProductoGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_productoDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_productoDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto!=null) {
						jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetalleCodigoBarraProductoGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_unidadDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaForeignKey(Long idLineaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineaTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setLinea(lineaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedItem(lineaTemp);
					}
				} else {
					//jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedItem(lineaTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineaTemp!=null && jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto!=null) {
						jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.setSelectedItem(lineaTemp);
					} else {
						if(jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.setSelectedItem(lineaTemp);
							if(jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaForeignKeyDescripcion(Long idLineaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaForeignKeyGenerico(Long idLineaSeleccionado,JComboBox jComboBoxid_lineaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(lineaTemp!=null) {
				jComboBoxid_lineaDetalleCodigoBarraProductoGenerico.setSelectedItem(lineaTemp);
			} else {
				if(jComboBoxid_lineaDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_lineaDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_lineaDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaGrupoForeignKey(Long idLineaGrupoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineagrupoTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setLineaGrupo(lineagrupoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupoTemp);
					}
				} else {
					//jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupoTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaGrupo") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineagrupoTemp!=null && jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto!=null) {
						jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupoTemp);
					} else {
						if(jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupoTemp);
							if(jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaGrupoForeignKeyDescripcion(Long idLineaGrupoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineagrupoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaGrupoForeignKeyGenerico(Long idLineaGrupoSeleccionado,JComboBox jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(lineagrupoTemp!=null) {
				jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico.setSelectedItem(lineagrupoTemp);
			} else {
				if(jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaCategoriaForeignKey(Long idLineaCategoriaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineacategoriaTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setLineaCategoria(lineacategoriaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoriaTemp);
					}
				} else {
					//jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoriaTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaCategoria") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineacategoriaTemp!=null && jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto!=null) {
						jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoriaTemp);
					} else {
						if(jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoriaTemp);
							if(jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaCategoriaForeignKeyDescripcion(Long idLineaCategoriaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineacategoriaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaCategoriaForeignKeyGenerico(Long idLineaCategoriaSeleccionado,JComboBox jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(lineacategoriaTemp!=null) {
				jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico.setSelectedItem(lineacategoriaTemp);
			} else {
				if(jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaMarcaForeignKey(Long idLineaMarcaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineamarcaTemp!=null) {

					if(this.detallecodigobarraproducto!=null) {
						this.detallecodigobarraproducto.setLineaMarca(lineamarcaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedItem(lineamarcaTemp);
					}
				} else {
					//jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedItem(lineamarcaTemp);
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLineaMarca") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineamarcaTemp!=null && jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto!=null) {
						jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.setSelectedItem(lineamarcaTemp);
					} else {
						if(jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto!=null) {
							//jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.setSelectedItem(lineamarcaTemp);
							if(jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.getItemCount()>0) {
								jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaMarcaForeignKeyDescripcion(Long idLineaMarcaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineamarcaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaMarcaForeignKeyGenerico(Long idLineaMarcaSeleccionado,JComboBox jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(lineamarcaTemp!=null) {
				jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico.setSelectedItem(lineamarcaTemp);
			} else {
				if(jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico!=null && jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_empresaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleCodigoBarraProductoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detallecodigobarraproducto.setid_empresa(empresaAux.getId());
				detallecodigobarraproducto.setempresa_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detallecodigobarraproducto.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detallecodigobarraproducto.setid_sucursal(sucursalAux.getId());
				detallecodigobarraproducto.setsucursal_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detallecodigobarraproducto.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detallecodigobarraproducto.setid_bodega(bodegaAux.getId());
				detallecodigobarraproducto.setbodega_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detallecodigobarraproducto.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_productoDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetalleCodigoBarraProductoGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detallecodigobarraproducto.setid_producto(productoAux.getId());
				detallecodigobarraproducto.setproducto_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getProductoDescripcion(productoAux));
				detallecodigobarraproducto.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_unidadDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetalleCodigoBarraProductoGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detallecodigobarraproducto.setid_unidad(unidadAux.getId());
				detallecodigobarraproducto.setunidad_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getUnidadDescripcion(unidadAux));
				detallecodigobarraproducto.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_lineaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_lineaDetalleCodigoBarraProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_lineaDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				detallecodigobarraproducto.setid_linea(lineaAux.getId());
				detallecodigobarraproducto.setlinea_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getLineaDescripcion(lineaAux));
				detallecodigobarraproducto.setLinea(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaGrupoForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_grupoDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				detallecodigobarraproducto.setid_linea_grupo(lineaAux.getId());
				detallecodigobarraproducto.setlineagrupo_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getLineaGrupoDescripcion(lineaAux));
				detallecodigobarraproducto.setLineaGrupo(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaCategoriaForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_categoriaDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				detallecodigobarraproducto.setid_linea_categoria(lineaAux.getId());
				detallecodigobarraproducto.setlineacategoria_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getLineaCategoriaDescripcion(lineaAux));
				detallecodigobarraproducto.setLineaCategoria(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaMarcaForeignKey(DetalleCodigoBarraProducto detallecodigobarraproducto,JComboBox jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_marcaDetalleCodigoBarraProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				detallecodigobarraproducto.setid_linea_marca(lineaAux.getId());
				detallecodigobarraproducto.setlineamarca_descripcion(DetalleCodigoBarraProductoConstantesFunciones.getLineaMarcaDescripcion(lineaAux));
				detallecodigobarraproducto.setLineaMarca(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.addItem(bodega);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.addItem(producto);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.addItem(unidad);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.addItem(linea);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.addItem(linea);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaGruposForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineagrupo:this.lineagruposForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.addItem(lineagrupo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaGrupo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineagrupo:this.lineagruposForeignKey) {
								this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.addItem(lineagrupo);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaCategoriasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineacategoria:this.lineacategoriasForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.addItem(lineacategoria);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaCategoria") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineacategoria:this.lineacategoriasForeignKey) {
								this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.addItem(lineacategoria);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaMarcasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineamarca:this.lineamarcasForeignKey) {
								this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.addItem(lineamarca);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { 
					}

					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLineaMarca") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.removeAllItems();

							for(Linea lineamarca:this.lineamarcasForeignKey) {
								this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.addItem(lineamarca);
							}
						}

						if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaForeignKey(Linea linea,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedItem(linea);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.setSelectedItem(linea);
						} else {
							this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaGrupoForeignKey(Linea lineagrupo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.setSelectedItem(lineagrupo);
						} else {
							this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaCategoriaForeignKey(Linea lineacategoria,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoria);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.setSelectedItem(lineacategoria);
						} else {
							this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaMarcaForeignKey(Linea lineamarca,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedItem(lineamarca);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.setSelectedItem(lineamarca);
						} else {
							this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleCodigoBarraProductoConstantesFunciones.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleCodigoBarraProductoConstantesFunciones.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto(this.detallecodigobarraproductos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(Linea.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(this.detallecodigobarraproductos);
			detallecodigobarraproductoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleCodigoBarraProductoParameterReturnGeneral getDetalleCodigoBarraProductoParameterGeneral() {
		return this.detallecodigobarraproductoParameterGeneral;
	}
	
	public void setDetalleCodigoBarraProductoParameterGeneral(DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoParameterGeneral) {
		this.detallecodigobarraproductoParameterGeneral = detallecodigobarraproductoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleCodigoBarraProducto() {
		return isPermisoTodoDetalleCodigoBarraProducto;
	}

	public void setIsPermisoTodoDetalleCodigoBarraProducto(Boolean isPermisoTodoDetalleCodigoBarraProducto) {
		this.isPermisoTodoDetalleCodigoBarraProducto = isPermisoTodoDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoNuevoDetalleCodigoBarraProducto() {
		return isPermisoNuevoDetalleCodigoBarraProducto;
	}

	public void setIsPermisoNuevoDetalleCodigoBarraProducto(Boolean isPermisoNuevoDetalleCodigoBarraProducto) {
		this.isPermisoNuevoDetalleCodigoBarraProducto = isPermisoNuevoDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoActualizarDetalleCodigoBarraProducto() {
		return isPermisoActualizarDetalleCodigoBarraProducto;
	}

	public void setIsPermisoActualizarDetalleCodigoBarraProducto(Boolean isPermisoActualizarDetalleCodigoBarraProducto) {
		this.isPermisoActualizarDetalleCodigoBarraProducto = isPermisoActualizarDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoEliminarDetalleCodigoBarraProducto() {
		return isPermisoEliminarDetalleCodigoBarraProducto;
	}

	public void setIsPermisoEliminarDetalleCodigoBarraProducto(Boolean isPermisoEliminarDetalleCodigoBarraProducto) {
		this.isPermisoEliminarDetalleCodigoBarraProducto = isPermisoEliminarDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleCodigoBarraProducto() {
		return isPermisoGuardarCambiosDetalleCodigoBarraProducto;
	}

	public void setIsPermisoGuardarCambiosDetalleCodigoBarraProducto(Boolean isPermisoGuardarCambiosDetalleCodigoBarraProducto) {
		this.isPermisoGuardarCambiosDetalleCodigoBarraProducto = isPermisoGuardarCambiosDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoConsultaDetalleCodigoBarraProducto() {
		return isPermisoConsultaDetalleCodigoBarraProducto;
	}

	public void setIsPermisoConsultaDetalleCodigoBarraProducto(Boolean isPermisoConsultaDetalleCodigoBarraProducto) {
		this.isPermisoConsultaDetalleCodigoBarraProducto = isPermisoConsultaDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoBusquedaDetalleCodigoBarraProducto() {
		return isPermisoBusquedaDetalleCodigoBarraProducto;
	}

	public void setIsPermisoBusquedaDetalleCodigoBarraProducto(Boolean isPermisoBusquedaDetalleCodigoBarraProducto) {
		this.isPermisoBusquedaDetalleCodigoBarraProducto = isPermisoBusquedaDetalleCodigoBarraProducto;
	}

	public Boolean getIsPermisoReporteDetalleCodigoBarraProducto() {
		return isPermisoReporteDetalleCodigoBarraProducto;
	}

	public void setIsPermisoReporteDetalleCodigoBarraProducto(Boolean isPermisoReporteDetalleCodigoBarraProducto) {
		this.isPermisoReporteDetalleCodigoBarraProducto = isPermisoReporteDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleCodigoBarraProducto() {
		return isPermisoPaginacionMedioDetalleCodigoBarraProducto;
	}

	public void setIsPermisoPaginacionMedioDetalleCodigoBarraProducto(Boolean isPermisoPaginacionMedioDetalleCodigoBarraProducto) {
		this.isPermisoPaginacionMedioDetalleCodigoBarraProducto = isPermisoPaginacionMedioDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleCodigoBarraProducto() {
		return isPermisoPaginacionTodoDetalleCodigoBarraProducto;
	}

	public void setIsPermisoPaginacionTodoDetalleCodigoBarraProducto(Boolean isPermisoPaginacionTodoDetalleCodigoBarraProducto) {
		this.isPermisoPaginacionTodoDetalleCodigoBarraProducto = isPermisoPaginacionTodoDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleCodigoBarraProducto() {
		return isPermisoPaginacionAltoDetalleCodigoBarraProducto;
	}

	public void setIsPermisoPaginacionAltoDetalleCodigoBarraProducto(Boolean isPermisoPaginacionAltoDetalleCodigoBarraProducto) {
		this.isPermisoPaginacionAltoDetalleCodigoBarraProducto = isPermisoPaginacionAltoDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoCopiarDetalleCodigoBarraProducto() {
		return isPermisoCopiarDetalleCodigoBarraProducto;
	}

	public void setIsPermisoCopiarDetalleCodigoBarraProducto(Boolean isPermisoCopiarDetalleCodigoBarraProducto) {
		this.isPermisoCopiarDetalleCodigoBarraProducto = isPermisoCopiarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoVerFormDetalleCodigoBarraProducto() {
		return isPermisoVerFormDetalleCodigoBarraProducto;
	}

	public void setIsPermisoVerFormDetalleCodigoBarraProducto(Boolean isPermisoVerFormDetalleCodigoBarraProducto) {
		this.isPermisoVerFormDetalleCodigoBarraProducto = isPermisoVerFormDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoDuplicarDetalleCodigoBarraProducto() {
		return isPermisoDuplicarDetalleCodigoBarraProducto;
	}

	public void setIsPermisoDuplicarDetalleCodigoBarraProducto(Boolean isPermisoDuplicarDetalleCodigoBarraProducto) {
		this.isPermisoDuplicarDetalleCodigoBarraProducto = isPermisoDuplicarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsPermisoOrdenDetalleCodigoBarraProducto() {
		return isPermisoOrdenDetalleCodigoBarraProducto;
	}

	public void setIsPermisoOrdenDetalleCodigoBarraProducto(Boolean isPermisoOrdenDetalleCodigoBarraProducto) {
		this.isPermisoOrdenDetalleCodigoBarraProducto = isPermisoOrdenDetalleCodigoBarraProducto;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaNuevoDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaNuevoDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaNuevoDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto = isVisibilidadCeldaNuevoDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto = isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaCopiarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaCopiarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaCopiarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto = isVisibilidadCeldaCopiarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaVerFormDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaVerFormDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaVerFormDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto = isVisibilidadCeldaVerFormDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaOrdenDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaOrdenDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaOrdenDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto = isVisibilidadCeldaOrdenDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto = isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaModificarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaModificarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaModificarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto = isVisibilidadCeldaModificarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaActualizarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaActualizarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaActualizarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto = isVisibilidadCeldaActualizarDetalleCodigoBarraProducto;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaEliminarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaEliminarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaEliminarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto = isVisibilidadCeldaEliminarDetalleCodigoBarraProducto;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaCancelarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaCancelarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaCancelarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto = isVisibilidadCeldaCancelarDetalleCodigoBarraProducto;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaGuardarDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaGuardarDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaGuardarDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto = isVisibilidadCeldaGuardarDetalleCodigoBarraProducto;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto() {
		return isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto(Boolean isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto) {
		this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto = isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto;
	}
		
	public DetalleCodigoBarraProductoSessionBean getdetallecodigobarraproductoSessionBean() {
		return this.detallecodigobarraproductoSessionBean;
	}
	
	public void setdetallecodigobarraproductoSessionBean(DetalleCodigoBarraProductoSessionBean detallecodigobarraproductoSessionBean) {
		this.detallecodigobarraproductoSessionBean=detallecodigobarraproductoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdLinea() {
		return this.isVisibilidadFK_IdLinea;
	}

	public void setisVisibilidadFK_IdLinea(Boolean isVisibilidadFK_IdLinea) {
		this.isVisibilidadFK_IdLinea=isVisibilidadFK_IdLinea;
	}

	public Boolean getisVisibilidadFK_IdLineaCategoria() {
		return this.isVisibilidadFK_IdLineaCategoria;
	}

	public void setisVisibilidadFK_IdLineaCategoria(Boolean isVisibilidadFK_IdLineaCategoria) {
		this.isVisibilidadFK_IdLineaCategoria=isVisibilidadFK_IdLineaCategoria;
	}

	public Boolean getisVisibilidadFK_IdLineaGrupo() {
		return this.isVisibilidadFK_IdLineaGrupo;
	}

	public void setisVisibilidadFK_IdLineaGrupo(Boolean isVisibilidadFK_IdLineaGrupo) {
		this.isVisibilidadFK_IdLineaGrupo=isVisibilidadFK_IdLineaGrupo;
	}

	public Boolean getisVisibilidadFK_IdLineaMarca() {
		return this.isVisibilidadFK_IdLineaMarca;
	}

	public void setisVisibilidadFK_IdLineaMarca(Boolean isVisibilidadFK_IdLineaMarca) {
		this.isVisibilidadFK_IdLineaMarca=isVisibilidadFK_IdLineaMarca;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarSucursalForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarBodegaForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarProductoForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarUnidadForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarLineaForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarLineaGrupoForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarLineaCategoriaForeignKey(detallecodigobarraproducto,null);
				this.setActualParaGuardarLineaMarcaForeignKey(detallecodigobarraproducto,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleCodigoBarraProducto detallecodigobarraproducto,DetalleCodigoBarraProducto detallecodigobarraproductoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleCodigoBarraProducto(detallecodigobarraproducto);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detallecodigobarraproductoAux.setId(detallecodigobarraproducto.getId());
		detallecodigobarraproductoAux.setVersionRow(detallecodigobarraproducto.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleCodigoBarraProducto();
		
			int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detallecodigobarraproductoValidator.getInvalidValues(this.detallecodigobarraproducto);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detallecodigobarraproductoLogic.setDatosCliente(datosCliente);
			detallecodigobarraproductoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detallecodigobarraproductoAux=new  DetalleCodigoBarraProducto();
				
				detallecodigobarraproductoAux.setIsNew(true);
				detallecodigobarraproductoAux.setIsChanged(true);
				
				detallecodigobarraproductoAux.setDetalleCodigoBarraProductoOriginal(this.detallecodigobarraproducto);
				
				detallecodigobarraproductoAux.setId(this.detallecodigobarraproducto.getId());	
				detallecodigobarraproductoAux.setVersionRow(this.detallecodigobarraproducto.getVersionRow());	
				detallecodigobarraproductoAux.setid_empresa(this.detallecodigobarraproducto.getid_empresa());	
				detallecodigobarraproductoAux.setid_sucursal(this.detallecodigobarraproducto.getid_sucursal());	
				detallecodigobarraproductoAux.setid_bodega(this.detallecodigobarraproducto.getid_bodega());	
				detallecodigobarraproductoAux.setid_producto(this.detallecodigobarraproducto.getid_producto());	
				detallecodigobarraproductoAux.setid_unidad(this.detallecodigobarraproducto.getid_unidad());	
				detallecodigobarraproductoAux.setid_linea(this.detallecodigobarraproducto.getid_linea());	
				detallecodigobarraproductoAux.setid_linea_grupo(this.detallecodigobarraproducto.getid_linea_grupo());	
				detallecodigobarraproductoAux.setid_linea_categoria(this.detallecodigobarraproducto.getid_linea_categoria());	
				detallecodigobarraproductoAux.setid_linea_marca(this.detallecodigobarraproducto.getid_linea_marca());	
				detallecodigobarraproductoAux.setcontrol(this.detallecodigobarraproducto.getcontrol());	
				detallecodigobarraproductoAux.setmedicion(this.detallecodigobarraproducto.getmedicion());	
				detallecodigobarraproductoAux.setvalor_anterior(this.detallecodigobarraproducto.getvalor_anterior());	
				detallecodigobarraproductoAux.setfecha(this.detallecodigobarraproducto.getfecha());	
				detallecodigobarraproductoAux.setobservacion(this.detallecodigobarraproducto.getobservacion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductos();//WithConnection
						//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);
					
					this.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductoRelaciones(detallecodigobarraproductoAux);//WithConnection
								//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detallecodigobarraproductoAux=new  DetalleCodigoBarraProducto();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado() 
					|| (this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado() && this.detallecodigobarraproducto.getId()>=0)) {
						
					detallecodigobarraproductoAux.setIsNew(false);
				}
				
				detallecodigobarraproductoAux.setIsDeleted(false);
			
				detallecodigobarraproductoAux.setId(this.detallecodigobarraproducto.getId());	
				detallecodigobarraproductoAux.setVersionRow(this.detallecodigobarraproducto.getVersionRow());	
				detallecodigobarraproductoAux.setid_empresa(this.detallecodigobarraproducto.getid_empresa());	
				detallecodigobarraproductoAux.setid_sucursal(this.detallecodigobarraproducto.getid_sucursal());	
				detallecodigobarraproductoAux.setid_bodega(this.detallecodigobarraproducto.getid_bodega());	
				detallecodigobarraproductoAux.setid_producto(this.detallecodigobarraproducto.getid_producto());	
				detallecodigobarraproductoAux.setid_unidad(this.detallecodigobarraproducto.getid_unidad());	
				detallecodigobarraproductoAux.setid_linea(this.detallecodigobarraproducto.getid_linea());	
				detallecodigobarraproductoAux.setid_linea_grupo(this.detallecodigobarraproducto.getid_linea_grupo());	
				detallecodigobarraproductoAux.setid_linea_categoria(this.detallecodigobarraproducto.getid_linea_categoria());	
				detallecodigobarraproductoAux.setid_linea_marca(this.detallecodigobarraproducto.getid_linea_marca());	
				detallecodigobarraproductoAux.setcontrol(this.detallecodigobarraproducto.getcontrol());	
				detallecodigobarraproductoAux.setmedicion(this.detallecodigobarraproducto.getmedicion());	
				detallecodigobarraproductoAux.setvalor_anterior(this.detallecodigobarraproducto.getvalor_anterior());	
				detallecodigobarraproductoAux.setfecha(this.detallecodigobarraproducto.getfecha());	
				detallecodigobarraproductoAux.setobservacion(this.detallecodigobarraproducto.getobservacion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductos();//WithConnection
						//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);
					
					this.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductoRelaciones(detallecodigobarraproductoAux);//WithConnection
								//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallecodigobarraproducto,detallecodigobarraproductoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detallecodigobarraproductoAux=new  DetalleCodigoBarraProducto();
				
				detallecodigobarraproductoAux.setIsNew(false);
				detallecodigobarraproductoAux.setIsChanged(false);
				
				detallecodigobarraproductoAux.setIsDeleted(true);
				
				detallecodigobarraproductoAux.setId(this.detallecodigobarraproducto.getId());	
				detallecodigobarraproductoAux.setVersionRow(this.detallecodigobarraproducto.getVersionRow());	
				detallecodigobarraproductoAux.setid_empresa(this.detallecodigobarraproducto.getid_empresa());	
				detallecodigobarraproductoAux.setid_sucursal(this.detallecodigobarraproducto.getid_sucursal());	
				detallecodigobarraproductoAux.setid_bodega(this.detallecodigobarraproducto.getid_bodega());	
				detallecodigobarraproductoAux.setid_producto(this.detallecodigobarraproducto.getid_producto());	
				detallecodigobarraproductoAux.setid_unidad(this.detallecodigobarraproducto.getid_unidad());	
				detallecodigobarraproductoAux.setid_linea(this.detallecodigobarraproducto.getid_linea());	
				detallecodigobarraproductoAux.setid_linea_grupo(this.detallecodigobarraproducto.getid_linea_grupo());	
				detallecodigobarraproductoAux.setid_linea_categoria(this.detallecodigobarraproducto.getid_linea_categoria());	
				detallecodigobarraproductoAux.setid_linea_marca(this.detallecodigobarraproducto.getid_linea_marca());	
				detallecodigobarraproductoAux.setcontrol(this.detallecodigobarraproducto.getcontrol());	
				detallecodigobarraproductoAux.setmedicion(this.detallecodigobarraproducto.getmedicion());	
				detallecodigobarraproductoAux.setvalor_anterior(this.detallecodigobarraproducto.getvalor_anterior());	
				detallecodigobarraproductoAux.setfecha(this.detallecodigobarraproducto.getfecha());	
				detallecodigobarraproductoAux.setobservacion(this.detallecodigobarraproducto.getobservacion());	
				
				if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detallecodigobarraproductoAux.getId()>=0) {	
						this.detallecodigobarraproductosEliminados.add(detallecodigobarraproductoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductos();//WithConnection
						//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductoRelaciones(detallecodigobarraproductoAux);//WithConnection
								//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detallecodigobarraproductoAux,detallecodigobarraproductos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(this.detallecodigobarraproductosEliminados);
					
					detallecodigobarraproductoLogic.saveDetalleCodigoBarraProductos();//WithConnection
					//detallecodigobarraproductoLogic.getSetVersionRowDetalleCodigoBarraProductos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto();
				
				this.detallecodigobarraproductosEliminados= new ArrayList<DetalleCodigoBarraProducto>();		
			}
			
			if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Codigo Barra Producto GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detallecodigobarraproducto=detallecodigobarraproductoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleCodigoBarraProducto();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleCodigoBarraProducto detallecodigobarraproductoLocal) throws Exception {
		
		if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleCodigoBarraProducto detallecodigobarraproductoLocal) throws Exception {	
		if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detallecodigobarraproductoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detallecodigobarraproductoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detallecodigobarraproductoLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detallecodigobarraproductoLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detallecodigobarraproductoLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineaBeanSwingJInternalFrameLocal.actualizarLista(lineaBeanSwingJInternalFrameLocal.linea,this.lineasForeignKey);

				lineaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineaBeanSwingJInternalFrameLocal.linea);

				detallecodigobarraproductoLocal.setLinea(lineaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey("Formulario");
				this.setActualLineaForeignKey(lineaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineagrupoBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineagrupoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineagrupoBeanSwingJInternalFrameLocal.getlinea(),true);
				lineagrupoBeanSwingJInternalFrameLocal.actualizarLista(lineagrupoBeanSwingJInternalFrameLocal.linea,this.lineagruposForeignKey);

				lineagrupoBeanSwingJInternalFrameLocal.actualizarRelaciones(lineagrupoBeanSwingJInternalFrameLocal.linea);

				detallecodigobarraproductoLocal.setLineaGrupo(lineagrupoBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey("Formulario");
				this.setActualLineaGrupoForeignKey(lineagrupoBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineacategoriaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineacategoriaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineacategoriaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineacategoriaBeanSwingJInternalFrameLocal.actualizarLista(lineacategoriaBeanSwingJInternalFrameLocal.linea,this.lineacategoriasForeignKey);

				lineacategoriaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				detallecodigobarraproductoLocal.setLineaCategoria(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey("Formulario");
				this.setActualLineaCategoriaForeignKey(lineacategoriaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineamarcaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineamarcaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineamarcaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineamarcaBeanSwingJInternalFrameLocal.actualizarLista(lineamarcaBeanSwingJInternalFrameLocal.linea,this.lineamarcasForeignKey);

				lineamarcaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineamarcaBeanSwingJInternalFrameLocal.linea);

				detallecodigobarraproductoLocal.setLineaMarca(lineamarcaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey("Formulario");
				this.setActualLineaMarcaForeignKey(lineamarcaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleCodigoBarraProductoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detallecodigobarraproductoValidator.getInvalidValues(this.detallecodigobarraproducto);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleCodigoBarraProducto detallecodigobarraproducto,List<DetalleCodigoBarraProducto> detallecodigobarraproductos) throws Exception {
		try	{		
			DetalleCodigoBarraProductoConstantesFunciones.actualizarLista(detallecodigobarraproducto,detallecodigobarraproductos,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleCodigoBarraProducto detallecodigobarraproducto,List<DetalleCodigoBarraProducto> detallecodigobarraproductos) throws Exception {
		try	{			
			DetalleCodigoBarraProductoConstantesFunciones.actualizarSelectedLista(detallecodigobarraproducto,detallecodigobarraproductos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleCodigoBarraProducto> detallecodigobarraproductosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detallecodigobarraproductosLocal=this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detallecodigobarraproductosLocal=this.detallecodigobarraproductos;
			}
			//ARCHITECTURE
		
			for(DetalleCodigoBarraProducto detallecodigobarraproductoLocal:detallecodigobarraproductosLocal) {
				if(this.permiteMantenimiento(detallecodigobarraproductoLocal) && detallecodigobarraproductoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.getDetalleCodigoBarraProductoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_empresaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_sucursalDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_bodegaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_productoDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_unidadDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDLINEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_lineaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDLINEAGRUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_grupoDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDLINEACATEGORIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_categoriaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.IDLINEAMARCA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_marcaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.CONTROL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelcontrolDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.MEDICION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelmedicionDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.VALORANTERIOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelvalor_anteriorDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelfechaDetalleCodigoBarraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleCodigoBarraProductoConstantesFunciones.OBSERVACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelobservacionDetalleCodigoBarraProducto,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_empresaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_sucursalDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_bodegaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_productoDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_unidadDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_lineaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_grupoDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_categoriaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelid_linea_marcaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelcontrolDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelmedicionDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelvalor_anteriorDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelfechaDetalleCodigoBarraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelobservacionDetalleCodigoBarraProducto,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleCodigoBarraProducto--;	
		
		
		this.detallecodigobarraproductoAux=new DetalleCodigoBarraProducto();
		
		this.detallecodigobarraproductoAux.setId(this.iIdNuevoDetalleCodigoBarraProducto);
		this.detallecodigobarraproductoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().add(this.detallecodigobarraproductoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detallecodigobarraproductos.add(this.detallecodigobarraproductoAux);
		}
		//ARCHITECTURE
		
		this.detallecodigobarraproducto=this.detallecodigobarraproductoAux;
		
		if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
		}
				
		//this.setDefaultControlesDetalleCodigoBarraProducto();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleCodigoBarraProducto();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleCodigoBarraProducto();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleCodigoBarraProducto();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproductoBean,this.detallecodigobarraproducto,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
			classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.procesarEventosDetalleCodigoBarraProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this.detallecodigobarraproducto,this.detallecodigobarraproductoParameterGeneral,this.isEsNuevoDetalleCodigoBarraProducto,classes);//this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProducto()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral,this.detallecodigobarraproductoBean,false);
		
		if(this.detallecodigobarraproductoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto());
		}
		
		if(this.detallecodigobarraproductoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto(),classes);//this.detallecodigobarraproductoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleCodigoBarraProducto();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleCodigoBarraProducto();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.RecargarFormDetalleCodigoBarraProducto(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
						
			if(detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();
			}
			
			this.actualizarVisualTableDatosDetalleCodigoBarraProducto();
			
			this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(this.getIndiceNuevoDetalleCodigoBarraProducto(), this.getIndiceNuevoDetalleCodigoBarraProducto());
			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
						
			this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleCodigoBarraProducto(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarcontrolDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarmedicionDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarvalor_anteriorDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarfechaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarobservacionDetalleCodigoBarraProducto);	
		//
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_empresaDetalleCodigoBarraProducto);//
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_sucursalDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_bodegaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_productoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_unidadDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_lineaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_linea_grupoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_linea_categoriaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setEnabled(isHabilitar && this.detallecodigobarraproductoConstantesFunciones.activarid_linea_marcaDetalleCodigoBarraProducto);
	};
	
	public void setDefaultControlesDetalleCodigoBarraProducto() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleCodigoBarraProducto(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detallecodigobarraproductoSessionBean.setConGuardarRelaciones(true);			
			this.detallecodigobarraproductoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.setVisible(true);
			
					
		} else {
			//this.detallecodigobarraproductoSessionBean.setConGuardarRelaciones(false);			
			this.detallecodigobarraproductoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleCodigoBarraProducto() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				if(detallecodigobarraproductoAux.getId().equals(this.iIdNuevoDetalleCodigoBarraProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductos) {
				if(detallecodigobarraproductoAux.getId().equals(this.iIdNuevoDetalleCodigoBarraProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				if(detallecodigobarraproductoAux.getId().equals(detallecodigobarraproducto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductos) {
				if(detallecodigobarraproductoAux.getId().equals(detallecodigobarraproducto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproductoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				if(detallecodigobarraproductoAux.getDetalleCodigoBarraProductoOriginal().getId().equals(detallecodigobarraproductoOriginal.getId())) {
					existe=true;
					detallecodigobarraproductoOriginal.setId(detallecodigobarraproductoAux.getId());
					detallecodigobarraproductoOriginal.setVersionRow(detallecodigobarraproductoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductos) {
				if(detallecodigobarraproductoAux.getDetalleCodigoBarraProductoOriginal().getId().equals(detallecodigobarraproductoOriginal.getId())) {
					existe=true;
					detallecodigobarraproductoOriginal.setId(detallecodigobarraproductoAux.getId());
					detallecodigobarraproductoOriginal.setVersionRow(detallecodigobarraproductoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleCodigoBarraProducto(Boolean esParaCancelar) throws Exception {
		detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
		detallecodigobarraproductoAux=new DetalleCodigoBarraProducto();
		
		if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
					if(detallecodigobarraproductoAux.getId()<0) {
						detallecodigobarraproductosAux.add(detallecodigobarraproductoAux);
					}		
				}
				this.iIdNuevoDetalleCodigoBarraProducto=0L;
				this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().removeAll(detallecodigobarraproductosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductos) {
					if(detallecodigobarraproductoAux.getId()<0) {
						detallecodigobarraproductosAux.add(detallecodigobarraproductoAux);
					}		
				}
				this.iIdNuevoDetalleCodigoBarraProducto=0L;
				this.detallecodigobarraproductos.removeAll(detallecodigobarraproductosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleCodigoBarraProducto 
					&& this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()>0
					) {
					detallecodigobarraproductoAux=this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().get(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size() - 1);
				
					if(detallecodigobarraproductoAux.getId()<0) {
						this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().remove(detallecodigobarraproductoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleCodigoBarraProducto && this.detallecodigobarraproductos.size()>0) {
					detallecodigobarraproductoAux=this.detallecodigobarraproductos.get(this.detallecodigobarraproductos.size() - 1);
				
					if(detallecodigobarraproductoAux.getId()<0) {
						this.detallecodigobarraproductos.remove(detallecodigobarraproductoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleCodigoBarraProducto(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detallecodigobarraproducto.getId()<0) {
				this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().remove(this.detallecodigobarraproducto);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detallecodigobarraproducto.getId()<0) {
				this.detallecodigobarraproductos.remove(this.detallecodigobarraproducto);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleCodigoBarraProducto(List<DetalleCodigoBarraProducto> detallecodigobarraproductosAux) throws Exception {
		DetalleCodigoBarraProductoConstantesFunciones.setEstadosInicialesDetalleCodigoBarraProducto(detallecodigobarraproductosAux);
	}
	
	public void setEstadosInicialesDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproductoAux) throws Exception {
		DetalleCodigoBarraProductoConstantesFunciones.setEstadosInicialesDetalleCodigoBarraProducto(detallecodigobarraproductoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleCodigoBarraProductoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleCodigoBarraProductoActual()) {
				if(!this.isEsNuevoDetalleCodigoBarraProducto) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleCodigoBarraProducto=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleCodigoBarraProductoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Codigo Barra Producto ?", "MANTENIMIENTO DE Detalle Codigo Barra Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleCodigoBarraProducto detallecodigobarraproducto) throws Exception {
		DetalleCodigoBarraProductoConstantesFunciones.seleccionarAsignar(this.detallecodigobarraproducto,detallecodigobarraproducto);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleCodigoBarraProducto=this.isPermisoActualizarOriginalDetalleCodigoBarraProducto;
			
			
			this.seleccionarAsignar(detallecodigobarraproducto);
			
			

			idProductoActual=detallecodigobarraproducto.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleCodigoBarraProductoConstantesFunciones.quitarEspaciosDetalleCodigoBarraProducto(this.detallecodigobarraproducto,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detallecodigobarraproductoSessionBean.setsFuncionBusquedaRapida(this.detallecodigobarraproductoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleCodigoBarraProducto) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleCodigoBarraProducto(esParaCancelar);				
				this.cancelarNuevoDetalleCodigoBarraProducto(esParaCancelar);								
			}
			
			this.detallecodigobarraproducto=new DetalleCodigoBarraProducto();
			
			this.inicializarDetalleCodigoBarraProducto();
			
			this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleCodigoBarraProducto() throws Exception {
		try {
			DetalleCodigoBarraProductoConstantesFunciones.inicializarDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleCodigoBarraProductos(String sAccionBusqueda,List<DetalleCodigoBarraProducto> detallecodigobarraproductosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleCodigoBarraProducto"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleCodigoBarraProductoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleCodigoBarraProductoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleCodigoBarraProducto"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Codigo Barra Productos");		
		parameters.put("busquedapor", DetalleCodigoBarraProductoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleCodigoBarraProducto=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleCodigoBarraProductoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleCodigoBarraProductoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleCodigoBarraProducto=new JRBeanArrayDataSource(DetalleCodigoBarraProductoJInternalFrame.TraerDetalleCodigoBarraProductoBeans(detallecodigobarraproductosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleCodigoBarraProducto);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleCodigoBarraProductoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleCodigoBarraProductoBean.TraerDetalleCodigoBarraProductoBeans(detallecodigobarraproductosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProductoActionPerformed(null);
					//this.generarExcelReporteDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleCodigoBarraProductos(sAccionBusqueda,sTipoArchivoReporte,detallecodigobarraproductosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleCodigoBarraProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleCodigoBarraProducto> detallecodigobarraproductosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleCodigoBarraProductos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleCodigoBarraProducto("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleCodigoBarraProducto detallecodigobarraproducto : detallecodigobarraproductosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleCodigoBarraProductoConstantesFunciones.generarExcelReporteDataDetalleCodigoBarraProducto("NORMAL",row,workbook,detallecodigobarraproducto,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleCodigoBarraProducto(String sTipo,Row row,Workbook workbook) {
		
		DetalleCodigoBarraProductoConstantesFunciones.generarExcelReporteHeaderDetalleCodigoBarraProducto(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleCodigoBarraProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleCodigoBarraProducto> detallecodigobarraproductosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleCodigoBarraProductos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleCodigoBarraProducto detallecodigobarraproducto : detallecodigobarraproductosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.getDetalleCodigoBarraProductoDescripcion(detallecodigobarraproducto));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getlinea_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getlineagrupo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getlineacategoria_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getlineamarca_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getcontrol());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getmedicion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getvalor_anterior());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallecodigobarraproducto.getobservacion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleCodigoBarraProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleCodigoBarraProducto> detallecodigobarraproductosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleCodigoBarraProducto> detallecodigobarraproductosRespaldo=null;
		
		classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detallecodigobarraproductoLogic.setDatosCliente(this.datosCliente);
		this.detallecodigobarraproductoLogic.setDatosDeep(this.datosDeep);
		this.detallecodigobarraproductoLogic.setIsConDeep(true);
		
		detallecodigobarraproductosRespaldo=this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos();
		
		this.detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(detallecodigobarraproductosParaReportes);	
		this.detallecodigobarraproductoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detallecodigobarraproductosParaReportes=this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos();
		this.detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(detallecodigobarraproductosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleCodigoBarraProductos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleCodigoBarraProducto("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleCodigoBarraProducto detallecodigobarraproducto : detallecodigobarraproductosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleCodigoBarraProducto("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleCodigoBarraProductoConstantesFunciones.generarExcelReporteDataDetalleCodigoBarraProducto("NORMAL",row,workbook,detallecodigobarraproducto,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.getDetalleCodigoBarraProductoDescripcion(detallecodigobarraproducto));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleCodigoBarraProducto() throws Exception {		
		this.startProcessDetalleCodigoBarraProducto(true);
	}
	
	public void startProcessDetalleCodigoBarraProducto(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleCodigoBarraProducto ,this.jPanelParametrosReportesDetalleCodigoBarraProducto, this.jScrollPanelDatosDetalleCodigoBarraProducto,this.jPanelPaginacionDetalleCodigoBarraProducto, this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto, this.jPanelAccionesDetalleCodigoBarraProducto,this.jPanelAccionesFormularioDetalleCodigoBarraProducto,this.jmenuBarDetalleCodigoBarraProducto,this.jmenuBarDetalleDetalleCodigoBarraProducto,this.jTtoolBarDetalleCodigoBarraProducto,this.jTtoolBarDetalleDetalleCodigoBarraProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleCodigoBarraProducto=this.jTabbedPaneBusquedasDetalleCodigoBarraProducto; 
		
		final JPanel jPanelParametrosReportesDetalleCodigoBarraProducto=this.jPanelParametrosReportesDetalleCodigoBarraProducto;
		//final JScrollPane jScrollPanelDatosDetalleCodigoBarraProducto=this.jScrollPanelDatosDetalleCodigoBarraProducto;
		final JTable jTableDatosDetalleCodigoBarraProducto=this.jTableDatosDetalleCodigoBarraProducto;		
		final JPanel jPanelPaginacionDetalleCodigoBarraProducto=this.jPanelPaginacionDetalleCodigoBarraProducto;
		//final JScrollPane jScrollPanelDatosEdicionDetalleCodigoBarraProducto=this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto;
		final JPanel jPanelAccionesDetalleCodigoBarraProducto=this.jPanelAccionesDetalleCodigoBarraProducto;
		
		JPanel jPanelCamposAuxiliarDetalleCodigoBarraProducto=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			jPanelCamposAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelCamposDetalleCodigoBarraProducto;
			jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelAccionesFormularioDetalleCodigoBarraProducto;
		}
		
		final JPanel jPanelCamposDetalleCodigoBarraProducto=jPanelCamposAuxiliarDetalleCodigoBarraProducto;
		final JPanel jPanelAccionesFormularioDetalleCodigoBarraProducto=jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto;
		
		
		final JMenuBar jmenuBarDetalleCodigoBarraProducto=this.jmenuBarDetalleCodigoBarraProducto;
		final JToolBar jTtoolBarDetalleCodigoBarraProducto=this.jTtoolBarDetalleCodigoBarraProducto;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jmenuBarDetalleDetalleCodigoBarraProducto;
			jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTtoolBarDetalleDetalleCodigoBarraProducto;
		}
		
		final JMenuBar jmenuBarDetalleDetalleCodigoBarraProducto=jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto;
		final JToolBar jTtoolBarDetalleDetalleCodigoBarraProducto=jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleCodigoBarraProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleCodigoBarraProducto;
			processRunnable.jTableDatos=jTableDatosDetalleCodigoBarraProducto;
			processRunnable.jPanelCampos=jPanelCamposDetalleCodigoBarraProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleCodigoBarraProducto;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleCodigoBarraProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleCodigoBarraProducto;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleCodigoBarraProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleCodigoBarraProducto;
			processRunnable.jTtoolBar=jTtoolBarDetalleCodigoBarraProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleCodigoBarraProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleCodigoBarraProducto ,jPanelParametrosReportesDetalleCodigoBarraProducto,jTableDatosDetalleCodigoBarraProducto, /*jScrollPanelDatosDetalleCodigoBarraProducto,*/jPanelCamposDetalleCodigoBarraProducto,jPanelPaginacionDetalleCodigoBarraProducto, /*jScrollPanelDatosEdicionDetalleCodigoBarraProducto,*/ jPanelAccionesDetalleCodigoBarraProducto,jPanelAccionesFormularioDetalleCodigoBarraProducto,jmenuBarDetalleCodigoBarraProducto,jmenuBarDetalleDetalleCodigoBarraProducto,jTtoolBarDetalleCodigoBarraProducto,jTtoolBarDetalleDetalleCodigoBarraProducto);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleCodigoBarraProducto ,jPanelParametrosReportesDetalleCodigoBarraProducto, jScrollPanelDatosDetalleCodigoBarraProducto,jPanelPaginacionDetalleCodigoBarraProducto, jScrollPanelDatosEdicionDetalleCodigoBarraProducto, jPanelAccionesDetalleCodigoBarraProducto,jPanelAccionesFormularioDetalleCodigoBarraProducto,jmenuBarDetalleCodigoBarraProducto,jmenuBarDetalleDetalleCodigoBarraProducto,jTtoolBarDetalleCodigoBarraProducto,jTtoolBarDetalleDetalleCodigoBarraProducto);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleCodigoBarraProducto() {// throws Exception 
		this.finishProcessDetalleCodigoBarraProducto(true);
	}
	
	public void finishProcessDetalleCodigoBarraProducto(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleCodigoBarraProducto ,this.jPanelParametrosReportesDetalleCodigoBarraProducto, this.jScrollPanelDatosDetalleCodigoBarraProducto,this.jPanelPaginacionDetalleCodigoBarraProducto, this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto, this.jPanelAccionesDetalleCodigoBarraProducto,this.jPanelAccionesFormularioDetalleCodigoBarraProducto,this.jmenuBarDetalleCodigoBarraProducto,this.jmenuBarDetalleDetalleCodigoBarraProducto,this.jTtoolBarDetalleCodigoBarraProducto,this.jTtoolBarDetalleDetalleCodigoBarraProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleCodigoBarraProducto=this.jTabbedPaneBusquedasDetalleCodigoBarraProducto; 
		
		final JPanel jPanelParametrosReportesDetalleCodigoBarraProducto=this.jPanelParametrosReportesDetalleCodigoBarraProducto;
		//final JScrollPane jScrollPanelDatosDetalleCodigoBarraProducto=this.jScrollPanelDatosDetalleCodigoBarraProducto;
		final JTable jTableDatosDetalleCodigoBarraProducto=this.jTableDatosDetalleCodigoBarraProducto;		
		final JPanel jPanelPaginacionDetalleCodigoBarraProducto=this.jPanelPaginacionDetalleCodigoBarraProducto;
		//final JScrollPane jScrollPanelDatosEdicionDetalleCodigoBarraProducto=this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto;
		final JPanel jPanelAccionesDetalleCodigoBarraProducto=this.jPanelAccionesDetalleCodigoBarraProducto;
		
		JPanel jPanelCamposAuxiliarDetalleCodigoBarraProducto=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			jPanelCamposAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelCamposDetalleCodigoBarraProducto;
			jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelAccionesFormularioDetalleCodigoBarraProducto;
		}
		
		final JPanel jPanelCamposDetalleCodigoBarraProducto=jPanelCamposAuxiliarDetalleCodigoBarraProducto;
		final JPanel jPanelAccionesFormularioDetalleCodigoBarraProducto=jPanelAccionesFormularioAuxiliarDetalleCodigoBarraProducto;
		
		
		final JMenuBar jmenuBarDetalleCodigoBarraProducto=this.jmenuBarDetalleCodigoBarraProducto;		
		final JToolBar jTtoolBarDetalleCodigoBarraProducto=this.jTtoolBarDetalleCodigoBarraProducto;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jmenuBarDetalleDetalleCodigoBarraProducto;
			jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTtoolBarDetalleDetalleCodigoBarraProducto;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleCodigoBarraProducto=jmenuBarDetalleAuxiliarDetalleCodigoBarraProducto;
		final JToolBar jTtoolBarDetalleDetalleCodigoBarraProducto=jTtoolBarDetalleAuxiliarDetalleCodigoBarraProducto;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleCodigoBarraProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleCodigoBarraProducto;
			processRunnable.jTableDatos=jTableDatosDetalleCodigoBarraProducto;
			processRunnable.jPanelCampos=jPanelCamposDetalleCodigoBarraProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleCodigoBarraProducto;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleCodigoBarraProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleCodigoBarraProducto;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleCodigoBarraProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleCodigoBarraProducto;
			processRunnable.jTtoolBar=jTtoolBarDetalleCodigoBarraProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleCodigoBarraProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleCodigoBarraProducto ,jPanelParametrosReportesDetalleCodigoBarraProducto, jTableDatosDetalleCodigoBarraProducto,/*jScrollPanelDatosDetalleCodigoBarraProducto,*/jPanelCamposDetalleCodigoBarraProducto,jPanelPaginacionDetalleCodigoBarraProducto, /*jScrollPanelDatosEdicionDetalleCodigoBarraProducto,*/ jPanelAccionesDetalleCodigoBarraProducto,jPanelAccionesFormularioDetalleCodigoBarraProducto,jmenuBarDetalleCodigoBarraProducto,jmenuBarDetalleDetalleCodigoBarraProducto,jTtoolBarDetalleCodigoBarraProducto,jTtoolBarDetalleDetalleCodigoBarraProducto));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleCodigoBarraProducto(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleCodigoBarraProducto(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleCodigoBarraProducto(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleCodigoBarraProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleCodigoBarraProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleCodigoBarraProducto,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleCodigoBarraProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleCodigoBarraProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleCodigoBarraProducto,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detallecodigobarraproductoConstantesFunciones.getsFinalQueryDetalleCodigoBarraProducto();
		String  finalQueryPaginacionTodos=this.detallecodigobarraproductoConstantesFunciones.getsFinalQueryDetalleCodigoBarraProducto();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleCodigoBarraProductoConstantesFunciones.getArrayColumnasGlobalesNoDetalleCodigoBarraProducto(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleCodigoBarraProductoConstantesFunciones.getArrayColumnasGlobalesDetalleCodigoBarraProducto(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleCodigoBarraProductoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detallecodigobarraproductosEliminados= new ArrayList<DetalleCodigoBarraProducto>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleCodigoBarraProducto();
		
				///*DetalleCodigoBarraProductoSessionBean*/this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			
			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleCodigoBarraProductoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesForeignKeysOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detallecodigobarraproducto."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detallecodigobarraproductosAux= new ArrayList<DetalleCodigoBarraProducto>();
			
				
			detallecodigobarraproductoLogic.setDatosCliente(this.datosCliente);
			detallecodigobarraproductoLogic.setDatosDeep(this.datosDeep);
			detallecodigobarraproductoLogic.setIsConDeep(true);
			
			
			detallecodigobarraproductoLogic.getDetalleCodigoBarraProductoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detallecodigobarraproductoLogic.getTodosDetalleCodigoBarraProductos(finalQueryGlobal,pagination);
					
					//detallecodigobarraproductoLogic.getTodosDetalleCodigoBarraProductosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null|| detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallecodigobarraproductosAux= new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux= new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallecodigobarraproductoLogic.getTodosDetalleCodigoBarraProductos(finalQueryGlobal+"",this.pagination);												
							
							//detallecodigobarraproductoLogic.getTodosDetalleCodigoBarraProductosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());					
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleCodigoBarraProducto=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleCodigoBarraProducto=this.idActual;
				
				} else if(this.idDetalleCodigoBarraProductoActual!=null && this.idDetalleCodigoBarraProductoActual!=0L) {
					idDetalleCodigoBarraProducto=idDetalleCodigoBarraProductoActual;
				}
				
					
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndicePorId(idDetalleCodigoBarraProducto);
				
				this.detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detallecodigobarraproductoLogic.getEntity(idDetalleCodigoBarraProducto);
					
					//detallecodigobarraproductoLogic.getEntityWithConnection(idDetalleCodigoBarraProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().add(detallecodigobarraproductoLogic.getDetalleCodigoBarraProducto());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
					this.detallecodigobarraproductos.add(detallecodigobarraproducto);
				}
				
				if(detallecodigobarraproductoLogic.getDetalleCodigoBarraProducto()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdBodega",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdBodega",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdEmpresa",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdEmpresa",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLinea")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLinea",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLinea",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaCategoria")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaCategoria(finalQueryGlobal,pagination,id_linea_categoriaFK_IdLineaCategoria);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaCategoria(finalQueryGlobal,pagination,id_linea_categoriaFK_IdLineaCategoria);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaCategoria(id_linea_categoriaFK_IdLineaCategoria);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaCategoria",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaCategoria",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaGrupo")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaGrupo(finalQueryGlobal,pagination,id_linea_grupoFK_IdLineaGrupo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaGrupo(finalQueryGlobal,pagination,id_linea_grupoFK_IdLineaGrupo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaGrupo(id_linea_grupoFK_IdLineaGrupo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaGrupo",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaGrupo",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLineaMarca")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaMarca(finalQueryGlobal,pagination,id_linea_marcaFK_IdLineaMarca);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaMarca(finalQueryGlobal,pagination,id_linea_marcaFK_IdLineaMarca);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdLineaMarca(id_linea_marcaFK_IdLineaMarca);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaMarca",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdLineaMarca",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdProducto",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdProducto",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdSucursal",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdSucursal",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()==null||detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallecodigobarraproductos==null|| detallecodigobarraproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
						detallecodigobarraproductosAux.addAll(detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductosAux=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductosAux.addAll(detallecodigobarraproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleCodigoBarraProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleCodigoBarraProductos("FK_IdUnidad",detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleCodigoBarraProductos("FK_IdUnidad",detallecodigobarraproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(new ArrayList<DetalleCodigoBarraProducto>());
						detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().addAll(detallecodigobarraproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductos=new ArrayList<DetalleCodigoBarraProducto>();
							detallecodigobarraproductos.addAll(detallecodigobarraproductosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleCodigoBarraProducto();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleCodigoBarraProducto();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallecodigobarraproductos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallecodigobarraproductos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleCodigoBarraProducto detallecodigobarraproducto) {
		Boolean permite=true;
		
		if(this.detallecodigobarraproducto.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleCodigoBarraProductoConstantesFunciones.getOrderByListaDetalleCodigoBarraProducto();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleCodigoBarraProductoConstantesFunciones.getOrderByListaDetalleCodigoBarraProducto();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				if(detallecodigobarraproducto.getsType().equals(Constantes2.S_TOTALES)) {
					detallecodigobarraproductoTotales=detallecodigobarraproducto;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleCodigoBarraProducto detallecodigobarraproducto:this.detallecodigobarraproductos) {
				if(detallecodigobarraproducto.getsType().equals(Constantes2.S_TOTALES)) {
					detallecodigobarraproductoTotales=detallecodigobarraproducto;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detallecodigobarraproductoAux=new DetalleCodigoBarraProducto();
			this.detallecodigobarraproductoAux.setsType(Constantes2.S_TOTALES);
			this.detallecodigobarraproductoAux.setIsNew(false);
			this.detallecodigobarraproductoAux.setIsChanged(false);
			this.detallecodigobarraproductoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleCodigoBarraProductoConstantesFunciones.TotalizarValoresFilaDetalleCodigoBarraProducto(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this.detallecodigobarraproductoAux);
				
				this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().add(this.detallecodigobarraproductoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleCodigoBarraProductoConstantesFunciones.TotalizarValoresFilaDetalleCodigoBarraProducto(this.detallecodigobarraproductos,this.detallecodigobarraproductoAux);
				
				this.detallecodigobarraproductos.add(this.detallecodigobarraproductoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detallecodigobarraproductoTotales=new DetalleCodigoBarraProducto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().remove(detallecodigobarraproductoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallecodigobarraproductos.remove(detallecodigobarraproductoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detallecodigobarraproductoTotales=new DetalleCodigoBarraProducto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				if(detallecodigobarraproducto.getsType().equals(Constantes2.S_TOTALES)) {
					detallecodigobarraproductoTotales=detallecodigobarraproducto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleCodigoBarraProductoConstantesFunciones.TotalizarValoresFilaDetalleCodigoBarraProducto(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),detallecodigobarraproductoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleCodigoBarraProducto detallecodigobarraproducto:this.detallecodigobarraproductos) {
				if(detallecodigobarraproducto.getsType().equals(Constantes2.S_TOTALES)) {
					detallecodigobarraproductoTotales=detallecodigobarraproducto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleCodigoBarraProductoConstantesFunciones.TotalizarValoresFilaDetalleCodigoBarraProducto(this.detallecodigobarraproductos,detallecodigobarraproductoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleCodigoBarraProductosFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLinea()throws Exception {
		try {
			sAccionBusqueda="FK_IdLinea";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaCategoria()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaCategoria";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaGrupo()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaGrupo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaMarca()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaMarca";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleCodigoBarraProductosFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLinea(String sFinalQuery,Long id_linea)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLinea(sFinalQuery,this.pagination,id_linea);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaCategoria(String sFinalQuery,Long id_linea_categoria)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaCategoria(sFinalQuery,this.pagination,id_linea_categoria);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaGrupo(String sFinalQuery,Long id_linea_grupo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaGrupo(sFinalQuery,this.pagination,id_linea_grupo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdLineaMarca(String sFinalQuery,Long id_linea_marca)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdLineaMarca(sFinalQuery,this.pagination,id_linea_marca);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleCodigoBarraProductosFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLogic.getDetalleCodigoBarraProductosFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleCodigoBarraProducto() {
		this.isPermisoTodoDetalleCodigoBarraProducto=false;
		this.isPermisoNuevoDetalleCodigoBarraProducto=false;
		this.isPermisoActualizarDetalleCodigoBarraProducto=false;
		this.isPermisoActualizarOriginalDetalleCodigoBarraProducto=false;
		this.isPermisoEliminarDetalleCodigoBarraProducto=false;
		this.isPermisoGuardarCambiosDetalleCodigoBarraProducto=false;
		this.isPermisoConsultaDetalleCodigoBarraProducto=false;
		this.isPermisoBusquedaDetalleCodigoBarraProducto=false;
		this.isPermisoReporteDetalleCodigoBarraProducto=false;		
		this.isPermisoOrdenDetalleCodigoBarraProducto=false;		
		this.isPermisoPaginacionMedioDetalleCodigoBarraProducto=false;		
		this.isPermisoPaginacionAltoDetalleCodigoBarraProducto=false;
		this.isPermisoPaginacionTodoDetalleCodigoBarraProducto=false;
		this.isPermisoCopiarDetalleCodigoBarraProducto=false;		
		this.isPermisoVerFormDetalleCodigoBarraProducto=false;		
		this.isPermisoDuplicarDetalleCodigoBarraProducto=false;		
		this.isPermisoOrdenDetalleCodigoBarraProducto=false;		
	}
	
	public void setPermisosUsuarioDetalleCodigoBarraProducto(Boolean isPermiso) {
		this.isPermisoTodoDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoNuevoDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoActualizarDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoActualizarOriginalDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoEliminarDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoGuardarCambiosDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoConsultaDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoBusquedaDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoReporteDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoOrdenDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoPaginacionMedioDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoPaginacionAltoDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoPaginacionTodoDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoCopiarDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoVerFormDetalleCodigoBarraProducto=isPermiso;		
		this.isPermisoDuplicarDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoOrdenDetalleCodigoBarraProducto=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleCodigoBarraProducto(Boolean isPermiso) {
		//this.isPermisoTodoDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoNuevoDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoActualizarDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoActualizarOriginalDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoEliminarDetalleCodigoBarraProducto=isPermiso;
		this.isPermisoGuardarCambiosDetalleCodigoBarraProducto=isPermiso;
		//this.isPermisoConsultaDetalleCodigoBarraProducto=isPermiso;
		//this.isPermisoBusquedaDetalleCodigoBarraProducto=isPermiso;
		//this.isPermisoReporteDetalleCodigoBarraProducto=isPermiso;
		//this.isPermisoOrdenDetalleCodigoBarraProducto=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleCodigoBarraProducto=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleCodigoBarraProducto=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleCodigoBarraProducto=isPermiso;		
		//this.isPermisoCopiarDetalleCodigoBarraProducto=isPermiso;		
		//this.isPermisoDuplicarDetalleCodigoBarraProducto=isPermiso;
		//this.isPermisoOrdenDetalleCodigoBarraProducto=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleCodigoBarraProductoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleCodigoBarraProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleCodigoBarraProductoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleCodigoBarraProductoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleCodigoBarraProductoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleCodigoBarraProductoClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleCodigoBarraProducto() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleCodigoBarraProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleCodigoBarraProductoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleCodigoBarraProducto=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleCodigoBarraProducto=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleCodigoBarraProducto=this.isPermisoActualizarDetalleCodigoBarraProducto;
			this.isPermisoEliminarDetalleCodigoBarraProducto=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleCodigoBarraProducto=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleCodigoBarraProducto=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleCodigoBarraProducto=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleCodigoBarraProducto=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleCodigoBarraProducto=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleCodigoBarraProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleCodigoBarraProducto=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleCodigoBarraProducto=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleCodigoBarraProducto=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleCodigoBarraProducto=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleCodigoBarraProducto=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleCodigoBarraProducto=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleCodigoBarraProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleCodigoBarraProducto.setToolTipText(this.jTableDatosDetalleCodigoBarraProducto.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleCodigoBarraProducto(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleCodigoBarraProducto(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleCodigoBarraProducto() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleCodigoBarraProductoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.lineasForeignKey=new ArrayList();
				this.lineagruposForeignKey=new ArrayList();
				this.lineacategoriasForeignKey=new ArrayList();
				this.lineamarcasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleCodigoBarraProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleCodigoBarraProductoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleCodigoBarraProductoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoriaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarcaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleCodigoBarraProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoReturnGeneral=new DetalleCodigoBarraProductoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_empresaDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_empresaDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_sucursalDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_sucursalDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_bodegaDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_bodegaDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_productoDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_productoDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_unidadDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_unidadDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalLinea="";

				if(((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_lineaDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_lineaDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLinea=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLinea=Funciones.GetFinalQueryAppend(finalQueryGlobalLinea, "");
						finalQueryGlobalLinea+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLinea=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidLineaActual();
					}
				} else {
					finalQueryGlobalLinea="NONE";
				}


				String finalQueryGlobalLineaGrupo="";

				if(((this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_grupoDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_grupoDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaGrupo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaGrupo=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaGrupo, "");
						finalQueryGlobalLineaGrupo+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaGrupo=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidLineaGrupoActual();
					}
				} else {
					finalQueryGlobalLineaGrupo="NONE";
				}


				String finalQueryGlobalLineaCategoria="";

				if(((this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_categoriaDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_categoriaDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaCategoria=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaCategoria=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaCategoria, "");
						finalQueryGlobalLineaCategoria+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaCategoria=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidLineaCategoriaActual();
					}
				} else {
					finalQueryGlobalLineaCategoria="NONE";
				}


				String finalQueryGlobalLineaMarca="";

				if(((this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0) && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_marcaDetalleCodigoBarraProducto)
					 || (this.esRecargarFks && this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_marcaDetalleCodigoBarraProducto)) {

					if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaMarca=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaMarca=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaMarca, "");
						finalQueryGlobalLineaMarca+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaMarca=" WHERE " + ConstantesSql.ID + "="+detallecodigobarraproductoSessionBean.getlidLineaMarcaActual();
					}
				} else {
					finalQueryGlobalLineaMarca="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.cargarCombosLoteForeignKeyDetalleCodigoBarraProducto(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalLinea,finalQueryGlobalLineaGrupo,finalQueryGlobalLineaCategoria,finalQueryGlobalLineaMarca);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detallecodigobarraproductoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detallecodigobarraproductoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detallecodigobarraproductoReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detallecodigobarraproductoReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detallecodigobarraproductoReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalLinea.equals("NONE")) {
				this.lineasForeignKey=detallecodigobarraproductoReturnGeneral.getlineasForeignKey();
			}

			if(!finalQueryGlobalLineaGrupo.equals("NONE")) {
				this.lineagruposForeignKey=detallecodigobarraproductoReturnGeneral.getlineagruposForeignKey();
			}

			if(!finalQueryGlobalLineaCategoria.equals("NONE")) {
				this.lineacategoriasForeignKey=detallecodigobarraproductoReturnGeneral.getlineacategoriasForeignKey();
			}

			if(!finalQueryGlobalLineaMarca.equals("NONE")) {
				this.lineamarcasForeignKey=detallecodigobarraproductoReturnGeneral.getlineamarcasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleCodigoBarraProducto()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyLinea();
			this.addItemDefectoCombosForeignKeyLineaGrupo();
			this.addItemDefectoCombosForeignKeyLineaCategoria();
			this.addItemDefectoCombosForeignKeyLineaMarca();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detallecodigobarraproductoSessionBean==null) {
				this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLinea()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				Linea linea=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(linea,Constantes.SMENSAJE_ESCOJA_OPCION);
				linea.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineasForeignKey,linea,true)) {

					this.lineasForeignKey.add(0,linea);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaGrupo()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				Linea lineagrupo=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineagrupo,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineagrupo.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineagruposForeignKey,lineagrupo,true)) {

					this.lineagruposForeignKey.add(0,lineagrupo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaCategoria()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				Linea lineacategoria=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineacategoria,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineacategoria.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineacategoriasForeignKey,lineacategoria,true)) {

					this.lineacategoriasForeignKey.add(0,lineacategoria);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaMarca()throws Exception {
		try {

			if(!this.detallecodigobarraproductoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				Linea lineamarca=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineamarca,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineamarca.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineamarcasForeignKey,lineamarca,true)) {

					this.lineamarcasForeignKey.add(0,lineamarca);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleCodigoBarraProducto()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleCodigoBarraProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detallecodigobarraproducto.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetalleCodigoBarraProducto"));
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleCodigoBarraProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetalleCodigoBarraProducto"));
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleCodigoBarraProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.addItemListener(new ComboBoxItemListener(this,"id_productoDetalleCodigoBarraProducto"));
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleCodigoBarraProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(this,"id_productoDetalleCodigoBarraProducto"));
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleCodigoBarraProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto"));

						this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto"));

						this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleCodigoBarraProducto()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.detallecodigobarraproducto.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleCodigoBarraProducto();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto)throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(detallecodigobarraproducto.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detallecodigobarraproducto.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detallecodigobarraproducto.getid_unidad(),false,"Formulario");
			this.setActualLineaForeignKey(detallecodigobarraproducto.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(detallecodigobarraproducto.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(detallecodigobarraproducto.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(detallecodigobarraproducto.getid_linea_marca(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detallecodigobarraproducto.getProducto()!=null && !sTipoEvento.equals("id_productoDetalleCodigoBarraProducto")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detallecodigobarraproducto.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleCodigoBarraProducto()throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualLineaForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(this.detallecodigobarraproductoConstantesFunciones.getid_linea_marca(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleCodigoBarraProducto()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleCodigoBarraProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleCodigoBarraProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleCodigoBarraProducto()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleCodigoBarraProducto()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameLineasForeignKey("Todos");
			this.cargarCombosFrameLineaGruposForeignKey("Todos");
			this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
			this.cargarCombosFrameLineaMarcasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleCodigoBarraProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleCodigoBarraProducto()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormDetalleCodigoBarraProductoBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleCodigoBarraProductoid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetalleCodigoBarraProductoProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleCodigoBarraProductoid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}










	
	



	public void recargarFormDetalleCodigoBarraProductoid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detallecodigobarraproducto,jComboBoxGenericoProducto);
			}

			if(this.detallecodigobarraproducto.getid_bodega()!=null && this.detallecodigobarraproducto.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detallecodigobarraproducto.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detallecodigobarraproducto.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetalleCodigoBarraProductoid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detallecodigobarraproducto,jComboBoxGenericoUnidad);
			}

			if(this.detallecodigobarraproducto.getid_producto()!=null && this.detallecodigobarraproducto.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detallecodigobarraproducto.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detallecodigobarraproducto.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleCodigoBarraProductoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleCodigoBarraProductoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleCodigoBarraProductoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean(); 
		this.detallecodigobarraproductoConstantesFunciones=new DetalleCodigoBarraProductoConstantesFunciones(); 
		this.detallecodigobarraproductoBean=new DetalleCodigoBarraProducto();//(this.detallecodigobarraproductoConstantesFunciones); 		
		this.detallecodigobarraproductoReturnGeneral=new DetalleCodigoBarraProductoParameterReturnGeneral(); 
		
		this.detallecodigobarraproductoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detallecodigobarraproductoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleCodigoBarraProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleCodigoBarraProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleCodigoBarraProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleCodigoBarraProducto(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detallecodigobarraproductoConstantesFunciones=new DetalleCodigoBarraProductoConstantesFunciones(); 
			this.detallecodigobarraproductoBean=new DetalleCodigoBarraProducto();//this.detallecodigobarraproductoConstantesFunciones); 			
			this.detallecodigobarraproductoReturnGeneral=new DetalleCodigoBarraProductoParameterReturnGeneral(); 
		
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Codigo Barra Producto Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detallecodigobarraproducto=new DetalleCodigoBarraProducto();
			this.detallecodigobarraproductos = new ArrayList<DetalleCodigoBarraProducto>();
			this.detallecodigobarraproductosAux = new ArrayList<DetalleCodigoBarraProducto>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic=new DetalleCodigoBarraProductoLogic();
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			//this.detallecodigobarraproductoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detallecodigobarraproductoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto);	
					}
					
					if(this.jInternalFrameImportacionDetalleCodigoBarraProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleCodigoBarraProducto);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleCodigoBarraProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleCodigoBarraProducto);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto);
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setVisible(false);
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto);
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleCodigoBarraProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleCodigoBarraProducto);
					this.jInternalFrameImportacionDetalleCodigoBarraProducto.setVisible(false);
					this.jInternalFrameImportacionDetalleCodigoBarraProducto.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleCodigoBarraProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleCodigoBarraProducto);
					this.jInternalFrameOrderByDetalleCodigoBarraProducto.setVisible(false);
					this.jInternalFrameOrderByDetalleCodigoBarraProducto.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleCodigoBarraProductoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleCodigoBarraProductoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detallecodigobarraproductoReturnGeneral=new DetalleCodigoBarraProductoParameterReturnGeneral();
			
			this.detallecodigobarraproductoParameterGeneral=new DetalleCodigoBarraProductoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detallecodigobarraproductoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleCodigoBarraProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleCodigoBarraProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdLinea=true;
			this.isVisibilidadFK_IdLineaCategoria=true;
			this.isVisibilidadFK_IdLineaGrupo=true;
			this.isVisibilidadFK_IdLineaMarca=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleCodigoBarraProducto();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleCodigoBarraProducto(false);
			
			this.setPermisosUsuarioDetalleCodigoBarraProducto();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado() 
				|| (this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado() && this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleCodigoBarraProductoClasesRelacionadas();
			}
			
			if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleCodigoBarraProductoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleCodigoBarraProducto();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleCodigoBarraProducto();
			}
			
			if(!this.isPermisoBusquedaDetalleCodigoBarraProducto) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleCodigoBarraProducto,this.isPermisoPaginacionMedioDetalleCodigoBarraProducto,this.isPermisoPaginacionTodoDetalleCodigoBarraProducto);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleCodigoBarraProductoConstantesFunciones.getTiposSeleccionarDetalleCodigoBarraProducto());
				
				this.tiposColumnasSelect=DetalleCodigoBarraProductoConstantesFunciones.getTiposSeleccionarDetalleCodigoBarraProducto(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleCodigoBarraProducto();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleCodigoBarraProducto(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleCodigoBarraProducto(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleCodigoBarraProducto() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.lineaLogic=new LineaLogic();
			this.lineagrupoLogic=new LineaLogic();
			this.lineacategoriaLogic=new LineaLogic();
			this.lineamarcaLogic=new LineaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detallecodigobarraproductoImplementable= (DetalleCodigoBarraProductoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleCodigoBarraProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detallecodigobarraproductoImplementableHome= (DetalleCodigoBarraProductoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleCodigoBarraProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detallecodigobarraproductos= new ArrayList<DetalleCodigoBarraProducto>();
			this.detallecodigobarraproductosEliminados= new ArrayList<DetalleCodigoBarraProducto>();
						
			this.isEsNuevoDetalleCodigoBarraProducto=false;
			this.esParaAccionDesdeFormularioDetalleCodigoBarraProducto=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.lineasForeignKey=new ArrayList<Linea>() ;
			this.lineagruposForeignKey=new ArrayList<Linea>() ;
			this.lineacategoriasForeignKey=new ArrayList<Linea>() ;
			this.lineamarcasForeignKey=new ArrayList<Linea>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleCodigoBarraProducto(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleCodigoBarraProducto();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleCodigoBarraProductoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleCodigoBarraProducto();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleCodigoBarraProducto();
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleCodigoBarraProducto(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleCodigoBarraProducto: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleCodigoBarraProducto() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleCodigoBarraProducto")) {
				iIndex=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleCodigoBarraProducto();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleCodigoBarraProducto(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleCodigoBarraProducto(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleCodigoBarraProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleCodigoBarraProductoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleCodigoBarraProducto();
		
		this.cargarCombosFrameForeignKeyDetalleCodigoBarraProducto();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleCodigoBarraProducto();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleCodigoBarraProducto();
		}
	}
	
	

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLinea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaLinea(this.lineasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaLineaGrupo(this.lineagruposForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoria(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaLineaCategoria(this.lineacategoriasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarca(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaLineaMarca(this.lineamarcasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			
			if(jTableDatosDetalleCodigoBarraProducto.getRowCount()>=1) {
				jTableDatosDetalleCodigoBarraProducto.removeRowSelectionInterval(0, jTableDatosDetalleCodigoBarraProducto.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleCodigoBarraProducto=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleCodigoBarraProducto(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(true);			
			//this.detallecodigobarraproducto=new DetalleCodigoBarraProducto();
			//this.detallecodigobarraproducto.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto() ;
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleCodigoBarraProducto(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detallecodigobarraproducto);	
			this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);				
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleCodigoBarraProducto: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRows().length;			
			}
			
			detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleCodigoBarraProducto--;			
				//DetalleCodigoBarraProducto detallecodigobarraproductoAux= new DetalleCodigoBarraProducto();			
				//detallecodigobarraproductoAux.setId(this.iIdNuevoDetalleCodigoBarraProducto);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleCodigoBarraProducto detallecodigobarraproductoOrigen=new DetalleCodigoBarraProducto();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleCodigoBarraProducto detallecodigobarraproductoOrigen : detallecodigobarraproductosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detallecodigobarraproductoOrigen =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallecodigobarraproductoOrigen =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleCodigoBarraProducto();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detallecodigobarraproducto.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleCodigoBarraProducto(detallecodigobarraproductoOrigen,this.detallecodigobarraproducto,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().add(this.detallecodigobarraproductoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproductos.add(this.detallecodigobarraproductoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
				
				this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(this.getIndiceNuevoDetalleCodigoBarraProducto(), this.getIndiceNuevoDetalleCodigoBarraProducto());
				
				int iLastRow =  this.jTableDatosDetalleCodigoBarraProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleCodigoBarraProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleCodigoBarraProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();									
		
			DetalleCodigoBarraProducto detallecodigobarraproductoOrigen=new DetalleCodigoBarraProducto();
			DetalleCodigoBarraProducto detallecodigobarraproductoDestino=new DetalleCodigoBarraProducto();
				
			detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detallecodigobarraproductosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleCodigoBarraProducto.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoOrigen =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallecodigobarraproductoOrigen =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallecodigobarraproductoDestino =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallecodigobarraproductoDestino =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detallecodigobarraproductoOrigen =detallecodigobarraproductosSeleccionados.get(0);
				detallecodigobarraproductoDestino =detallecodigobarraproductosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleCodigoBarraProducto(detallecodigobarraproductoOrigen,detallecodigobarraproductoDestino,true,false);
				
				detallecodigobarraproductoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallecodigobarraproductoDestino,detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallecodigobarraproductoDestino,detallecodigobarraproductos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
				
				//this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(this.getIndiceNuevoDetalleCodigoBarraProducto(), this.getIndiceNuevoDetalleCodigoBarraProducto());
				
				int iLastRow =  this.jTableDatosDetalleCodigoBarraProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleCodigoBarraProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleCodigoBarraProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleCodigoBarraProducto.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(!isVisible);
			this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(!isVisible);
			this.jPanelAccionesDetalleCodigoBarraProducto.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleCodigoBarraProducto();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleCodigoBarraProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleCodigoBarraProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleCodigoBarraProducto();
			
			this.abrirFrameOrderByDetalleCodigoBarraProducto();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleCodigoBarraProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleCodigoBarraProducto(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleCodigoBarraProducto);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSize(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.iWidthFormulario,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jContentPaneDetalleDetalleCodigoBarraProducto.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jContentPaneDetalleDetalleCodigoBarraProducto.getWidth(),DetalleCodigoBarraProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jContentPaneDetalleDetalleCodigoBarraProducto.getWidth(),DetalleCodigoBarraProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jContentPaneDetalleDetalleCodigoBarraProducto.getWidth(),DetalleCodigoBarraProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleCodigoBarraProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleCodigoBarraProducto==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleCodigoBarraProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleCodigoBarraProducto,false,this);
				} else {
					this.jInternalFrameOrderByDetalleCodigoBarraProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleCodigoBarraProducto,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleCodigoBarraProducto);
				this.jInternalFrameOrderByDetalleCodigoBarraProducto.setVisible(false);
				this.jInternalFrameOrderByDetalleCodigoBarraProducto.setSelected(false);
				
				this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleCodigoBarraProducto"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleCodigoBarraProducto();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleCodigoBarraProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleCodigoBarraProducto==null) {
				
				this.jInternalFrameImportacionDetalleCodigoBarraProducto=new ImportacionJInternalFrame(DetalleCodigoBarraProductoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleCodigoBarraProducto);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleCodigoBarraProducto);
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.setVisible(false);
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.setSelected(false);


				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleCodigoBarraProducto"));
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleCodigoBarraProducto"));
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleCodigoBarraProducto"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleCodigoBarraProducto() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto==null) {
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto=new ReporteDinamicoJInternalFrame(DetalleCodigoBarraProductoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto);
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleCodigoBarraProducto"));
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleCodigoBarraProducto"));
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleCodigoBarraProducto"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleCodigoBarraProducto();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleDetalleCodigoBarraProducto() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleCodigoBarraProducto);
			
	       	this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.dispose();
			//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleCodigoBarraProducto() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleCodigoBarraProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleCodigoBarraProducto.setVisible(true);
	        this.jInternalFrameImportacionDetalleCodigoBarraProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByDetalleCodigoBarraProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleCodigoBarraProducto.setVisible(true);
	        this.jInternalFrameOrderByDetalleCodigoBarraProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleCodigoBarraProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleCodigoBarraProducto.setVisible(false);
	        this.jInternalFrameOrderByDetalleCodigoBarraProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleCodigoBarraProducto() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleCodigoBarraProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleCodigoBarraProducto.setVisible(false);
	        this.jInternalFrameImportacionDetalleCodigoBarraProducto.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeLinea(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="Linea";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
						TitledBorder titledBorderLinea=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLinea.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLinea(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaGrupo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaGrupo";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
						TitledBorder titledBorderLineaGrupo=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaGrupo.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaGrupo(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaCategoria(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaCategoria";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
						TitledBorder titledBorderLineaCategoria=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaCategoria.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaCategoria(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaMarca(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaMarca";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
						TitledBorder titledBorderLineaMarca=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaMarca.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaMarca(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleCodigoBarraProducto(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleCodigoBarraProducto(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(true);
			//this.isEsNuevoDetalleCodigoBarraProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false) ;
			
			if(detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleCodigoBarraProducto(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleCodigoBarraProductoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleCodigoBarraProducto(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(true);
			//this.isEsNuevoDetalleCodigoBarraProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detallecodigobarraproducto.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false) ;
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleCodigoBarraProducto(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_productoDetalleCodigoBarraProducto) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLinea(List<Linea> lineasForeignKey)throws Exception{
		TableColumn tableColumnLinea=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA));
		TableCellEditor tableCellEditorLinea =tableColumnLinea.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLinea;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaGrupo(List<Linea> lineagruposForeignKey)throws Exception{
		TableColumn tableColumnLineaGrupo=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO));
		TableCellEditor tableCellEditorLineaGrupo =tableColumnLineaGrupo.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaGrupo;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineagruposForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineagruposForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaCategoria(List<Linea> lineacategoriasForeignKey)throws Exception{
		TableColumn tableColumnLineaCategoria=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA));
		TableCellEditor tableCellEditorLineaCategoria =tableColumnLineaCategoria.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaCategoria;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineacategoriasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineacategoriasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaMarca(List<Linea> lineamarcasForeignKey)throws Exception{
		TableColumn tableColumnLineaMarca=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA));
		TableCellEditor tableCellEditorLineaMarca =tableColumnLineaMarca.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaMarca;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineamarcasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineamarcasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleCodigoBarraProducto(false);
			
			//if(!this.isEsNuevoDetalleCodigoBarraProducto) {								
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				
			}
			
			if(this.permiteMantenimiento(this.detallecodigobarraproducto)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleCodigoBarraProducto=true;
					this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
					this.isEsNuevoDetalleCodigoBarraProducto=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleCodigoBarraProducto=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleCodigoBarraProducto=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(false);
				
				this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(false);
			
												
				
				if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleCodigoBarraProducto();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,detallecodigobarraproductoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detallecodigobarraproductoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detallecodigobarraproducto.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				this.detallecodigobarraproducto.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				this.detallecodigobarraproducto.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detallecodigobarraproducto)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleCodigoBarraProductoModel) this.jTableDatosDetalleCodigoBarraProducto.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleCodigoBarraProducto=true;
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
				this.isEsNuevoDetalleCodigoBarraProducto=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(false);
				
				this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(false);
				
				
				
				if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleCodigoBarraProducto();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleCodigoBarraProducto.getRowCount()>=1) {
				jTableDatosDetalleCodigoBarraProducto.removeRowSelectionInterval(0, jTableDatosDetalleCodigoBarraProducto.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleCodigoBarraProducto(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(false) ;
			
			this.isEsNuevoDetalleCodigoBarraProducto=false;
			
			if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleCodigoBarraProducto();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				
				//SI ES MANUAL
				if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleCodigoBarraProducto--;			
			//DetalleCodigoBarraProducto detallecodigobarraproductoAux= new DetalleCodigoBarraProducto();			
			//detallecodigobarraproductoAux.setId(this.iIdNuevoDetalleCodigoBarraProducto);
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleCodigoBarraProducto();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
			
			this.detallecodigobarraproducto.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().add(this.detallecodigobarraproductoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detallecodigobarraproductos.add(this.detallecodigobarraproductoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			
			this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(this.getIndiceNuevoDetalleCodigoBarraProducto(), this.getIndiceNuevoDetalleCodigoBarraProducto());
			
			int iLastRow =  this.jTableDatosDetalleCodigoBarraProducto.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleCodigoBarraProducto.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleCodigoBarraProducto.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
			
			//SI ES MANUAL
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();
			}
			
			//this.abrirFrameTreeDetalleCodigoBarraProducto();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Codigo Barra ProductoS ?", "MANTENIMIENTO DE Detalle Codigo Barra Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleCodigoBarraProducto.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleCodigoBarraProducto();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.procesarImportacionDetalleCodigoBarraProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detallecodigobarraproductoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleCodigoBarraProductoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleCodigoBarraProducto.setFileImportacion(this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleCodigoBarraProducto.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleCodigoBarraProducto.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		

		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleCodigoBarraProductoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleCodigoBarraProductoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Linea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Linea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Linea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Linea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaGrupo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaGrupo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaGrupo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaGrupo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaCategoria_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaCategoria_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaCategoria_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaCategoria_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaMarca_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaMarca_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaMarca_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaMarca_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntrol_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntrol_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntrol_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntrol_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_dicion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_dicion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_dicion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_dicion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorAnterior_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorAnterior_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorAnterior_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorAnterior_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoria="id_linea";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoria="id_linea_grupo";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoria="id_linea_categoria";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoria="id_linea_marca";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL:
					sNombreCampoCategoria="control";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION:
					sNombreCampoCategoria="medicion";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR:
					sNombreCampoCategoria="valor_anterior";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoria="observacion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoriaValor="id_linea";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoriaValor="id_linea_grupo";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoriaValor="id_linea_categoria";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoriaValor="id_linea_marca";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL:
					sNombreCampoCategoriaValor="control";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION:
					sNombreCampoCategoriaValor="medicion";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR:
					sNombreCampoCategoriaValor="valor_anterior";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoriaValor="observacion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Grupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_grupo");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Categoria",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_categoria");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Marca",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_marca");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Control",sNombreCampoCategoria,sNombreCampoCategoriaValor,"control");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Medicion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"medicion");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Anterior",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_anterior");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleCodigoBarraProductos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getlinea_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getlineagrupo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getlineacategoria_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getlineamarca_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getcontrol());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getmedicion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getvalor_anterior());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION);
					iRow++;

					for(DetalleCodigoBarraProducto detallecodigobarraproducto:detallecodigobarraproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallecodigobarraproducto.getobservacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleCodigoBarraProducto(row);				
			//	iRow++;
			//}				
			
			//for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleCodigoBarraProducto(detallecodigobarraproductoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
			
			//SI ES MANUAL
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
			
			//SI ES MANUAL
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
			
			//SI ES MANUAL
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleCodigoBarraProducto();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleCodigoBarraProducto() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleCodigoBarraProducto.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleCodigoBarraProducto.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleCodigoBarraProducto.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleCodigoBarraProducto.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleCodigoBarraProducto.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleCodigoBarraProducto.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleCodigoBarraProducto.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleCodigoBarraProducto(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleCodigoBarraProducto(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleCodigoBarraProducto(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleCodigoBarraProducto(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleCodigoBarraProducto(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleCodigoBarraProducto(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleCodigoBarraProducto() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto();
		
		this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleCodigoBarraProducto();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleCodigoBarraProducto() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleCodigoBarraProducto(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleCodigoBarraProducto(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleCodigoBarraProducto.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleCodigoBarraProducto.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleCodigoBarraProducto.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionNuevoDetalleCodigoBarraProducto.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionSinCerrarDetalleCodigoBarraProducto.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionSinMensajeDetalleCodigoBarraProducto.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleCodigoBarraProducto.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleCodigoBarraProducto.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleCodigoBarraProducto.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionNuevoDetalleCodigoBarraProducto.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionSinCerrarDetalleCodigoBarraProducto.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jCheckBoxPostAccionSinMensajeDetalleCodigoBarraProducto.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleCodigoBarraProducto.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleCodigoBarraProducto.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleCodigoBarraProducto(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleCodigoBarraProducto(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleCodigoBarraProducto() throws Exception {
		try	{
			if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleCodigoBarraProducto();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleCodigoBarraProducto() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleCodigoBarraProducto() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			
			if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleCodigoBarraProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleCodigoBarraProducto();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleCodigoBarraProducto() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleCodigoBarraProductoConstantesFunciones.getTiposSeleccionarDetalleCodigoBarraProducto(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleCodigoBarraProductoConstantesFunciones.getTiposSeleccionarDetalleCodigoBarraProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleCodigoBarraProductoConstantesFunciones.getTiposSeleccionarDetalleCodigoBarraProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleCodigoBarraProducto()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_lineaFK_IdLinea=((Linea)this.jComboBoxid_lineaFK_IdLineaDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_linea_categoriaFK_IdLineaCategoria=((Linea)this.jComboBoxid_linea_categoriaFK_IdLineaCategoriaDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_linea_grupoFK_IdLineaGrupo=((Linea)this.jComboBoxid_linea_grupoFK_IdLineaGrupoDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_linea_marcaFK_IdLineaMarca=((Linea)this.jComboBoxid_linea_marcaFK_IdLineaMarcaDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetalleCodigoBarraProducto.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleCodigoBarraProducto(Boolean esInicializar) throws Exception {				
		if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleCodigoBarraProducto();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleCodigoBarraProducto() throws Exception {
		this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleCodigoBarraProducto() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleCodigoBarraProductoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProductoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaDetalleCodigoBarraProducto(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detallecodigobarraproductos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleCodigoBarraProducto.setModel(new DetalleCodigoBarraProductoModel(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleCodigoBarraProducto.setModel(new DetalleCodigoBarraProductoModel(this.detallecodigobarraproductos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByDetalleCodigoBarraProducto!=null && this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleCodigoBarraProducto();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleCodigoBarraProductoConstantesFunciones.SCLASSWEBTITULO,detallecodigobarraproductoConstantesFunciones.resaltarSeleccionarDetalleCodigoBarraProducto,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleCodigoBarraProductoConstantesFunciones.SCLASSWEBTITULO,detallecodigobarraproductoConstantesFunciones.resaltarSeleccionarDetalleCodigoBarraProducto,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_ID));

		if(this.detallecodigobarraproductoConstantesFunciones.mostraridDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltaridDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activaridDetalleCodigoBarraProducto,iSizeTabla,this,true,"idDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltaridDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activaridDetalleCodigoBarraProducto,this,true,"idDetalleCodigoBarraProducto","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_empresaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_empresaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_empresaDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_empresaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_empresaDetalleCodigoBarraProducto,false,"id_empresaDetalleCodigoBarraProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_sucursalDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_sucursalDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_sucursalDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_sucursalDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_sucursalDetalleCodigoBarraProducto,false,"id_sucursalDetalleCodigoBarraProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_bodegaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_bodegaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_bodegaDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_bodegaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_bodegaDetalleCodigoBarraProducto,true,"id_bodegaDetalleCodigoBarraProducto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_productoDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_productoDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_productoDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_productoDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_productoDetalleCodigoBarraProducto,true,"id_productoDetalleCodigoBarraProducto","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_unidadDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_unidadDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_unidadDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_unidadDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_unidadDetalleCodigoBarraProducto,true,"id_unidadDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_lineaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_lineaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_lineaDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_lineaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_lineaDetalleCodigoBarraProducto,true,"id_lineaDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_grupoDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineagruposForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_grupoDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_grupoDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineagruposForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_grupoDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_grupoDetalleCodigoBarraProducto,true,"id_linea_grupoDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_categoriaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineacategoriasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_categoriaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_categoriaDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineacategoriasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_categoriaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_categoriaDetalleCodigoBarraProducto,true,"id_linea_categoriaDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_marcaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineamarcasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_marcaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_marcaDetalleCodigoBarraProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineamarcasForeignKey,this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_marcaDetalleCodigoBarraProducto,this,this.detallecodigobarraproductoConstantesFunciones.activarid_linea_marcaDetalleCodigoBarraProducto,true,"id_linea_marcaDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarcontrolDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarcontrolDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarcontrolDetalleCodigoBarraProducto,iSizeTabla,this,true,"controlDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarcontrolDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarcontrolDetalleCodigoBarraProducto,this,true,"controlDetalleCodigoBarraProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarmedicionDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarmedicionDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarmedicionDetalleCodigoBarraProducto,iSizeTabla,this,true,"medicionDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarmedicionDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarmedicionDetalleCodigoBarraProducto,this,true,"medicionDetalleCodigoBarraProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarvalor_anteriorDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarvalor_anteriorDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarvalor_anteriorDetalleCodigoBarraProducto,iSizeTabla,this,true,"valor_anteriorDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarvalor_anteriorDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarvalor_anteriorDetalleCodigoBarraProducto,this,true,"valor_anteriorDetalleCodigoBarraProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarfechaDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarfechaDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarfechaDetalleCodigoBarraProducto,iSizeTabla,this,true,"fechaDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarfechaDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarfechaDetalleCodigoBarraProducto,this,true,"fechaDetalleCodigoBarraProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION));

		if(this.detallecodigobarraproductoConstantesFunciones.mostrarobservacionDetalleCodigoBarraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarobservacionDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarobservacionDetalleCodigoBarraProducto,iSizeTabla,this,true,"observacionDetalleCodigoBarraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallecodigobarraproductoConstantesFunciones.resaltarobservacionDetalleCodigoBarraProducto,this.detallecodigobarraproductoConstantesFunciones.activarobservacionDetalleCodigoBarraProducto,this,true,"observacionDetalleCodigoBarraProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleCodigoBarraProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleCodigoBarraProducto.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleCodigoBarraProducto.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleCodigoBarraProducto.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleCodigoBarraProducto.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleCodigoBarraProducto.moveColumn(this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleCodigoBarraProducto.moveColumn(this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleCodigoBarraProducto.moveColumn(this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleCodigoBarraProducto.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleCodigoBarraProducto.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleCodigoBarraProducto,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleCodigoBarraProducto.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleCodigoBarraProducto.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleCodigoBarraProducto.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detallecodigobarraproductos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleCodigoBarraProducto.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleCodigoBarraProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleCodigoBarraProducto();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleCodigoBarraProducto=false;
					
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleCodigoBarraProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detallecodigobarraproducto.getsType().equals("DUPLICADO")
				   || this.detallecodigobarraproducto.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleCodigoBarraProducto=true;
				
				} else {
					this.isEsNuevoDetalleCodigoBarraProducto=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					if(this.detallecodigobarraproducto.getId()>=0 && !this.detallecodigobarraproducto.getIsNew()) {						
						this.isEsNuevoDetalleCodigoBarraProducto=false;
						
					} else {
						this.isEsNuevoDetalleCodigoBarraProducto=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleCodigoBarraProducto(esRelaciones);						
				
				this.seleccionarDetalleCodigoBarraProducto(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detallecodigobarraproducto.getId()<0) {
					this.isEsNuevoDetalleCodigoBarraProducto=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleCodigoBarraProducto(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleCodigoBarraProducto(evt,rowIndex);
				}	
				
				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleCodigoBarraProducto: " + this.dDif); 
					}
				}								
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleCodigoBarraProducto(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detallecodigobarraproducto)) {
					if(this.detallecodigobarraproducto.getId()>0) {
						this.detallecodigobarraproducto.setIsDeleted(true);
						
						this.detallecodigobarraproductosEliminados.add(this.detallecodigobarraproducto);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().remove(this.detallecodigobarraproducto);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproductos.remove(this.detallecodigobarraproducto);				
					}
					
					
					((DetalleCodigoBarraProductoModel) this.jTableDatosDetalleCodigoBarraProducto.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleCodigoBarraProducto(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleCodigoBarraProducto) {
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleCodigoBarraProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_empresaDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_empresaDetalleCodigoBarraProducto) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_empresa());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detallecodigobarraproducto.getEmpresa()!=null) {
							this.empresasForeignKey.add(detallecodigobarraproducto.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detallecodigobarraproducto.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_sucursalDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_sucursalDetalleCodigoBarraProducto) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_sucursal());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detallecodigobarraproducto.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detallecodigobarraproducto.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detallecodigobarraproducto.getid_sucursal(),false,"Formulario");

					//Bodega
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_bodegaDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_bodegaDetalleCodigoBarraProducto) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_bodega());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detallecodigobarraproducto.getBodega()!=null) {
							this.bodegasForeignKey.add(detallecodigobarraproducto.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detallecodigobarraproducto.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_productoDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_productoDetalleCodigoBarraProducto) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_producto());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detallecodigobarraproducto.getProducto()!=null) {
							this.productosForeignKey.add(detallecodigobarraproducto.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detallecodigobarraproducto.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_unidadDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_unidadDetalleCodigoBarraProducto) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_unidad());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detallecodigobarraproducto.getUnidad()!=null) {
							this.unidadsForeignKey.add(detallecodigobarraproducto.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detallecodigobarraproducto.getid_unidad(),false,"Formulario");

					//Linea
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_lineaDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_lineaDetalleCodigoBarraProducto) {
						//this.cargarCombosLineasForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_linea());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.lineasForeignKey=new ArrayList<Linea>();

						if(detallecodigobarraproducto.getLinea()!=null) {
							this.lineasForeignKey.add(detallecodigobarraproducto.getLinea());
						}

						this.addItemDefectoCombosForeignKeyLinea();
						this.cargarCombosFrameLineasForeignKey("Todos");
					}
					this.setActualLineaForeignKey(this.detallecodigobarraproducto.getid_linea(),false,"Formulario");

					//LineaGrupo
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_grupoDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_linea_grupoDetalleCodigoBarraProducto) {
						//this.cargarCombosLineaGruposForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_linea_grupo());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.lineagruposForeignKey=new ArrayList<Linea>();

						if(detallecodigobarraproducto.getLineaGrupo()!=null) {
							this.lineagruposForeignKey.add(detallecodigobarraproducto.getLineaGrupo());
						}

						this.addItemDefectoCombosForeignKeyLineaGrupo();
						this.cargarCombosFrameLineaGruposForeignKey("Todos");
					}
					this.setActualLineaGrupoForeignKey(this.detallecodigobarraproducto.getid_linea_grupo(),false,"Formulario");

					//LineaCategoria
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_categoriaDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_linea_categoriaDetalleCodigoBarraProducto) {
						//this.cargarCombosLineaCategoriasForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_linea_categoria());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.lineacategoriasForeignKey=new ArrayList<Linea>();

						if(detallecodigobarraproducto.getLineaCategoria()!=null) {
							this.lineacategoriasForeignKey.add(detallecodigobarraproducto.getLineaCategoria());
						}

						this.addItemDefectoCombosForeignKeyLineaCategoria();
						this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
					}
					this.setActualLineaCategoriaForeignKey(this.detallecodigobarraproducto.getid_linea_categoria(),false,"Formulario");

					//LineaMarca
					if(!this.detallecodigobarraproductoConstantesFunciones.cargarid_linea_marcaDetalleCodigoBarraProducto || this.detallecodigobarraproductoConstantesFunciones.event_dependid_linea_marcaDetalleCodigoBarraProducto) {
						//this.cargarCombosLineaMarcasForeignKeyLista(" where id="+this.detallecodigobarraproducto.getid_linea_marca());
									//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
						this.lineamarcasForeignKey=new ArrayList<Linea>();

						if(detallecodigobarraproducto.getLineaMarca()!=null) {
							this.lineamarcasForeignKey.add(detallecodigobarraproducto.getLineaMarca());
						}

						this.addItemDefectoCombosForeignKeyLineaMarca();
						this.cargarCombosFrameLineaMarcasForeignKey("Todos");
					}
					this.setActualLineaMarcaForeignKey(this.detallecodigobarraproducto.getid_linea_marca(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleCodigoBarraProducto(detallecodigobarraproducto,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(detallecodigobarraproducto);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleCodigoBarraProducto(detallecodigobarraproducto,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleCodigoBarraProducto(detallecodigobarraproducto);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getId().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getcontrol());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getmedicion());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getvalor_anterior().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setDate(detallecodigobarraproducto.getfecha());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getobservacion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleCodigoBarraProducto detallecodigobarraproductoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detallecodigobarraproductoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleCodigoBarraProducto detallecodigobarraproductoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detallecodigobarraproductoLocal=this.detallecodigobarraproducto;
			} else {
				detallecodigobarraproductoLocal=this.detallecodigobarraproductoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detallecodigobarraproductoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleCodigoBarraProducto(detallecodigobarraproductoLocal,true);
					
					if(detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detallecodigobarraproductoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detallecodigobarraproductoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(detallecodigobarraproducto,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(detallecodigobarraproducto);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(detallecodigobarraproducto,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.getText()==null || this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.getText()=="" || this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setText("0");
			}

			if(conColumnasBase) {detallecodigobarraproducto.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelIdDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallecodigobarraproducto.setcontrol(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelcontrolDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallecodigobarraproducto.setmedicion(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelmedicionDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallecodigobarraproducto.setvalor_anterior(Double.parseDouble(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelvalor_anteriorDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallecodigobarraproducto.setfecha(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelfechaDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallecodigobarraproducto.setobservacion(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelobservacionDetalleCodigoBarraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproductoBean,DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_bodega()!=null && !detallecodigobarraproductoBean.getid_bodega().equals(-1L))) {detallecodigobarraproducto.setid_bodega(detallecodigobarraproductoBean.getid_bodega());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_producto()!=null && !detallecodigobarraproductoBean.getid_producto().equals(-1L))) {detallecodigobarraproducto.setid_producto(detallecodigobarraproductoBean.getid_producto());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_unidad()!=null && !detallecodigobarraproductoBean.getid_unidad().equals(-1L))) {detallecodigobarraproducto.setid_unidad(detallecodigobarraproductoBean.getid_unidad());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_linea()!=null && !detallecodigobarraproductoBean.getid_linea().equals(-1L))) {detallecodigobarraproducto.setid_linea(detallecodigobarraproductoBean.getid_linea());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_linea_grupo()!=null && !detallecodigobarraproductoBean.getid_linea_grupo().equals(-1L))) {detallecodigobarraproducto.setid_linea_grupo(detallecodigobarraproductoBean.getid_linea_grupo());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_linea_categoria()!=null && !detallecodigobarraproductoBean.getid_linea_categoria().equals(-1L))) {detallecodigobarraproducto.setid_linea_categoria(detallecodigobarraproductoBean.getid_linea_categoria());}
			if(conDefault || (!conDefault && detallecodigobarraproductoBean.getid_linea_marca()!=null && !detallecodigobarraproductoBean.getid_linea_marca().equals(-1L))) {detallecodigobarraproducto.setid_linea_marca(detallecodigobarraproductoBean.getid_linea_marca());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproductoOrigen,DetalleCodigoBarraProducto detallecodigobarraproducto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getId()!=null && !detallecodigobarraproductoOrigen.getId().equals(0L))) {detallecodigobarraproducto.setId(detallecodigobarraproductoOrigen.getId());}}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_bodega()!=null && !detallecodigobarraproductoOrigen.getid_bodega().equals(-1L))) {detallecodigobarraproducto.setid_bodega(detallecodigobarraproductoOrigen.getid_bodega());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_producto()!=null && !detallecodigobarraproductoOrigen.getid_producto().equals(-1L))) {detallecodigobarraproducto.setid_producto(detallecodigobarraproductoOrigen.getid_producto());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_unidad()!=null && !detallecodigobarraproductoOrigen.getid_unidad().equals(-1L))) {detallecodigobarraproducto.setid_unidad(detallecodigobarraproductoOrigen.getid_unidad());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_linea()!=null && !detallecodigobarraproductoOrigen.getid_linea().equals(-1L))) {detallecodigobarraproducto.setid_linea(detallecodigobarraproductoOrigen.getid_linea());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_linea_grupo()!=null && !detallecodigobarraproductoOrigen.getid_linea_grupo().equals(-1L))) {detallecodigobarraproducto.setid_linea_grupo(detallecodigobarraproductoOrigen.getid_linea_grupo());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_linea_categoria()!=null && !detallecodigobarraproductoOrigen.getid_linea_categoria().equals(-1L))) {detallecodigobarraproducto.setid_linea_categoria(detallecodigobarraproductoOrigen.getid_linea_categoria());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getid_linea_marca()!=null && !detallecodigobarraproductoOrigen.getid_linea_marca().equals(-1L))) {detallecodigobarraproducto.setid_linea_marca(detallecodigobarraproductoOrigen.getid_linea_marca());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getcontrol()!=null && !detallecodigobarraproductoOrigen.getcontrol().equals(""))) {detallecodigobarraproducto.setcontrol(detallecodigobarraproductoOrigen.getcontrol());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getmedicion()!=null && !detallecodigobarraproductoOrigen.getmedicion().equals(""))) {detallecodigobarraproducto.setmedicion(detallecodigobarraproductoOrigen.getmedicion());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getvalor_anterior()!=null && !detallecodigobarraproductoOrigen.getvalor_anterior().equals(0.0))) {detallecodigobarraproducto.setvalor_anterior(detallecodigobarraproductoOrigen.getvalor_anterior());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getfecha()!=null && !detallecodigobarraproductoOrigen.getfecha().equals(new Date()))) {detallecodigobarraproducto.setfecha(detallecodigobarraproductoOrigen.getfecha());}
			if(conDefault || (!conDefault && detallecodigobarraproductoOrigen.getobservacion()!=null && !detallecodigobarraproductoOrigen.getobservacion().equals(""))) {detallecodigobarraproducto.setobservacion(detallecodigobarraproductoOrigen.getobservacion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getId().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getcontrol());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getmedicion());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getvalor_anterior().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setDate(detallecodigobarraproducto.getfecha());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setText(detallecodigobarraproducto.getobservacion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleCodigoBarraProducto(DetalleCodigoBarraProductoBean detallecodigobarraproductoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setText(detallecodigobarraproductoBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setText(detallecodigobarraproductoBean.getcontrol());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setText(detallecodigobarraproductoBean.getmedicion());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setText(detallecodigobarraproductoBean.getvalor_anterior().toString());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setDate(detallecodigobarraproductoBean.getfecha());
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setText(detallecodigobarraproductoBean.getobservacion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleCodigoBarraProducto(DetalleCodigoBarraProductoParameterReturnGeneral detallecodigobarraproductoReturnGeneral,DetalleCodigoBarraProductoBean detallecodigobarraproductoBean,Boolean conDefault) throws Exception { 
		try {
			DetalleCodigoBarraProducto detallecodigobarraproductoLocal=new DetalleCodigoBarraProducto();
			
			detallecodigobarraproductoLocal=detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getId()!=null && !detallecodigobarraproductoLocal.getId().equals(0L))) {detallecodigobarraproductoBean.setId(detallecodigobarraproductoLocal.getId());}}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_bodega()!=null && !detallecodigobarraproductoLocal.getid_bodega().equals(-1L))) {detallecodigobarraproductoBean.setid_bodega(detallecodigobarraproductoLocal.getid_bodega());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_producto()!=null && !detallecodigobarraproductoLocal.getid_producto().equals(-1L))) {detallecodigobarraproductoBean.setid_producto(detallecodigobarraproductoLocal.getid_producto());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_unidad()!=null && !detallecodigobarraproductoLocal.getid_unidad().equals(-1L))) {detallecodigobarraproductoBean.setid_unidad(detallecodigobarraproductoLocal.getid_unidad());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_linea()!=null && !detallecodigobarraproductoLocal.getid_linea().equals(-1L))) {detallecodigobarraproductoBean.setid_linea(detallecodigobarraproductoLocal.getid_linea());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_linea_grupo()!=null && !detallecodigobarraproductoLocal.getid_linea_grupo().equals(-1L))) {detallecodigobarraproductoBean.setid_linea_grupo(detallecodigobarraproductoLocal.getid_linea_grupo());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_linea_categoria()!=null && !detallecodigobarraproductoLocal.getid_linea_categoria().equals(-1L))) {detallecodigobarraproductoBean.setid_linea_categoria(detallecodigobarraproductoLocal.getid_linea_categoria());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getid_linea_marca()!=null && !detallecodigobarraproductoLocal.getid_linea_marca().equals(-1L))) {detallecodigobarraproductoBean.setid_linea_marca(detallecodigobarraproductoLocal.getid_linea_marca());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getcontrol()!=null && !detallecodigobarraproductoLocal.getcontrol().equals(""))) {detallecodigobarraproductoBean.setcontrol(detallecodigobarraproductoLocal.getcontrol());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getmedicion()!=null && !detallecodigobarraproductoLocal.getmedicion().equals(""))) {detallecodigobarraproductoBean.setmedicion(detallecodigobarraproductoLocal.getmedicion());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getvalor_anterior()!=null && !detallecodigobarraproductoLocal.getvalor_anterior().equals(0.0))) {detallecodigobarraproductoBean.setvalor_anterior(detallecodigobarraproductoLocal.getvalor_anterior());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getfecha()!=null && !detallecodigobarraproductoLocal.getfecha().equals(new Date()))) {detallecodigobarraproductoBean.setfecha(detallecodigobarraproductoLocal.getfecha());}
			if(conDefault || (!conDefault && detallecodigobarraproductoLocal.getobservacion()!=null && !detallecodigobarraproductoLocal.getobservacion().equals(""))) {detallecodigobarraproductoBean.setobservacion(detallecodigobarraproductoLocal.getobservacion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleCodigoBarraProductoGenerico(Long idDetalleCodigoBarraProductoSeleccionado,JComboBox jComboBoxDetalleCodigoBarraProducto,List<DetalleCodigoBarraProducto> detallecodigobarraproductosLocal)throws Exception {
		try {
			DetalleCodigoBarraProducto  detallecodigobarraproductoTemp=null;

			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosLocal) {
				if(detallecodigobarraproductoAux.getId()!=null && detallecodigobarraproductoAux.getId().equals(idDetalleCodigoBarraProductoSeleccionado)) {
					detallecodigobarraproductoTemp=detallecodigobarraproductoAux;
					break;
				}
			}

			jComboBoxDetalleCodigoBarraProducto.setSelectedItem(detallecodigobarraproductoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleCodigoBarraProductoGenerico(JComboBox jComboBoxDetalleCodigoBarraProducto,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleCodigoBarraProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleCodigoBarraProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleCodigoBarraProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleCodigoBarraProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleCodigoBarraProducto.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleCodigoBarraProducto.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleCodigoBarraProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleCodigoBarraProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleCodigoBarraProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallecodigobarraproducto=(DetalleCodigoBarraProducto) detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallecodigobarraproducto =(DetalleCodigoBarraProducto) detallecodigobarraproductos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallecodigobarraproducto.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallecodigobarraproducto.getunidad_descripcion();
			}
		}

		if(sTipo.equals("Linea")) {
			//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getlinea_descripcion();
			} else {
				//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getlinea_descripcion();
			}
		}

		if(sTipo.equals("LineaGrupo")) {
			//sDescripcion=this.getActualLineaGrupoForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getlineagrupo_descripcion();
			} else {
				//sDescripcion=this.getActualLineaGrupoForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getlineagrupo_descripcion();
			}
		}

		if(sTipo.equals("LineaCategoria")) {
			//sDescripcion=this.getActualLineaCategoriaForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getlineacategoria_descripcion();
			} else {
				//sDescripcion=this.getActualLineaCategoriaForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getlineacategoria_descripcion();
			}
		}

		if(sTipo.equals("LineaMarca")) {
			//sDescripcion=this.getActualLineaMarcaForeignKeyDescripcion((Long)value);
			if(!detallecodigobarraproducto.getIsNew() && !detallecodigobarraproducto.getIsChanged() && !detallecodigobarraproducto.getIsDeleted()) {
				sDescripcion=detallecodigobarraproducto.getlineamarca_descripcion();
			} else {
				//sDescripcion=this.getActualLineaMarcaForeignKeyDescripcion((Long)value);
				sDescripcion=detallecodigobarraproducto.getlineamarca_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleCodigoBarraProducto detallecodigobarraproductoRow=new DetalleCodigoBarraProducto();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallecodigobarraproductoRow=(DetalleCodigoBarraProducto) detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallecodigobarraproductoRow=(DetalleCodigoBarraProducto) detallecodigobarraproductos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));			
			this.jButtonDuplicarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto && this.isPermisoDuplicarDetalleCodigoBarraProducto));			
			this.jButtonCopiarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto && this.isPermisoCopiarDetalleCodigoBarraProducto));
			this.jButtonVerFormDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto && this.isPermisoVerFormDetalleCodigoBarraProducto));
			
			this.jButtonAbrirOrderByDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));			
			
			this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));			
			this.jButtonNuevoGuardarCambiosDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto && this.isPermisoEliminarDetalleCodigoBarraProducto));
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.setVisible(this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto);							
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));						
			this.jButtonDuplicarToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto && this.isPermisoDuplicarDetalleCodigoBarraProducto));						
			this.jButtonCopiarToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto && this.isPermisoCopiarDetalleCodigoBarraProducto));			
			this.jButtonVerFormToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto && this.isPermisoVerFormDetalleCodigoBarraProducto));			
			this.jButtonAbrirOrderByToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));
			this.jButtonNuevoRelacionesToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));			
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto  && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto && this.isPermisoEliminarDetalleCodigoBarraProducto));
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarToolBarDetalleCodigoBarraProducto.setVisible(this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto);				
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));			
			this.jMenuItemDuplicarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto && this.isPermisoDuplicarDetalleCodigoBarraProducto));			
			this.jMenuItemCopiarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto && this.isPermisoCopiarDetalleCodigoBarraProducto));			
			this.jMenuItemVerFormDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto && this.isPermisoVerFormDetalleCodigoBarraProducto));			
			this.jMenuItemAbrirOrderByDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));			
			//this.jMenuItemMostrarOcultarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));
			this.jMenuItemDetalleAbrirOrderByDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));			
			//this.jMenuItemDetalleMostrarOcultarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto && this.isPermisoOrdenDetalleCodigoBarraProducto));			
			this.jMenuItemNuevoRelacionesDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto));			
			this.jMenuItemNuevoGuardarCambiosDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto && this.isPermisoNuevoDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));									
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemModificarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemActualizarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto && this.isPermisoActualizarDetalleCodigoBarraProducto));	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemEliminarDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto && this.isPermisoEliminarDetalleCodigoBarraProducto));
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemCancelarDetalleCodigoBarraProducto.setVisible(this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto);				
			}
			
			this.jMenuItemGuardarCambiosDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));						
			this.jMenuItemGuardarCambiosTablaDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=this.jButtonNuevoDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto=this.jButtonDuplicarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto=this.jButtonCopiarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto=this.jButtonVerFormDetalleCodigoBarraProducto.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleCodigoBarraProducto=this.jButtonAbrirOrderByDetalleCodigoBarraProducto.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=this.jButtonModificarDetalleCodigoBarraProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=this.jButtonGuardarCambiosTablaDetalleCodigoBarraProducto.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=this.jButtonNuevoToolBarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=this.jButtonNuevoRelacionesToolBarDetalleCodigoBarraProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarToolBarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarToolBarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarToolBarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarToolBarDetalleCodigoBarraProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=this.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=this.jButtonGuardarCambiosTablaToolBarDetalleCodigoBarraProducto.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=this.jMenuItemNuevoDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=this.jMenuItemNuevoRelacionesDetalleCodigoBarraProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemModificarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemActualizarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemEliminarDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemCancelarDetalleCodigoBarraProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=this.jMenuItemGuardarCambiosDetalleCodigoBarraProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=this.jMenuItemGuardarCambiosTablaDetalleCodigoBarraProducto.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleCodigoBarraProducto(Boolean esInicializar) {
		if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
				//if(this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleCodigoBarraProducto();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleCodigoBarraProducto(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleCodigoBarraProducto() {
		this.jButtonNuevoDetalleCodigoBarraProducto.setVisible(this.isPermisoNuevoDetalleCodigoBarraProducto);			
		this.jButtonDuplicarDetalleCodigoBarraProducto.setVisible(this.isPermisoDuplicarDetalleCodigoBarraProducto);			
		this.jButtonCopiarDetalleCodigoBarraProducto.setVisible(this.isPermisoCopiarDetalleCodigoBarraProducto);			
		this.jButtonVerFormDetalleCodigoBarraProducto.setVisible(this.isPermisoVerFormDetalleCodigoBarraProducto);			
		
		this.jButtonAbrirOrderByDetalleCodigoBarraProducto.setVisible(this.isPermisoOrdenDetalleCodigoBarraProducto);					
		
		this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.setVisible(this.isPermisoNuevoDetalleCodigoBarraProducto);			
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarDetalleCodigoBarraProducto.setVisible(this.isPermisoActualizarDetalleCodigoBarraProducto);	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.setVisible(this.isPermisoActualizarDetalleCodigoBarraProducto);	
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.setVisible(this.isPermisoEliminarDetalleCodigoBarraProducto);
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.setVisible(this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto);						
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.setVisible(this.isPermisoGuardarCambiosDetalleCodigoBarraProducto);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleCodigoBarraProducto.setVisible(this.isPermisoActualizarDetalleCodigoBarraProducto);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleCodigoBarraProducto() {
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarDetalleCodigoBarraProducto.setVisible(this.isPermisoActualizarDetalleCodigoBarraProducto);	
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.setVisible(this.isPermisoActualizarDetalleCodigoBarraProducto);	
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.setVisible(this.isPermisoEliminarDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.setVisible(this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto);							
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.setVisible((this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto && this.isPermisoGuardarCambiosDetalleCodigoBarraProducto));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleCodigoBarraProducto() {
		if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleCodigoBarraProducto();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleCodigoBarraProducto() {
	}
	
	public void jTableDatosDetalleCodigoBarraProductoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleCodigoBarraProducto(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detallecodigobarraproducto.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detallecodigobarraproducto.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detallecodigobarraproducto.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detallecodigobarraproducto.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetalleCodigoBarraProductoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleCodigoBarraProducto=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detallecodigobarraproducto.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detallecodigobarraproducto.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_lineaDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolinea=true;

			idTienePermisolinea=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolinea) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_linea()!=null) {
					this.lineaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineaBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_linea());
					this.lineaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderlinea=(TitledBorder)this.lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlinea.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_lineaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_linea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea = "+this.detallecodigobarraproducto.getid_linea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_grupoDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineagrupo=true;

			idTienePermisolineagrupo=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineagrupo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.lineagrupoBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineagrupoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineagrupoBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_linea_grupo()!=null) {
					this.lineagrupoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineagrupoBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_linea_grupo());
					this.lineagrupoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineagrupoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderlineagrupo=(TitledBorder)this.lineagrupoBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineagrupo.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_grupoDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_linea_grupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_grupo = "+this.detallecodigobarraproducto.getid_linea_grupo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineacategoria=true;

			idTienePermisolineacategoria=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineacategoria) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.lineacategoriaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineacategoriaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineacategoriaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_linea_categoria()!=null) {
					this.lineacategoriaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineacategoriaBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_linea_categoria());
					this.lineacategoriaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineacategoriaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderlineacategoria=(TitledBorder)this.lineacategoriaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineacategoria.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_categoriaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_linea_categoria()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_categoria = "+this.detallecodigobarraproducto.getid_linea_categoria().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_marcaDetalleCodigoBarraProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineamarca=true;

			idTienePermisolineamarca=this.tienePermisosUsuarioEnPaginaWebDetalleCodigoBarraProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineamarca) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleCodigoBarraProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleCodigoBarraProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);

				this.lineamarcaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineamarcaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineamarcaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.detallecodigobarraproductoLogic.getConnexion());

				if(this.detallecodigobarraproducto.getid_linea_marca()!=null) {
					this.lineamarcaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineamarcaBeanSwingJInternalFrame.setIdActual(this.detallecodigobarraproducto.getid_linea_marca());
					this.lineamarcaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineamarcaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleCodigoBarraProducto=(TitledBorder)this.jScrollPanelDatosDetalleCodigoBarraProducto.getBorder();
				TitledBorder titledBorderlineamarca=(TitledBorder)this.lineamarcaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineamarca.setTitle(titledBorderDetalleCodigoBarraProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_marcaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getid_linea_marca()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_marca = "+this.detallecodigobarraproducto.getid_linea_marca().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncontrolDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getcontrol()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where control like '%"+this.detallecodigobarraproducto.getcontrol()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmedicionDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getmedicion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where medicion like '%"+this.detallecodigobarraproducto.getmedicion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_anteriorDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getvalor_anterior()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_anterior = "+this.detallecodigobarraproducto.getvalor_anterior().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.detallecodigobarraproducto.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacionDetalleCodigoBarraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.getdetallecodigobarraproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallecodigobarraproducto==null) {
						this.detallecodigobarraproducto = new DetalleCodigoBarraProducto();
					}

					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);
				}

				if(this.detallecodigobarraproducto.getobservacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion like '%"+this.detallecodigobarraproducto.getobservacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdBodega();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdLinea();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaCategoriaDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdLineaCategoria();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaGrupoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdLineaGrupo();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaMarcaDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdLineaMarca();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdProducto();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdSucursal();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetalleCodigoBarraProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);

			this.getDetalleCodigoBarraProductosFK_IdUnidad();

			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);

			//if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallecodigobarraproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleCodigoBarraProducto() {
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.dispose();
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.dispose();
			this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto=null;
		}
		
		if(this.jInternalFrameImportacionDetalleCodigoBarraProducto!=null) {
			this.jInternalFrameImportacionDetalleCodigoBarraProducto.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleCodigoBarraProducto.dispose();
			this.jInternalFrameImportacionDetalleCodigoBarraProducto=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleCodigoBarraProducto();
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleCodigoBarraProducto")) {
				jButtonDuplicarDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleCodigoBarraProducto")) {
				jButtonCopiarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleCodigoBarraProducto")) {
				jButtonVerFormDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleCodigoBarraProducto")) {
				jButtonDuplicarDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleCodigoBarraProducto")) {
				jButtonDuplicarDetalleCodigoBarraProductoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleCodigoBarraProducto")) {
				jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleCodigoBarraProducto")) {
				jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleCodigoBarraProducto")) {
				jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleCodigoBarraProducto")) {
				jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleCodigoBarraProducto")) {
				jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleCodigoBarraProducto")) {
				jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleCodigoBarraProducto")) {
				jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleCodigoBarraProducto")) {
				jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleCodigoBarraProducto")) {
				jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleCodigoBarraProducto")) {
				jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleCodigoBarraProducto")) {
				jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleCodigoBarraProducto")) {
				jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleCodigoBarraProducto")) {
				jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleCodigoBarraProducto")) {
				jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleCodigoBarraProducto")) {
				jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleCodigoBarraProducto")) {
				jButtonMostrarOcultarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleCodigoBarraProducto")) {
				jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleCodigoBarraProducto")) {
				jButtonCopiarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleCodigoBarraProducto")) {
				jButtonVerFormDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleCodigoBarraProducto")) {
				jButtonCopiarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleCodigoBarraProducto")) {
				jButtonVerFormDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleCodigoBarraProducto")) {
				jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleCodigoBarraProducto")) {
				jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleCodigoBarraProducto")) {
				jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleCodigoBarraProducto")) {
				jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleCodigoBarraProducto")) {
				jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleCodigoBarraProducto")) {
				jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleCodigoBarraProducto")) {
				jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleCodigoBarraProducto")) {
				jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleCodigoBarraProducto")) {
				jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleCodigoBarraProducto") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleCodigoBarraProducto")) {
				jButtonAbrirOrderByDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleCodigoBarraProducto") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleCodigoBarraProducto")) {
				jButtonMostrarOcultarDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleCodigoBarraProducto")) {
				jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleCodigoBarraProducto")) {
				jButtonCerrarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleCodigoBarraProducto")) {
				jButtonGenerarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleCodigoBarraProducto")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleCodigoBarraProducto")) {
				jButtonCerrarImportacionDetalleCodigoBarraProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleCodigoBarraProducto")) {
				
				jButtonGenerarImportacionDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleCodigoBarraProducto")) {
				
				jButtonAbrirImportacionDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleCodigoBarraProducto")) {
				jComboBoxTiposAccionesDetalleCodigoBarraProductoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleCodigoBarraProducto")) {
				jComboBoxTiposRelacionesDetalleCodigoBarraProductoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleCodigoBarraProducto")) {
				jComboBoxTiposAccionesDetalleCodigoBarraProductoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleCodigoBarraProducto")) {
				
				jComboBoxTiposSeleccionarDetalleCodigoBarraProductoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleCodigoBarraProducto")) {
				jTextFieldValorCampoGeneralDetalleCodigoBarraProductoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByDetalleCodigoBarraProducto")) {
				jButtonAbrirOrderByDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleCodigoBarraProducto")) {
				jButtonAbrirOrderByDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleCodigoBarraProducto")) {
				jButtonCerrarOrderByDetalleCodigoBarraProductoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonidDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_empresaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_empresaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_sucursalDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_sucursalDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_bodegaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_bodegaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				this.jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_productoDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_productoDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_unidadDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_unidadDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_lineaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_lineaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_grupoDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_grupoDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_categoriaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_marcaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_marcaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("controlDetalleCodigoBarraProductoBusqueda")) {
				this.jButtoncontrolDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("medicionDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonmedicionDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_anteriorDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonvalor_anteriorDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonfechaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonobservacionDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				this.jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdBodegaDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdLineaDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaCategoriaDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdLineaCategoriaDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaGrupoDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdLineaGrupoDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaMarcaDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdLineaMarcaDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdProductoDetalleCodigoBarraProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetalleCodigoBarraProducto")) {
				this.jButtonFK_IdUnidadDetalleCodigoBarraProductoActionPerformed(evt);
			}
			
			;
			
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleCodigoBarraProducto();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleCodigoBarraProducto detallecodigobarraproductoLocal=null;
			
			if(!this.getEsControlTabla()) {
				detallecodigobarraproductoLocal=this.detallecodigobarraproducto;
			} else {
				detallecodigobarraproductoLocal=this.detallecodigobarraproductoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
							
				
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
								
						
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
								
				
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
							
				
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
								
				
				


				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleCodigoBarraProducto")) {
					jCheckBoxSeleccionarTodosDetalleCodigoBarraProductoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleCodigoBarraProducto")) {
					jCheckBoxSeleccionadosDetalleCodigoBarraProductoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleCodigoBarraProducto")) {
					
				}
				
				


				
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
												
				
				


				
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
				//recargarFormDetalleCodigoBarraProductoBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
				//recargarFormDetalleCodigoBarraProductoProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
				//recargarFormDetalleCodigoBarraProductoBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
				//recargarFormDetalleCodigoBarraProductoProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
			}
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallecodigobarraproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallecodigobarraproducto);
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
				//recargarFormDetalleCodigoBarraProductoBodega(jComboBoxid_bodegaFK_IdBodegaDetalleCodigoBarraProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto;
				}

				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleCodigoBarraProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
				//recargarFormDetalleCodigoBarraProductoProducto(jComboBoxid_productoFK_IdProductoDetalleCodigoBarraProducto,"FK_IdProducto");
			}
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleCodigoBarraProducto.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleCodigoBarraProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleCodigoBarraProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallecodigobarraproductoAnterior =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleCodigoBarraProducto")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleCodigoBarraProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleCodigoBarraProducto.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detallecodigobarraproducto =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detallecodigobarraproducto);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleCodigoBarraProducto")) {
				
				}
				
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleCodigoBarraProducto")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleCodigoBarraProducto.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleCodigoBarraProducto")) {
			
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleCodigoBarraProducto();
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleCodigoBarraProducto")) {
				jButtonDuplicarDetalleCodigoBarraProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleCodigoBarraProducto")) {
				jButtonCopiarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleCodigoBarraProducto")) {
				jButtonVerFormDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleCodigoBarraProducto")) {
				jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleCodigoBarraProducto")) {
				jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleCodigoBarraProducto")) {
				jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleCodigoBarraProducto")) {
				jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleCodigoBarraProducto")) {
				jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleCodigoBarraProducto")) {
				jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleCodigoBarraProducto")) {
				jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleCodigoBarraProducto")) {
				jButtonAbrirOrderByDetalleCodigoBarraProductoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleCodigoBarraProducto")) {
				jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleCodigoBarraProducto")) {
				jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleCodigoBarraProducto")) {
				jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonidDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_empresaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_empresaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_sucursalDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_sucursalDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_bodegaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_bodegaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProducto")) {
				this.jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_productoDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_productoDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_unidadDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_unidadDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_lineaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_lineaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_grupoDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_grupoDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_categoriaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaDetalleCodigoBarraProductoUpdate")) {
				this.jButtonid_linea_marcaDetalleCodigoBarraProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonid_linea_marcaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("controlDetalleCodigoBarraProductoBusqueda")) {
				this.jButtoncontrolDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("medicionDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonmedicionDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_anteriorDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonvalor_anteriorDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonfechaDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionDetalleCodigoBarraProductoBusqueda")) {
				this.jButtonobservacionDetalleCodigoBarraProductoBusquedaActionPerformed(evt);
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleCodigoBarraProducto();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleCodigoBarraProducto")) {
				closingInternalFrameDetalleCodigoBarraProducto();
				
			} else if(sTipo.equals("jButtonCancelarDetalleCodigoBarraProducto")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleCodigoBarraProducto = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleCodigoBarraProductoBeanSwingJInternalFrame jInternalFrameParent=(DetalleCodigoBarraProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleCodigoBarraProducto.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleCodigoBarraProductoActionPerformed(null);
			}
			
			DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallecodigobarraproducto,new Object(),this.detallecodigobarraproductoParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleCodigoBarraProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleCodigoBarraProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleCodigoBarraProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detallecodigobarraproducto)) {
			if(!esControlTabla) {
				if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);			
				}
				
				if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.procesarEventosDetalleCodigoBarraProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this.detallecodigobarraproducto,this.detallecodigobarraproductoParameterGeneral,this.isEsNuevoDetalleCodigoBarraProducto,classes);//this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral,this.detallecodigobarraproductoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleCodigoBarraProducto(classes,this.detallecodigobarraproductoReturnGeneral,this.detallecodigobarraproductoBean,false);
					}
						
					if(this.detallecodigobarraproductoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto());	
					}
						
					if(this.detallecodigobarraproductoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto(),classes);//this.detallecodigobarraproductoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleCodigoBarraProducto(this.detallecodigobarraproducto,classes);//this.detallecodigobarraproductoBean);									
				}
			
				if(DetalleCodigoBarraProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleCodigoBarraProducto(this.detallecodigobarraproducto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleCodigoBarraProducto(this.detallecodigobarraproducto);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detallecodigobarraproductoAnterior!=null) {
						this.detallecodigobarraproducto=this.detallecodigobarraproductoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.procesarEventosDetalleCodigoBarraProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this.detallecodigobarraproducto,this.detallecodigobarraproductoParameterGeneral,this.isEsNuevoDetalleCodigoBarraProducto,classes);//this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallecodigobarraproductoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto(),detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto(),this.detallecodigobarraproductos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleCodigoBarraProducto.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleCodigoBarraProducto.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleCodigoBarraProducto();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleCodigoBarraProducto() throws Exception {
		
		DetalleCodigoBarraProductoModel detallecodigobarraproductoModel=(DetalleCodigoBarraProductoModel)this.jTableDatosDetalleCodigoBarraProducto.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallecodigobarraproductoModel.detallecodigobarraproductos=this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detallecodigobarraproductoModel.detallecodigobarraproductos=this.detallecodigobarraproductos;
		}
		
		
		((DetalleCodigoBarraProductoModel) this.jTableDatosDetalleCodigoBarraProducto.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleCodigoBarraProducto() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetallecodigobarraproductoAnterior(),this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetallecodigobarraproductoAnterior(),this.detallecodigobarraproductos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleCodigoBarraProducto();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallecodigobarraproducto,new Object(),generalEntityParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsOfDetalleCodigoBarraProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleCodigoBarraProductoConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleCodigoBarraProducto(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleCodigoBarraProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallecodigobarraproducto,new Object(),generalEntityParameterGeneral,this.detallecodigobarraproductoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleCodigoBarraProducto(DetalleCodigoBarraProductoBean detallecodigobarraproductoBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleCodigoBarraProducto(ArrayList<Classe> classes,DetalleCodigoBarraProductoReturnGeneral detallecodigobarraproductoReturnGeneral,DetalleCodigoBarraProductoBean detallecodigobarraproductoBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detallecodigobarraproducto)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto = new DetalleCodigoBarraProductoDetalleFormJInternalFrame(jDesktopPane,this.detallecodigobarraproductoSessionBean.getConGuardarRelaciones(),this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setVisible(false);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.detallecodigobarraproductoLogic=this.detallecodigobarraproductoLogic;
		
		this.cargarCombosFrameForeignKeyDetalleCodigoBarraProducto("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleCodigoBarraProducto();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleCodigoBarraProducto();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleCodigoBarraProducto("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleCodigoBarraProducto();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleCodigoBarraProducto"));
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ModificarDetalleCodigoBarraProducto"));

		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleCodigoBarraProducto"));
					
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemModificarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleCodigoBarraProducto"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"ActualizarDetalleCodigoBarraProducto"));
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleCodigoBarraProducto"));
						
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemActualizarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleCodigoBarraProducto"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"EliminarDetalleCodigoBarraProducto"));
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleCodigoBarraProducto"));
								
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemEliminarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleCodigoBarraProducto"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CancelarDetalleCodigoBarraProducto"));
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleCodigoBarraProducto"));
					
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemCancelarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleCodigoBarraProducto"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemDetalleCerrarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleCodigoBarraProducto"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleCodigoBarraProducto"));
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleCodigoBarraProducto"));
		
		
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleCodigoBarraProducto"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonidDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoBusqueda"));
		//jButtonid_productoDetalleCodigoBarraProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtoncontrolDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"controlDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonmedicionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"medicionDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonvalor_anteriorDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"valor_anteriorDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonfechaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonobservacionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"observacionDetalleCodigoBarraProductoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleCodigoBarraProducto"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleCodigoBarraProducto"));
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleCodigoBarraProducto"));
		}
		
		this.jTableDatosDetalleCodigoBarraProducto.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleCodigoBarraProducto"));
		
		this.jTableDatosDetalleCodigoBarraProducto.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleCodigoBarraProducto"));
		
		this.jButtonNuevoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"NuevoDetalleCodigoBarraProducto"));
		
		this.jButtonDuplicarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"DuplicarDetalleCodigoBarraProducto"));
		
		this.jButtonCopiarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"CopiarDetalleCodigoBarraProducto"));
		
		this.jButtonVerFormDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"VerFormDetalleCodigoBarraProducto"));
		
		
		this.jButtonNuevoToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleCodigoBarraProducto"));
			
		this.jButtonDuplicarToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemNuevoDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleCodigoBarraProducto"));
			
		this.jMenuItemDuplicarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleCodigoBarraProducto"));		
		
		
		this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleCodigoBarraProducto"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemNuevoRelacionesDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleCodigoBarraProducto"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ModificarDetalleCodigoBarraProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonModificarToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleCodigoBarraProducto"));
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemModificarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleCodigoBarraProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"ActualizarDetalleCodigoBarraProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonActualizarToolBarDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleCodigoBarraProducto"));
				
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemActualizarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleCodigoBarraProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"EliminarDetalleCodigoBarraProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonEliminarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleCodigoBarraProducto"));
						
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemEliminarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleCodigoBarraProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CancelarDetalleCodigoBarraProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonCancelarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleCodigoBarraProducto"));
			
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemCancelarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleCodigoBarraProducto"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleCodigoBarraProducto"));		
		
		
		this.jButtonCerrarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CerrarDetalleCodigoBarraProducto"));
		
		
		this.jButtonCerrarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemCerrarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleCodigoBarraProducto"));
			
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jMenuItemDetalleCerrarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleCodigoBarraProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleCodigoBarraProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleCodigoBarraProducto"));
		}
		
		this.jButtonCopiarToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleCodigoBarraProducto"));
			
		this.jButtonVerFormToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleCodigoBarraProducto"));
		
		this.jMenuItemGuardarCambiosDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleCodigoBarraProducto"));
			
		this.jMenuItemCopiarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleCodigoBarraProducto"));		
		
		this.jMenuItemVerFormDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleCodigoBarraProducto"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleCodigoBarraProducto"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemGuardarCambiosTablaDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleCodigoBarraProducto"));		
		
		
		
		this.jButtonRecargarInformacionDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleCodigoBarraProducto"));
					
		this.jButtonRecargarInformacionToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleCodigoBarraProducto"));
		
		this.jMenuItemRecargarInformacionDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleCodigoBarraProducto"));		
		
		
		
		this.jButtonAnterioresDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"AnterioresDetalleCodigoBarraProducto"));
		
		
		this.jButtonAnterioresToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleCodigoBarraProducto"));
		
		this.jMenuItemAnterioresDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleCodigoBarraProducto"));		
		
		
		this.jButtonSiguientesDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"SiguientesDetalleCodigoBarraProducto"));
		
		
		this.jButtonSiguientesToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemSiguientesDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleCodigoBarraProducto"));
			
		this.jMenuItemAbrirOrderByDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleCodigoBarraProducto"));
			
		this.jMenuItemMostrarOcultarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleCodigoBarraProducto"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleCodigoBarraProducto"));
			
		this.jMenuItemDetalleMostarOcultarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleCodigoBarraProducto"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleCodigoBarraProducto"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleCodigoBarraProducto"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleCodigoBarraProducto"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleCodigoBarraProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleCodigoBarraProducto"));

		this.jCheckBoxSeleccionadosDetalleCodigoBarraProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleCodigoBarraProducto"));
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleCodigoBarraProducto"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleCodigoBarraProducto"));
			
		this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleCodigoBarraProducto"));
					
		this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleCodigoBarraProducto"));
			
		this.jTextFieldValorCampoGeneralDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleCodigoBarraProducto"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonidDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoBusqueda"));
		//jButtonid_productoDetalleCodigoBarraProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtoncontrolDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"controlDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonmedicionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"medicionDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonvalor_anteriorDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"valor_anteriorDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonfechaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonobservacionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"observacionDetalleCodigoBarraProductoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleCodigoBarraProducto"));

			this.jButtonFK_IdLineaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaDetalleCodigoBarraProducto"));

			this.jButtonFK_IdLineaCategoriaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaCategoriaDetalleCodigoBarraProducto"));

			this.jButtonFK_IdLineaGrupoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaGrupoDetalleCodigoBarraProducto"));

			this.jButtonFK_IdLineaMarcaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaMarcaDetalleCodigoBarraProducto"));

			this.jButtonFK_IdProductoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleCodigoBarraProducto"));

			this.jButtonBuscarFK_IdProductoid_productoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProducto"));

			this.jButtonFK_IdUnidadDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleCodigoBarraProducto"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleCodigoBarraProducto"));
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleCodigoBarraProducto"));
				this.jInternalFrameReporteDinamicoDetalleCodigoBarraProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleCodigoBarraProducto"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleCodigoBarraProducto"));				
			//this.jButtonGenerarReporteDinamicoDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleCodigoBarraProducto"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleCodigoBarraProducto"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleCodigoBarraProducto"));
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleCodigoBarraProducto"));
				this.jInternalFrameImportacionDetalleCodigoBarraProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleCodigoBarraProducto"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleCodigoBarraProducto"));
			
			this.jButtonAbrirOrderByToolBarDetalleCodigoBarraProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleCodigoBarraProducto"));			
			
			if(this.jInternalFrameOrderByDetalleCodigoBarraProducto!=null) {
				this.jInternalFrameOrderByDetalleCodigoBarraProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleCodigoBarraProducto"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTabbedPaneRelacionesDetalleCodigoBarraProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleCodigoBarraProducto"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleCodigoBarraProducto();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleCodigoBarraProducto = (JInternalFrameBase)event.getSource();
	            	
	            DetalleCodigoBarraProductoBeanSwingJInternalFrame jInternalFrameParent=(DetalleCodigoBarraProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleCodigoBarraProducto.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleCodigoBarraProductoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleCodigoBarraProducto.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleCodigoBarraProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleCodigoBarraProducto.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleCodigoBarraProducto.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleCodigoBarraProducto";
		inputMap = this.jButtonNuevoDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleCodigoBarraProducto";
		inputMap = this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleCodigoBarraProductoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleCodigoBarraProducto";
		inputMap = this.jButtonModificarDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleCodigoBarraProducto";
		inputMap = this.jButtonActualizarDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleCodigoBarraProducto";
		inputMap = this.jButtonEliminarDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleCodigoBarraProducto";
		inputMap = this.jButtonCancelarDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleCodigoBarraProducto";
		inputMap = this.jButtonCerrarDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleCodigoBarraProducto";
		inputMap = this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonGuardarCambiosDetalleCodigoBarraProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleCodigoBarraProducto.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleCodigoBarraProductoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleCodigoBarraProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleCodigoBarraProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleCodigoBarraProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleCodigoBarraProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonidDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_empresaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_sucursalDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_bodegaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleCodigoBarraProductoBusqueda"));
		//jButtonid_productoDetalleCodigoBarraProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleCodigoBarraProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_unidadDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_lineaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_grupoDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_categoriaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaDetalleCodigoBarraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_linea_marcaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtoncontrolDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"controlDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonmedicionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"medicionDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonvalor_anteriorDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"valor_anteriorDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonfechaDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleCodigoBarraProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonobservacionDetalleCodigoBarraProductoBusqueda.addActionListener(new ButtonActionListener(this,"observacionDetalleCodigoBarraProductoBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleCodigoBarraProducto"));

		this.jButtonFK_IdLineaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaDetalleCodigoBarraProducto"));

		this.jButtonFK_IdLineaCategoriaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaCategoriaDetalleCodigoBarraProducto"));

		this.jButtonFK_IdLineaGrupoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaGrupoDetalleCodigoBarraProducto"));

		this.jButtonFK_IdLineaMarcaDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaMarcaDetalleCodigoBarraProducto"));

		this.jButtonFK_IdProductoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleCodigoBarraProducto"));

		this.jButtonBuscarFK_IdProductoid_productoDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"id_productoDetalleCodigoBarraProducto"));

		this.jButtonFK_IdUnidadDetalleCodigoBarraProducto.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleCodigoBarraProducto"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleCodigoBarraProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleCodigoBarraProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleCodigoBarraProductoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleCodigoBarraProducto.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleCodigoBarraProducto(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
					detallecodigobarraproductoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductos) {
					detallecodigobarraproductoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleCodigoBarraProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
						detallecodigobarraproductoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductos) {
						detallecodigobarraproductoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductos) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleCodigoBarraProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleCodigoBarraProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleCodigoBarraProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleCodigoBarraProducto.getSelectedRows();
			
			DetalleCodigoBarraProducto detallecodigobarraproductoLocal=new DetalleCodigoBarraProducto();
			
			//this.seleccionarTodosDetalleCodigoBarraProducto(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallecodigobarraproductoLocal =(DetalleCodigoBarraProducto) this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos().toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detallecodigobarraproductoLocal =(DetalleCodigoBarraProducto) this.detallecodigobarraproductos.toArray()[this.jTableDatosDetalleCodigoBarraProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detallecodigobarraproductoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
						detallecodigobarraproductoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductos) {
						detallecodigobarraproductoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleCodigoBarraProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleCodigoBarraProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleCodigoBarraProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleCodigoBarraProductoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleCodigoBarraProductoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleCodigoBarraProductoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleCodigoBarraProducto.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
				
						if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL)) {
							existe=true;
							detallecodigobarraproductoAux.setcontrol(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION)) {
							existe=true;
							detallecodigobarraproductoAux.setmedicion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR)) {
							existe=true;
							detallecodigobarraproductoAux.setvalor_anterior(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detallecodigobarraproductoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							detallecodigobarraproductoAux.setobservacion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductos) {
					
						if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL)) {
							existe=true;
							detallecodigobarraproductoAux.setcontrol(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION)) {
							existe=true;
							detallecodigobarraproductoAux.setmedicion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR)) {
							existe=true;
							detallecodigobarraproductoAux.setvalor_anterior(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detallecodigobarraproductoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							detallecodigobarraproductoAux.setobservacion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleCodigoBarraProductoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleCodigoBarraProducto=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleCodigoBarraProducto) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleCodigoBarraProducto(conSplash);
				
					this.generarReporteDetalleCodigoBarraProductosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleCodigoBarraProductosSeleccionados();
				//this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleCodigoBarraProductosSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleCodigoBarraProductosSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleCodigoBarraProducto();
				
				this.exportarDetalleCodigoBarraProductosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleCodigoBarraProductos();
				//this.importarDetalleCodigoBarraProductos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleCodigoBarraProducto();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleCodigoBarraProductosSeleccionados();
				//this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Codigo Barra Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleCodigoBarraProducto();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleCodigoBarraProducto)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleCodigoBarraProducto(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleCodigoBarraProductoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleCodigoBarraProducto) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleCodigoBarraProducto(conSplash);
					
						//this.actualizarParametrosGeneralDetalleCodigoBarraProducto();
						
						this.generarReporteProcesoAccionDetalleCodigoBarraProductosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Codigo Barra ProductoS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Codigo Barra Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleCodigoBarraProducto();
				
						this.actualizarParametrosGeneralDetalleCodigoBarraProducto();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detallecodigobarraproductoReturnGeneral=detallecodigobarraproductoLogic.procesarAccionDetalleCodigoBarraProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos(),this.detallecodigobarraproductoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleCodigoBarraProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleCodigoBarraProducto();
					
					DetalleCodigoBarraProductoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleCodigoBarraProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleCodigoBarraProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxTiposAccionesFormularioDetalleCodigoBarraProducto.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleCodigoBarraProducto(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleCodigoBarraProductoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleCodigoBarraProducto();
			
			if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
			DetalleCodigoBarraProducto detallecodigobarraproducto=new DetalleCodigoBarraProducto();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleCodigoBarraProducto.getSelectedItem();
			
			
			
			
			detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
			//this.sTipoAccion;
			
			if(detallecodigobarraproductosSeleccionados.size()==1) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
					detallecodigobarraproducto=detallecodigobarraproductoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleCodigoBarraProducto();
			
      		//this.finishProcessDetalleCodigoBarraProducto(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleCodigoBarraProductoReturnGeneral() throws Exception {
		if(this.detallecodigobarraproductoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detallecodigobarraproductoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detallecodigobarraproductoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detallecodigobarraproductoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detallecodigobarraproductoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detallecodigobarraproductoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
		}
		
		if(this.detallecodigobarraproductoReturnGeneral.getConRetornoLista() || this.detallecodigobarraproductoReturnGeneral.getConRetornoObjeto()) {
			if(this.detallecodigobarraproductoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallecodigobarraproductoLogic.setDetalleCodigoBarraProductos(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProductos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detallecodigobarraproductoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallecodigobarraproductoLogic.setDetalleCodigoBarraProducto(this.detallecodigobarraproductoReturnGeneral.getDetalleCodigoBarraProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleCodigoBarraProducto(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleCodigoBarraProducto() throws Exception {
		
		
	}
	
	public ArrayList<DetalleCodigoBarraProducto> getDetalleCodigoBarraProductosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleCodigoBarraProducto) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos()) {
					if(detallecodigobarraproductoAux.getIsSelected()) {
						detallecodigobarraproductosSeleccionados.add(detallecodigobarraproductoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:this.detallecodigobarraproductos) {
					if(detallecodigobarraproductoAux.getIsSelected()) {
						detallecodigobarraproductosSeleccionados.add(detallecodigobarraproductoAux);				
					}
				}
			}
			
			if(detallecodigobarraproductosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detallecodigobarraproductosSeleccionados.addAll(this.detallecodigobarraproductoLogic.getDetalleCodigoBarraProductos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detallecodigobarraproductosSeleccionados.addAll(this.detallecodigobarraproductos);				
					}
				}
			}
		} else {
			detallecodigobarraproductosSeleccionados.add(this.detallecodigobarraproducto);
		}
		
		return detallecodigobarraproductosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleCodigoBarraProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleCodigoBarraProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleCodigoBarraProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleCodigoBarraProductosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleCodigoBarraProductosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Codigo Barra Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleCodigoBarraProductosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleCodigoBarraProducto();
		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleCodigoBarraProducto();
		
		
		//this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados ,detallecodigobarraproductoImplementable,detallecodigobarraproductoImplementableHome);
	}
	
	public void mostrarImportacionDetalleCodigoBarraProductos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleCodigoBarraProducto();
		
		this.abrirFrameImportacionDetalleCodigoBarraProducto();		
		
			
		//this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados ,detallecodigobarraproductoImplementable,detallecodigobarraproductoImplementableHome);
	}
	
	public void importarDetalleCodigoBarraProductos() throws Exception {		
	
	}
	
	public void exportarDetalleCodigoBarraProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleCodigoBarraProductosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleCodigoBarraProductosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleCodigoBarraProductosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Codigo Barra Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleCodigoBarraProducto(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleCodigoBarraProducto(detallecodigobarraproductoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detallecodigobarraproductoAux.setsDetalleGeneralEntityReporte(detallecodigobarraproductoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleCodigoBarraProducto(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detallecodigobarraproducto.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getlinea_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getlineagrupo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getlineacategoria_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getlineamarca_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getcontrol();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getmedicion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getvalor_anterior().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallecodigobarraproducto.getobservacion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleCodigoBarraProductos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleCodigoBarraProducto(row);				
				iRow++;
			}				
			
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleCodigoBarraProducto(detallecodigobarraproductoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleCodigoBarraProductosSeleccionados() throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();		
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallecodigobarraproducto.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detallecodigobarraproductos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detallecodigobarraproducto");
			//elementRoot.appendChild(element);
		
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
				element = document.createElement("detallecodigobarraproducto");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleCodigoBarraProducto(detallecodigobarraproductoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Codigo Barra Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleCodigoBarraProducto(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_VALORANTERIOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getlinea_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getlineagrupo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getlineacategoria_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getlineamarca_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getcontrol());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getmedicion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getvalor_anterior());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(detallecodigobarraproducto.getobservacion());				
	}
	
	public void setFilaDatosExportarXmlDetalleCodigoBarraProducto(DetalleCodigoBarraProducto detallecodigobarraproducto,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detallecodigobarraproducto.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detallecodigobarraproducto.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementbodega_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementlinea_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDLINEA);
		elementlinea_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getlinea_descripcion()));
		element.appendChild(elementlinea_descripcion);

		Element elementlineagrupo_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDLINEAGRUPO);
		elementlineagrupo_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getlineagrupo_descripcion()));
		element.appendChild(elementlineagrupo_descripcion);

		Element elementlineacategoria_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDLINEACATEGORIA);
		elementlineacategoria_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getlineacategoria_descripcion()));
		element.appendChild(elementlineacategoria_descripcion);

		Element elementlineamarca_descripcion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.IDLINEAMARCA);
		elementlineamarca_descripcion.appendChild(document.createTextNode(detallecodigobarraproducto.getlineamarca_descripcion()));
		element.appendChild(elementlineamarca_descripcion);

		Element elementcontrol = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.CONTROL);
		elementcontrol.appendChild(document.createTextNode(detallecodigobarraproducto.getcontrol().trim()));
		element.appendChild(elementcontrol);

		Element elementmedicion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.MEDICION);
		elementmedicion.appendChild(document.createTextNode(detallecodigobarraproducto.getmedicion().trim()));
		element.appendChild(elementmedicion);

		Element elementvalor_anterior = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.VALORANTERIOR);
		elementvalor_anterior.appendChild(document.createTextNode(detallecodigobarraproducto.getvalor_anterior().toString().trim()));
		element.appendChild(elementvalor_anterior);

		Element elementfecha = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(detallecodigobarraproducto.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementobservacion = document.createElement(DetalleCodigoBarraProductoConstantesFunciones.OBSERVACION);
		elementobservacion.appendChild(document.createTextNode(detallecodigobarraproducto.getobservacion().trim()));
		element.appendChild(elementobservacion);
	}
	
	public void generarReporteGroupGenericoDetalleCodigoBarraProductosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados=new ArrayList<DetalleCodigoBarraProducto>();
		
		detallecodigobarraproductosSeleccionados=this.getDetalleCodigoBarraProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleCodigoBarraProducto(detallecodigobarraproductosSeleccionados);
		
		this.generarReporteDetalleCodigoBarraProductos("Todos",detallecodigobarraproductosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleCodigoBarraProducto(ArrayList<DetalleCodigoBarraProducto> detallecodigobarraproductosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleCodigoBarraProducto detallecodigobarraproductoAux:detallecodigobarraproductosSeleccionados) {
				detallecodigobarraproductoAux.setsDetalleGeneralEntityReporte(detallecodigobarraproductoAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getlinea_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAGRUPO)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getlineagrupo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEACATEGORIA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getlineacategoria_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_IDLINEAMARCA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getlineamarca_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_CONTROL)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getcontrol());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_MEDICION)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getmedicion());
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detallecodigobarraproductoAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(DetalleCodigoBarraProductoConstantesFunciones.LABEL_OBSERVACION)) {
					existe=true;
					detallecodigobarraproductoAux.setsDescripcionGeneralEntityReporte1(detallecodigobarraproductoAux.getobservacion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleCodigoBarraProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleCodigoBarraProducto(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaModificarDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaCancelarDetalleCodigoBarraProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleCodigoBarraProducto=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleCodigoBarraProductoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=true;
		} else {
			this.actualizarEstadoPanelsDetalleCodigoBarraProducto(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleCodigoBarraProducto=false;
			//this.isVisibilidadCeldaVerFormDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaDuplicarDetalleCodigoBarraProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleCodigoBarraProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			if(!detallecodigobarraproductoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;												
			}
			
			this.jButtonCerrarDetalleCodigoBarraProducto.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleCodigoBarraProducto=false;
		}
		
		if(!this.permiteMantenimiento(this.detallecodigobarraproducto)) {
			this.isVisibilidadCeldaActualizarDetalleCodigoBarraProducto=false;
			this.isVisibilidadCeldaEliminarDetalleCodigoBarraProducto=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleCodigoBarraProducto() {
	}
	
	public void actualizarEstadoPanelsDetalleCodigoBarraProducto(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosEdicionDetalleCodigoBarraProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleCodigoBarraProducto!=null) {
				this.jScrollPanelDatosDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleCodigoBarraProducto!=null) {
				this.jPanelPaginacionDetalleCodigoBarraProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
					this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detallecodigobarraproductoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto!=null) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleCodigoBarraProducto!=null) {
				this.jPanelParametrosReportesDetalleCodigoBarraProducto.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLinea(Boolean isParaLinea){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaNegation=!isParaLinea;

			this.isVisibilidadFK_IdBodega=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaLinea;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaGrupo(Boolean isParaLineaGrupo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaGrupoNegation=!isParaLineaGrupo;

			this.isVisibilidadFK_IdBodega=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaGrupo;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaCategoria(Boolean isParaLineaCategoria){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaCategoriaNegation=!isParaLineaCategoria;

			this.isVisibilidadFK_IdBodega=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaCategoria;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaMarca(Boolean isParaLineaMarca){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaMarcaNegation=!isParaLineaMarca;

			this.isVisibilidadFK_IdBodega=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdBodegaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaCategoria=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLineaCategoria) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaGrupo=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLineaGrupo) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdLineaMarca=isParaLineaMarca;
			if(!this.isVisibilidadFK_IdLineaMarca) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdProducto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdProductoDetalleCodigoBarraProducto);}

			this.isVisibilidadFK_IdUnidad=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(jPanelFK_IdUnidadDetalleCodigoBarraProducto);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetalleCodigoBarraProductoParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detallecodigobarraproductoSessionBean==null) {
				detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detallecodigobarraproductoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detallecodigobarraproductoFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetalleCodigoBarraProductoConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleCodigoBarraProducto(true);
			//productoSessionBean.setlidDetalleCodigoBarraProductoActual(this.idDetalleCodigoBarraProductoActual);

			detallecodigobarraproductoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleCodigoBarraProducto(true);
			detallecodigobarraproductoSessionBean.setlIdDetalleCodigoBarraProductoActualForeignKey(this.idDetalleCodigoBarraProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleCodigoBarraProductoSessionBean detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
		
		if(this.detallecodigobarraproductoSessionBean==null) {
			this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
		}
		
		this.detallecodigobarraproductoSessionBean.setsUltimaBusquedaDetalleCodigoBarraProducto(this.getsAccionBusqueda());
		this.detallecodigobarraproductoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detallecodigobarraproductoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detallecodigobarraproductoSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detallecodigobarraproductoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
			detallecodigobarraproductoSessionBean.setid_linea(this.getid_lineaFK_IdLinea());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaCategoria")) {
			detallecodigobarraproductoSessionBean.setid_linea_categoria(this.getid_linea_categoriaFK_IdLineaCategoria());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaGrupo")) {
			detallecodigobarraproductoSessionBean.setid_linea_grupo(this.getid_linea_grupoFK_IdLineaGrupo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLineaMarca")) {
			detallecodigobarraproductoSessionBean.setid_linea_marca(this.getid_linea_marcaFK_IdLineaMarca());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detallecodigobarraproductoSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detallecodigobarraproductoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detallecodigobarraproductoSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleCodigoBarraProductoSessionBean detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
		
		if(this.detallecodigobarraproductoSessionBean==null) {
			this.detallecodigobarraproductoSessionBean=new DetalleCodigoBarraProductoSessionBean();
		}
		
		if(this.detallecodigobarraproductoSessionBean.getsUltimaBusquedaDetalleCodigoBarraProducto()!=null&&!this.detallecodigobarraproductoSessionBean.getsUltimaBusquedaDetalleCodigoBarraProducto().equals("")) {
			this.setsAccionBusqueda(detallecodigobarraproductoSessionBean.getsUltimaBusquedaDetalleCodigoBarraProducto());
			this.setiNumeroPaginacion(detallecodigobarraproductoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detallecodigobarraproductoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detallecodigobarraproductoSessionBean.getid_bodega());
				detallecodigobarraproductoSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detallecodigobarraproductoSessionBean.getid_empresa());
				detallecodigobarraproductoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
				this.setid_lineaFK_IdLinea(detallecodigobarraproductoSessionBean.getid_linea());
				detallecodigobarraproductoSessionBean.setid_linea(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaCategoria")) {
				this.setid_linea_categoriaFK_IdLineaCategoria(detallecodigobarraproductoSessionBean.getid_linea_categoria());
				detallecodigobarraproductoSessionBean.setid_linea_categoria(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaGrupo")) {
				this.setid_linea_grupoFK_IdLineaGrupo(detallecodigobarraproductoSessionBean.getid_linea_grupo());
				detallecodigobarraproductoSessionBean.setid_linea_grupo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLineaMarca")) {
				this.setid_linea_marcaFK_IdLineaMarca(detallecodigobarraproductoSessionBean.getid_linea_marca());
				detallecodigobarraproductoSessionBean.setid_linea_marca(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detallecodigobarraproductoSessionBean.getid_producto());
				detallecodigobarraproductoSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detallecodigobarraproductoSessionBean.getid_sucursal());
				detallecodigobarraproductoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detallecodigobarraproductoSessionBean.getid_unidad());
				detallecodigobarraproductoSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detallecodigobarraproductoSessionBean.setsUltimaBusquedaDetalleCodigoBarraProducto("");
		this.detallecodigobarraproductoSessionBean.setiNumeroPaginacion(DetalleCodigoBarraProductoConstantesFunciones.INUMEROPAGINACION);
		this.detallecodigobarraproductoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleCodigoBarraProducto(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleCodigoBarraProducto() {
		this.updateBorderResaltarBusquedasFormularioDetalleCodigoBarraProducto();
		this.updateVisibilidadBusquedasFormularioDetalleCodigoBarraProducto();
		this.updateHabilitarBusquedasFormularioDetalleCodigoBarraProducto();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleCodigoBarraProducto() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponents().length>0) {
	

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdBodegaDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdBodegaDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdBodegaDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaCategoriaDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaGrupoDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaGrupoDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaMarcaDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaMarcaDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdProductoDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdProductoDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdProductoDetalleCodigoBarraProducto);
			}
		}

		if(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdUnidadDetalleCodigoBarraProducto!=null) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdUnidadDetalleCodigoBarraProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdUnidadDetalleCodigoBarraProducto);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleCodigoBarraProducto() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdBodegaDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdBodegaDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdBodegaDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaCategoriaDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaGrupoDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaGrupoDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaMarcaDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdLineaMarcaDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdProductoDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdProductoDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdProductoDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdUnidadDetalleCodigoBarraProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdUnidadDetalleCodigoBarraProducto);
			if(!this.detallecodigobarraproductoConstantesFunciones.mostrarFK_IdUnidadDetalleCodigoBarraProducto && index>-1) {
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleCodigoBarraProducto() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdBodegaDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdBodegaDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdBodegaDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaCategoriaDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaGrupoDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaGrupoDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaMarcaDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdLineaMarcaDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdProductoDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdProductoDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdProductoDetalleCodigoBarraProducto);
			}

			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdUnidadDetalleCodigoBarraProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarFK_IdUnidadDetalleCodigoBarraProducto);
				this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setEnabledAt(index,this.detallecodigobarraproductoConstantesFunciones.activarFK_IdUnidadDetalleCodigoBarraProducto);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleCodigoBarraProducto(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdBodegaDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdBodegaDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdBodegaDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLinea")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdLineaDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaCategoria")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaCategoriaDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdLineaCategoriaDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaCategoriaDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaGrupo")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaGrupoDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdLineaGrupoDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaGrupoDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLineaMarca")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdLineaMarcaDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdLineaMarcaDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdLineaMarcaDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdProductoDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdProductoDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdProductoDetalleCodigoBarraProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.indexOfComponent(this.jPanelFK_IdUnidadDetalleCodigoBarraProducto);

			this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleCodigoBarraProducto.getComponent(index);

			this.detallecodigobarraproductoConstantesFunciones.setResaltarFK_IdUnidadDetalleCodigoBarraProducto(resaltar);

			jPanel.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarFK_IdUnidadDetalleCodigoBarraProducto);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleCodigoBarraProducto.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleCodigoBarraProducto() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleCodigoBarraProducto();
		this.updateVisibilidadResaltarControlesFormularioDetalleCodigoBarraProducto();
		this.updateHabilitarResaltarControlesFormularioDetalleCodigoBarraProducto();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleCodigoBarraProducto() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detallecodigobarraproductoConstantesFunciones.resaltaridDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltaridDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_empresaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_empresaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_sucursalDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_sucursalDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_bodegaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_bodegaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_productoDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_productoDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_unidadDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_unidadDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_lineaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_lineaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_grupoDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_grupoDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_categoriaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_categoriaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_marcaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarid_linea_marcaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarcontrolDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarcontrolDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarmedicionDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarmedicionDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarvalor_anteriorDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarvalor_anteriorDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarfechaDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarfechaDetalleCodigoBarraProducto);}
		if(this.detallecodigobarraproductoConstantesFunciones.resaltarobservacionDetalleCodigoBarraProducto!=null && this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setBorder(this.detallecodigobarraproductoConstantesFunciones.resaltarobservacionDetalleCodigoBarraProducto);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleCodigoBarraProducto() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
	
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostraridDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelidDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostraridDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_empresaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_empresaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_empresaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_sucursalDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_sucursalDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_sucursalDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_bodegaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_bodegaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_bodegaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_productoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_productoDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_productoDetalleCodigoBarraProducto);
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_productoDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_unidadDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_unidadDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_unidadDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_lineaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_lineaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_lineaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_grupoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_linea_grupoDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_grupoDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_categoriaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_linea_categoriaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_categoriaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_marcaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelid_linea_marcaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarid_linea_marcaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarcontrolDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelcontrolDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarcontrolDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarmedicionDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelmedicionDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarmedicionDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarvalor_anteriorDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelvalor_anteriorDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarvalor_anteriorDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarfechaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelfechaDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarfechaDetalleCodigoBarraProducto);
		//this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarobservacionDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jPanelobservacionDetalleCodigoBarraProducto.setVisible(this.detallecodigobarraproductoConstantesFunciones.mostrarobservacionDetalleCodigoBarraProducto);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleCodigoBarraProducto() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleCodigoBarraProducto!=null) {
	
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jLabelidDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activaridDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_empresaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_empresaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_sucursalDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_sucursalDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_bodegaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_bodegaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_productoDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_productoDetalleCodigoBarraProducto);
			this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jButtonid_productoDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_productoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_unidadDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_unidadDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_lineaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_lineaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_grupoDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_linea_grupoDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_categoriaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_linea_categoriaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jComboBoxid_linea_marcaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarid_linea_marcaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldcontrolDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarcontrolDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldmedicionDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarmedicionDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextFieldvalor_anteriorDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarvalor_anteriorDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jDateChooserfechaDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarfechaDetalleCodigoBarraProducto);
		this.jInternalFrameDetalleFormDetalleCodigoBarraProducto.jTextAreaobservacionDetalleCodigoBarraProducto.setEnabled(this.detallecodigobarraproductoConstantesFunciones.activarobservacionDetalleCodigoBarraProducto);
		}
	}
	
		
}