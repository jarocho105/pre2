/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.OrdenCompraConstantesFunciones;
import com.bydan.erp.inventario.util.OrdenCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.OrdenCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.OrdenCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.sris.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.sris.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class OrdenCompraBeanSwingJInternalFrame extends OrdenCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(OrdenCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<OrdenCompra> ordencompraValidator = new ClassValidator<OrdenCompra>(OrdenCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public OrdenCompra ordencompra;	
	public OrdenCompra ordencompraAux;
	public OrdenCompra ordencompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public OrdenCompra ordencompraTotales;
	public Long idOrdenCompraActual;
	public Long iIdNuevoOrdenCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboEstadoOrdenCompra="";

	public List<EstadoOrdenCompra> estadoordencomprasForeignKey;

	public List<EstadoOrdenCompra> getestadoordencomprasForeignKey() {
		return estadoordencomprasForeignKey;
	}

	public void setestadoordencomprasForeignKey(List<EstadoOrdenCompra> estadoordencomprasForeignKey) {
		this.estadoordencomprasForeignKey = estadoordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoOrdenCompra estadoordencompraForeignKey;

	public EstadoOrdenCompra getestadoordencompraForeignKey() {
		return estadoordencompraForeignKey;
	}

	public void setestadoordencompraForeignKey(EstadoOrdenCompra estadoordencompraForeignKey) {
		this.estadoordencompraForeignKey = estadoordencompraForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboOrdenCompra="";

	public List<OrdenCompra> ordencomprasForeignKey;

	public List<OrdenCompra> getordencomprasForeignKey() {
		return ordencomprasForeignKey;
	}

	public void setordencomprasForeignKey(List<OrdenCompra> ordencomprasForeignKey) {
		this.ordencomprasForeignKey = ordencomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public OrdenCompra ordencompraForeignKey;

	public OrdenCompra getordencompraForeignKey() {
		return ordencompraForeignKey;
	}

	public void setordencompraForeignKey(OrdenCompra ordencompraForeignKey) {
		this.ordencompraForeignKey = ordencompraForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	
	

	public Boolean isTienePermisosDetalleOrdenCompra=false;

	public Boolean getIsTienePermisosDetalleOrdenCompra() {
		return isTienePermisosDetalleOrdenCompra;
	}

	public void setIsTienePermisosDetalleOrdenCompra(Boolean isTienePermisosDetalleOrdenCompra) {
		this.isTienePermisosDetalleOrdenCompra= isTienePermisosDetalleOrdenCompra;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoOrdenCompra;
	public Boolean isPermisoNuevoOrdenCompra;
	public Boolean isPermisoActualizarOrdenCompra;
	public Boolean isPermisoActualizarOriginalOrdenCompra;
	public Boolean isPermisoEliminarOrdenCompra;
	public Boolean isPermisoGuardarCambiosOrdenCompra;
	public Boolean isPermisoConsultaOrdenCompra;
	public Boolean isPermisoBusquedaOrdenCompra;
	public Boolean isPermisoReporteOrdenCompra;
	public Boolean isPermisoPaginacionMedioOrdenCompra;
	public Boolean isPermisoPaginacionAltoOrdenCompra;
	public Boolean isPermisoPaginacionTodoOrdenCompra;
	public Boolean isPermisoCopiarOrdenCompra;
	public Boolean isPermisoVerFormOrdenCompra;
	public Boolean isPermisoDuplicarOrdenCompra;
	public Boolean isPermisoOrdenOrdenCompra;
	
	public List<OrdenCompra> ordencomprasArbol;
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public OrdenCompraParameterReturnGeneral ordencompraReturnGeneral;
	public OrdenCompraParameterReturnGeneral ordencompraParameterGeneral;
	
	

	public DetalleOrdenCompraLogic detalleordencompraLogic=null;

	public DetalleOrdenCompraLogic getDetalleOrdenCompraLogic() {
		return detalleordencompraLogic;
	}

	public void setDetalleOrdenCompraLogic(DetalleOrdenCompraLogic detalleordencompraLogic) {
		this.detalleordencompraLogic = detalleordencompraLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoOrdenCompra=false;
	public Boolean esParaAccionDesdeFormularioOrdenCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected OrdenCompraSessionBeanAdditional ordencompraSessionBeanAdditional=null;
	
	public OrdenCompraSessionBeanAdditional getOrdenCompraSessionBeanAdditional() {
		return this.ordencompraSessionBeanAdditional;
	}
	
	public void setOrdenCompraSessionBeanAdditional(OrdenCompraSessionBeanAdditional ordencompraSessionBeanAdditional) {
		try {
			this.ordencompraSessionBeanAdditional=ordencompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected OrdenCompraBeanSwingJInternalFrameAdditional ordencompraBeanSwingJInternalFrameAdditional=null;
	//public class OrdenCompraBeanSwingJInternalFrame
	
	public OrdenCompraBeanSwingJInternalFrameAdditional getOrdenCompraBeanSwingJInternalFrameAdditional() {
		return this.ordencompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setOrdenCompraBeanSwingJInternalFrameAdditional(OrdenCompraBeanSwingJInternalFrameAdditional ordencompraBeanSwingJInternalFrameAdditional) {
		try {
			this.ordencompraBeanSwingJInternalFrameAdditional=ordencompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public OrdenCompraLogic ordencompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public OrdenCompra ordencompraBean;
	public OrdenCompraConstantesFunciones ordencompraConstantesFunciones;
	//public OrdenCompraParameterReturnGeneral ordencompraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public TipoCambioLogic tipocambioLogic;
	public EstadoOrdenCompraLogic estadoordencompraLogic;
	public ClienteLogic clienteLogic;
	public FormatoLogic formatoLogic;
	public TransportistaLogic transportistaLogic;
	public EmpleadoLogic empleadoLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public AsientoContableLogic asientocontableLogic;
	
	//PARAMETROS
	
	
	//public List<OrdenCompra> ordencompras;	
	//public List<OrdenCompra> ordencomprasEliminados;
	//public List<OrdenCompra> ordencomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoOrdenCompra=false;
	public Boolean isVisibilidadCeldaDuplicarOrdenCompra=true;
	public Boolean isVisibilidadCeldaCopiarOrdenCompra=true;
	public Boolean isVisibilidadCeldaVerFormOrdenCompra=true;
	public Boolean isVisibilidadCeldaOrdenOrdenCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
	public Boolean isVisibilidadCeldaModificarOrdenCompra=false;
	public Boolean isVisibilidadCeldaActualizarOrdenCompra=false;
	public Boolean isVisibilidadCeldaEliminarOrdenCompra=false;
	public Boolean isVisibilidadCeldaCancelarOrdenCompra=false;
	public Boolean isVisibilidadCeldaGuardarOrdenCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosOrdenCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoOrdenCompra=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdOrdenCompra=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoOrdenCompra() {
		return this.iIdNuevoOrdenCompra;
	}

	public void setiIdNuevoOrdenCompra(Long iIdNuevoOrdenCompra) {
		this.iIdNuevoOrdenCompra = iIdNuevoOrdenCompra;
	}
	
	public Long getidOrdenCompraActual() {
		return this.idOrdenCompraActual;
	}

	public void setidOrdenCompraActual(Long idOrdenCompraActual) {
		this.idOrdenCompraActual = idOrdenCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public OrdenCompra getordencompra() {
		return this.ordencompra;
	}

	public void setordencompra(OrdenCompra ordencompra) {
		this.ordencompra = ordencompra;
	}
	
	public OrdenCompra getordencompraAux() {
		return this.ordencompraAux;
	}

	public void setordencompraAux(OrdenCompra ordencompraAux) {
		this.ordencompraAux = ordencompraAux;
	}				
	
	public OrdenCompra getordencompraAnterior() {
		return this.ordencompraAnterior;
	}

	public void setordencompraAnterior(OrdenCompra ordencompraAnterior) {
		this.ordencompraAnterior = ordencompraAnterior;
	}	
	
	public OrdenCompra getordencompraTotales() {
		return this.ordencompraTotales;
	}

	public void setordencompraTotales(OrdenCompra ordencompraTotales) {
		this.ordencompraTotales = ordencompraTotales;
	}	
	
	public OrdenCompra getordencompraBean() {
		return this.ordencompraBean;
	}

	public void setordencompraBean(OrdenCompra ordencompraBean) {
		this.ordencompraBean = ordencompraBean;
	}	
	
	public OrdenCompraParameterReturnGeneral getordencompraReturnGeneral() {
		return this.ordencompraReturnGeneral;
	}

	public void setordencompraReturnGeneral(OrdenCompraParameterReturnGeneral ordencompraReturnGeneral) {
		this.ordencompraReturnGeneral = ordencompraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=null;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_orden_compraFK_IdEstadoOrdenCompra=-1L;

	public Long getid_estado_orden_compraFK_IdEstadoOrdenCompra() {
		return this.id_estado_orden_compraFK_IdEstadoOrdenCompra;
	}

	public void setid_estado_orden_compraFK_IdEstadoOrdenCompra(Long id_estado_orden_compraFK_IdEstadoOrdenCompra) {
		this.id_estado_orden_compraFK_IdEstadoOrdenCompra = id_estado_orden_compraFK_IdEstadoOrdenCompra;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_orden_compraFK_IdOrdenCompra=null;

	public Long getid_orden_compraFK_IdOrdenCompra() {
		return this.id_orden_compraFK_IdOrdenCompra;
	}

	public void setid_orden_compraFK_IdOrdenCompra(Long id_orden_compraFK_IdOrdenCompra) {
		this.id_orden_compraFK_IdOrdenCompra = id_orden_compraFK_IdOrdenCompra;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transportistaFK_IdTransportista=null;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public OrdenCompraLogic getOrdenCompraLogic()	{		
		return ordencompraLogic;
	}

	public void setOrdenCompraLogic(OrdenCompraLogic ordencompraLogic) {
		this.ordencompraLogic = ordencompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoOrdenCompra() {
		return isEsNuevoOrdenCompra;
	}

	public void setIsEsNuevoOrdenCompra(Boolean isEsNuevoOrdenCompra) {
		this.isEsNuevoOrdenCompra = isEsNuevoOrdenCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioOrdenCompra() {
		return esParaAccionDesdeFormularioOrdenCompra;
	}
	
	public void setEsParaAccionDesdeFormularioOrdenCompra(Boolean esParaAccionDesdeFormularioOrdenCompra) {
		this.esParaAccionDesdeFormularioOrdenCompra = esParaAccionDesdeFormularioOrdenCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(ordencompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(ordencompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(ordencompraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(ordencompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(ordencompraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(ordencompraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(ordencompraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(ordencompraSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(ordencompraSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(ordencompraSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoordencomprasForeignKey=new ArrayList<EstadoOrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoOrdenCompraLogic estadoordencompraLogic=new EstadoOrdenCompraLogic();

			//estadoordencompraLogic.getEstadoOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoordencompraLogic.getEstadoOrdenCompraDataAccess().setIsForForeingKeyData(true);

					estadoordencompraLogic.getTodosEstadoOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.estadoordencomprasForeignKey=estadoordencompraLogic.getEstadoOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoordencompraLogic.getEntityWithConnection(ordencompraSessionBean.getlidEstadoOrdenCompraActual());
					this.estadoordencomprasForeignKey.add(estadoordencompraLogic.getEstadoOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(ordencompraSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(ordencompraSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transportista transportistaNulo = new Transportista();

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportistasForeignKey.add(0, transportistaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(ordencompraSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(ordencompraSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(ordencompraSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosOrdenComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			OrdenCompraLogic ordencompraLogic=new OrdenCompraLogic();

			//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingKeyData(true);

					ordencompraLogic.getTodosOrdenComprasWithConnection(sFinalQuery,new Pagination());

					this.ordencomprasForeignKey=ordencompraLogic.getOrdenCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaOrdenCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getEntityWithConnection(ordencompraSessionBean.getlidOrdenCompraActual());
					this.ordencomprasForeignKey.add(ordencompraLogic.getOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(ordencompraSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaOrdenCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaOrdenCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaOrdenCompraGenerico!=null && jComboBoxid_empresaOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalOrdenCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalOrdenCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalOrdenCompraGenerico!=null && jComboBoxid_sucursalOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloOrdenCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloOrdenCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloOrdenCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloOrdenCompraGenerico!=null && jComboBoxid_moduloOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioOrdenCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioOrdenCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioOrdenCompraGenerico!=null && jComboBoxid_ejercicioOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoOrdenCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoOrdenCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoOrdenCompraGenerico!=null && jComboBoxid_periodoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioOrdenCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioOrdenCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioOrdenCompraGenerico!=null && jComboBoxid_anioOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesOrdenCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesOrdenCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesOrdenCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesOrdenCompraGenerico!=null && jComboBoxid_mesOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioOrdenCompra.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioOrdenCompraGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioOrdenCompraGenerico!=null && jComboBoxid_usuarioOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_usuarioOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaOrdenCompra.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaOrdenCompraGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaOrdenCompraGenerico!=null && jComboBoxid_monedaOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_monedaOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioOrdenCompra.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioOrdenCompraGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioOrdenCompraGenerico!=null && jComboBoxid_tipo_cambioOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoOrdenCompraForeignKey(Long idEstadoOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoOrdenCompra  estadoordencompraTemp=null;

			for(EstadoOrdenCompra estadoordencompraAux:estadoordencomprasForeignKey) {
				if(estadoordencompraAux.getId()!=null && estadoordencompraAux.getId().equals(idEstadoOrdenCompraSeleccionado)) {
					estadoordencompraTemp=estadoordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoordencompraTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setEstadoOrdenCompra(estadoordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setSelectedItem(estadoordencompraTemp);
					}
				} else {
					//jComboBoxid_estado_orden_compraOrdenCompra.setSelectedItem(estadoordencompraTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoordencompraTemp!=null && jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra!=null) {
						jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.setSelectedItem(estadoordencompraTemp);
					} else {
						if(jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra!=null) {
							//jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.setSelectedItem(estadoordencompraTemp);
							if(jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.getItemCount()>0) {
								jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoOrdenCompraForeignKeyDescripcion(Long idEstadoOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoOrdenCompra  estadoordencompraTemp=null;

			for(EstadoOrdenCompra estadoordencompraAux:estadoordencomprasForeignKey) {
				if(estadoordencompraAux.getId()!=null && estadoordencompraAux.getId().equals(idEstadoOrdenCompraSeleccionado)) {
					estadoordencompraTemp=estadoordencompraAux;
					break;
				}
			}


			sDescripcion=EstadoOrdenCompraConstantesFunciones.getEstadoOrdenCompraDescripcion(estadoordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoOrdenCompraForeignKeyGenerico(Long idEstadoOrdenCompraSeleccionado,JComboBox jComboBoxid_estado_orden_compraOrdenCompraGenerico)throws Exception
	{
		try
		{
			EstadoOrdenCompra  estadoordencompraTemp=null;

			for(EstadoOrdenCompra estadoordencompraAux:estadoordencomprasForeignKey) {
				if(estadoordencompraAux.getId()!=null && estadoordencompraAux.getId().equals(idEstadoOrdenCompraSeleccionado)) {
					estadoordencompraTemp=estadoordencompraAux;
					break;
				}
			}

			if(estadoordencompraTemp!=null) {
				jComboBoxid_estado_orden_compraOrdenCompraGenerico.setSelectedItem(estadoordencompraTemp);
			} else {
				if(jComboBoxid_estado_orden_compraOrdenCompraGenerico!=null && jComboBoxid_estado_orden_compraOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_orden_compraOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteOrdenCompra.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteOrdenCompra!=null) {
						jComboBoxid_clienteFK_IdClienteOrdenCompra.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteOrdenCompra!=null) {
							//jComboBoxid_clienteFK_IdClienteOrdenCompra.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteOrdenCompra.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteOrdenCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteOrdenCompraGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteOrdenCompraGenerico!=null && jComboBoxid_clienteOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_clienteOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoOrdenCompra.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoOrdenCompraGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoOrdenCompraGenerico!=null && jComboBoxid_formatoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_formatoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaOrdenCompra.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaOrdenCompraGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaOrdenCompraGenerico!=null && jComboBoxid_transportistaOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_transportistaOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoOrdenCompra.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoOrdenCompraGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoOrdenCompraGenerico!=null && jComboBoxid_empleadoOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_empleadoOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico!=null && jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualOrdenCompraForeignKey(Long idOrdenCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ordencompraTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setOrdenCompra(ordencompraTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setSelectedItem(ordencompraTemp);
					}
				} else {
					//jComboBoxid_orden_compraOrdenCompra.setSelectedItem(ordencompraTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(ordencompraTemp!=null && jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra!=null) {
						jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.setSelectedItem(ordencompraTemp);
					} else {
						if(jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra!=null) {
							//jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.setSelectedItem(ordencompraTemp);
							if(jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.getItemCount()>0) {
								jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualOrdenCompraForeignKeyDescripcion(Long idOrdenCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}


			sDescripcion=OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualOrdenCompraForeignKeyGenerico(Long idOrdenCompraSeleccionado,JComboBox jComboBoxid_orden_compraOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasForeignKey) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			if(ordencompraTemp!=null) {
				jComboBoxid_orden_compraOrdenCompraGenerico.setSelectedItem(ordencompraTemp);
			} else {
				if(jComboBoxid_orden_compraOrdenCompraGenerico!=null && jComboBoxid_orden_compraOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_orden_compraOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.ordencompra!=null) {
						this.ordencompra.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableOrdenCompra.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
						if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableOrdenCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableOrdenCompraGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableOrdenCompraGenerico!=null && jComboBoxid_asiento_contableOrdenCompraGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableOrdenCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_empresaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaOrdenCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaOrdenCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				ordencompra.setid_empresa(empresaAux.getId());
				ordencompra.setempresa_descripcion(OrdenCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				ordencompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_sucursalOrdenCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalOrdenCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalOrdenCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				ordencompra.setid_sucursal(sucursalAux.getId());
				ordencompra.setsucursal_descripcion(OrdenCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				ordencompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_moduloOrdenCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloOrdenCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloOrdenCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				ordencompra.setid_modulo(moduloAux.getId());
				ordencompra.setmodulo_descripcion(OrdenCompraConstantesFunciones.getModuloDescripcion(moduloAux));
				ordencompra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_ejercicioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioOrdenCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioOrdenCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				ordencompra.setid_ejercicio(ejercicioAux.getId());
				ordencompra.setejercicio_descripcion(OrdenCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				ordencompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_periodoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoOrdenCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoOrdenCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				ordencompra.setid_periodo(periodoAux.getId());
				ordencompra.setperiodo_descripcion(OrdenCompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				ordencompra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_anioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioOrdenCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioOrdenCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				ordencompra.setid_anio(anioAux.getId());
				ordencompra.setanio_descripcion(OrdenCompraConstantesFunciones.getAnioDescripcion(anioAux));
				ordencompra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_mesOrdenCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesOrdenCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesOrdenCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				ordencompra.setid_mes(mesAux.getId());
				ordencompra.setmes_descripcion(OrdenCompraConstantesFunciones.getMesDescripcion(mesAux));
				ordencompra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_usuarioOrdenCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioOrdenCompraGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioOrdenCompraGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				ordencompra.setid_usuario(usuarioAux.getId());
				ordencompra.setusuario_descripcion(OrdenCompraConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				ordencompra.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_monedaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaOrdenCompraGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaOrdenCompraGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				ordencompra.setid_moneda(monedaAux.getId());
				ordencompra.setmoneda_descripcion(OrdenCompraConstantesFunciones.getMonedaDescripcion(monedaAux));
				ordencompra.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_tipo_cambioOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioOrdenCompraGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioOrdenCompraGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				ordencompra.setid_tipo_cambio(tipocambioAux.getId());
				ordencompra.settipocambio_descripcion(OrdenCompraConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				ordencompra.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoOrdenCompraForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_estado_orden_compraOrdenCompraGenerico)throws Exception
	{
		try
		{
			EstadoOrdenCompra  estadoordencompraAux=new EstadoOrdenCompra();

			if(jComboBoxid_estado_orden_compraOrdenCompraGenerico==null) {
				estadoordencompraAux=(EstadoOrdenCompra)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.getSelectedItem();
			} else {
				estadoordencompraAux=(EstadoOrdenCompra)jComboBoxid_estado_orden_compraOrdenCompraGenerico.getSelectedItem();
			}

			if(estadoordencompraAux!=null && estadoordencompraAux.getId()!=null) {
				ordencompra.setid_estado_orden_compra(estadoordencompraAux.getId());
				ordencompra.setestadoordencompra_descripcion(OrdenCompraConstantesFunciones.getEstadoOrdenCompraDescripcion(estadoordencompraAux));
				ordencompra.setEstadoOrdenCompra(estadoordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_clienteOrdenCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteOrdenCompraGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteOrdenCompraGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				ordencompra.setid_cliente(clienteAux.getId());
				ordencompra.setcliente_descripcion(OrdenCompraConstantesFunciones.getClienteDescripcion(clienteAux));
				ordencompra.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_formatoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoOrdenCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoOrdenCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				ordencompra.setid_formato(formatoAux.getId());
				ordencompra.setformato_descripcion(OrdenCompraConstantesFunciones.getFormatoDescripcion(formatoAux));
				ordencompra.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_transportistaOrdenCompraGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaOrdenCompraGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaOrdenCompraGenerico.getSelectedItem();
			}

			if(transportistaAux!=null) {
				ordencompra.setid_transportista(transportistaAux.getId());
				ordencompra.settransportista_descripcion(OrdenCompraConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				ordencompra.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_empleadoOrdenCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoOrdenCompraGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoOrdenCompraGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				ordencompra.setid_empleado(empleadoAux.getId());
				ordencompra.setempleado_descripcion(OrdenCompraConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				ordencompra.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloOrdenCompraGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				ordencompra.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				ordencompra.settipotransaccionmodulo_descripcion(OrdenCompraConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				ordencompra.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarOrdenCompraForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_orden_compraOrdenCompraGenerico)throws Exception
	{
		try
		{
			OrdenCompra  ordencompraAux=new OrdenCompra();

			if(jComboBoxid_orden_compraOrdenCompraGenerico==null) {
				ordencompraAux=(OrdenCompra)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.getSelectedItem();
			} else {
				ordencompraAux=(OrdenCompra)jComboBoxid_orden_compraOrdenCompraGenerico.getSelectedItem();
			}

			if(ordencompraAux!=null) {
				ordencompra.setid_orden_compra(ordencompraAux.getId());
				ordencompra.setordencompra_descripcion(OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompraAux));
				ordencompra.setOrdenCompra(ordencompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(OrdenCompra ordencompra,JComboBox jComboBoxid_asiento_contableOrdenCompraGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableOrdenCompraGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableOrdenCompraGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null) {
				ordencompra.setid_asiento_contable(asientocontableAux.getId());
				ordencompra.setasientocontable_descripcion(OrdenCompraConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				ordencompra.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.removeAllItems();

							for(EstadoOrdenCompra estadoordencompra:this.estadoordencomprasForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.addItem(estadoordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.removeAllItems();

							for(EstadoOrdenCompra estadoordencompra:this.estadoordencomprasForeignKey) {
								this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.addItem(estadoordencompra);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteOrdenCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteOrdenCompra.addItem(cliente);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.addItem(empleado);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.addItem(tipotransaccionmodulo);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameOrdenComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingOrdenCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.addItem(ordencompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdOrdenCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.removeAllItems();

							for(OrdenCompra ordencompra:this.ordencomprasForeignKey) {
								this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.addItem(ordencompra);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormOrdenCompra!=null) { 
					}

					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.addItem(asientocontable);
							}
						}

						if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoOrdenCompraForeignKey(EstadoOrdenCompra estadoordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setSelectedItem(estadoordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.setSelectedItem(estadoordencompra);
						} else {
							this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteOrdenCompra.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameOrdenCompraForeignKey(OrdenCompra ordencompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setSelectedItem(ordencompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.setSelectedItem(ordencompra);
						} else {
							this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesOrdenCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			OrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesOrdenCompra(this.ordencompraLogic.getOrdenCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			OrdenCompraConstantesFunciones.refrescarForeignKeysDescripcionesOrdenCompra(this.ordencompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(EstadoOrdenCompra.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Transportista.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(OrdenCompra.class));
		classes.add(new Classe(AsientoContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//ordencompraLogic.setOrdenCompras(this.ordencompras);
			ordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public OrdenCompraParameterReturnGeneral getOrdenCompraParameterGeneral() {
		return this.ordencompraParameterGeneral;
	}
	
	public void setOrdenCompraParameterGeneral(OrdenCompraParameterReturnGeneral ordencompraParameterGeneral) {
		this.ordencompraParameterGeneral = ordencompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoOrdenCompra() {
		return isPermisoTodoOrdenCompra;
	}

	public void setIsPermisoTodoOrdenCompra(Boolean isPermisoTodoOrdenCompra) {
		this.isPermisoTodoOrdenCompra = isPermisoTodoOrdenCompra;
	}

	public Boolean getIsPermisoNuevoOrdenCompra() {
		return isPermisoNuevoOrdenCompra;
	}

	public void setIsPermisoNuevoOrdenCompra(Boolean isPermisoNuevoOrdenCompra) {
		this.isPermisoNuevoOrdenCompra = isPermisoNuevoOrdenCompra;
	}

	public Boolean getIsPermisoActualizarOrdenCompra() {
		return isPermisoActualizarOrdenCompra;
	}

	public void setIsPermisoActualizarOrdenCompra(Boolean isPermisoActualizarOrdenCompra) {
		this.isPermisoActualizarOrdenCompra = isPermisoActualizarOrdenCompra;
	}

	public Boolean getIsPermisoEliminarOrdenCompra() {
		return isPermisoEliminarOrdenCompra;
	}

	public void setIsPermisoEliminarOrdenCompra(Boolean isPermisoEliminarOrdenCompra) {
		this.isPermisoEliminarOrdenCompra = isPermisoEliminarOrdenCompra;
	}

	public Boolean getIsPermisoGuardarCambiosOrdenCompra() {
		return isPermisoGuardarCambiosOrdenCompra;
	}

	public void setIsPermisoGuardarCambiosOrdenCompra(Boolean isPermisoGuardarCambiosOrdenCompra) {
		this.isPermisoGuardarCambiosOrdenCompra = isPermisoGuardarCambiosOrdenCompra;
	}
	
	public Boolean getIsPermisoConsultaOrdenCompra() {
		return isPermisoConsultaOrdenCompra;
	}

	public void setIsPermisoConsultaOrdenCompra(Boolean isPermisoConsultaOrdenCompra) {
		this.isPermisoConsultaOrdenCompra = isPermisoConsultaOrdenCompra;
	}

	public Boolean getIsPermisoBusquedaOrdenCompra() {
		return isPermisoBusquedaOrdenCompra;
	}

	public void setIsPermisoBusquedaOrdenCompra(Boolean isPermisoBusquedaOrdenCompra) {
		this.isPermisoBusquedaOrdenCompra = isPermisoBusquedaOrdenCompra;
	}

	public Boolean getIsPermisoReporteOrdenCompra() {
		return isPermisoReporteOrdenCompra;
	}

	public void setIsPermisoReporteOrdenCompra(Boolean isPermisoReporteOrdenCompra) {
		this.isPermisoReporteOrdenCompra = isPermisoReporteOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioOrdenCompra() {
		return isPermisoPaginacionMedioOrdenCompra;
	}

	public void setIsPermisoPaginacionMedioOrdenCompra(Boolean isPermisoPaginacionMedioOrdenCompra) {
		this.isPermisoPaginacionMedioOrdenCompra = isPermisoPaginacionMedioOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoOrdenCompra() {
		return isPermisoPaginacionTodoOrdenCompra;
	}

	public void setIsPermisoPaginacionTodoOrdenCompra(Boolean isPermisoPaginacionTodoOrdenCompra) {
		this.isPermisoPaginacionTodoOrdenCompra = isPermisoPaginacionTodoOrdenCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoOrdenCompra() {
		return isPermisoPaginacionAltoOrdenCompra;
	}

	public void setIsPermisoPaginacionAltoOrdenCompra(Boolean isPermisoPaginacionAltoOrdenCompra) {
		this.isPermisoPaginacionAltoOrdenCompra = isPermisoPaginacionAltoOrdenCompra;
	}
	
	public Boolean getIsPermisoCopiarOrdenCompra() {
		return isPermisoCopiarOrdenCompra;
	}

	public void setIsPermisoCopiarOrdenCompra(Boolean isPermisoCopiarOrdenCompra) {
		this.isPermisoCopiarOrdenCompra = isPermisoCopiarOrdenCompra;
	}
	
	public Boolean getIsPermisoVerFormOrdenCompra() {
		return isPermisoVerFormOrdenCompra;
	}

	public void setIsPermisoVerFormOrdenCompra(Boolean isPermisoVerFormOrdenCompra) {
		this.isPermisoVerFormOrdenCompra = isPermisoVerFormOrdenCompra;
	}
	
	public Boolean getIsPermisoDuplicarOrdenCompra() {
		return isPermisoDuplicarOrdenCompra;
	}

	public void setIsPermisoDuplicarOrdenCompra(Boolean isPermisoDuplicarOrdenCompra) {
		this.isPermisoDuplicarOrdenCompra = isPermisoDuplicarOrdenCompra;
	}
	
	public Boolean getIsPermisoOrdenOrdenCompra() {
		return isPermisoOrdenOrdenCompra;
	}

	public void setIsPermisoOrdenOrdenCompra(Boolean isPermisoOrdenOrdenCompra) {
		this.isPermisoOrdenOrdenCompra = isPermisoOrdenOrdenCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoOrdenCompra() {
		return isVisibilidadCeldaNuevoOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoOrdenCompra(Boolean isVisibilidadCeldaNuevoOrdenCompra) {
		this.isVisibilidadCeldaNuevoOrdenCompra = isVisibilidadCeldaNuevoOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarOrdenCompra() {
		return isVisibilidadCeldaDuplicarOrdenCompra;
	}

	public void setIsVisibilidadCeldaDuplicarOrdenCompra(Boolean isVisibilidadCeldaDuplicarOrdenCompra) {
		this.isVisibilidadCeldaDuplicarOrdenCompra = isVisibilidadCeldaDuplicarOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarOrdenCompra() {
		return isVisibilidadCeldaCopiarOrdenCompra;
	}

	public void setIsVisibilidadCeldaCopiarOrdenCompra(Boolean isVisibilidadCeldaCopiarOrdenCompra) {
		this.isVisibilidadCeldaCopiarOrdenCompra = isVisibilidadCeldaCopiarOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormOrdenCompra() {
		return isVisibilidadCeldaVerFormOrdenCompra;
	}

	public void setIsVisibilidadCeldaVerFormOrdenCompra(Boolean isVisibilidadCeldaVerFormOrdenCompra) {
		this.isVisibilidadCeldaVerFormOrdenCompra = isVisibilidadCeldaVerFormOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenOrdenCompra() {
		return isVisibilidadCeldaOrdenOrdenCompra;
	}

	public void setIsVisibilidadCeldaOrdenOrdenCompra(Boolean isVisibilidadCeldaOrdenOrdenCompra) {
		this.isVisibilidadCeldaOrdenOrdenCompra = isVisibilidadCeldaOrdenOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesOrdenCompra() {
		return isVisibilidadCeldaNuevoRelacionesOrdenCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesOrdenCompra(Boolean isVisibilidadCeldaNuevoRelacionesOrdenCompra) {
		this.isVisibilidadCeldaNuevoRelacionesOrdenCompra = isVisibilidadCeldaNuevoRelacionesOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarOrdenCompra() {
		return isVisibilidadCeldaModificarOrdenCompra;
	}

	public void setIsVisibilidadCeldaModificarOrdenCompra(Boolean isVisibilidadCeldaModificarOrdenCompra) {
		this.isVisibilidadCeldaModificarOrdenCompra = isVisibilidadCeldaModificarOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarOrdenCompra() {
		return isVisibilidadCeldaActualizarOrdenCompra;
	}

	public void setIsVisibilidadCeldaActualizarOrdenCompra(Boolean isVisibilidadCeldaActualizarOrdenCompra) {
		this.isVisibilidadCeldaActualizarOrdenCompra = isVisibilidadCeldaActualizarOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarOrdenCompra() {
		return isVisibilidadCeldaEliminarOrdenCompra;
	}

	public void setIsVisibilidadCeldaEliminarOrdenCompra(Boolean isVisibilidadCeldaEliminarOrdenCompra) {
		this.isVisibilidadCeldaEliminarOrdenCompra = isVisibilidadCeldaEliminarOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarOrdenCompra() {
		return isVisibilidadCeldaCancelarOrdenCompra;
	}

	public void setIsVisibilidadCeldaCancelarOrdenCompra(Boolean isVisibilidadCeldaCancelarOrdenCompra) {
		this.isVisibilidadCeldaCancelarOrdenCompra = isVisibilidadCeldaCancelarOrdenCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarOrdenCompra() {
		return isVisibilidadCeldaGuardarOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarOrdenCompra(Boolean isVisibilidadCeldaGuardarOrdenCompra) {
		this.isVisibilidadCeldaGuardarOrdenCompra = isVisibilidadCeldaGuardarOrdenCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosOrdenCompra() {
		return isVisibilidadCeldaGuardarCambiosOrdenCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosOrdenCompra(Boolean isVisibilidadCeldaGuardarCambiosOrdenCompra) {
		this.isVisibilidadCeldaGuardarCambiosOrdenCompra = isVisibilidadCeldaGuardarCambiosOrdenCompra;
	}
		
	public OrdenCompraSessionBean getordencompraSessionBean() {
		return this.ordencompraSessionBean;
	}
	
	public void setordencompraSessionBean(OrdenCompraSessionBean ordencompraSessionBean) {
		this.ordencompraSessionBean=ordencompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoOrdenCompra() {
		return this.isVisibilidadFK_IdEstadoOrdenCompra;
	}

	public void setisVisibilidadFK_IdEstadoOrdenCompra(Boolean isVisibilidadFK_IdEstadoOrdenCompra) {
		this.isVisibilidadFK_IdEstadoOrdenCompra=isVisibilidadFK_IdEstadoOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdOrdenCompra() {
		return this.isVisibilidadFK_IdOrdenCompra;
	}

	public void setisVisibilidadFK_IdOrdenCompra(Boolean isVisibilidadFK_IdOrdenCompra) {
		this.isVisibilidadFK_IdOrdenCompra=isVisibilidadFK_IdOrdenCompra;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(OrdenCompra ordencompra)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(ordencompra,null);
				this.setActualParaGuardarSucursalForeignKey(ordencompra,null);
				this.setActualParaGuardarModuloForeignKey(ordencompra,null);
				this.setActualParaGuardarEjercicioForeignKey(ordencompra,null);
				this.setActualParaGuardarPeriodoForeignKey(ordencompra,null);
				this.setActualParaGuardarAnioForeignKey(ordencompra,null);
				this.setActualParaGuardarMesForeignKey(ordencompra,null);
				this.setActualParaGuardarUsuarioForeignKey(ordencompra,null);
				this.setActualParaGuardarMonedaForeignKey(ordencompra,null);
				this.setActualParaGuardarTipoCambioForeignKey(ordencompra,null);
				this.setActualParaGuardarEstadoOrdenCompraForeignKey(ordencompra,null);
				this.setActualParaGuardarClienteForeignKey(ordencompra,null);
				this.setActualParaGuardarFormatoForeignKey(ordencompra,null);
				this.setActualParaGuardarTransportistaForeignKey(ordencompra,null);
				this.setActualParaGuardarEmpleadoForeignKey(ordencompra,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(ordencompra,null);
				this.setActualParaGuardarOrdenCompraForeignKey(ordencompra,null);
				this.setActualParaGuardarAsientoContableForeignKey(ordencompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(OrdenCompra ordencompra,OrdenCompra ordencompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalOrdenCompra(ordencompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		ordencompraAux.setId(ordencompra.getId());
		ordencompraAux.setVersionRow(ordencompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessOrdenCompra();
		
			int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = ordencompraValidator.getInvalidValues(this.ordencompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			ordencompraLogic.setDatosCliente(datosCliente);
			ordencompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				ordencompraAux=new  OrdenCompra();
				
				ordencompraAux.setIsNew(true);
				ordencompraAux.setIsChanged(true);
				
				ordencompraAux.setOrdenCompraOriginal(this.ordencompra);
				
				ordencompraAux.setId(this.ordencompra.getId());	
				ordencompraAux.setVersionRow(this.ordencompra.getVersionRow());	
				ordencompraAux.setid_empresa(this.ordencompra.getid_empresa());	
				ordencompraAux.setid_sucursal(this.ordencompra.getid_sucursal());	
				ordencompraAux.setid_modulo(this.ordencompra.getid_modulo());	
				ordencompraAux.setid_ejercicio(this.ordencompra.getid_ejercicio());	
				ordencompraAux.setid_periodo(this.ordencompra.getid_periodo());	
				ordencompraAux.setid_anio(this.ordencompra.getid_anio());	
				ordencompraAux.setid_mes(this.ordencompra.getid_mes());	
				ordencompraAux.setid_usuario(this.ordencompra.getid_usuario());	
				ordencompraAux.setfecha_emision(this.ordencompra.getfecha_emision());	
				ordencompraAux.setfecha_entrega(this.ordencompra.getfecha_entrega());	
				ordencompraAux.setnumero_secuencial(this.ordencompra.getnumero_secuencial());	
				ordencompraAux.setid_moneda(this.ordencompra.getid_moneda());	
				
				if(this.ordencompra.getid_tipo_cambio()!=null && this.ordencompra.getid_tipo_cambio()>0L) {
					ordencompraAux.setid_tipo_cambio(this.ordencompra.getid_tipo_cambio());
				} else {
					ordencompraAux.setid_tipo_cambio(null);
				}	
				ordencompraAux.setid_estado_orden_compra(this.ordencompra.getid_estado_orden_compra());	
				ordencompraAux.setid_cliente(this.ordencompra.getid_cliente());	
				ordencompraAux.setid_formato(this.ordencompra.getid_formato());	
				
				if(this.ordencompra.getid_transportista()!=null && this.ordencompra.getid_transportista()>0L) {
					ordencompraAux.setid_transportista(this.ordencompra.getid_transportista());
				} else {
					ordencompraAux.setid_transportista(null);
				}	
				ordencompraAux.setid_empleado(this.ordencompra.getid_empleado());	
				ordencompraAux.setdescripcion(this.ordencompra.getdescripcion());	
				ordencompraAux.setporcentaje_descuento(this.ordencompra.getporcentaje_descuento());	
				ordencompraAux.setsuman(this.ordencompra.getsuman());	
				ordencompraAux.setice(this.ordencompra.getice());	
				ordencompraAux.setvalor_descuento(this.ordencompra.getvalor_descuento());	
				ordencompraAux.settotal_descuento(this.ordencompra.gettotal_descuento());	
				ordencompraAux.setiva(this.ordencompra.getiva());	
				ordencompraAux.setstock(this.ordencompra.getstock());	
				ordencompraAux.setsub_total(this.ordencompra.getsub_total());	
				ordencompraAux.settotal_otro(this.ordencompra.gettotal_otro());	
				ordencompraAux.setultimo_costo(this.ordencompra.getultimo_costo());	
				ordencompraAux.setnumero_items(this.ordencompra.getnumero_items());	
				ordencompraAux.setretencion(this.ordencompra.getretencion());	
				ordencompraAux.settotal(this.ordencompra.gettotal());	
				ordencompraAux.setflete(this.ordencompra.getflete());	
				ordencompraAux.setimpuesto(this.ordencompra.getimpuesto());	
				ordencompraAux.setid_tipo_transaccion_modulo(this.ordencompra.getid_tipo_transaccion_modulo());	
				ordencompraAux.setid_orden_compra(this.ordencompra.getid_orden_compra());	
				ordencompraAux.setid_asiento_contable(this.ordencompra.getid_asiento_contable());	
				ordencompraAux.setnumero_comprobante(this.ordencompra.getnumero_comprobante());	
				ordencompraAux.setfecha(this.ordencompra.getfecha());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.ordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(ordencompraAux,ordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.ordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.saveOrdenCompras();//WithConnection
						//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);
					
					this.refrescarForeignKeysDescripcionesOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras().addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras.addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								ordencompraLogic.saveOrdenCompraRelaciones(ordencompraAux,this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());//WithConnection
								//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras= new ArrayList<DetalleOrdenCompra>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();}
							ordencompraAux.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.ordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(ordencompraAux,ordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				ordencompraAux=new  OrdenCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.ordencompraSessionBean.getEsGuardarRelacionado() 
					|| (this.ordencompraSessionBean.getEsGuardarRelacionado() && this.ordencompra.getId()>=0)) {
						
					ordencompraAux.setIsNew(false);
				}
				
				ordencompraAux.setIsDeleted(false);
			
				ordencompraAux.setId(this.ordencompra.getId());	
				ordencompraAux.setVersionRow(this.ordencompra.getVersionRow());	
				ordencompraAux.setid_empresa(this.ordencompra.getid_empresa());	
				ordencompraAux.setid_sucursal(this.ordencompra.getid_sucursal());	
				ordencompraAux.setid_modulo(this.ordencompra.getid_modulo());	
				ordencompraAux.setid_ejercicio(this.ordencompra.getid_ejercicio());	
				ordencompraAux.setid_periodo(this.ordencompra.getid_periodo());	
				ordencompraAux.setid_anio(this.ordencompra.getid_anio());	
				ordencompraAux.setid_mes(this.ordencompra.getid_mes());	
				ordencompraAux.setid_usuario(this.ordencompra.getid_usuario());	
				ordencompraAux.setfecha_emision(this.ordencompra.getfecha_emision());	
				ordencompraAux.setfecha_entrega(this.ordencompra.getfecha_entrega());	
				ordencompraAux.setnumero_secuencial(this.ordencompra.getnumero_secuencial());	
				ordencompraAux.setid_moneda(this.ordencompra.getid_moneda());	
				
				if(this.ordencompra.getid_tipo_cambio()!=null && this.ordencompra.getid_tipo_cambio()>0L) {
					ordencompraAux.setid_tipo_cambio(this.ordencompra.getid_tipo_cambio());
				} else {
					ordencompraAux.setid_tipo_cambio(null);
				}	
				ordencompraAux.setid_estado_orden_compra(this.ordencompra.getid_estado_orden_compra());	
				ordencompraAux.setid_cliente(this.ordencompra.getid_cliente());	
				ordencompraAux.setid_formato(this.ordencompra.getid_formato());	
				
				if(this.ordencompra.getid_transportista()!=null && this.ordencompra.getid_transportista()>0L) {
					ordencompraAux.setid_transportista(this.ordencompra.getid_transportista());
				} else {
					ordencompraAux.setid_transportista(null);
				}	
				ordencompraAux.setid_empleado(this.ordencompra.getid_empleado());	
				ordencompraAux.setdescripcion(this.ordencompra.getdescripcion());	
				ordencompraAux.setporcentaje_descuento(this.ordencompra.getporcentaje_descuento());	
				ordencompraAux.setsuman(this.ordencompra.getsuman());	
				ordencompraAux.setice(this.ordencompra.getice());	
				ordencompraAux.setvalor_descuento(this.ordencompra.getvalor_descuento());	
				ordencompraAux.settotal_descuento(this.ordencompra.gettotal_descuento());	
				ordencompraAux.setiva(this.ordencompra.getiva());	
				ordencompraAux.setstock(this.ordencompra.getstock());	
				ordencompraAux.setsub_total(this.ordencompra.getsub_total());	
				ordencompraAux.settotal_otro(this.ordencompra.gettotal_otro());	
				ordencompraAux.setultimo_costo(this.ordencompra.getultimo_costo());	
				ordencompraAux.setnumero_items(this.ordencompra.getnumero_items());	
				ordencompraAux.setretencion(this.ordencompra.getretencion());	
				ordencompraAux.settotal(this.ordencompra.gettotal());	
				ordencompraAux.setflete(this.ordencompra.getflete());	
				ordencompraAux.setimpuesto(this.ordencompra.getimpuesto());	
				ordencompraAux.setid_tipo_transaccion_modulo(this.ordencompra.getid_tipo_transaccion_modulo());	
				ordencompraAux.setid_orden_compra(this.ordencompra.getid_orden_compra());	
				ordencompraAux.setid_asiento_contable(this.ordencompra.getid_asiento_contable());	
				ordencompraAux.setnumero_comprobante(this.ordencompra.getnumero_comprobante());	
				ordencompraAux.setfecha(this.ordencompra.getfecha());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(ordencompraAux,ordencompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.ordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.saveOrdenCompras();//WithConnection
						//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);
					
					this.refrescarForeignKeysDescripcionesOrdenCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras().addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras.addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								ordencompraLogic.saveOrdenCompraRelaciones(ordencompraAux,this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());//WithConnection
								//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras= new ArrayList<DetalleOrdenCompra>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();}
							ordencompraAux.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.ordencompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(ordencompraAux,ordencompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.ordencompra,ordencompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				ordencompraAux=new  OrdenCompra();
				
				ordencompraAux.setIsNew(false);
				ordencompraAux.setIsChanged(false);
				
				ordencompraAux.setIsDeleted(true);
				
				ordencompraAux.setId(this.ordencompra.getId());	
				ordencompraAux.setVersionRow(this.ordencompra.getVersionRow());	
				ordencompraAux.setid_empresa(this.ordencompra.getid_empresa());	
				ordencompraAux.setid_sucursal(this.ordencompra.getid_sucursal());	
				ordencompraAux.setid_modulo(this.ordencompra.getid_modulo());	
				ordencompraAux.setid_ejercicio(this.ordencompra.getid_ejercicio());	
				ordencompraAux.setid_periodo(this.ordencompra.getid_periodo());	
				ordencompraAux.setid_anio(this.ordencompra.getid_anio());	
				ordencompraAux.setid_mes(this.ordencompra.getid_mes());	
				ordencompraAux.setid_usuario(this.ordencompra.getid_usuario());	
				ordencompraAux.setfecha_emision(this.ordencompra.getfecha_emision());	
				ordencompraAux.setfecha_entrega(this.ordencompra.getfecha_entrega());	
				ordencompraAux.setnumero_secuencial(this.ordencompra.getnumero_secuencial());	
				ordencompraAux.setid_moneda(this.ordencompra.getid_moneda());	
				
				if(this.ordencompra.getid_tipo_cambio()!=null && this.ordencompra.getid_tipo_cambio()>0L) {
					ordencompraAux.setid_tipo_cambio(this.ordencompra.getid_tipo_cambio());
				} else {
					ordencompraAux.setid_tipo_cambio(null);
				}	
				ordencompraAux.setid_estado_orden_compra(this.ordencompra.getid_estado_orden_compra());	
				ordencompraAux.setid_cliente(this.ordencompra.getid_cliente());	
				ordencompraAux.setid_formato(this.ordencompra.getid_formato());	
				
				if(this.ordencompra.getid_transportista()!=null && this.ordencompra.getid_transportista()>0L) {
					ordencompraAux.setid_transportista(this.ordencompra.getid_transportista());
				} else {
					ordencompraAux.setid_transportista(null);
				}	
				ordencompraAux.setid_empleado(this.ordencompra.getid_empleado());	
				ordencompraAux.setdescripcion(this.ordencompra.getdescripcion());	
				ordencompraAux.setporcentaje_descuento(this.ordencompra.getporcentaje_descuento());	
				ordencompraAux.setsuman(this.ordencompra.getsuman());	
				ordencompraAux.setice(this.ordencompra.getice());	
				ordencompraAux.setvalor_descuento(this.ordencompra.getvalor_descuento());	
				ordencompraAux.settotal_descuento(this.ordencompra.gettotal_descuento());	
				ordencompraAux.setiva(this.ordencompra.getiva());	
				ordencompraAux.setstock(this.ordencompra.getstock());	
				ordencompraAux.setsub_total(this.ordencompra.getsub_total());	
				ordencompraAux.settotal_otro(this.ordencompra.gettotal_otro());	
				ordencompraAux.setultimo_costo(this.ordencompra.getultimo_costo());	
				ordencompraAux.setnumero_items(this.ordencompra.getnumero_items());	
				ordencompraAux.setretencion(this.ordencompra.getretencion());	
				ordencompraAux.settotal(this.ordencompra.gettotal());	
				ordencompraAux.setflete(this.ordencompra.getflete());	
				ordencompraAux.setimpuesto(this.ordencompra.getimpuesto());	
				ordencompraAux.setid_tipo_transaccion_modulo(this.ordencompra.getid_tipo_transaccion_modulo());	
				ordencompraAux.setid_orden_compra(this.ordencompra.getid_orden_compra());	
				ordencompraAux.setid_asiento_contable(this.ordencompra.getid_asiento_contable());	
				ordencompraAux.setnumero_comprobante(this.ordencompra.getnumero_comprobante());	
				ordencompraAux.setfecha(this.ordencompra.getfecha());	
				
				if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.ordencompraAux.getId()>=0) {	
						this.ordencomprasEliminados.add(ordencompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(ordencompraAux,ordencompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.ordencompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.saveOrdenCompras();//WithConnection
						//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras().addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras.addAll(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencomprasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								ordencompraLogic.saveOrdenCompraRelaciones(ordencompraAux,this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());//WithConnection
								//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.setDetalleOrdenCompras(new ArrayList<DetalleOrdenCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras= new ArrayList<DetalleOrdenCompra>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.quitarFilaTotales();}
							ordencompraAux.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.ordencompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(ordencompraAux,ordencompraLogic.getOrdenCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(ordencompraAux,ordencompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getOrdenCompras().addAll(this.ordencomprasEliminados);
					
					ordencompraLogic.saveOrdenCompras();//WithConnection
					//ordencompraLogic.getSetVersionRowOrdenCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesOrdenCompra();
				
				this.ordencomprasEliminados= new ArrayList<OrdenCompra>();		
			}
			
			if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
			//ACTUALIZA ARBOL
			this.getTodosOrdenCompraArbol();
			
			//TO_OPTIMIZE POR TIPO FK NO TODOS
			this.inicializarCombosForeignKeyOrdenCompraListas();
			
			this.cargarCombosForeignKeyOrdenCompra(false);
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"OrdenCompra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.ordencompra=ordencompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessOrdenCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(OrdenCompra ordencompraLocal) throws Exception {
		
		if(this.ordencompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				ordencompraLocal.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());
			
			} else {
			
				ordencompraLocal.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompras);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(OrdenCompra ordencompraLocal) throws Exception {	
		if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				ordencompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				ordencompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				ordencompraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				ordencompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				ordencompraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				ordencompraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				ordencompraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				ordencompraLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				ordencompraLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				ordencompraLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoOrdenCompraDetalleFormJInternalFrame.class)) {
				EstadoOrdenCompraBeanSwingJInternalFrame estadoordencompraBeanSwingJInternalFrameLocal=(EstadoOrdenCompraBeanSwingJInternalFrame) ((EstadoOrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoOrdenCompra(estadoordencompraBeanSwingJInternalFrameLocal.getestadoordencompra(),true);
				estadoordencompraBeanSwingJInternalFrameLocal.actualizarLista(estadoordencompraBeanSwingJInternalFrameLocal.estadoordencompra,this.estadoordencomprasForeignKey);

				estadoordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoordencompraBeanSwingJInternalFrameLocal.estadoordencompra);

				ordencompraLocal.setEstadoOrdenCompra(estadoordencompraBeanSwingJInternalFrameLocal.estadoordencompra);

				this.addItemDefectoCombosForeignKeyEstadoOrdenCompra();
				this.cargarCombosFrameEstadoOrdenComprasForeignKey("Formulario");
				this.setActualEstadoOrdenCompraForeignKey(estadoordencompraBeanSwingJInternalFrameLocal.estadoordencompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				ordencompraLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				ordencompraLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				ordencompraLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				ordencompraLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				ordencompraLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(OrdenCompraDetalleFormJInternalFrame.class)) {
				OrdenCompraBeanSwingJInternalFrame ordencompraBeanSwingJInternalFrameLocal=(OrdenCompraBeanSwingJInternalFrame) ((OrdenCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ordencompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.getordencompra(),true);
				ordencompraBeanSwingJInternalFrameLocal.actualizarLista(ordencompraBeanSwingJInternalFrameLocal.ordencompra,this.ordencomprasForeignKey);

				ordencompraBeanSwingJInternalFrameLocal.actualizarRelaciones(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				ordencompraLocal.setOrdenCompra(ordencompraBeanSwingJInternalFrameLocal.ordencompra);

				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey("Formulario");
				this.setActualOrdenCompraForeignKey(ordencompraBeanSwingJInternalFrameLocal.ordencompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				ordencompraLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarOrdenCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = ordencompraValidator.getInvalidValues(this.ordencompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(OrdenCompra ordencompra,List<OrdenCompra> ordencompras) throws Exception {
		try	{		
			OrdenCompraConstantesFunciones.actualizarLista(ordencompra,ordencompras,this.ordencompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(OrdenCompra ordencompra,List<OrdenCompra> ordencompras) throws Exception {
		try	{			
			OrdenCompraConstantesFunciones.actualizarSelectedLista(ordencompra,ordencompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<OrdenCompra> ordencomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ordencomprasLocal=this.ordencompraLogic.getOrdenCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ordencomprasLocal=this.ordencompras;
			}
			//ARCHITECTURE
		
			for(OrdenCompra ordencompraLocal:ordencomprasLocal) {
				if(this.permiteMantenimiento(ordencompraLocal) && ordencompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+OrdenCompraConstantesFunciones.getOrdenCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_empresaOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_sucursalOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_moduloOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_ejercicioOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_periodoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_anioOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_mesOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_usuarioOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_emisionOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_entregaOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_secuencialOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_monedaOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_tipo_cambioOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDESTADOORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_estado_orden_compraOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_clienteOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_formatoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_transportistaOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_empleadoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeldescripcionOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.PORCENTAJEDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelporcentaje_descuentoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelsumanOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeliceOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.VALORDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelvalor_descuentoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.TOTALDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_descuentoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelivaOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.STOCK)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelstockOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelsub_totalOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.TOTALOTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_otroOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.ULTIMOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelultimo_costoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.NUMEROITEMS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_itemsOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.RETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelretencionOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotalOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfleteOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelimpuestoOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_tipo_transaccion_moduloOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_orden_compraOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_asiento_contableOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_comprobanteOrdenCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(OrdenCompraConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfechaOrdenCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_empresaOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_sucursalOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_moduloOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_ejercicioOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_periodoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_anioOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_mesOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_usuarioOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_emisionOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_entregaOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_secuencialOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_monedaOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_tipo_cambioOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_estado_orden_compraOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_clienteOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_formatoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_transportistaOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_empleadoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabeldescripcionOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelporcentaje_descuentoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelsumanOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabeliceOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelvalor_descuentoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_descuentoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelivaOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelstockOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelsub_totalOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_otroOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelultimo_costoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_itemsOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelretencionOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotalOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelfleteOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelimpuestoOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_tipo_transaccion_moduloOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_orden_compraOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelid_asiento_contableOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_comprobanteOrdenCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormOrdenCompra.jLabelfechaOrdenCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetalleOrdenCompra")) {
			if(this.ordencompra==null) {
				this.ordencompra= new OrdenCompra();
			}

			if(this.ordencompraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoOrdenCompra
				this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.getdetalleordencompra().setOrdenCompra(this.ordencompra);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoOrdenCompra--;	
		
		
		this.ordencompraAux=new OrdenCompra();
		
		this.ordencompraAux.setId(this.iIdNuevoOrdenCompra);
		this.ordencompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.ordencompraLogic.getOrdenCompras().add(this.ordencompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.ordencompras.add(this.ordencompraAux);
		}
		//ARCHITECTURE
		
		this.ordencompra=this.ordencompraAux;
		
		if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioOrdenCompra(this.ordencompra);
			this.setVariablesObjetoActualToFormularioForeignKeyOrdenCompra(this.ordencompra);
		}
				
		//this.setDefaultControlesOrdenCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyOrdenCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyOrdenCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualOrdenCompra(this.ordencompraBean,this.ordencompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(OrdenCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
			classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.ordencompraReturnGeneral=ordencompraLogic.procesarEventosOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.ordencompraLogic.getOrdenCompras(),this.ordencompra,this.ordencompraParameterGeneral,this.isEsNuevoOrdenCompra,classes);//this.ordencompraLogic.getOrdenCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanOrdenCompra(this.ordencompraReturnGeneral,this.ordencompraBean,false);
		
		if(this.ordencompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra());
		}
		
		if(this.ordencompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra(),classes);//this.ordencompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyOrdenCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyOrdenCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			OrdenCompraBeanSwingJInternalFrameAdditional.RecargarFormOrdenCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingOrdenCompra(false);
						
			if(ordencompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.getEsGuardarRelacionado() && DetalleOrdenCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleOrdenCompraActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualOrdenCompra();
			}
			
			this.actualizarVisualTableDatosOrdenCompra();
			
			this.jTableDatosOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoOrdenCompra(), this.getIndiceNuevoOrdenCompra());
			
			this.seleccionarFilaTablaOrdenCompraActual();
						
			this.actualizarEstadoCeldasBotonesOrdenCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesOrdenCompra(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarfecha_emisionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarfecha_entregaOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarnumero_secuencialOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activardescripcionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarporcentaje_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarsumanOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activariceOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarvalor_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activartotal_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarivaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarstockOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarsub_totalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activartotal_otroOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarultimo_costoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarnumero_itemsOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarretencionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activartotalOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldfleteOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarfleteOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldimpuestoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarimpuestoOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_comprobanteOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarnumero_comprobanteOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfechaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarfechaOrdenCompra);	
		//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_empresaOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_sucursalOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_moduloOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_ejercicioOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_periodoOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_anioOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_mesOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_usuarioOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_monedaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_tipo_cambioOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_estado_orden_compraOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_clienteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_formatoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_transportistaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_empleadoOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_tipo_transaccion_moduloOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_orden_compraOrdenCompra);//
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setEnabled(isHabilitar && this.ordencompraConstantesFunciones.activarid_asiento_contableOrdenCompra);
	};
	
	public void setDefaultControlesOrdenCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoOrdenCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.ordencompraSessionBean.setConGuardarRelaciones(true);			
			this.ordencompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.ordencompraSessionBean.setConGuardarRelaciones(false);			
			this.ordencompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoOrdenCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
				if(ordencompraAux.getId().equals(this.iIdNuevoOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(OrdenCompra ordencompraAux:this.ordencompras) {
				if(ordencompraAux.getId().equals(this.iIdNuevoOrdenCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualOrdenCompra(OrdenCompra ordencompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
				if(ordencompraAux.getId().equals(ordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(OrdenCompra ordencompraAux:this.ordencompras) {
				if(ordencompraAux.getId().equals(ordencompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalOrdenCompra(OrdenCompra ordencompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
				if(ordencompraAux.getOrdenCompraOriginal().getId().equals(ordencompraOriginal.getId())) {
					existe=true;
					ordencompraOriginal.setId(ordencompraAux.getId());
					ordencompraOriginal.setVersionRow(ordencompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(OrdenCompra ordencompraAux:this.ordencompras) {
				if(ordencompraAux.getOrdenCompraOriginal().getId().equals(ordencompraOriginal.getId())) {
					existe=true;
					ordencompraOriginal.setId(ordencompraAux.getId());
					ordencompraOriginal.setVersionRow(ordencompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosOrdenCompra(Boolean esParaCancelar) throws Exception {
		ordencomprasAux=new ArrayList<OrdenCompra>();
		ordencompraAux=new OrdenCompra();
		
		if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
					if(ordencompraAux.getId()<0) {
						ordencomprasAux.add(ordencompraAux);
					}		
				}
				this.iIdNuevoOrdenCompra=0L;
				this.ordencompraLogic.getOrdenCompras().removeAll(ordencomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(OrdenCompra ordencompraAux:this.ordencompras) {
					if(ordencompraAux.getId()<0) {
						ordencomprasAux.add(ordencompraAux);
					}		
				}
				this.iIdNuevoOrdenCompra=0L;
				this.ordencompras.removeAll(ordencomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoOrdenCompra 
					&& this.ordencompraLogic.getOrdenCompras().size()>0
					) {
					ordencompraAux=this.ordencompraLogic.getOrdenCompras().get(this.ordencompraLogic.getOrdenCompras().size() - 1);
				
					if(ordencompraAux.getId()<0) {
						this.ordencompraLogic.getOrdenCompras().remove(ordencompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoOrdenCompra && this.ordencompras.size()>0) {
					ordencompraAux=this.ordencompras.get(this.ordencompras.size() - 1);
				
					if(ordencompraAux.getId()<0) {
						this.ordencompras.remove(ordencompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoOrdenCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(ordencompra.getId()<0) {
				this.ordencompraLogic.getOrdenCompras().remove(this.ordencompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(ordencompra.getId()<0) {
				this.ordencompras.remove(this.ordencompra);
			}
		}			
	}
	
	public void setEstadosInicialesOrdenCompra(List<OrdenCompra> ordencomprasAux) throws Exception {
		OrdenCompraConstantesFunciones.setEstadosInicialesOrdenCompra(ordencomprasAux);
	}
	
	public void setEstadosInicialesOrdenCompra(OrdenCompra ordencompraAux) throws Exception {
		OrdenCompraConstantesFunciones.setEstadosInicialesOrdenCompra(ordencompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarOrdenCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarOrdenCompraActual()) {
				if(!this.isEsNuevoOrdenCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoOrdenCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarOrdenCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA OrdenCompra ?", "MANTENIMIENTO DE OrdenCompra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(OrdenCompra ordencompra) throws Exception {
		OrdenCompraConstantesFunciones.seleccionarAsignar(this.ordencompra,ordencompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarOrdenCompra=this.isPermisoActualizarOriginalOrdenCompra;
			
			
			this.seleccionarAsignar(ordencompra);
			
			

			idTipoCambioActual=ordencompra.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idClienteActual=ordencompra.getid_cliente();
			this.seleccionarClienteActual();

			idEmpleadoActual=ordencompra.getid_empleado();
			this.seleccionarEmpleadoActual();

			idAsientoContableActual=ordencompra.getid_asiento_contable();
			this.seleccionarAsientoContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			OrdenCompraConstantesFunciones.quitarEspaciosOrdenCompra(this.ordencompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.ordencompraSessionBean.setsFuncionBusquedaRapida(this.ordencompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoOrdenCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosOrdenCompra(esParaCancelar);				
				this.cancelarNuevoOrdenCompra(esParaCancelar);								
			}
			
			this.ordencompra=new OrdenCompra();
			
			this.inicializarOrdenCompra();
			
			this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarOrdenCompra() throws Exception {
		try {
			OrdenCompraConstantesFunciones.inicializarOrdenCompra(this.ordencompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.ordencompraLogic.getOrdenCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteOrdenCompras(String sAccionBusqueda,List<OrdenCompra> ordencomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="OrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="OrdenCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("OrdenCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="OrdenCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  OrdenCompras");		
		parameters.put("busquedapor", OrdenCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetalleOrdenCompra.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					OrdenCompraLogic ordencompraLogicAuxiliar=new OrdenCompraLogic();
					ordencompraLogicAuxiliar.setDatosCliente(ordencompraLogic.getDatosCliente());				
					ordencompraLogicAuxiliar.setOrdenCompras(ordencomprasParaReportes);
					
					ordencompraLogicAuxiliar.cargarRelacionesLoteForeignKeyOrdenCompraWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					ordencomprasParaReportes=ordencompraLogicAuxiliar.getOrdenCompras();
					
					//ordencompraLogic.getNewConnexionToDeep();
					
					//for (OrdenCompra ordencompra:ordencomprasParaReportes) {
					//	ordencompraLogic.deepLoad(ordencompra, false, DeepLoadType.INCLUDE, classes);
					//}						
					//ordencompraLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//ordencompraLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetalleOrdenCompra = AuxiliarReportes.class.getResourceAsStream("DetalleOrdenCompraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleordencompra", reportFileDetalleOrdenCompra);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceOrdenCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			OrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			OrdenCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceOrdenCompra=new JRBeanArrayDataSource(OrdenCompraJInternalFrame.TraerOrdenCompraBeans(ordencomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceOrdenCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+OrdenCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+OrdenCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(OrdenCompraBean.TraerOrdenCompraBeans(ordencomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoOrdenCompraActionPerformed(null);
					//this.generarExcelReporteOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesOrdenCompras(sAccionBusqueda,sTipoArchivoReporte,ordencomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<OrdenCompra> ordencomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("OrdenCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderOrdenCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(OrdenCompra ordencompra : ordencomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			OrdenCompraConstantesFunciones.generarExcelReporteDataOrdenCompra("NORMAL",row,workbook,ordencompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderOrdenCompra(String sTipo,Row row,Workbook workbook) {
		
		OrdenCompraConstantesFunciones.generarExcelReporteHeaderOrdenCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<OrdenCompra> ordencomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("OrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(OrdenCompra ordencompra : ordencomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getestadoordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettransportista_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getporcentaje_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getvalor_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettotal_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_STOCK))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_STOCK);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getstock());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getsub_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettotal_otro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getultimo_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getnumero_items());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_RETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_RETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getretencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getimpuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getordencompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getnumero_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(OrdenCompraConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(ordencompra.getfecha());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesOrdenCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<OrdenCompra> ordencomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<OrdenCompra> ordencomprasRespaldo=null;
		
		classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.ordencompraLogic.setDatosCliente(this.datosCliente);
		this.ordencompraLogic.setDatosDeep(this.datosDeep);
		this.ordencompraLogic.setIsConDeep(true);
		
		ordencomprasRespaldo=this.ordencompraLogic.getOrdenCompras();
		
		this.ordencompraLogic.setOrdenCompras(ordencomprasParaReportes);	
		this.ordencompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		ordencomprasParaReportes=this.ordencompraLogic.getOrdenCompras();
		this.ordencompraLogic.setOrdenCompras(ordencomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("OrdenCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderOrdenCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(OrdenCompra ordencompra : ordencomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderOrdenCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			OrdenCompraConstantesFunciones.generarExcelReporteDataOrdenCompra("NORMAL",row,workbook,ordencompra,cellStyleDataAux);
		
			
			


				//DetalleOrdenCompra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO))) {

				if(ordencompra.getDetalleOrdenCompras()!=null && ordencompra.getDetalleOrdenCompras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleOrdenCompraConstantesFunciones.generarExcelReporteHeaderDetalleOrdenCompra("RELACIONADO",row,workbook);
				}

				if(ordencompra.getDetalleOrdenCompras()!=null) {
					i2=0;
					for(DetalleOrdenCompra detalleordencompra : ordencompra.getDetalleOrdenCompras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleOrdenCompraConstantesFunciones.generarExcelReporteDataDetalleOrdenCompra("RELACIONADO",row,workbook,detalleordencompra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(OrdenCompraConstantesFunciones.getOrdenCompraDescripcion(ordencompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoOrdenCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessOrdenCompra() throws Exception {		
		this.startProcessOrdenCompra(true);
	}
	
	public void startProcessOrdenCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasOrdenCompra ,this.jPanelParametrosReportesOrdenCompra, this.jScrollPanelDatosOrdenCompra,this.jPanelPaginacionOrdenCompra, this.jScrollPanelDatosEdicionOrdenCompra, this.jPanelAccionesOrdenCompra,this.jPanelAccionesFormularioOrdenCompra,this.jmenuBarOrdenCompra,this.jmenuBarDetalleOrdenCompra,this.jTtoolBarOrdenCompra,this.jTtoolBarDetalleOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasOrdenCompra=this.jTabbedPaneBusquedasOrdenCompra; 
		
		final JPanel jPanelParametrosReportesOrdenCompra=this.jPanelParametrosReportesOrdenCompra;
		//final JScrollPane jScrollPanelDatosOrdenCompra=this.jScrollPanelDatosOrdenCompra;
		final JTable jTableDatosOrdenCompra=this.jTableDatosOrdenCompra;		
		final JPanel jPanelPaginacionOrdenCompra=this.jPanelPaginacionOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionOrdenCompra=this.jScrollPanelDatosEdicionOrdenCompra;
		final JPanel jPanelAccionesOrdenCompra=this.jPanelAccionesOrdenCompra;
		
		JPanel jPanelCamposAuxiliarOrdenCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarOrdenCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			jPanelCamposAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jPanelCamposOrdenCompra;
			jPanelAccionesFormularioAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jPanelAccionesFormularioOrdenCompra;
		}
		
		final JPanel jPanelCamposOrdenCompra=jPanelCamposAuxiliarOrdenCompra;
		final JPanel jPanelAccionesFormularioOrdenCompra=jPanelAccionesFormularioAuxiliarOrdenCompra;
		
		
		final JMenuBar jmenuBarOrdenCompra=this.jmenuBarOrdenCompra;
		final JToolBar jTtoolBarOrdenCompra=this.jTtoolBarOrdenCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarOrdenCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarOrdenCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			jmenuBarDetalleAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jmenuBarDetalleOrdenCompra;
			jTtoolBarDetalleAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jTtoolBarDetalleOrdenCompra;
		}
		
		final JMenuBar jmenuBarDetalleOrdenCompra=jmenuBarDetalleAuxiliarOrdenCompra;
		final JToolBar jTtoolBarDetalleOrdenCompra=jTtoolBarDetalleAuxiliarOrdenCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesOrdenCompra;
			processRunnable.jTableDatos=jTableDatosOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasOrdenCompra ,jPanelParametrosReportesOrdenCompra,jTableDatosOrdenCompra, /*jScrollPanelDatosOrdenCompra,*/jPanelCamposOrdenCompra,jPanelPaginacionOrdenCompra, /*jScrollPanelDatosEdicionOrdenCompra,*/ jPanelAccionesOrdenCompra,jPanelAccionesFormularioOrdenCompra,jmenuBarOrdenCompra,jmenuBarDetalleOrdenCompra,jTtoolBarOrdenCompra,jTtoolBarDetalleOrdenCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasOrdenCompra ,jPanelParametrosReportesOrdenCompra, jScrollPanelDatosOrdenCompra,jPanelPaginacionOrdenCompra, jScrollPanelDatosEdicionOrdenCompra, jPanelAccionesOrdenCompra,jPanelAccionesFormularioOrdenCompra,jmenuBarOrdenCompra,jmenuBarDetalleOrdenCompra,jTtoolBarOrdenCompra,jTtoolBarDetalleOrdenCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessOrdenCompra() {// throws Exception 
		this.finishProcessOrdenCompra(true);
	}
	
	public void finishProcessOrdenCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasOrdenCompra ,this.jPanelParametrosReportesOrdenCompra, this.jScrollPanelDatosOrdenCompra,this.jPanelPaginacionOrdenCompra, this.jScrollPanelDatosEdicionOrdenCompra, this.jPanelAccionesOrdenCompra,this.jPanelAccionesFormularioOrdenCompra,this.jmenuBarOrdenCompra,this.jmenuBarDetalleOrdenCompra,this.jTtoolBarOrdenCompra,this.jTtoolBarDetalleOrdenCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasOrdenCompra=this.jTabbedPaneBusquedasOrdenCompra; 
		
		final JPanel jPanelParametrosReportesOrdenCompra=this.jPanelParametrosReportesOrdenCompra;
		//final JScrollPane jScrollPanelDatosOrdenCompra=this.jScrollPanelDatosOrdenCompra;
		final JTable jTableDatosOrdenCompra=this.jTableDatosOrdenCompra;		
		final JPanel jPanelPaginacionOrdenCompra=this.jPanelPaginacionOrdenCompra;
		//final JScrollPane jScrollPanelDatosEdicionOrdenCompra=this.jScrollPanelDatosEdicionOrdenCompra;
		final JPanel jPanelAccionesOrdenCompra=this.jPanelAccionesOrdenCompra;
		
		JPanel jPanelCamposAuxiliarOrdenCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarOrdenCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			jPanelCamposAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jPanelCamposOrdenCompra;
			jPanelAccionesFormularioAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jPanelAccionesFormularioOrdenCompra;
		}
		
		final JPanel jPanelCamposOrdenCompra=jPanelCamposAuxiliarOrdenCompra;
		final JPanel jPanelAccionesFormularioOrdenCompra=jPanelAccionesFormularioAuxiliarOrdenCompra;
		
		
		final JMenuBar jmenuBarOrdenCompra=this.jmenuBarOrdenCompra;		
		final JToolBar jTtoolBarOrdenCompra=this.jTtoolBarOrdenCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarOrdenCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarOrdenCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			jmenuBarDetalleAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jmenuBarDetalleOrdenCompra;
			jTtoolBarDetalleAuxiliarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jTtoolBarDetalleOrdenCompra;		
		}
		
		final JMenuBar jmenuBarDetalleOrdenCompra=jmenuBarDetalleAuxiliarOrdenCompra;
		final JToolBar jTtoolBarDetalleOrdenCompra=jTtoolBarDetalleAuxiliarOrdenCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasOrdenCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesOrdenCompra;
			processRunnable.jTableDatos=jTableDatosOrdenCompra;
			processRunnable.jPanelCampos=jPanelCamposOrdenCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionOrdenCompra;
			processRunnable.jPanelAcciones=jPanelAccionesOrdenCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioOrdenCompra;
			
			
			processRunnable.jmenuBar=jmenuBarOrdenCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleOrdenCompra;
			processRunnable.jTtoolBar=jTtoolBarOrdenCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleOrdenCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasOrdenCompra ,jPanelParametrosReportesOrdenCompra, jTableDatosOrdenCompra,/*jScrollPanelDatosOrdenCompra,*/jPanelCamposOrdenCompra,jPanelPaginacionOrdenCompra, /*jScrollPanelDatosEdicionOrdenCompra,*/ jPanelAccionesOrdenCompra,jPanelAccionesFormularioOrdenCompra,jmenuBarOrdenCompra,jmenuBarDetalleOrdenCompra,jTtoolBarOrdenCompra,jTtoolBarDetalleOrdenCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarOrdenCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuOrdenCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleOrdenCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuOrdenCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarOrdenCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleOrdenCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	public void getTodosOrdenCompraArbol() throws Exception {	
		ArrayList<String> arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral);
		
		String  finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);
		
		this.pagination=new Pagination();
		
		this.pagination.setiFirstResult(-1);
		this.pagination.setiMaxResults(-1);
		
		this.cargarDatosCliente();
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			ordencompraLogic.getTodosOrdenCompras(finalQueryGlobal+"",this.pagination);//WithConnection
			this.ordencomprasArbol=ordencompraLogic.getOrdenCompras();
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
	}
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.ordencompraConstantesFunciones.getsFinalQueryOrdenCompra();
		String  finalQueryPaginacionTodos=this.ordencompraConstantesFunciones.getsFinalQueryOrdenCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesNoOrdenCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.ordencomprasEliminados= new ArrayList<OrdenCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessOrdenCompra();
		
				///*OrdenCompraSessionBean*/this.ordencompraSessionBean=new OrdenCompraSessionBean();
			
			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=OrdenCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=OrdenCompraConstantesFunciones.getClassesForeignKeysOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/ordencompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			ordencomprasAux= new ArrayList<OrdenCompra>();
			
				
			ordencompraLogic.setDatosCliente(this.datosCliente);
			ordencompraLogic.setDatosDeep(this.datosDeep);
			ordencompraLogic.setIsConDeep(true);
			
			
			ordencompraLogic.getOrdenCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					ordencompraLogic.getTodosOrdenCompras(finalQueryGlobal,pagination);
					
					//ordencompraLogic.getTodosOrdenComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(ordencompraLogic.getOrdenCompras()==null|| ordencompraLogic.getOrdenCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							ordencomprasAux= new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux= new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							ordencompraLogic.getTodosOrdenCompras(finalQueryGlobal+"",this.pagination);												
							
							//ordencompraLogic.getTodosOrdenComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteOrdenCompras("Todos",ordencompraLogic.getOrdenCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());					
							ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idOrdenCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idOrdenCompra=this.idActual;
				
				} else if(this.idOrdenCompraActual!=null && this.idOrdenCompraActual!=0L) {
					idOrdenCompra=idOrdenCompraActual;
				}
				
					
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndicePorId(idOrdenCompra);
				
				this.ordencompras=new ArrayList<OrdenCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					ordencompraLogic.getEntity(idOrdenCompra);
					
					//ordencompraLogic.getEntityWithConnection(idOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
					ordencompraLogic.getOrdenCompras().add(ordencompraLogic.getOrdenCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompras=new ArrayList<OrdenCompra>();
					this.ordencompras.add(ordencompra);
				}
				
				if(ordencompraLogic.getOrdenCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdAsientoContable",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdAsientoContable",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdCliente",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdCliente",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdEjercicio",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdEjercicio",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdEmpleado",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdEmpleado",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdEmpresa",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdEmpresa",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoOrdenCompra")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoOrdenCompra(id_estado_orden_compraFK_IdEstadoOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdEstadoOrdenCompra(finalQueryGlobal,pagination,id_estado_orden_compraFK_IdEstadoOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoOrdenCompra(id_estado_orden_compraFK_IdEstadoOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoOrdenCompra(id_estado_orden_compraFK_IdEstadoOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdEstadoOrdenCompra(finalQueryGlobal,pagination,id_estado_orden_compraFK_IdEstadoOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoOrdenCompra(id_estado_orden_compraFK_IdEstadoOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoOrdenCompra(id_estado_orden_compraFK_IdEstadoOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdEstadoOrdenCompra",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdEstadoOrdenCompra",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdModulo",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdModulo",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdOrdenCompra")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdOrdenCompra(finalQueryGlobal,pagination,id_orden_compraFK_IdOrdenCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdOrdenCompra(id_orden_compraFK_IdOrdenCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdOrdenCompra",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdOrdenCompra",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdPeriodo",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdPeriodo",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdSucursal",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdSucursal",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdTipoTransaccionModulo",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdTipoTransaccionModulo",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					ordencompraLogic.getOrdenComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=ordencompraLogic.getOrdenCompras()==null||ordencompraLogic.getOrdenCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=ordencompras==null|| ordencompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencomprasAux=new ArrayList<OrdenCompra>();
						ordencomprasAux.addAll(ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencomprasAux=new ArrayList<OrdenCompra>();
							ordencomprasAux.addAll(ordencompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							ordencompraLogic.getOrdenComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=OrdenCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteOrdenCompras("FK_IdUsuario",ordencompraLogic.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteOrdenCompras("FK_IdUsuario",ordencompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraLogic.setOrdenCompras(new ArrayList<OrdenCompra>());
						ordencompraLogic.getOrdenCompras().addAll(ordencomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompras=new ArrayList<OrdenCompra>();
							ordencompras.addAll(ordencomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesOrdenCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessOrdenCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=ordencompraLogic.getOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=ordencompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=ordencompraLogic.getOrdenCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=ordencompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(OrdenCompra ordencompra) {
		Boolean permite=true;
		
		if(this.ordencompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=OrdenCompraConstantesFunciones.getOrderByListaOrdenCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=OrdenCompraConstantesFunciones.getOrderByListaOrdenCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(OrdenCompra ordencompra:ordencompraLogic.getOrdenCompras()) {
				if(ordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					ordencompraTotales=ordencompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(OrdenCompra ordencompra:this.ordencompras) {
				if(ordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					ordencompraTotales=ordencompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.ordencompraAux=new OrdenCompra();
			this.ordencompraAux.setsType(Constantes2.S_TOTALES);
			this.ordencompraAux.setIsNew(false);
			this.ordencompraAux.setIsChanged(false);
			this.ordencompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				OrdenCompraConstantesFunciones.TotalizarValoresFilaOrdenCompra(this.ordencompraLogic.getOrdenCompras(),this.ordencompraAux);
				
				this.ordencompraLogic.getOrdenCompras().add(this.ordencompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				OrdenCompraConstantesFunciones.TotalizarValoresFilaOrdenCompra(this.ordencompras,this.ordencompraAux);
				
				this.ordencompras.add(this.ordencompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		ordencompraTotales=new OrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.ordencompraLogic.getOrdenCompras().remove(ordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.ordencompras.remove(ordencompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		ordencompraTotales=new OrdenCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(OrdenCompra ordencompra:ordencompraLogic.getOrdenCompras()) {
				if(ordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					ordencompraTotales=ordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				OrdenCompraConstantesFunciones.TotalizarValoresFilaOrdenCompra(this.ordencompraLogic.getOrdenCompras(),ordencompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(OrdenCompra ordencompra:this.ordencompras) {
				if(ordencompra.getsType().equals(Constantes2.S_TOTALES)) {
					ordencompraTotales=ordencompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				OrdenCompraConstantesFunciones.TotalizarValoresFilaOrdenCompra(this.ordencompras,ordencompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getOrdenComprasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdEstadoOrdenCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoOrdenCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdOrdenCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdOrdenCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getOrdenComprasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getOrdenComprasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdEstadoOrdenCompra(String sFinalQuery,Long id_estado_orden_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdEstadoOrdenCompra(sFinalQuery,this.pagination,id_estado_orden_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdOrdenCompra(String sFinalQuery,Long id_orden_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdOrdenCompra(sFinalQuery,this.pagination,id_orden_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getOrdenComprasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLogic.getOrdenComprasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosOrdenCompra() {
		this.isPermisoTodoOrdenCompra=false;
		this.isPermisoNuevoOrdenCompra=false;
		this.isPermisoActualizarOrdenCompra=false;
		this.isPermisoActualizarOriginalOrdenCompra=false;
		this.isPermisoEliminarOrdenCompra=false;
		this.isPermisoGuardarCambiosOrdenCompra=false;
		this.isPermisoConsultaOrdenCompra=false;
		this.isPermisoBusquedaOrdenCompra=false;
		this.isPermisoReporteOrdenCompra=false;		
		this.isPermisoOrdenOrdenCompra=false;		
		this.isPermisoPaginacionMedioOrdenCompra=false;		
		this.isPermisoPaginacionAltoOrdenCompra=false;
		this.isPermisoPaginacionTodoOrdenCompra=false;
		this.isPermisoCopiarOrdenCompra=false;		
		this.isPermisoVerFormOrdenCompra=false;		
		this.isPermisoDuplicarOrdenCompra=false;		
		this.isPermisoOrdenOrdenCompra=false;		
	}
	
	public void setPermisosUsuarioOrdenCompra(Boolean isPermiso) {
		this.isPermisoTodoOrdenCompra=isPermiso;
		this.isPermisoNuevoOrdenCompra=isPermiso;
		this.isPermisoActualizarOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalOrdenCompra=isPermiso;
		this.isPermisoEliminarOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosOrdenCompra=isPermiso;
		this.isPermisoConsultaOrdenCompra=isPermiso;
		this.isPermisoBusquedaOrdenCompra=isPermiso;
		this.isPermisoReporteOrdenCompra=isPermiso;
		this.isPermisoOrdenOrdenCompra=isPermiso;		
		this.isPermisoPaginacionMedioOrdenCompra=isPermiso;		
		this.isPermisoPaginacionAltoOrdenCompra=isPermiso;		
		this.isPermisoPaginacionTodoOrdenCompra=isPermiso;		
		this.isPermisoCopiarOrdenCompra=isPermiso;		
		this.isPermisoVerFormOrdenCompra=isPermiso;		
		this.isPermisoDuplicarOrdenCompra=isPermiso;
		this.isPermisoOrdenOrdenCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioOrdenCompra(Boolean isPermiso) {
		//this.isPermisoTodoOrdenCompra=isPermiso;
		this.isPermisoNuevoOrdenCompra=isPermiso;
		this.isPermisoActualizarOrdenCompra=isPermiso;
		this.isPermisoActualizarOriginalOrdenCompra=isPermiso;
		this.isPermisoEliminarOrdenCompra=isPermiso;
		this.isPermisoGuardarCambiosOrdenCompra=isPermiso;
		//this.isPermisoConsultaOrdenCompra=isPermiso;
		//this.isPermisoBusquedaOrdenCompra=isPermiso;
		//this.isPermisoReporteOrdenCompra=isPermiso;
		//this.isPermisoOrdenOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionMedioOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionAltoOrdenCompra=isPermiso;		
		//this.isPermisoPaginacionTodoOrdenCompra=isPermiso;		
		//this.isPermisoCopiarOrdenCompra=isPermiso;		
		//this.isPermisoDuplicarOrdenCompra=isPermiso;
		//this.isPermisoOrdenOrdenCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioOrdenCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION);
		
		if(OrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetalleOrdenCompra=false;
		this.isTienePermisosDetalleOrdenCompra=this.verificarGetPermisosUsuarioOpcionOrdenCompraClaseRelacionada(this.opcionsRelacionadas,DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebOrdenCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioOrdenCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetalleOrdenCompra=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioOrdenCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionOrdenCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioOrdenCompraClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetalleOrdenCompra && this.jInternalFrameDetalleFormOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.remove(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioOrdenCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(OrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, OrdenCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoOrdenCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOrdenCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalOrdenCompra=this.isPermisoActualizarOrdenCompra;
			this.isPermisoEliminarOrdenCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosOrdenCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaOrdenCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaOrdenCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoOrdenCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteOrdenCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioOrdenCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoOrdenCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoOrdenCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarOrdenCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormOrdenCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarOrdenCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenOrdenCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosOrdenCompra.setToolTipText(this.jTableDatosOrdenCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioOrdenCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioOrdenCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(OrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(OrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioOrdenCompra() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetalleOrdenCompra && this.ordencompraConstantesFunciones.mostrarDetalleOrdenCompraOrdenCompra && !OrdenCompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Orden Compra");
			reporte.setsDescripcion("Detalle Orden Compra");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyOrdenCompraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.estadoordencomprasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.ordencomprasForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(OrdenCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyOrdenCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoordencomprasForeignKey==null||this.estadoordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoOrdenCompraConstantesFunciones.getArrayColumnasGlobalesEstadoOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoOrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoOrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_INVENTARIO);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=OrdenCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyOrdenCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			OrdenCompraParameterReturnGeneral ordencompraReturnGeneral=new OrdenCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_empresaOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_empresaOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_sucursalOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_sucursalOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_moduloOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_moduloOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_ejercicioOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_ejercicioOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_periodoOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_periodoOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_anioOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_anioOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_mesOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_mesOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_usuarioOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_usuarioOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_monedaOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_monedaOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_tipo_cambioOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_tipo_cambioOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalEstadoOrdenCompra="";

				if(((this.estadoordencomprasForeignKey==null||this.estadoordencomprasForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_estado_orden_compraOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_estado_orden_compraOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoOrdenCompraConstantesFunciones.getArrayColumnasGlobalesEstadoOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoOrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoOrdenCompra, "");
						finalQueryGlobalEstadoOrdenCompra+=EstadoOrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoOrdenCompra=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidEstadoOrdenCompraActual();
					}
				} else {
					finalQueryGlobalEstadoOrdenCompra="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_clienteOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_clienteOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_formatoOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_formatoOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_transportistaOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_transportistaOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_empleadoOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_empleadoOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_tipo_transaccion_moduloOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_tipo_transaccion_moduloOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_INVENTARIO);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalOrdenCompra="";

				if(((this.ordencomprasForeignKey==null||this.ordencomprasForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_orden_compraOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_orden_compraOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=OrdenCompraConstantesFunciones.getArrayColumnasGlobalesOrdenCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalOrdenCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,OrdenCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalOrdenCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalOrdenCompra, "");
						finalQueryGlobalOrdenCompra+=OrdenCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosOrdenComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalOrdenCompra=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidOrdenCompraActual();
					}
				} else {
					finalQueryGlobalOrdenCompra="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.ordencompraConstantesFunciones.cargarid_asiento_contableOrdenCompra)
					 || (this.esRecargarFks && this.ordencompraConstantesFunciones.cargarid_asiento_contableOrdenCompra)) {

					if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+ordencompraSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				ordencompraReturnGeneral=ordencompraLogic.cargarCombosLoteForeignKeyOrdenCompra(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalTipoCambio,finalQueryGlobalEstadoOrdenCompra,finalQueryGlobalCliente,finalQueryGlobalFormato,finalQueryGlobalTransportista,finalQueryGlobalEmpleado,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalOrdenCompra,finalQueryGlobalAsientoContable);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=ordencompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=ordencompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=ordencompraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=ordencompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=ordencompraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=ordencompraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=ordencompraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=ordencompraReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=ordencompraReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=ordencompraReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalEstadoOrdenCompra.equals("NONE")) {
				this.estadoordencomprasForeignKey=ordencompraReturnGeneral.getestadoordencomprasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=ordencompraReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=ordencompraReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=ordencompraReturnGeneral.gettransportistasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=ordencompraReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=ordencompraReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalOrdenCompra.equals("NONE")) {
				this.ordencomprasForeignKey=ordencompraReturnGeneral.getordencomprasForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=ordencompraReturnGeneral.getasientocontablesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyOrdenCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyEstadoOrdenCompra();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyTransportista();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyOrdenCompra();
			this.addItemDefectoCombosForeignKeyAsientoContable();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoOrdenCompra()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoOrdenCompra()) {
				EstadoOrdenCompra estadoordencompra=new EstadoOrdenCompra();
				EstadoOrdenCompraConstantesFunciones.setEstadoOrdenCompraDescripcion(estadoordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoordencompra.setId(null);

				if(!EstadoOrdenCompraConstantesFunciones.ExisteEnLista(this.estadoordencomprasForeignKey,estadoordencompra,true)) {

					this.estadoordencomprasForeignKey.add(0,estadoordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyOrdenCompra()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionOrdenCompra()) {
				OrdenCompra ordencompra=new OrdenCompra();
				OrdenCompraConstantesFunciones.setOrdenCompraDescripcion(ordencompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				ordencompra.setId(null);

				if(!OrdenCompraConstantesFunciones.ExisteEnLista(this.ordencomprasForeignKey,ordencompra,true)) {

					this.ordencomprasForeignKey.add(0,ordencompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.ordencompraSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyOrdenCompra()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyOrdenCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.ordencompra.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.ordencompra.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
				this.ordencompra.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyOrdenCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyOrdenCompra(OrdenCompra ordencompra)throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(ordencompra.getid_tipo_cambio(),false,"Formulario");
			this.setActualEstadoOrdenCompraForeignKey(ordencompra.getid_estado_orden_compra(),false,"Formulario");
			this.setActualClienteForeignKey(ordencompra.getid_cliente(),false,"Formulario");
			this.setActualFormatoForeignKey(ordencompra.getid_formato(),false,"Formulario");
			this.setActualTransportistaForeignKey(ordencompra.getid_transportista(),false,"Formulario");
			this.setActualEmpleadoForeignKey(ordencompra.getid_empleado(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(ordencompra.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(ordencompra.getid_orden_compra(),false,"Formulario");
			this.setActualAsientoContableForeignKey(ordencompra.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyOrdenCompra(OrdenCompra ordencompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(ordencompra.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(ordencompra.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(ordencompra.getCliente()!=null && !sTipoEvento.equals("id_clienteOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(ordencompra.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(ordencompra.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(ordencompra.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(ordencompra.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableOrdenCompra")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(ordencompra.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyOrdenCompra()throws Exception {	
		try {
			
			this.setActualTipoCambioForeignKey(this.ordencompraConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualEstadoOrdenCompraForeignKey(this.ordencompraConstantesFunciones.getid_estado_orden_compra(),false,"Formulario");
			this.setActualClienteForeignKey(this.ordencompraConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualFormatoForeignKey(this.ordencompraConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.ordencompraConstantesFunciones.getid_transportista(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.ordencompraConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.ordencompraConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualOrdenCompraForeignKey(this.ordencompraConstantesFunciones.getid_orden_compra(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.ordencompraConstantesFunciones.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyOrdenCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyOrdenCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroOrdenCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyOrdenCompra()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameEstadoOrdenComprasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameOrdenComprasForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyOrdenCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoOrdenComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyOrdenCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	




































	
	

	public OrdenCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public OrdenCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public OrdenCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.ordencompraSessionBean=new OrdenCompraSessionBean(); 
		this.ordencompraConstantesFunciones=new OrdenCompraConstantesFunciones(); 
		this.ordencompraBean=new OrdenCompra();//(this.ordencompraConstantesFunciones); 		
		this.ordencompraReturnGeneral=new OrdenCompraParameterReturnGeneral(); 
		
		this.ordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.ordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public OrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public OrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public OrdenCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessOrdenCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.ordencompraConstantesFunciones=new OrdenCompraConstantesFunciones(); 
			this.ordencompraBean=new OrdenCompra();//this.ordencompraConstantesFunciones); 			
			this.ordencompraReturnGeneral=new OrdenCompraParameterReturnGeneral(); 
		
			OrdenCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"OrdenCompra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.ordencompra=new OrdenCompra();
			this.ordencompras = new ArrayList<OrdenCompra>();
			this.ordencomprasAux = new ArrayList<OrdenCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic=new OrdenCompraLogic();
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.ordencompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.ordencompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormOrdenCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoOrdenCompra);	
					}
					
					if(this.jInternalFrameImportacionOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionOrdenCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByOrdenCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByOrdenCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormOrdenCompra);
				this.jInternalFrameDetalleFormOrdenCompra.setVisible(false);
				this.jInternalFrameDetalleFormOrdenCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoOrdenCompra);
					this.jInternalFrameReporteDinamicoOrdenCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoOrdenCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionOrdenCompra);
					this.jInternalFrameImportacionOrdenCompra.setVisible(false);
					this.jInternalFrameImportacionOrdenCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByOrdenCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByOrdenCompra);
					this.jInternalFrameOrderByOrdenCompra.setVisible(false);
					this.jInternalFrameOrderByOrdenCompra.setSelected(false);				
				}
				
			}
			
			this.ordencomprasArbol= new ArrayList<OrdenCompra>();
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTreeOrdenCompra);    		
			}
			
			this.jDesktopPane.add(this.jInternalFrameTreeOrdenCompra);
			this.jInternalFrameTreeOrdenCompra.setVisible(false);
	        this.jInternalFrameTreeOrdenCompra.setSelected(false);						
			
			if(!esParaBusquedaForeignKey) {
				this.getTodosOrdenCompraArbol();
			}			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idOrdenCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=OrdenCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.ordencompraReturnGeneral=new OrdenCompraParameterReturnGeneral();
			
			this.ordencompraParameterGeneral=new OrdenCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.ordencompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(OrdenCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetalleOrdenCompraConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,OrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.ordencompraSessionBean.getEsGuardarRelacionado(),this.ordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,OrdenCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.ordencompraSessionBean.getEsGuardarRelacionado(),this.ordencompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarOrdenCompra=true;
			this.isVisibilidadCeldaCopiarOrdenCompra=true;
			this.isVisibilidadCeldaVerFormOrdenCompra=true;
			this.isVisibilidadCeldaOrdenOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=false;
			this.isVisibilidadCeldaGuardarOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoOrdenCompra=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdOrdenCompra=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosOrdenCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioOrdenCompra(false);
			
			this.setPermisosUsuarioOrdenCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.ordencompraSessionBean.getEsGuardarRelacionado() 
				|| (this.ordencompraSessionBean.getEsGuardarRelacionado() && this.ordencompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioOrdenCompraClasesRelacionadas();
			}
			
			if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioOrdenCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosOrdenCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualOrdenCompra();
			}
			
			if(!this.isPermisoBusquedaOrdenCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioOrdenCompra,this.isPermisoPaginacionMedioOrdenCompra,this.isPermisoPaginacionTodoOrdenCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(OrdenCompraConstantesFunciones.getTiposSeleccionarOrdenCompra());
				
				this.tiposColumnasSelect=OrdenCompraConstantesFunciones.getTiposSeleccionarOrdenCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectOrdenCompra();				
				//this.tiposRelacionesSelect=OrdenCompraConstantesFunciones.getTiposRelacionesOrdenCompra(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioOrdenCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioOrdenCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioOrdenCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesOrdenCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detalleordencompraLogic=new DetalleOrdenCompraLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.estadoordencompraLogic=new EstadoOrdenCompraLogic();
			this.clienteLogic=new ClienteLogic();
			this.formatoLogic=new FormatoLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				ordencompraImplementable= (OrdenCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+OrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				ordencompraImplementableHome= (OrdenCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+OrdenCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.ordencompras= new ArrayList<OrdenCompra>();
			this.ordencomprasEliminados= new ArrayList<OrdenCompra>();
						
			this.isEsNuevoOrdenCompra=false;
			this.esParaAccionDesdeFormularioOrdenCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idTipoCambioActual=0L;
			this.idClienteActual=0L;
			this.idEmpleadoActual=0L;
			this.idAsientoContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.estadoordencomprasForeignKey=new ArrayList<EstadoOrdenCompra>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.ordencomprasForeignKey=new ArrayList<OrdenCompra>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyOrdenCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroOrdenCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			OrdenCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=OrdenCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesOrdenCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingOrdenCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioOrdenCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioOrdenCompra();
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasOrdenCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessOrdenCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga OrdenCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectOrdenCompra() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesOrdenCompra")) {
				iIndex=this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Orden Compras")) {
					if(!DetalleOrdenCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessOrdenCompra();

						this.cargarParteTabPanelRelacionadaDetalleOrdenCompra(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessOrdenCompra();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleOrdenCompra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormOrdenCompra.cargarSessionConBeanSwingJInternalFrameDetalleOrdenCompra(false,true,iIndex);
		this.jButtonDetalleOrdenCompraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleOrdenCompra();

		//this.jTabbedPaneRelacionesOrdenCompra.updateUI();
		//this.jTabbedPaneRelacionesOrdenCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesOrdenCompra.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetalleOrdenCompra")) {
				int row=this.jTableDatosOrdenCompra.getSelectedRow();
				jButtonDetalleOrdenCompraActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Orden Compra")) {

					if(this.isTienePermisosDetalleOrdenCompra && this.ordencompraConstantesFunciones.mostrarDetalleOrdenCompraOrdenCompra && !OrdenCompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Orden Compras"+"("+DetalleOrdenCompraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Orden Compras");

						if(ordencompraConstantesFunciones.resaltarDetalleOrdenCompraOrdenCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(ordencompraConstantesFunciones.resaltarDetalleOrdenCompraOrdenCompra);
						}

						jmenuItem.setEnabled(this.ordencompraConstantesFunciones.activarDetalleOrdenCompraOrdenCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleOrdenCompra"));

						

						this.jInternalFrameDetalleFormOrdenCompra.jmenuDetalleOrdenCompra.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyOrdenCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyOrdenCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyOrdenCompra();
		
		this.cargarCombosFrameForeignKeyOrdenCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyOrdenCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyOrdenCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoOrdenCompra();
				this.cargarCombosFrameEstadoOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoOrdenCompra(this.estadoordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyOrdenCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyOrdenCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyOrdenCompra();
				this.cargarCombosFrameOrdenComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaOrdenCompra(this.ordencomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			
			if(jTableDatosOrdenCompra.getRowCount()>=1) {
				jTableDatosOrdenCompra.removeRowSelectionInterval(0, jTableDatosOrdenCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoOrdenCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoOrdenCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesOrdenCompra(true);			
			//this.ordencompra=new OrdenCompra();
			//this.ordencompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesOrdenCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualOrdenCompra() ;
			
			if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleOrdenCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.ordencompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);				
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar OrdenCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarOrdenCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosOrdenCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosOrdenCompra.getSelectedRows().length;			
			}
			
			ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoOrdenCompra--;			
				//OrdenCompra ordencompraAux= new OrdenCompra();			
				//ordencompraAux.setId(this.iIdNuevoOrdenCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//OrdenCompra ordencompraOrigen=new OrdenCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(OrdenCompra ordencompraOrigen : ordencomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							ordencompraOrigen =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							ordencompraOrigen =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaOrdenCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.ordencompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosOrdenCompra(ordencompraOrigen,this.ordencompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.ordencompraLogic.getOrdenCompras().add(this.ordencompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.ordencompras.add(this.ordencompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaOrdenCompra(false);
				
				this.jTableDatosOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoOrdenCompra(), this.getIndiceNuevoOrdenCompra());
				
				int iLastRow =  this.jTableDatosOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();									
		
			OrdenCompra ordencompraOrigen=new OrdenCompra();
			OrdenCompra ordencompraDestino=new OrdenCompra();
				
			ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosOrdenCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || ordencomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosOrdenCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraOrigen =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						ordencompraOrigen =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						ordencompraDestino =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						ordencompraDestino =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				ordencompraOrigen =ordencomprasSeleccionados.get(0);
				ordencompraDestino =ordencomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosOrdenCompra(ordencompraOrigen,ordencompraDestino,true,false);
				
				ordencompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(ordencompraDestino,ordencompraLogic.getOrdenCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(ordencompraDestino,ordencompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaOrdenCompra(false);
				
				//this.jTableDatosOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoOrdenCompra(), this.getIndiceNuevoOrdenCompra());
				
				int iLastRow =  this.jTableDatosOrdenCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosOrdenCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosOrdenCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaOrdenCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormOrdenCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesOrdenCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasOrdenCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesOrdenCompra.setVisible(!isVisible);
			this.jPanelPaginacionOrdenCompra.setVisible(!isVisible);
			this.jPanelAccionesOrdenCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameOrdenCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByOrdenCompra();
			
			this.abrirFrameOrderByOrdenCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByOrdenCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleOrdenCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormOrdenCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormOrdenCompra.isMaximum()) {
					this.jInternalFrameDetalleFormOrdenCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormOrdenCompra.setSize(this.jInternalFrameDetalleFormOrdenCompra.iWidthFormulario,this.jInternalFrameDetalleFormOrdenCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormOrdenCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormOrdenCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormOrdenCompra.isMaximum()) {
						this.jInternalFrameDetalleFormOrdenCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormOrdenCompra.jContentPaneDetalleOrdenCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormOrdenCompra.jContentPaneDetalleOrdenCompra.getWidth(),OrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormOrdenCompra.jContentPaneDetalleOrdenCompra.getWidth(),OrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormOrdenCompra.jContentPaneDetalleOrdenCompra.getWidth(),OrdenCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleOrdenCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleOrdenCompra();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormOrdenCompra.setVisible(true);
	        this.jInternalFrameDetalleFormOrdenCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByOrdenCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByOrdenCompra,false,this);
				} else {
					this.jInternalFrameOrderByOrdenCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByOrdenCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByOrdenCompra);
				this.jInternalFrameOrderByOrdenCompra.setVisible(false);
				this.jInternalFrameOrderByOrdenCompra.setSelected(false);
				
				this.jInternalFrameOrderByOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByOrdenCompra"));
				
				this.inicializarActualizarBindingTablaOrderByOrdenCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionOrdenCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionOrdenCompra==null) {
				
				this.jInternalFrameImportacionOrdenCompra=new ImportacionJInternalFrame(OrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionOrdenCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionOrdenCompra);
				this.jInternalFrameImportacionOrdenCompra.setVisible(false);
				this.jInternalFrameImportacionOrdenCompra.setSelected(false);


				this.jInternalFrameImportacionOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionOrdenCompra"));
				this.jInternalFrameImportacionOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionOrdenCompra"));
				this.jInternalFrameImportacionOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionOrdenCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoOrdenCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoOrdenCompra==null) {
				this.jInternalFrameReporteDinamicoOrdenCompra=new ReporteDinamicoJInternalFrame(OrdenCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoOrdenCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoOrdenCompra);
				this.jInternalFrameReporteDinamicoOrdenCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoOrdenCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoOrdenCompra"));
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoOrdenCompra"));
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoOrdenCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualOrdenCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleOrdenCompra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleOrdenCompra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormOrdenCompra.jContentPaneDetalleOrdenCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleOrdenCompra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleOrdenCompra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleOrdenCompra.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleOrdenCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormOrdenCompra);
			
	       	this.jInternalFrameDetalleFormOrdenCompra.setVisible(false);
	        this.jInternalFrameDetalleFormOrdenCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormOrdenCompra.dispose();
			//this.jInternalFrameDetalleFormOrdenCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoOrdenCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoOrdenCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionOrdenCompra.setVisible(true);
	        this.jInternalFrameImportacionOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByOrdenCompra.setVisible(true);
	        this.jInternalFrameOrderByOrdenCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByOrdenCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByOrdenCompra.setVisible(false);
	        this.jInternalFrameOrderByOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoOrdenCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoOrdenCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoOrdenCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionOrdenCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionOrdenCompra.setVisible(false);
	        this.jInternalFrameImportacionOrdenCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	 public void abrirFrameTreeOrdenCompra(String sTipoProceso) { //throws Exception	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameTreeOrdenCompra);
			
			this.jInternalFrameTreeOrdenCompra.setsTipoProceso(sTipoProceso);
			
			if(sTipoProceso.equals("BUSQUEDA_FK")) {
				this.jInternalFrameTreeOrdenCompra.sTipoBusqueda="OrdenCompra";
			}
			
			this.jInternalFrameTreeOrdenCompra.setOrdenCompras(this.ordencomprasArbol);
			this.jInternalFrameTreeOrdenCompra.CargarTreeOrdenCompra();
			
	       	this.jInternalFrameTreeOrdenCompra.setVisible(true);
	        this.jInternalFrameTreeOrdenCompra.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			e.getStackTrace();
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTreeOrdenCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameTreeOrdenCompra);
			
	       	this.jInternalFrameTreeOrdenCompra.setVisible(false);
	        this.jInternalFrameTreeOrdenCompra.setSelected(false);
			
			//this.jInternalFrameTreeOrdenCompra.dispose();
			//this.jInternalFrameTreeOrdenCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void jButtonModificarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarOrdenCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarOrdenCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesOrdenCompra(true);
			//this.isEsNuevoOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesOrdenCompra(false) ;
			
			if(ordencompraSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.getEsGuardarRelacionado() && DetalleOrdenCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleOrdenCompraActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleOrdenCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaOrdenCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarOrdenCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesOrdenCompra(true);
			//this.isEsNuevoOrdenCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.ordencompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesOrdenCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesOrdenCompra(false) ;
			
			if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleOrdenCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualOrdenCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("TipoCambio")) {
				if(!this.ordencompraConstantesFunciones.cargarid_tipo_cambioOrdenCompra) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingOrdenCompra(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.ordencompraConstantesFunciones.cargarid_clienteOrdenCompra) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingOrdenCompra(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Empleado")) {
				if(!this.ordencompraConstantesFunciones.cargarid_empleadoOrdenCompra) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingOrdenCompra(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.ordencompraConstantesFunciones.cargarid_asiento_contableOrdenCompra) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingOrdenCompra(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoOrdenCompra(List<EstadoOrdenCompra> estadoordencomprasForeignKey)throws Exception{
		TableColumn tableColumnEstadoOrdenCompra=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA));
		TableCellEditor tableCellEditorEstadoOrdenCompra =tableColumnEstadoOrdenCompra.getCellEditor();

		EstadoOrdenCompraTableCell estadoordencompraTableCellFk=(EstadoOrdenCompraTableCell)tableCellEditorEstadoOrdenCompra;

		if(estadoordencompraTableCellFk!=null) {
			estadoordencompraTableCellFk.setestadoordencomprasForeignKey(estadoordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoordencompraTableCellFk.setRowActual(intSelectedRow);
			//estadoordencompraTableCellFk.setestadoordencomprasForeignKeyActual(estadoordencomprasForeignKey);
		//}


		if(estadoordencompraTableCellFk!=null) {
			estadoordencompraTableCellFk.RecargarEstadoOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaOrdenCompra(List<OrdenCompra> ordencomprasForeignKey)throws Exception{
		TableColumn tableColumnOrdenCompra=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA));
		TableCellEditor tableCellEditorOrdenCompra =tableColumnOrdenCompra.getCellEditor();

		OrdenCompraTableCell ordencompraTableCellFk=(OrdenCompraTableCell)tableCellEditorOrdenCompra;

		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.setordencomprasForeignKey(ordencomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ordencompraTableCellFk.setRowActual(intSelectedRow);
			//ordencompraTableCellFk.setordencomprasForeignKeyActual(ordencomprasForeignKey);
		//}


		if(ordencompraTableCellFk!=null) {
			ordencompraTableCellFk.RecargarOrdenComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesOrdenCompra(false);
			
			//if(!this.isEsNuevoOrdenCompra) {								
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				
			}
			
			if(this.permiteMantenimiento(this.ordencompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoOrdenCompra=true;
					this.inicializarActualizarBindingTablaOrdenCompra(false);
					this.isEsNuevoOrdenCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoOrdenCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoOrdenCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesOrdenCompra(false);
			
												
				
				if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleOrdenCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoOrdenCompraActionPerformed(evt,ordencompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualOrdenCompra(this.ordencompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,ordencompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.ordencompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.ordencompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				this.ordencompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.ordencompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((OrdenCompraModel) this.jTableDatosOrdenCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoOrdenCompra=true;
				this.inicializarActualizarBindingTablaOrdenCompra(false);
				this.isEsNuevoOrdenCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesOrdenCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualOrdenCompra(false);
				
				this.habilitarDeshabilitarControlesOrdenCompra(false);
				
				
				
				if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleOrdenCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarOrdenCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosOrdenCompra.getRowCount()>=1) {
				jTableDatosOrdenCompra.removeRowSelectionInterval(0, jTableDatosOrdenCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesOrdenCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaOrdenCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesOrdenCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualOrdenCompra(false) ;
			
			this.isEsNuevoOrdenCompra=false;
			
			if(OrdenCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleOrdenCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingOrdenCompra(false);
				
				//SI ES MANUAL
				if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualOrdenCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoOrdenCompra--;			
			//OrdenCompra ordencompraAux= new OrdenCompra();			
			//ordencompraAux.setId(this.iIdNuevoOrdenCompra);
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaOrdenCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
			
			this.ordencompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.ordencompraLogic.getOrdenCompras().add(this.ordencompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.ordencompras.add(this.ordencompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaOrdenCompra(false);
			
			this.jTableDatosOrdenCompra.setRowSelectionInterval(this.getIndiceNuevoOrdenCompra(), this.getIndiceNuevoOrdenCompra());
			
			int iLastRow =  this.jTableDatosOrdenCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosOrdenCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosOrdenCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaOrdenCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingOrdenCompra(false);
			
			//SI ES MANUAL
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualOrdenCompra();
			}
			
			//this.abrirFrameTreeOrdenCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE OrdenCompraS ?", "MANTENIMIENTO DE OrdenCompra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionOrdenCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralOrdenCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.ordencompraReturnGeneral=ordencompraLogic.procesarImportacionOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.ordencompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarOrdenCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionOrdenCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionOrdenCompra.setFileImportacion(this.jInternalFrameImportacionOrdenCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionOrdenCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionOrdenCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionOrdenCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionOrdenCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		

		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("OrdenCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"OrdenCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case OrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoOrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoOrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoOrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoOrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_STOCK:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ock_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ock_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ock_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ock_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALOTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talOtro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talOtro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talOtro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talOtro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_timoCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_timoCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_timoCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_timoCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroItems_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroItems_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroItems_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroItems_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_RETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_puesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_puesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_puesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_puesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OrdenCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OrdenCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OrdenCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OrdenCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoOrdenCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case OrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA:
					sNombreCampoCategoria="id_estado_orden_compra";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case OrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoria="porcentaje_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case OrdenCompraConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO:
					sNombreCampoCategoria="valor_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoria="total_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case OrdenCompraConstantesFunciones.LABEL_STOCK:
					sNombreCampoCategoria="stock";
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="sub_total";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALOTRO:
					sNombreCampoCategoria="total_otro";
					break;

				case OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoria="ultimo_costo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoria="numero_items";
					break;

				case OrdenCompraConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoria="retencion";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoria="impuesto";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoria="id_orden_compra";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case OrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA:
					sNombreCampoCategoriaValor="id_estado_orden_compra";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case OrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoriaValor="porcentaje_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case OrdenCompraConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO:
					sNombreCampoCategoriaValor="valor_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoriaValor="total_descuento";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case OrdenCompraConstantesFunciones.LABEL_STOCK:
					sNombreCampoCategoriaValor="stock";
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="sub_total";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALOTRO:
					sNombreCampoCategoriaValor="total_otro";
					break;

				case OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoriaValor="ultimo_costo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS:
					sNombreCampoCategoriaValor="numero_items";
					break;

				case OrdenCompraConstantesFunciones.LABEL_RETENCION:
					sNombreCampoCategoriaValor="retencion";
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoriaValor="impuesto";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					sNombreCampoCategoriaValor="id_orden_compra";
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case OrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_orden_compra");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case OrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_descuento");
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case OrdenCompraConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_descuento");
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_descuento");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case OrdenCompraConstantesFunciones.LABEL_STOCK:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Stock",sNombreCampoCategoria,sNombreCampoCategoriaValor,"stock");
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"sub_total");
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALOTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Otro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_otro");
					break;

				case OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ultimo Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ultimo_costo");
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Items",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_items");
					break;

				case OrdenCompraConstantesFunciones.LABEL_RETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"retencion");
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case OrdenCompraConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"impuesto");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_orden_compra");
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("OrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case OrdenCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getestadoordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getporcentaje_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ICE);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getvalor_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettotal_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IVA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_STOCK:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_STOCK);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getstock());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getsub_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTALOTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettotal_otro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getultimo_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getnumero_items());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_RETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_RETENCION);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getretencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IMPUESTO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getimpuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getordencompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case OrdenCompraConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(OrdenCompra ordencompra:ordencomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(ordencompra.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelOrdenCompra(row);				
			//	iRow++;
			//}				
			
			//for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelOrdenCompra(ordencompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	public void jButtonArbolOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.abrirFrameTreeOrdenCompra("BUSQUEDA_NORMAL");
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingOrdenCompra(false);
			
			//SI ES MANUAL
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualOrdenCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingOrdenCompra(false);
			
			//SI ES MANUAL
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualOrdenCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesOrdenCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingOrdenCompra(false);
			
			//SI ES MANUAL
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualOrdenCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaOrdenCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosOrdenCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosOrdenCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosOrdenCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosOrdenCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosOrdenCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosOrdenCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosOrdenCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingOrdenCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingOrdenCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingOrdenCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaOrdenCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesOrdenCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasOrdenCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesOrdenCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesOrdenCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualOrdenCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaOrdenCompra();
		
		this.inicializarActualizarBindingBotonesManualOrdenCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualOrdenCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesOrdenCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualOrdenCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualOrdenCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosOrdenCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosOrdenCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteOrdenCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionNuevoOrdenCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionSinCerrarOrdenCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionSinMensajeOrdenCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosOrdenCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosOrdenCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteOrdenCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
				this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionNuevoOrdenCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionSinCerrarOrdenCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormOrdenCompra.jCheckBoxPostAccionSinMensajeOrdenCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionOrdenCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionOrdenCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesOrdenCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesOrdenCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarOrdenCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesOrdenCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesOrdenCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralOrdenCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesOrdenCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualOrdenCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesOrdenCompra() throws Exception {
		try	{
			if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualOrdenCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleOrdenCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualOrdenCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesOrdenCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesOrdenCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionOrdenCompra.addItem(reporte);
			}
			
			
			if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionOrdenCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesOrdenCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarOrdenCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarOrdenCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarOrdenCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualOrdenCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualOrdenCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=OrdenCompraConstantesFunciones.getTiposSeleccionarOrdenCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=OrdenCompraConstantesFunciones.getTiposSeleccionarOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=OrdenCompraConstantesFunciones.getTiposSeleccionarOrdenCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoOrdenCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoOrdenCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualOrdenCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteOrdenCompra.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.getSelectedItem()!=null){this.id_estado_orden_compraFK_IdEstadoOrdenCompra=((EstadoOrdenCompra)this.jComboBoxid_estado_orden_compraFK_IdEstadoOrdenCompraOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.getSelectedItem()!=null){this.id_orden_compraFK_IdOrdenCompra=((OrdenCompra)this.jComboBoxid_orden_compraFK_IdOrdenCompraOrdenCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloOrdenCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasOrdenCompra(Boolean esInicializar) throws Exception {				
		if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualOrdenCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaOrdenCompra() throws Exception {
		this.inicializarActualizarBindingTablaOrdenCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByOrdenCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosOrdenCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaOrdenCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=ordencompraLogic.getOrdenCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=ordencompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosOrdenCompra.setModel(new OrdenCompraModel(this.ordencompraLogic.getOrdenCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosOrdenCompra.setModel(new OrdenCompraModel(this.ordencompras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByOrdenCompra!=null && this.jInternalFrameOrderByOrdenCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByOrdenCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+OrdenCompraConstantesFunciones.SCLASSWEBTITULO,ordencompraConstantesFunciones.resaltarSeleccionarOrdenCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+OrdenCompraConstantesFunciones.SCLASSWEBTITULO,ordencompraConstantesFunciones.resaltarSeleccionarOrdenCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_ID));

		if(this.ordencompraConstantesFunciones.mostraridOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltaridOrdenCompra,this.ordencompraConstantesFunciones.activaridOrdenCompra,iSizeTabla,this,true,"idOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltaridOrdenCompra,this.ordencompraConstantesFunciones.activaridOrdenCompra,this,true,"idOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.ordencompraConstantesFunciones.mostrarid_empresaOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.ordencompraConstantesFunciones.resaltarid_empresaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_empresaOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.ordencompraConstantesFunciones.resaltarid_empresaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_empresaOrdenCompra,false,"id_empresaOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.ordencompraConstantesFunciones.mostrarid_sucursalOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.ordencompraConstantesFunciones.resaltarid_sucursalOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_sucursalOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.ordencompraConstantesFunciones.resaltarid_sucursalOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_sucursalOrdenCompra,false,"id_sucursalOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDMODULO));

		if(this.ordencompraConstantesFunciones.mostrarid_moduloOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.ordencompraConstantesFunciones.resaltarid_moduloOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_moduloOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.ordencompraConstantesFunciones.resaltarid_moduloOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_moduloOrdenCompra,false,"id_moduloOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.ordencompraConstantesFunciones.mostrarid_ejercicioOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.ordencompraConstantesFunciones.resaltarid_ejercicioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_ejercicioOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.ordencompraConstantesFunciones.resaltarid_ejercicioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_ejercicioOrdenCompra,false,"id_ejercicioOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.ordencompraConstantesFunciones.mostrarid_periodoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.ordencompraConstantesFunciones.resaltarid_periodoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_periodoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.ordencompraConstantesFunciones.resaltarid_periodoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_periodoOrdenCompra,false,"id_periodoOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDANIO));

		if(this.ordencompraConstantesFunciones.mostrarid_anioOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.ordencompraConstantesFunciones.resaltarid_anioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_anioOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.ordencompraConstantesFunciones.resaltarid_anioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_anioOrdenCompra,true,"id_anioOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDMES));

		if(this.ordencompraConstantesFunciones.mostrarid_mesOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.ordencompraConstantesFunciones.resaltarid_mesOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_mesOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.ordencompraConstantesFunciones.resaltarid_mesOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_mesOrdenCompra,true,"id_mesOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDUSUARIO));

		if(this.ordencompraConstantesFunciones.mostrarid_usuarioOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.ordencompraConstantesFunciones.resaltarid_usuarioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_usuarioOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.ordencompraConstantesFunciones.resaltarid_usuarioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_usuarioOrdenCompra,false,"id_usuarioOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_FECHAEMISION));

		if(this.ordencompraConstantesFunciones.mostrarfecha_emisionOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.ordencompraConstantesFunciones.resaltarfecha_emisionOrdenCompra,this.ordencompraConstantesFunciones.activarfecha_emisionOrdenCompra,iSizeTabla,this,true,"fecha_emisionOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.ordencompraConstantesFunciones.resaltarfecha_emisionOrdenCompra,this.ordencompraConstantesFunciones.activarfecha_emisionOrdenCompra,this,true,"fecha_emisionOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.ordencompraConstantesFunciones.mostrarfecha_entregaOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.ordencompraConstantesFunciones.resaltarfecha_entregaOrdenCompra,this.ordencompraConstantesFunciones.activarfecha_entregaOrdenCompra,iSizeTabla,this,true,"fecha_entregaOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.ordencompraConstantesFunciones.resaltarfecha_entregaOrdenCompra,this.ordencompraConstantesFunciones.activarfecha_entregaOrdenCompra,this,true,"fecha_entregaOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.ordencompraConstantesFunciones.mostrarnumero_secuencialOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.ordencompraConstantesFunciones.resaltarnumero_secuencialOrdenCompra,this.ordencompraConstantesFunciones.activarnumero_secuencialOrdenCompra,iSizeTabla,this,true,"numero_secuencialOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarnumero_secuencialOrdenCompra,this.ordencompraConstantesFunciones.activarnumero_secuencialOrdenCompra,this,true,"numero_secuencialOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDMONEDA));

		if(this.ordencompraConstantesFunciones.mostrarid_monedaOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.ordencompraConstantesFunciones.resaltarid_monedaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_monedaOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.ordencompraConstantesFunciones.resaltarid_monedaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_monedaOrdenCompra,false,"id_monedaOrdenCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));

		if(this.ordencompraConstantesFunciones.mostrarid_tipo_cambioOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCambioTableCell(this.tipocambiosForeignKey,this.ordencompraConstantesFunciones.resaltarid_tipo_cambioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_tipo_cambioOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new TipoCambioTableCell(this.tipocambiosForeignKey,this.ordencompraConstantesFunciones.resaltarid_tipo_cambioOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_tipo_cambioOrdenCompra,true,"id_tipo_cambioOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA));

		if(this.ordencompraConstantesFunciones.mostrarid_estado_orden_compraOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoOrdenCompraTableCell(this.estadoordencomprasForeignKey,this.ordencompraConstantesFunciones.resaltarid_estado_orden_compraOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_estado_orden_compraOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EstadoOrdenCompraTableCell(this.estadoordencomprasForeignKey,this.ordencompraConstantesFunciones.resaltarid_estado_orden_compraOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_estado_orden_compraOrdenCompra,true,"id_estado_orden_compraOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDCLIENTE));

		if(this.ordencompraConstantesFunciones.mostrarid_clienteOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.ordencompraConstantesFunciones.resaltarid_clienteOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_clienteOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.ordencompraConstantesFunciones.resaltarid_clienteOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_clienteOrdenCompra,true,"id_clienteOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDFORMATO));

		if(this.ordencompraConstantesFunciones.mostrarid_formatoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.ordencompraConstantesFunciones.resaltarid_formatoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_formatoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.ordencompraConstantesFunciones.resaltarid_formatoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_formatoOrdenCompra,true,"id_formatoOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA));

		if(this.ordencompraConstantesFunciones.mostrarid_transportistaOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransportistaTableCell(this.transportistasForeignKey,this.ordencompraConstantesFunciones.resaltarid_transportistaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_transportistaOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new TransportistaTableCell(this.transportistasForeignKey,this.ordencompraConstantesFunciones.resaltarid_transportistaOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_transportistaOrdenCompra,true,"id_transportistaOrdenCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.ordencompraConstantesFunciones.mostrarid_empleadoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.ordencompraConstantesFunciones.resaltarid_empleadoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_empleadoOrdenCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.ordencompraConstantesFunciones.resaltarid_empleadoOrdenCompra,this,this.ordencompraConstantesFunciones.activarid_empleadoOrdenCompra,true,"id_empleadoOrdenCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.ordencompraConstantesFunciones.mostrardescripcionOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.ordencompraConstantesFunciones.resaltardescripcionOrdenCompra,this.ordencompraConstantesFunciones.activardescripcionOrdenCompra,iSizeTabla,this,true,"descripcionOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltardescripcionOrdenCompra,this.ordencompraConstantesFunciones.activardescripcionOrdenCompra,this,true,"descripcionOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO));

		if(this.ordencompraConstantesFunciones.mostrarporcentaje_descuentoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarporcentaje_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activarporcentaje_descuentoOrdenCompra,iSizeTabla,this,true,"porcentaje_descuentoOrdenCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarporcentaje_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activarporcentaje_descuentoOrdenCompra,this,true,"porcentaje_descuentoOrdenCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_SUMAN));

		if(this.ordencompraConstantesFunciones.mostrarsumanOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarsumanOrdenCompra,this.ordencompraConstantesFunciones.activarsumanOrdenCompra,iSizeTabla,this,true,"sumanOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarsumanOrdenCompra,this.ordencompraConstantesFunciones.activarsumanOrdenCompra,this,true,"sumanOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_ICE));

		if(this.ordencompraConstantesFunciones.mostrariceOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_ICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltariceOrdenCompra,this.ordencompraConstantesFunciones.activariceOrdenCompra,iSizeTabla,this,true,"iceOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltariceOrdenCompra,this.ordencompraConstantesFunciones.activariceOrdenCompra,this,true,"iceOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO));

		if(this.ordencompraConstantesFunciones.mostrarvalor_descuentoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarvalor_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activarvalor_descuentoOrdenCompra,iSizeTabla,this,true,"valor_descuentoOrdenCompra","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarvalor_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activarvalor_descuentoOrdenCompra,this,true,"valor_descuentoOrdenCompra","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO));

		if(this.ordencompraConstantesFunciones.mostrartotal_descuentoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltartotal_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activartotal_descuentoOrdenCompra,iSizeTabla,this,true,"total_descuentoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltartotal_descuentoOrdenCompra,this.ordencompraConstantesFunciones.activartotal_descuentoOrdenCompra,this,true,"total_descuentoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_IVA));

		if(this.ordencompraConstantesFunciones.mostrarivaOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarivaOrdenCompra,this.ordencompraConstantesFunciones.activarivaOrdenCompra,iSizeTabla,this,true,"ivaOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarivaOrdenCompra,this.ordencompraConstantesFunciones.activarivaOrdenCompra,this,true,"ivaOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_STOCK));

		if(this.ordencompraConstantesFunciones.mostrarstockOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_STOCK,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarstockOrdenCompra,this.ordencompraConstantesFunciones.activarstockOrdenCompra,iSizeTabla,this,true,"stockOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarstockOrdenCompra,this.ordencompraConstantesFunciones.activarstockOrdenCompra,this,true,"stockOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_SUBTOTAL));

		if(this.ordencompraConstantesFunciones.mostrarsub_totalOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarsub_totalOrdenCompra,this.ordencompraConstantesFunciones.activarsub_totalOrdenCompra,iSizeTabla,this,true,"sub_totalOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarsub_totalOrdenCompra,this.ordencompraConstantesFunciones.activarsub_totalOrdenCompra,this,true,"sub_totalOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_TOTALOTRO));

		if(this.ordencompraConstantesFunciones.mostrartotal_otroOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_TOTALOTRO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltartotal_otroOrdenCompra,this.ordencompraConstantesFunciones.activartotal_otroOrdenCompra,iSizeTabla,this,true,"total_otroOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltartotal_otroOrdenCompra,this.ordencompraConstantesFunciones.activartotal_otroOrdenCompra,this,true,"total_otroOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO));

		if(this.ordencompraConstantesFunciones.mostrarultimo_costoOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarultimo_costoOrdenCompra,this.ordencompraConstantesFunciones.activarultimo_costoOrdenCompra,iSizeTabla,this,true,"ultimo_costoOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarultimo_costoOrdenCompra,this.ordencompraConstantesFunciones.activarultimo_costoOrdenCompra,this,true,"ultimo_costoOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS));

		if(this.ordencompraConstantesFunciones.mostrarnumero_itemsOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarnumero_itemsOrdenCompra,this.ordencompraConstantesFunciones.activarnumero_itemsOrdenCompra,iSizeTabla,this,true,"numero_itemsOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarnumero_itemsOrdenCompra,this.ordencompraConstantesFunciones.activarnumero_itemsOrdenCompra,this,true,"numero_itemsOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_RETENCION));

		if(this.ordencompraConstantesFunciones.mostrarretencionOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_RETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltarretencionOrdenCompra,this.ordencompraConstantesFunciones.activarretencionOrdenCompra,iSizeTabla,this,true,"retencionOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltarretencionOrdenCompra,this.ordencompraConstantesFunciones.activarretencionOrdenCompra,this,true,"retencionOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,OrdenCompraConstantesFunciones.LABEL_TOTAL));

		if(this.ordencompraConstantesFunciones.mostrartotalOrdenCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,OrdenCompraConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.ordencompraConstantesFunciones.resaltartotalOrdenCompra,this.ordencompraConstantesFunciones.activartotalOrdenCompra,iSizeTabla,this,true,"totalOrdenCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.ordencompraConstantesFunciones.resaltartotalOrdenCompra,this.ordencompraConstantesFunciones.activartotalOrdenCompra,this,true,"totalOrdenCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new OrdenCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.ordencompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetalleOrdenCompra && this.ordencompraConstantesFunciones.mostrarDetalleOrdenCompraOrdenCompra && !OrdenCompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Orden Compras");
				tableColumn.setHeaderValue("Detalle Orden Compras");
				tableColumn.setCellRenderer(new DetalleOrdenCompraTableCell(ordencompraConstantesFunciones.resaltarDetalleOrdenCompraOrdenCompra,this,this.ordencompraConstantesFunciones.activarDetalleOrdenCompraOrdenCompra));
				tableColumn.setCellEditor(new DetalleOrdenCompraTableCell(ordencompraConstantesFunciones.resaltarDetalleOrdenCompraOrdenCompra,this,this.ordencompraConstantesFunciones.activarDetalleOrdenCompraOrdenCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosOrdenCompra.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosOrdenCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosOrdenCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.ordencompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosOrdenCompra.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.ordencompraSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosOrdenCompra.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosOrdenCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.ordencompraSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosOrdenCompra.moveColumn(this.jTableDatosOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosOrdenCompra.moveColumn(this.jTableDatosOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.ordencompraSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosOrdenCompra.moveColumn(this.jTableDatosOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosOrdenCompra.moveColumn(this.jTableDatosOrdenCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosOrdenCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosOrdenCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosOrdenCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosOrdenCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosOrdenCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosOrdenCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosOrdenCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosOrdenCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=ordencompraLogic.getOrdenCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=ordencompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosOrdenCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosOrdenCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosOrdenCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoOrdenCompra=false;
					
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormOrdenCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.ordencompra.getsType().equals("DUPLICADO")
				   || this.ordencompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoOrdenCompra=true;
				
				} else {
					this.isEsNuevoOrdenCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					if(this.ordencompra.getId()>=0 && !this.ordencompra.getIsNew()) {						
						this.isEsNuevoOrdenCompra=false;
						
					} else {
						this.isEsNuevoOrdenCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoOrdenCompra(esRelaciones);						
				
				this.seleccionarOrdenCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.ordencompra.getId()<0) {
					this.isEsNuevoOrdenCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarOrdenCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarOrdenCompra(evt,rowIndex);
				}	
				
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion OrdenCompra: " + this.dDif); 
					}
				}								
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarOrdenCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.ordencompra)) {
					if(this.ordencompra.getId()>0) {
						this.ordencompra.setIsDeleted(true);
						
						this.ordencomprasEliminados.add(this.ordencompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.ordencompraLogic.getOrdenCompras().remove(this.ordencompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.ordencompras.remove(this.ordencompra);				
					}
					
					
					((OrdenCompraModel) this.jTableDatosOrdenCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaOrdenCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarOrdenCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoOrdenCompra) {
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosOrdenCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosOrdenCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioOrdenCompra(this.ordencompra);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.ordencompraConstantesFunciones.cargarid_empresaOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_empresaOrdenCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.ordencompra.getid_empresa());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(ordencompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(ordencompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.ordencompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.ordencompraConstantesFunciones.cargarid_sucursalOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_sucursalOrdenCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.ordencompra.getid_sucursal());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(ordencompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(ordencompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.ordencompra.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.ordencompraConstantesFunciones.cargarid_moduloOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_moduloOrdenCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.ordencompra.getid_modulo());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(ordencompra.getModulo()!=null) {
							this.modulosForeignKey.add(ordencompra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.ordencompra.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.ordencompraConstantesFunciones.cargarid_ejercicioOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_ejercicioOrdenCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.ordencompra.getid_ejercicio());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(ordencompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(ordencompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.ordencompra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.ordencompraConstantesFunciones.cargarid_periodoOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_periodoOrdenCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.ordencompra.getid_periodo());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(ordencompra.getPeriodo()!=null) {
							this.periodosForeignKey.add(ordencompra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.ordencompra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.ordencompraConstantesFunciones.cargarid_anioOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_anioOrdenCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.ordencompra.getid_anio());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(ordencompra.getAnio()!=null) {
							this.aniosForeignKey.add(ordencompra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.ordencompra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.ordencompraConstantesFunciones.cargarid_mesOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_mesOrdenCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.ordencompra.getid_mes());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(ordencompra.getMes()!=null) {
							this.messForeignKey.add(ordencompra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.ordencompra.getid_mes(),false,"Formulario");

					//Usuario
					if(!this.ordencompraConstantesFunciones.cargarid_usuarioOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_usuarioOrdenCompra) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.ordencompra.getid_usuario());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(ordencompra.getUsuario()!=null) {
							this.usuariosForeignKey.add(ordencompra.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.ordencompra.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.ordencompraConstantesFunciones.cargarid_monedaOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_monedaOrdenCompra) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.ordencompra.getid_moneda());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(ordencompra.getMoneda()!=null) {
							this.monedasForeignKey.add(ordencompra.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.ordencompra.getid_moneda(),false,"Formulario");

					//TipoCambio
					if(!this.ordencompraConstantesFunciones.cargarid_tipo_cambioOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_tipo_cambioOrdenCompra) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.ordencompra.getid_tipo_cambio());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(ordencompra.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(ordencompra.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.ordencompra.getid_tipo_cambio(),false,"Formulario");

					//EstadoOrdenCompra
					if(!this.ordencompraConstantesFunciones.cargarid_estado_orden_compraOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_estado_orden_compraOrdenCompra) {
						//this.cargarCombosEstadoOrdenComprasForeignKeyLista(" where id="+this.ordencompra.getid_estado_orden_compra());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.estadoordencomprasForeignKey=new ArrayList<EstadoOrdenCompra>();

						if(ordencompra.getEstadoOrdenCompra()!=null) {
							this.estadoordencomprasForeignKey.add(ordencompra.getEstadoOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyEstadoOrdenCompra();
						this.cargarCombosFrameEstadoOrdenComprasForeignKey("Todos");
					}
					this.setActualEstadoOrdenCompraForeignKey(this.ordencompra.getid_estado_orden_compra(),false,"Formulario");

					//Cliente
					if(!this.ordencompraConstantesFunciones.cargarid_clienteOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_clienteOrdenCompra) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.ordencompra.getid_cliente());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(ordencompra.getCliente()!=null) {
							this.clientesForeignKey.add(ordencompra.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.ordencompra.getid_cliente(),false,"Formulario");

					//Formato
					if(!this.ordencompraConstantesFunciones.cargarid_formatoOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_formatoOrdenCompra) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.ordencompra.getid_formato());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(ordencompra.getFormato()!=null) {
							this.formatosForeignKey.add(ordencompra.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.ordencompra.getid_formato(),false,"Formulario");

					//Transportista
					if(!this.ordencompraConstantesFunciones.cargarid_transportistaOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_transportistaOrdenCompra) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.ordencompra.getid_transportista());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(ordencompra.getTransportista()!=null) {
							this.transportistasForeignKey.add(ordencompra.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.ordencompra.getid_transportista(),false,"Formulario");

					//Empleado
					if(!this.ordencompraConstantesFunciones.cargarid_empleadoOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_empleadoOrdenCompra) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.ordencompra.getid_empleado());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(ordencompra.getEmpleado()!=null) {
							this.empleadosForeignKey.add(ordencompra.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.ordencompra.getid_empleado(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.ordencompraConstantesFunciones.cargarid_tipo_transaccion_moduloOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_tipo_transaccion_moduloOrdenCompra) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.ordencompra.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(ordencompra.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(ordencompra.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.ordencompra.getid_tipo_transaccion_modulo(),false,"Formulario");

					//OrdenCompra
					if(!this.ordencompraConstantesFunciones.cargarid_orden_compraOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_orden_compraOrdenCompra) {
						//this.cargarCombosOrdenComprasForeignKeyLista(" where id="+this.ordencompra.getid_orden_compra());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.ordencomprasForeignKey=new ArrayList<OrdenCompra>();

						if(ordencompra.getOrdenCompra()!=null) {
							this.ordencomprasForeignKey.add(ordencompra.getOrdenCompra());
						}

						this.addItemDefectoCombosForeignKeyOrdenCompra();
						this.cargarCombosFrameOrdenComprasForeignKey("Todos");
					}
					this.setActualOrdenCompraForeignKey(this.ordencompra.getid_orden_compra(),false,"Formulario");

					//AsientoContable
					if(!this.ordencompraConstantesFunciones.cargarid_asiento_contableOrdenCompra || this.ordencompraConstantesFunciones.event_dependid_asiento_contableOrdenCompra) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.ordencompra.getid_asiento_contable());
									//this.inicializarActualizarBindingOrdenCompra(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(ordencompra.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(ordencompra.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.ordencompra.getid_asiento_contable(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesOrdenCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesOrdenCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualOrdenCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoOrdenCompra(OrdenCompra ordencompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoOrdenCompra(ordencompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoOrdenCompra(OrdenCompra ordencompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioOrdenCompra(ordencompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyOrdenCompra(ordencompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyOrdenCompra(ordencompra);
	}
	
	public void setVariablesObjetoActualToFormularioOrdenCompra(OrdenCompra ordencompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setText(ordencompra.getId().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setDate(ordencompra.getfecha_emision());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setDate(ordencompra.getfecha_entrega());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setText(ordencompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setText(ordencompra.getdescripcion());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setText(ordencompra.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setText(ordencompra.getsuman().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setText(ordencompra.getice().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setText(ordencompra.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setText(ordencompra.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setText(ordencompra.getiva().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setText(ordencompra.getstock().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setText(ordencompra.getsub_total().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setText(ordencompra.gettotal_otro().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setText(ordencompra.getultimo_costo().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setText(ordencompra.getnumero_items().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setText(ordencompra.getretencion().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setText(ordencompra.gettotal().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,OrdenCompra ordencompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,ordencompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,OrdenCompra ordencompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				ordencompraLocal=this.ordencompra;
			} else {
				ordencompraLocal=this.ordencompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(ordencompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoOrdenCompra(ordencompraLocal,true);
					
					if(ordencompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(ordencompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(ordencompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoOrdenCompra(OrdenCompra ordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualOrdenCompra(ordencompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(ordencompra);
	}
	
	public void setVariablesFormularioToObjetoActualOrdenCompra(OrdenCompra ordencompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualOrdenCompra(ordencompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualOrdenCompra(OrdenCompra ordencompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.getText()==null || this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.getText()=="" || this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setText("0");
			}

			if(conColumnasBase) {ordencompra.setId(Long.parseLong(this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelIdOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setfecha_emision(this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_emisionOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setfecha_entrega(this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelfecha_entregaOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setnumero_secuencial(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_secuencialOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setdescripcion(this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeldescripcionOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setporcentaje_descuento(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelporcentaje_descuentoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelsumanOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setice(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_ICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeliceOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setvalor_descuento(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelvalor_descuentoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.settotal_descuento(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_descuentoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setiva(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelivaOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setstock(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_STOCK+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelstockOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setsub_total(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelsub_totalOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.settotal_otro(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_TOTALOTRO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotal_otroOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setultimo_costo(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelultimo_costoOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setnumero_items(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelnumero_itemsOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.setretencion(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_RETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabelretencionOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			ordencompra.settotal(Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+OrdenCompraConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormOrdenCompra.jLabeltotalOrdenCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualOrdenCompra(OrdenCompra ordencompraBean,OrdenCompra ordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosOrdenCompra(OrdenCompra ordencompraOrigen,OrdenCompra ordencompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && ordencompraOrigen.getId()!=null && !ordencompraOrigen.getId().equals(0L))) {ordencompra.setId(ordencompraOrigen.getId());}}
			if(conDefault || (!conDefault && ordencompraOrigen.getfecha_emision()!=null && !ordencompraOrigen.getfecha_emision().equals(new Date()))) {ordencompra.setfecha_emision(ordencompraOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && ordencompraOrigen.getfecha_entrega()!=null && !ordencompraOrigen.getfecha_entrega().equals(new Date()))) {ordencompra.setfecha_entrega(ordencompraOrigen.getfecha_entrega());}
			if(conDefault || (!conDefault && ordencompraOrigen.getnumero_secuencial()!=null && !ordencompraOrigen.getnumero_secuencial().equals(""))) {ordencompra.setnumero_secuencial(ordencompraOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && ordencompraOrigen.getdescripcion()!=null && !ordencompraOrigen.getdescripcion().equals(""))) {ordencompra.setdescripcion(ordencompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && ordencompraOrigen.getporcentaje_descuento()!=null && !ordencompraOrigen.getporcentaje_descuento().equals(0.0))) {ordencompra.setporcentaje_descuento(ordencompraOrigen.getporcentaje_descuento());}
			if(conDefault || (!conDefault && ordencompraOrigen.getsuman()!=null && !ordencompraOrigen.getsuman().equals(0.0))) {ordencompra.setsuman(ordencompraOrigen.getsuman());}
			if(conDefault || (!conDefault && ordencompraOrigen.getice()!=null && !ordencompraOrigen.getice().equals(0.0))) {ordencompra.setice(ordencompraOrigen.getice());}
			if(conDefault || (!conDefault && ordencompraOrigen.getvalor_descuento()!=null && !ordencompraOrigen.getvalor_descuento().equals(0.0))) {ordencompra.setvalor_descuento(ordencompraOrigen.getvalor_descuento());}
			if(conDefault || (!conDefault && ordencompraOrigen.gettotal_descuento()!=null && !ordencompraOrigen.gettotal_descuento().equals(0.0))) {ordencompra.settotal_descuento(ordencompraOrigen.gettotal_descuento());}
			if(conDefault || (!conDefault && ordencompraOrigen.getiva()!=null && !ordencompraOrigen.getiva().equals(0.0))) {ordencompra.setiva(ordencompraOrigen.getiva());}
			if(conDefault || (!conDefault && ordencompraOrigen.getstock()!=null && !ordencompraOrigen.getstock().equals(0.0))) {ordencompra.setstock(ordencompraOrigen.getstock());}
			if(conDefault || (!conDefault && ordencompraOrigen.getsub_total()!=null && !ordencompraOrigen.getsub_total().equals(0.0))) {ordencompra.setsub_total(ordencompraOrigen.getsub_total());}
			if(conDefault || (!conDefault && ordencompraOrigen.gettotal_otro()!=null && !ordencompraOrigen.gettotal_otro().equals(0.0))) {ordencompra.settotal_otro(ordencompraOrigen.gettotal_otro());}
			if(conDefault || (!conDefault && ordencompraOrigen.getultimo_costo()!=null && !ordencompraOrigen.getultimo_costo().equals(0.0))) {ordencompra.setultimo_costo(ordencompraOrigen.getultimo_costo());}
			if(conDefault || (!conDefault && ordencompraOrigen.getnumero_items()!=null && !ordencompraOrigen.getnumero_items().equals(0.0))) {ordencompra.setnumero_items(ordencompraOrigen.getnumero_items());}
			if(conDefault || (!conDefault && ordencompraOrigen.getretencion()!=null && !ordencompraOrigen.getretencion().equals(0.0))) {ordencompra.setretencion(ordencompraOrigen.getretencion());}
			if(conDefault || (!conDefault && ordencompraOrigen.gettotal()!=null && !ordencompraOrigen.gettotal().equals(0.0))) {ordencompra.settotal(ordencompraOrigen.gettotal());}
			if(conDefault || (!conDefault && ordencompraOrigen.getflete()!=null && !ordencompraOrigen.getflete().equals(0.0))) {ordencompra.setflete(ordencompraOrigen.getflete());}
			if(conDefault || (!conDefault && ordencompraOrigen.getimpuesto()!=null && !ordencompraOrigen.getimpuesto().equals(0.0))) {ordencompra.setimpuesto(ordencompraOrigen.getimpuesto());}
			if(conDefault || (!conDefault && ordencompraOrigen.getnumero_comprobante()!=null && !ordencompraOrigen.getnumero_comprobante().equals(""))) {ordencompra.setnumero_comprobante(ordencompraOrigen.getnumero_comprobante());}
			if(conDefault || (!conDefault && ordencompraOrigen.getfecha()!=null && !ordencompraOrigen.getfecha().equals(new Date()))) {ordencompra.setfecha(ordencompraOrigen.getfecha());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioOrdenCompra(OrdenCompra ordencompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setText(ordencompra.getId().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setDate(ordencompra.getfecha_emision());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setDate(ordencompra.getfecha_entrega());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setText(ordencompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setText(ordencompra.getdescripcion());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setText(ordencompra.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setText(ordencompra.getsuman().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setText(ordencompra.getice().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setText(ordencompra.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setText(ordencompra.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setText(ordencompra.getiva().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setText(ordencompra.getstock().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setText(ordencompra.getsub_total().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setText(ordencompra.gettotal_otro().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setText(ordencompra.getultimo_costo().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setText(ordencompra.getnumero_items().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setText(ordencompra.getretencion().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setText(ordencompra.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioOrdenCompra(OrdenCompraBean ordencompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setText(ordencompraBean.getId().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setDate(ordencompraBean.getfecha_emision());
			this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setDate(ordencompraBean.getfecha_entrega());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setText(ordencompraBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setText(ordencompraBean.getdescripcion());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setText(ordencompraBean.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setText(ordencompraBean.getsuman().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setText(ordencompraBean.getice().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setText(ordencompraBean.getvalor_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setText(ordencompraBean.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setText(ordencompraBean.getiva().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setText(ordencompraBean.getstock().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setText(ordencompraBean.getsub_total().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setText(ordencompraBean.gettotal_otro().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setText(ordencompraBean.getultimo_costo().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setText(ordencompraBean.getnumero_items().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setText(ordencompraBean.getretencion().toString());
			this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setText(ordencompraBean.gettotal().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanOrdenCompra(OrdenCompraParameterReturnGeneral ordencompraReturnGeneral,OrdenCompraBean ordencompraBean,Boolean conDefault) throws Exception { 
		try {
			OrdenCompra ordencompraLocal=new OrdenCompra();
			
			ordencompraLocal=ordencompraReturnGeneral.getOrdenCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && ordencompraLocal.getId()!=null && !ordencompraLocal.getId().equals(0L))) {ordencompraBean.setId(ordencompraLocal.getId());}}
			if(conDefault || (!conDefault && ordencompraLocal.getfecha_emision()!=null && !ordencompraLocal.getfecha_emision().equals(new Date()))) {ordencompraBean.setfecha_emision(ordencompraLocal.getfecha_emision());}
			if(conDefault || (!conDefault && ordencompraLocal.getfecha_entrega()!=null && !ordencompraLocal.getfecha_entrega().equals(new Date()))) {ordencompraBean.setfecha_entrega(ordencompraLocal.getfecha_entrega());}
			if(conDefault || (!conDefault && ordencompraLocal.getnumero_secuencial()!=null && !ordencompraLocal.getnumero_secuencial().equals(""))) {ordencompraBean.setnumero_secuencial(ordencompraLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && ordencompraLocal.getdescripcion()!=null && !ordencompraLocal.getdescripcion().equals(""))) {ordencompraBean.setdescripcion(ordencompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && ordencompraLocal.getporcentaje_descuento()!=null && !ordencompraLocal.getporcentaje_descuento().equals(0.0))) {ordencompraBean.setporcentaje_descuento(ordencompraLocal.getporcentaje_descuento());}
			if(conDefault || (!conDefault && ordencompraLocal.getsuman()!=null && !ordencompraLocal.getsuman().equals(0.0))) {ordencompraBean.setsuman(ordencompraLocal.getsuman());}
			if(conDefault || (!conDefault && ordencompraLocal.getice()!=null && !ordencompraLocal.getice().equals(0.0))) {ordencompraBean.setice(ordencompraLocal.getice());}
			if(conDefault || (!conDefault && ordencompraLocal.getvalor_descuento()!=null && !ordencompraLocal.getvalor_descuento().equals(0.0))) {ordencompraBean.setvalor_descuento(ordencompraLocal.getvalor_descuento());}
			if(conDefault || (!conDefault && ordencompraLocal.gettotal_descuento()!=null && !ordencompraLocal.gettotal_descuento().equals(0.0))) {ordencompraBean.settotal_descuento(ordencompraLocal.gettotal_descuento());}
			if(conDefault || (!conDefault && ordencompraLocal.getiva()!=null && !ordencompraLocal.getiva().equals(0.0))) {ordencompraBean.setiva(ordencompraLocal.getiva());}
			if(conDefault || (!conDefault && ordencompraLocal.getstock()!=null && !ordencompraLocal.getstock().equals(0.0))) {ordencompraBean.setstock(ordencompraLocal.getstock());}
			if(conDefault || (!conDefault && ordencompraLocal.getsub_total()!=null && !ordencompraLocal.getsub_total().equals(0.0))) {ordencompraBean.setsub_total(ordencompraLocal.getsub_total());}
			if(conDefault || (!conDefault && ordencompraLocal.gettotal_otro()!=null && !ordencompraLocal.gettotal_otro().equals(0.0))) {ordencompraBean.settotal_otro(ordencompraLocal.gettotal_otro());}
			if(conDefault || (!conDefault && ordencompraLocal.getultimo_costo()!=null && !ordencompraLocal.getultimo_costo().equals(0.0))) {ordencompraBean.setultimo_costo(ordencompraLocal.getultimo_costo());}
			if(conDefault || (!conDefault && ordencompraLocal.getnumero_items()!=null && !ordencompraLocal.getnumero_items().equals(0.0))) {ordencompraBean.setnumero_items(ordencompraLocal.getnumero_items());}
			if(conDefault || (!conDefault && ordencompraLocal.getretencion()!=null && !ordencompraLocal.getretencion().equals(0.0))) {ordencompraBean.setretencion(ordencompraLocal.getretencion());}
			if(conDefault || (!conDefault && ordencompraLocal.gettotal()!=null && !ordencompraLocal.gettotal().equals(0.0))) {ordencompraBean.settotal(ordencompraLocal.gettotal());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxOrdenCompraGenerico(Long idOrdenCompraSeleccionado,JComboBox jComboBoxOrdenCompra,List<OrdenCompra> ordencomprasLocal)throws Exception {
		try {
			OrdenCompra  ordencompraTemp=null;

			for(OrdenCompra ordencompraAux:ordencomprasLocal) {
				if(ordencompraAux.getId()!=null && ordencompraAux.getId().equals(idOrdenCompraSeleccionado)) {
					ordencompraTemp=ordencompraAux;
					break;
				}
			}

			jComboBoxOrdenCompra.setSelectedItem(ordencompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxOrdenCompraGenerico(JComboBox jComboBoxOrdenCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxOrdenCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxOrdenCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxOrdenCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
				//AUTOREFERENCIADA
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ARBOL");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ARBOL");
				
				jComboBoxOrdenCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxOrdenCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Arbol"));			
				//AUTOREFERENCIADA
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetalleOrdenCompra")) {
			jButtonDetalleOrdenCompraActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ordencompra=(OrdenCompra) ordencompraLogic.getOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			ordencompra =(OrdenCompra) ordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("EstadoOrdenCompra")) {
			//sDescripcion=this.getActualEstadoOrdenCompraForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getestadoordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getestadoordencompra_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getformato_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.gettransportista_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("OrdenCompra")) {
			//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getordencompra_descripcion();
			} else {
				//sDescripcion=this.getActualOrdenCompraForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getordencompra_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!ordencompra.getIsNew() && !ordencompra.getIsChanged() && !ordencompra.getIsDeleted()) {
				sDescripcion=ordencompra.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=ordencompra.getasientocontable_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		OrdenCompra ordencompraRow=new OrdenCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ordencompraRow=(OrdenCompra) ordencompraLogic.getOrdenCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			ordencompraRow=(OrdenCompra) ordencompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetalleOrdenCompraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,OrdenCompra ordencompra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormOrdenCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra = (OrdenCompra)this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.ordencompra = (OrdenCompra)this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(ordencompra!=null) {
						this.ordencompra = ordencompra;
					} else {
						this.ordencompra = new OrdenCompra();
					}
				}

				if(this.isTienePermisosDetalleOrdenCompra && this.permiteMantenimiento(this.ordencompra)) {
					DetalleOrdenCompraBeanSwingJInternalFrame detalleordencompraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup=new DetalleOrdenCompraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleordencompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup;
					} else {
						detalleordencompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame;
					}

					List<OrdenCompra> ordencompras=new ArrayList<OrdenCompra>();
					ordencompras.add(this.ordencompra);
					if(!esRelacionado) {
						//detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.setConGuardarRelaciones(false);
						//detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleordencompraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormOrdenCompra.cargarDetalleOrdenCompraBeanSwingJInternalFrame(ordencompras,this.ordencompra,detalleordencompraBeanSwingJInternalFrame,/*conInicializar,*/detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.getConGuardarRelaciones(),detalleordencompraBeanSwingJInternalFrame.detalleordencompraSessionBean.getEsGuardarRelacionado());
					detalleordencompraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleordencompraBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleOrdenCompra("no_relacionado");

						detalleordencompraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleOrdenCompraConstantesFunciones.ITAMANIOFILATABLA + (DetalleOrdenCompraConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleordencompraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
						TitledBorder titledBorderDetalleOrdenCompra=(TitledBorder)detalleordencompraBeanSwingJInternalFrame.jScrollPanelDatosDetalleOrdenCompra.getBorder();

						titledBorderDetalleOrdenCompra.setTitle(titledBorderOrdenCompra.getTitle() + " -> Detalle Orden Compra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleordencompraBeanSwingJInternalFrame);
						}

						detalleordencompraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleordencompraBeanSwingJInternalFrame);

						detalleordencompraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.ordencompraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Orden Compra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualOrdenCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra));			
			this.jButtonDuplicarOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarOrdenCompra && this.isPermisoDuplicarOrdenCompra));			
			this.jButtonCopiarOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarOrdenCompra && this.isPermisoCopiarOrdenCompra));
			this.jButtonVerFormOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormOrdenCompra && this.isPermisoVerFormOrdenCompra));
			
			this.jButtonAbrirOrderByOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));			
			
			this.jButtonNuevoRelacionesOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesOrdenCompra && this.isPermisoNuevoOrdenCompra));			
			this.jButtonNuevoGuardarCambiosOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarOrdenCompra.setVisible((this.isVisibilidadCeldaModificarOrdenCompra && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarOrdenCompra && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarOrdenCompra && this.isPermisoEliminarOrdenCompra));
			this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarOrdenCompra);							
			this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra));						
			this.jButtonDuplicarToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarOrdenCompra && this.isPermisoDuplicarOrdenCompra));						
			this.jButtonCopiarToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarOrdenCompra && this.isPermisoCopiarOrdenCompra));			
			this.jButtonVerFormToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormOrdenCompra && this.isPermisoVerFormOrdenCompra));			
			this.jButtonAbrirOrderByToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));
			this.jButtonNuevoRelacionesToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesOrdenCompra && this.isPermisoNuevoOrdenCompra));			
			this.jButtonNuevoGuardarCambiosToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));			
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaModificarOrdenCompra && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarOrdenCompra  && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarOrdenCompra && this.isPermisoEliminarOrdenCompra));
			this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarToolBarOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarOrdenCompra);				
			this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra));			
			this.jMenuItemDuplicarOrdenCompra.setVisible((this.isVisibilidadCeldaDuplicarOrdenCompra && this.isPermisoDuplicarOrdenCompra));			
			this.jMenuItemCopiarOrdenCompra.setVisible((this.isVisibilidadCeldaCopiarOrdenCompra && this.isPermisoCopiarOrdenCompra));			
			this.jMenuItemVerFormOrdenCompra.setVisible((this.isVisibilidadCeldaVerFormOrdenCompra && this.isPermisoVerFormOrdenCompra));			
			this.jMenuItemAbrirOrderByOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));			
			//this.jMenuItemMostrarOcultarOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));
			this.jMenuItemDetalleAbrirOrderByOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));			
			//this.jMenuItemDetalleMostrarOcultarOrdenCompra.setVisible((this.isVisibilidadCeldaOrdenOrdenCompra && this.isPermisoOrdenOrdenCompra));			
			this.jMenuItemNuevoRelacionesOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesOrdenCompra && this.isPermisoNuevoOrdenCompra));			
			this.jMenuItemNuevoGuardarCambiosOrdenCompra.setVisible((this.isVisibilidadCeldaNuevoOrdenCompra && this.isPermisoNuevoOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));									
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemModificarOrdenCompra.setVisible((this.isVisibilidadCeldaModificarOrdenCompra && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemActualizarOrdenCompra.setVisible((this.isVisibilidadCeldaActualizarOrdenCompra && this.isPermisoActualizarOrdenCompra));	
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemEliminarOrdenCompra.setVisible((this.isVisibilidadCeldaEliminarOrdenCompra && this.isPermisoEliminarOrdenCompra));
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemCancelarOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarOrdenCompra);				
			}
			
			this.jMenuItemGuardarCambiosOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));						
			this.jMenuItemGuardarCambiosTablaOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoOrdenCompra=this.jButtonNuevoOrdenCompra.isVisible();
			this.isVisibilidadCeldaDuplicarOrdenCompra=this.jButtonDuplicarOrdenCompra.isVisible();
			this.isVisibilidadCeldaCopiarOrdenCompra=this.jButtonCopiarOrdenCompra.isVisible();
			this.isVisibilidadCeldaVerFormOrdenCompra=this.jButtonVerFormOrdenCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenOrdenCompra=this.jButtonAbrirOrderByOrdenCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=this.jButtonNuevoRelacionesOrdenCompra.isVisible();
			this.isVisibilidadCeldaModificarOrdenCompra=this.jButtonModificarOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.isVisibilidadCeldaActualizarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=this.jButtonGuardarCambiosTablaOrdenCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoOrdenCompra=this.jButtonNuevoToolBarOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=this.jButtonNuevoRelacionesToolBarOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarToolBarOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarToolBarOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarToolBarOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarToolBarOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarOrdenCompra=this.jButtonGuardarCambiosToolBarOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=this.jButtonGuardarCambiosTablaToolBarOrdenCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoOrdenCompra=this.jMenuItemNuevoOrdenCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=this.jMenuItemNuevoRelacionesOrdenCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.isVisibilidadCeldaModificarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jMenuItemModificarOrdenCompra.isVisible();
			this.isVisibilidadCeldaActualizarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jMenuItemActualizarOrdenCompra.isVisible();
			this.isVisibilidadCeldaEliminarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jMenuItemEliminarOrdenCompra.isVisible();
			this.isVisibilidadCeldaCancelarOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.jMenuItemCancelarOrdenCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarOrdenCompra=this.jMenuItemGuardarCambiosOrdenCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=this.jMenuItemGuardarCambiosTablaOrdenCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesOrdenCompra(Boolean esInicializar) {
		if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
				//if(this.ordencompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesOrdenCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualOrdenCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualOrdenCompra() {
		this.jButtonNuevoOrdenCompra.setVisible(this.isPermisoNuevoOrdenCompra);			
		this.jButtonDuplicarOrdenCompra.setVisible(this.isPermisoDuplicarOrdenCompra);			
		this.jButtonCopiarOrdenCompra.setVisible(this.isPermisoCopiarOrdenCompra);			
		this.jButtonVerFormOrdenCompra.setVisible(this.isPermisoVerFormOrdenCompra);			
		
		this.jButtonAbrirOrderByOrdenCompra.setVisible(this.isPermisoOrdenOrdenCompra);					
		
		this.jButtonNuevoRelacionesOrdenCompra.setVisible(this.isPermisoNuevoOrdenCompra);			
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarOrdenCompra.setVisible(this.isPermisoActualizarOrdenCompra);	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.setVisible(this.isPermisoActualizarOrdenCompra);	
			this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.setVisible(this.isPermisoEliminarOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarOrdenCompra);						
			this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.setVisible(this.isPermisoGuardarCambiosOrdenCompra);							
		}
		
		this.jButtonGuardarCambiosTablaOrdenCompra.setVisible(this.isPermisoActualizarOrdenCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleOrdenCompra() {
		this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarOrdenCompra.setVisible(this.isPermisoActualizarOrdenCompra);	
		this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.setVisible(this.isPermisoActualizarOrdenCompra);	
		this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.setVisible(this.isPermisoEliminarOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.setVisible(this.isVisibilidadCeldaCancelarOrdenCompra);							
		this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.setVisible((this.isVisibilidadCeldaGuardarOrdenCompra && this.isPermisoGuardarCambiosOrdenCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosOrdenCompra() {
		if(OrdenCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualOrdenCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesOrdenCompra() {
	}
	
	public void jTableDatosOrdenCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarOrdenCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.ordencompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderOrdenCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.ordencompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderOrdenCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.ordencompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderOrdenCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.ordencompra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderOrdenCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.ordencompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderOrdenCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.ordencompra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderOrdenCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.ordencompra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderOrdenCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.ordencompra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderOrdenCompra.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.ordencompra.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.ordencompra.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.ordencompra.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.ordencompra.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderOrdenCompra.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.ordencompra.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderOrdenCompra=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderOrdenCompra.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderOrdenCompra.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.ordencompra.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_orden_compraOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoordencompra=true;

			idTienePermisoestadoordencompra=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(EstadoOrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.estadoordencompraBeanSwingJInternalFrame=new EstadoOrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoordencompraBeanSwingJInternalFrame.getEstadoOrdenCompraLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_estado_orden_compra()!=null) {
					this.estadoordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoordencompraBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_estado_orden_compra());
					this.estadoordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.estadoordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderestadoordencompra=(TitledBorder)this.estadoordencompraBeanSwingJInternalFrame.jScrollPanelDatosEstadoOrdenCompra.getBorder();

				titledBorderestadoordencompra.setTitle(titledBorderOrdenCompra.getTitle() + " -> Estado Orden Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_orden_compraOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_estado_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_orden_compra = "+this.ordencompra.getid_estado_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderOrdenCompra=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderOrdenCompra.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderOrdenCompra.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.ordencompra.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderOrdenCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.ordencompra.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderOrdenCompra.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.ordencompra.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderOrdenCompra=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderOrdenCompra.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderOrdenCompra.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.ordencompra.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.ordencompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_descuentoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getporcentaje_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_descuento = "+this.ordencompra.getporcentaje_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.ordencompra.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.ordencompra.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_descuentoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getvalor_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_descuento = "+this.ordencompra.getvalor_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_descuentoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.gettotal_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_descuento = "+this.ordencompra.gettotal_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.ordencompra.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonstockOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getstock()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where stock = "+this.ordencompra.getstock().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsub_totalOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getsub_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where sub_total = "+this.ordencompra.getsub_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_otroOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.gettotal_otro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_otro = "+this.ordencompra.gettotal_otro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonultimo_costoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getultimo_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ultimo_costo = "+this.ordencompra.getultimo_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_itemsOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getnumero_items()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_items = "+this.ordencompra.getnumero_items().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonretencionOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getretencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where retencion = "+this.ordencompra.getretencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.ordencompra.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfleteOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.ordencompra.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonimpuestoOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getimpuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where impuesto = "+this.ordencompra.getimpuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderOrdenCompra.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.ordencompra.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_orden_compraOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoordencompra=true;

			idTienePermisoordencompra=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(OrdenCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoordencompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.ordencompraBeanSwingJInternalFrame=new OrdenCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ordencompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ordencompraBeanSwingJInternalFrame.getOrdenCompraLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_orden_compra()!=null) {
					this.ordencompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ordencompraBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_orden_compra());
					this.ordencompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaOrdenCompra();
				}

				JInternalFrameBase jinternalFrame =this.ordencompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderordencompra=(TitledBorder)this.ordencompraBeanSwingJInternalFrame.jScrollPanelDatosOrdenCompra.getBorder();

				titledBorderordencompra.setTitle(titledBorderOrdenCompra.getTitle() + " -> OrdenCompra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_orden_compraOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_orden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_orden_compra = "+this.ordencompra.getid_orden_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderOrdenCompra=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosOrdenCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderOrdenCompra.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableOrdenCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebOrdenCompra(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosOrdenCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosOrdenCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.ordencompraLogic.getConnexion());

				if(this.ordencompra.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.ordencompra.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderOrdenCompra=(TitledBorder)this.jScrollPanelDatosOrdenCompra.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderOrdenCompra.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.ordencompra.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.ordencompra.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaOrdenCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.getordencompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.ordencompra==null) {
						this.ordencompra = new OrdenCompra();
					}

					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);
				}

				if(this.ordencompra.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.ordencompra.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingOrdenCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdAnio();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAsientoContableOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdAsientoContable();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdCliente();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdEjercicio();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdEmpleado();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdEmpresa();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoOrdenCompraOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdEstadoOrdenCompra();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdFormato();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdMes();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdModulo();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdMoneda();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdOrdenCompraOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdOrdenCompra();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdPeriodo();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdSucursal();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdTipoCambio();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdTransportista();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioOrdenCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingOrdenCompra(false,false);

			this.getOrdenComprasFK_IdUsuario();

			this.inicializarActualizarBindingOrdenCompra(false);

			//if(OrdenCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingOrdenCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.ordencompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameOrdenCompra() {
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
		

		if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
			this.jInternalFrameDetalleFormOrdenCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormOrdenCompra.dispose();
			this.jInternalFrameDetalleFormOrdenCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
			this.jInternalFrameReporteDinamicoOrdenCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoOrdenCompra.dispose();
			this.jInternalFrameReporteDinamicoOrdenCompra=null;
		}
		
		if(this.jInternalFrameImportacionOrdenCompra!=null) {
			this.jInternalFrameImportacionOrdenCompra.setVisible(false);	    			
			this.jInternalFrameImportacionOrdenCompra.dispose();
			this.jInternalFrameImportacionOrdenCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	public void closingTreeFrameOrdenCompra() {
		
		if(this.jInternalFrameTreeOrdenCompra!=null) {
			this.jInternalFrameTreeOrdenCompra.setVisible(false);	    			
			this.jInternalFrameTreeOrdenCompra.dispose();
			this.jInternalFrameTreeOrdenCompra=null;
		}
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessOrdenCompra();
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarOrdenCompra")) {
				jButtonDuplicarOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarOrdenCompra")) {
				jButtonCopiarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormOrdenCompra")) {
				jButtonVerFormOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarOrdenCompra")) {
				jButtonDuplicarOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarOrdenCompra")) {
				jButtonDuplicarOrdenCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarOrdenCompra")) {
				jButtonModificarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarOrdenCompra")) {
				jButtonModificarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarOrdenCompra")) {
				jButtonModificarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarOrdenCompra")) {
				jButtonActualizarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarOrdenCompra")) {
				jButtonActualizarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarOrdenCompra")) {
				jButtonActualizarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarOrdenCompra")) {
				jButtonEliminarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarOrdenCompra")) {
				jButtonEliminarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarOrdenCompra")) {
				jButtonEliminarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarOrdenCompra")) {
				jButtonCancelarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarOrdenCompra")) {
				jButtonCancelarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarOrdenCompra")) {
				jButtonCancelarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarOrdenCompra")) {
				jButtonCerrarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarOrdenCompra")) {
				jButtonCerrarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarOrdenCompra")) {
				jButtonCerrarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarOrdenCompra")) {
				jButtonMostrarOcultarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarOrdenCompra")) {
				jButtonCancelarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarOrdenCompra")) {
				jButtonCopiarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarOrdenCompra")) {
				jButtonVerFormOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarOrdenCompra")) {
				jButtonCopiarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormOrdenCompra")) {
				jButtonVerFormOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionOrdenCompra")) {
				jButtonRecargarInformacionOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarOrdenCompra")) {
				jButtonRecargarInformacionOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionOrdenCompra")) {
				jButtonRecargarInformacionOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("ArbolOrdenCompra")) {
				jButtonArbolOrdenCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("AnterioresOrdenCompra")) {
				jButtonAnterioresOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarOrdenCompra")) {
				jButtonAnterioresOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreOrdenCompra")) {
				jButtonAnterioresOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesOrdenCompra")) {
				jButtonSiguientesOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarOrdenCompra")) {
				jButtonSiguientesOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesOrdenCompra")) {
				jButtonSiguientesOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByOrdenCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByOrdenCompra")) {
				jButtonAbrirOrderByOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarOrdenCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarOrdenCompra")) {
				jButtonMostrarOcultarOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosOrdenCompra")) {
				jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarOrdenCompra")) {
				jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosOrdenCompra")) {
				jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoOrdenCompra")) {
				jButtonCerrarReporteDinamicoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoOrdenCompra")) {
				jButtonGenerarReporteDinamicoOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoOrdenCompra")) {
				
				jButtonGenerarExcelReporteDinamicoOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionOrdenCompra")) {
				jButtonCerrarImportacionOrdenCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionOrdenCompra")) {
				
				jButtonGenerarImportacionOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionOrdenCompra")) {
				
				jButtonAbrirImportacionOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesOrdenCompra")) {
				jComboBoxTiposAccionesOrdenCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesOrdenCompra")) {
				jComboBoxTiposRelacionesOrdenCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioOrdenCompra")) {
				jComboBoxTiposAccionesOrdenCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarOrdenCompra")) {
				
				jComboBoxTiposSeleccionarOrdenCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralOrdenCompra")) {
				jTextFieldValorCampoGeneralOrdenCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByOrdenCompra")) {
				jButtonAbrirOrderByOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarOrdenCompra")) {
				jButtonAbrirOrderByOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByOrdenCompra")) {
				jButtonCerrarOrderByOrdenCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idOrdenCompraBusqueda")) {
				this.jButtonidOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaOrdenCompraUpdate")) {
				this.jButtonid_empresaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaOrdenCompraBusqueda")) {
				this.jButtonid_empresaOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalOrdenCompraUpdate")) {
				this.jButtonid_sucursalOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalOrdenCompraBusqueda")) {
				this.jButtonid_sucursalOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloOrdenCompraUpdate")) {
				this.jButtonid_moduloOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloOrdenCompraBusqueda")) {
				this.jButtonid_moduloOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioOrdenCompraUpdate")) {
				this.jButtonid_ejercicioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoOrdenCompraUpdate")) {
				this.jButtonid_periodoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoOrdenCompraBusqueda")) {
				this.jButtonid_periodoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioOrdenCompraUpdate")) {
				this.jButtonid_anioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioOrdenCompraBusqueda")) {
				this.jButtonid_anioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesOrdenCompraUpdate")) {
				this.jButtonid_mesOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesOrdenCompraBusqueda")) {
				this.jButtonid_mesOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioOrdenCompraUpdate")) {
				this.jButtonid_usuarioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioOrdenCompraBusqueda")) {
				this.jButtonid_usuarioOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionOrdenCompraBusqueda")) {
				this.jButtonfecha_emisionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaOrdenCompraBusqueda")) {
				this.jButtonfecha_entregaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialOrdenCompraBusqueda")) {
				this.jButtonnumero_secuencialOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaOrdenCompraUpdate")) {
				this.jButtonid_monedaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaOrdenCompraBusqueda")) {
				this.jButtonid_monedaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompra")) {
				this.jButtonid_tipo_cambioOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompraUpdate")) {
				this.jButtonid_tipo_cambioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompraBusqueda")) {
				this.jButtonid_tipo_cambioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_orden_compraOrdenCompraUpdate")) {
				this.jButtonid_estado_orden_compraOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_orden_compraOrdenCompraBusqueda")) {
				this.jButtonid_estado_orden_compraOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteOrdenCompra")) {
				this.jButtonid_clienteOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteOrdenCompraUpdate")) {
				this.jButtonid_clienteOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteOrdenCompraBusqueda")) {
				this.jButtonid_clienteOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoOrdenCompraUpdate")) {
				this.jButtonid_formatoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoOrdenCompraBusqueda")) {
				this.jButtonid_formatoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaOrdenCompraUpdate")) {
				this.jButtonid_transportistaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaOrdenCompraBusqueda")) {
				this.jButtonid_transportistaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompra")) {
				this.jButtonid_empleadoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompraUpdate")) {
				this.jButtonid_empleadoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompraBusqueda")) {
				this.jButtonid_empleadoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionOrdenCompraBusqueda")) {
				this.jButtondescripcionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoOrdenCompraBusqueda")) {
				this.jButtonporcentaje_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanOrdenCompraBusqueda")) {
				this.jButtonsumanOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceOrdenCompraBusqueda")) {
				this.jButtoniceOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_descuentoOrdenCompraBusqueda")) {
				this.jButtonvalor_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoOrdenCompraBusqueda")) {
				this.jButtontotal_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaOrdenCompraBusqueda")) {
				this.jButtonivaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stockOrdenCompraBusqueda")) {
				this.jButtonstockOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalOrdenCompraBusqueda")) {
				this.jButtonsub_totalOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_otroOrdenCompraBusqueda")) {
				this.jButtontotal_otroOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoOrdenCompraBusqueda")) {
				this.jButtonultimo_costoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsOrdenCompraBusqueda")) {
				this.jButtonnumero_itemsOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionOrdenCompraBusqueda")) {
				this.jButtonretencionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalOrdenCompraBusqueda")) {
				this.jButtontotalOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteOrdenCompraBusqueda")) {
				this.jButtonfleteOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoOrdenCompraBusqueda")) {
				this.jButtonimpuestoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloOrdenCompraUpdate")) {
				this.jButtonid_tipo_transaccion_moduloOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloOrdenCompraBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraOrdenCompraUpdate")) {
				this.jButtonid_orden_compraOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompra")) {
				this.jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompraUpdate")) {
				this.jButtonid_asiento_contableOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompraBusqueda")) {
				this.jButtonid_asiento_contableOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaOrdenCompraBusqueda")) {
				this.jButtonfechaOrdenCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableOrdenCompra")) {
				this.jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteOrdenCompra")) {
				this.jButtonid_clienteOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoOrdenCompra")) {
				this.jButtonid_empleadoOrdenCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableOrdenCompra")) {
				this.jButtonFK_IdAsientoContableOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteOrdenCompra")) {
				this.jButtonFK_IdClienteOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoOrdenCompra")) {
				this.jButtonFK_IdEmpleadoOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoOrdenCompraOrdenCompra")) {
				this.jButtonFK_IdEstadoOrdenCompraOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdOrdenCompraOrdenCompra")) {
				this.jButtonFK_IdOrdenCompraOrdenCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloOrdenCompra")) {
				this.jButtonFK_IdTipoTransaccionModuloOrdenCompraActionPerformed(evt);
			}
			
			;
			
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessOrdenCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				


			if(sTipo.equals("porcentaje_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			OrdenCompra ordencompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				ordencompraLocal=this.ordencompra;
			} else {
				ordencompraLocal=this.ordencompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("porcentaje_descuentoOrdenCompra")) {
					if(ordencompraLocal.getporcentaje_descuento()==Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("valor_descuentoOrdenCompra")) {
					if(ordencompraLocal.getvalor_descuento()==Double.parseDouble(this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
							
				
				


			if(sTipo.equals("porcentaje_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("porcentaje_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
								
						
				


				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
								
				
				


				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
							
				
				


				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
								
				
				


			if(sTipo.equals("porcentaje_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valor_descuentoOrdenCompra")) {
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					//classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormOrdenCompra(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosOrdenCompra")) {
					jCheckBoxSeleccionarTodosOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosOrdenCompra")) {
					jCheckBoxSeleccionadosOrdenCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarOrdenCompra")) {
					
				}
				
				


				
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
												
				
				


				
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaOrdenCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.ordencompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.ordencompra);
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(OrdenCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",OrdenCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaOrdenCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.ordencompraAnterior =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarOrdenCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosOrdenCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.ordencompra =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.ordencompra =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.ordencompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarOrdenCompra")) {
				
				}
				
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarOrdenCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosOrdenCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarOrdenCompra")) {
			
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessOrdenCompra();
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			if(sTipo.equals("NuevoOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarOrdenCompra")) {
				jButtonDuplicarOrdenCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarOrdenCompra")) {
				jButtonCopiarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormOrdenCompra")) {
				jButtonVerFormOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesOrdenCompra")) {
				jButtonNuevoOrdenCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarOrdenCompra")) {
				jButtonModificarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarOrdenCompra")) {
				jButtonActualizarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarOrdenCompra")) {
				jButtonEliminarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarOrdenCompra")) {
				jButtonCancelarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrdenCompra")) {
				jButtonCerrarOrdenCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosOrdenCompra")) {
				jButtonGuardarCambiosOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosOrdenCompra")) {
				jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByOrdenCompra")) {
				jButtonAbrirOrderByOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionOrdenCompra")) {
				jButtonRecargarInformacionOrdenCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresOrdenCompra")) {
				jButtonAnterioresOrdenCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesOrdenCompra")) {
				jButtonSiguientesOrdenCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idOrdenCompraBusqueda")) {
				this.jButtonidOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaOrdenCompraUpdate")) {
				this.jButtonid_empresaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaOrdenCompraBusqueda")) {
				this.jButtonid_empresaOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalOrdenCompraUpdate")) {
				this.jButtonid_sucursalOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalOrdenCompraBusqueda")) {
				this.jButtonid_sucursalOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloOrdenCompraUpdate")) {
				this.jButtonid_moduloOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloOrdenCompraBusqueda")) {
				this.jButtonid_moduloOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioOrdenCompraUpdate")) {
				this.jButtonid_ejercicioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioOrdenCompraBusqueda")) {
				this.jButtonid_ejercicioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoOrdenCompraUpdate")) {
				this.jButtonid_periodoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoOrdenCompraBusqueda")) {
				this.jButtonid_periodoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioOrdenCompraUpdate")) {
				this.jButtonid_anioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioOrdenCompraBusqueda")) {
				this.jButtonid_anioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesOrdenCompraUpdate")) {
				this.jButtonid_mesOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesOrdenCompraBusqueda")) {
				this.jButtonid_mesOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioOrdenCompraUpdate")) {
				this.jButtonid_usuarioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioOrdenCompraBusqueda")) {
				this.jButtonid_usuarioOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionOrdenCompraBusqueda")) {
				this.jButtonfecha_emisionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaOrdenCompraBusqueda")) {
				this.jButtonfecha_entregaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialOrdenCompraBusqueda")) {
				this.jButtonnumero_secuencialOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaOrdenCompraUpdate")) {
				this.jButtonid_monedaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaOrdenCompraBusqueda")) {
				this.jButtonid_monedaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompra")) {
				this.jButtonid_tipo_cambioOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompraUpdate")) {
				this.jButtonid_tipo_cambioOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioOrdenCompraBusqueda")) {
				this.jButtonid_tipo_cambioOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_orden_compraOrdenCompraUpdate")) {
				this.jButtonid_estado_orden_compraOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_orden_compraOrdenCompraBusqueda")) {
				this.jButtonid_estado_orden_compraOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteOrdenCompra")) {
				this.jButtonid_clienteOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteOrdenCompraUpdate")) {
				this.jButtonid_clienteOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteOrdenCompraBusqueda")) {
				this.jButtonid_clienteOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoOrdenCompraUpdate")) {
				this.jButtonid_formatoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoOrdenCompraBusqueda")) {
				this.jButtonid_formatoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaOrdenCompraUpdate")) {
				this.jButtonid_transportistaOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaOrdenCompraBusqueda")) {
				this.jButtonid_transportistaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompra")) {
				this.jButtonid_empleadoOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompraUpdate")) {
				this.jButtonid_empleadoOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoOrdenCompraBusqueda")) {
				this.jButtonid_empleadoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionOrdenCompraBusqueda")) {
				this.jButtondescripcionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoOrdenCompraBusqueda")) {
				this.jButtonporcentaje_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanOrdenCompraBusqueda")) {
				this.jButtonsumanOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceOrdenCompraBusqueda")) {
				this.jButtoniceOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_descuentoOrdenCompraBusqueda")) {
				this.jButtonvalor_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoOrdenCompraBusqueda")) {
				this.jButtontotal_descuentoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaOrdenCompraBusqueda")) {
				this.jButtonivaOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stockOrdenCompraBusqueda")) {
				this.jButtonstockOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalOrdenCompraBusqueda")) {
				this.jButtonsub_totalOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_otroOrdenCompraBusqueda")) {
				this.jButtontotal_otroOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoOrdenCompraBusqueda")) {
				this.jButtonultimo_costoOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_itemsOrdenCompraBusqueda")) {
				this.jButtonnumero_itemsOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("retencionOrdenCompraBusqueda")) {
				this.jButtonretencionOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalOrdenCompraBusqueda")) {
				this.jButtontotalOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteOrdenCompraBusqueda")) {
				this.jButtonfleteOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoOrdenCompraBusqueda")) {
				this.jButtonimpuestoOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloOrdenCompraUpdate")) {
				this.jButtonid_tipo_transaccion_moduloOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloOrdenCompraBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloOrdenCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_orden_compraOrdenCompraUpdate")) {
				this.jButtonid_orden_compraOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_orden_compraOrdenCompraBusqueda")) {
				this.jButtonid_orden_compraOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompra")) {
				this.jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompraUpdate")) {
				this.jButtonid_asiento_contableOrdenCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableOrdenCompraBusqueda")) {
				this.jButtonid_asiento_contableOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteOrdenCompraBusqueda")) {
				this.jButtonnumero_comprobanteOrdenCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaOrdenCompraBusqueda")) {
				this.jButtonfechaOrdenCompraBusquedaActionPerformed(evt);
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessOrdenCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameOrdenCompra")) {
				closingInternalFrameOrdenCompra();
				
			} else if(sTipo.equals("jButtonCancelarOrdenCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormOrdenCompra = (JInternalFrameBase)evt.getSource();
	            	
	            OrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(OrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormOrdenCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarOrdenCompraActionPerformed(null);
			}
			
			OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.ordencompra,new Object(),this.ordencompraParameterGeneral,this.ordencompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormOrdenCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.ordencompra)) {
			if(!esControlTabla) {
				if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);			
				}
				
				if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualOrdenCompra(this.ordencompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.ordencompraReturnGeneral=ordencompraLogic.procesarEventosOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.ordencompraLogic.getOrdenCompras(),this.ordencompra,this.ordencompraParameterGeneral,this.isEsNuevoOrdenCompra,classes);//this.ordencompraLogic.getOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanOrdenCompra(this.ordencompraReturnGeneral,this.ordencompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanOrdenCompra(classes,this.ordencompraReturnGeneral,this.ordencompraBean,false);
					}
						
					if(this.ordencompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra());	
					}
						
					if(this.ordencompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra(),classes);//this.ordencompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioOrdenCompra(this.ordencompra,classes);//this.ordencompraBean);									
				}
			
				if(OrdenCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualOrdenCompra(this.ordencompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysOrdenCompra(this.ordencompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.ordencompraAnterior!=null) {
						this.ordencompra=this.ordencompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.ordencompraReturnGeneral=ordencompraLogic.procesarEventosOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.ordencompraLogic.getOrdenCompras(),this.ordencompra,this.ordencompraParameterGeneral,this.isEsNuevoOrdenCompra,classes);//this.ordencompraLogic.getOrdenCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.ordencompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.ordencompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.ordencompraReturnGeneral.getOrdenCompra(),ordencompraLogic.getOrdenCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.ordencompraReturnGeneral.getOrdenCompra(),this.ordencompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosOrdenCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosOrdenCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosOrdenCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosOrdenCompra() throws Exception {
		
		OrdenCompraModel ordencompraModel=(OrdenCompraModel)this.jTableDatosOrdenCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ordencompraModel.ordencompras=this.ordencompraLogic.getOrdenCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			ordencompraModel.ordencompras=this.ordencompras;
		}
		
		
		((OrdenCompraModel) this.jTableDatosOrdenCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaOrdenCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getordencompraAnterior(),this.ordencompraLogic.getOrdenCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getordencompraAnterior(),this.ordencompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosOrdenCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioOrdenCompra(OrdenCompra ordencompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleOrdenCompra.class)) {
					this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.setDetalleOrdenCompras(ordencompra.getDetalleOrdenCompras());
					this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.ordencompra,new Object(),generalEntityParameterGeneral,this.ordencompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.ordencompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=OrdenCompraConstantesFunciones.getClassesRelationshipsOfOrdenCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=OrdenCompraConstantesFunciones.getClassesRelationshipsFromStringsOfOrdenCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormOrdenCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				OrdenCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.ordencompra,new Object(),generalEntityParameterGeneral,this.ordencompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioOrdenCompra(OrdenCompraBean ordencompraBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleOrdenCompra.class)) {
					this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.setDetalleOrdenCompras(ordencompra.getDetalleOrdenCompras());
					this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleOrdenCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanOrdenCompra(ArrayList<Classe> classes,OrdenCompraReturnGeneral ordencompraReturnGeneral,OrdenCompraBean ordencompraBean,Boolean conDefault) throws Exception {
		
			this.ordencompraBean.setDetalleOrdenCompras(ordencompraReturnGeneral.getOrdenCompra().getDetalleOrdenCompras());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualOrdenCompra(OrdenCompra ordencompra,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleOrdenCompra.class)) {
					ordencompra.setDetalleOrdenCompras(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraBeanSwingJInternalFrame.detalleordencompraLogic.getDetalleOrdenCompras());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.ordencompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormOrdenCompra = new OrdenCompraDetalleFormJInternalFrame(jDesktopPane,this.ordencompraSessionBean.getConGuardarRelaciones(),this.ordencompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.setVisible(false);
		this.jInternalFrameDetalleFormOrdenCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormOrdenCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormOrdenCompra.ordencompraLogic=this.ordencompraLogic;
		
		this.cargarCombosFrameForeignKeyOrdenCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleOrdenCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleOrdenCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyOrdenCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyOrdenCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarOrdenCompra"));
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarOrdenCompra"));

		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarOrdenCompra"));
					
		this.jInternalFrameDetalleFormOrdenCompra.jMenuItemModificarOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarOrdenCompra"));
						
		this.jInternalFrameDetalleFormOrdenCompra.jMenuItemActualizarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarOrdenCompra"));
								
		this.jInternalFrameDetalleFormOrdenCompra.jMenuItemEliminarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarOrdenCompra"));
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarOrdenCompra"));
					
		this.jInternalFrameDetalleFormOrdenCompra.jMenuItemCancelarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarOrdenCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jMenuItemDetalleCerrarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarOrdenCompra"));		
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarOrdenCompra"));
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarOrdenCompra"));
		
		
		
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioOrdenCompra"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"porcentaje_descuentoOrdenCompra"));
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.addActionListener(new TextFieldActionListener(this,"porcentaje_descuentoOrdenCompra"));
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentaje_descuentoOrdenCompra,"porcentaje_descuentoOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"valor_descuentoOrdenCompra"));
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.addActionListener(new TextFieldActionListener(this,"valor_descuentoOrdenCompra"));
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalor_descuentoOrdenCompra,"valor_descuentoOrdenCompra"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonidOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_emisionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_entregaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_secuencialOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraBusqueda"));
		//jButtonid_clienteOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraBusqueda"));
		//jButtonid_empleadoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtondescripcionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonporcentaje_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsumanOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtoniceOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonvalor_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonivaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonstockOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsub_totalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_otroOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonultimo_costoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_itemsOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonretencionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfleteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonimpuestoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraBusqueda"));
		//jButtonid_asiento_contableOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_comprobanteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfechaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaOrdenCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesOrdenCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarOrdenCompra"));
		}
		
		this.jTableDatosOrdenCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarOrdenCompra"));
		
		this.jTableDatosOrdenCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarOrdenCompra"));
		
		this.jButtonNuevoOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoOrdenCompra"));
		
		this.jButtonDuplicarOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarOrdenCompra"));
		
		this.jButtonCopiarOrdenCompra.addActionListener(new ButtonActionListener(this,"CopiarOrdenCompra"));
		
		this.jButtonVerFormOrdenCompra.addActionListener(new ButtonActionListener(this,"VerFormOrdenCompra"));
		
		
		this.jButtonNuevoToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarOrdenCompra"));
			
		this.jButtonDuplicarToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarOrdenCompra"));
			
		this.jMenuItemNuevoOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoOrdenCompra"));
			
		this.jMenuItemDuplicarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarOrdenCompra"));		
		
		
		this.jButtonNuevoRelacionesOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesOrdenCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarOrdenCompra"));
			
		this.jMenuItemNuevoRelacionesOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesOrdenCompra"));		
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonModificarToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarOrdenCompra"));
			
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemModificarOrdenCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarOrdenCompra.addActionListener (new ButtonActionListener(this,"ActualizarOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonActualizarToolBarOrdenCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarOrdenCompra"));
				
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemActualizarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonEliminarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarOrdenCompra"));
						
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemEliminarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonCancelarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarOrdenCompra"));
			
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemCancelarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarOrdenCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarOrdenCompra"));		
		
		
		this.jButtonCerrarOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarOrdenCompra"));
		
		
		this.jButtonCerrarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarOrdenCompra"));
			
		this.jMenuItemCerrarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarOrdenCompra"));
			
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jMenuItemDetalleCerrarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarOrdenCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosOrdenCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarOrdenCompra"));
		}
		
		this.jButtonCopiarToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarOrdenCompra"));
			
		this.jButtonVerFormToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarOrdenCompra"));
		
		this.jMenuItemGuardarCambiosOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosOrdenCompra"));
			
		this.jMenuItemCopiarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarOrdenCompra"));		
		
		this.jMenuItemVerFormOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormOrdenCompra"));		
		
		
		this.jButtonGuardarCambiosTablaOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaOrdenCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarOrdenCompra"));
			
		this.jMenuItemGuardarCambiosTablaOrdenCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaOrdenCompra"));		
		
		
		
		this.jButtonRecargarInformacionOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionOrdenCompra"));
					
		this.jButtonRecargarInformacionToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarOrdenCompra"));
		
		this.jMenuItemRecargarInformacionOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionOrdenCompra"));		
		
		
		this.jButtonArbolOrdenCompra.addActionListener (new ButtonActionListener(this,"ArbolOrdenCompra"));
		
		this.jButtonAnterioresOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresOrdenCompra"));
		
		
		this.jButtonAnterioresToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarOrdenCompra"));
		
		this.jMenuItemAnterioresOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresOrdenCompra"));		
		
		
		this.jButtonSiguientesOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesOrdenCompra"));
		
		
		this.jButtonSiguientesToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarOrdenCompra"));
			
		this.jMenuItemSiguientesOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesOrdenCompra"));
			
		this.jMenuItemAbrirOrderByOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByOrdenCompra"));
			
		this.jMenuItemMostrarOcultarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarOrdenCompra"));
			
		this.jMenuItemDetalleAbrirOrderByOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByOrdenCompra"));
			
		this.jMenuItemDetalleMostarOcultarOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarOrdenCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosOrdenCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarOrdenCompra"));
			
		this.jMenuItemNuevoGuardarCambiosOrdenCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosOrdenCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosOrdenCompra"));

		this.jCheckBoxSeleccionadosOrdenCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosOrdenCompra"));
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioOrdenCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesOrdenCompra"));
			
		this.jComboBoxTiposAccionesOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesOrdenCompra"));
					
		this.jComboBoxTiposSeleccionarOrdenCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarOrdenCompra"));
			
		this.jTextFieldValorCampoGeneralOrdenCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralOrdenCompra"));		
		
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"porcentaje_descuentoOrdenCompra"));
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.addActionListener(new TextFieldActionListener(this,"porcentaje_descuentoOrdenCompra"));
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentaje_descuentoOrdenCompra,"porcentaje_descuentoOrdenCompra"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.addFocusListener(new TextFieldFocusListener(this,"valor_descuentoOrdenCompra"));
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.addActionListener(new TextFieldActionListener(this,"valor_descuentoOrdenCompra"));
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalor_descuentoOrdenCompra,"valor_descuentoOrdenCompra"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonidOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_emisionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_entregaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_secuencialOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraBusqueda"));
		//jButtonid_clienteOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraBusqueda"));
		//jButtonid_empleadoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtondescripcionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonporcentaje_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsumanOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtoniceOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonvalor_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonivaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonstockOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsub_totalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_otroOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonultimo_costoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_itemsOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonretencionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfleteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonimpuestoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraBusqueda"));
		//jButtonid_asiento_contableOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_comprobanteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfechaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaOrdenCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableOrdenCompra"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompra"));

			this.jButtonFK_IdClienteOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteOrdenCompra"));

			this.jButtonBuscarFK_IdClienteid_clienteOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompra"));

			this.jButtonFK_IdEmpleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoOrdenCompra"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompra"));

			this.jButtonFK_IdEstadoOrdenCompraOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoOrdenCompraOrdenCompra"));

			this.jButtonFK_IdOrdenCompraOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraOrdenCompra"));

			this.jButtonFK_IdTipoTransaccionModuloOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloOrdenCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoOrdenCompra!=null) {
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoOrdenCompra"));
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoOrdenCompra"));
				this.jInternalFrameReporteDinamicoOrdenCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoOrdenCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoOrdenCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoOrdenCompra"));				
			//this.jButtonGenerarReporteDinamicoOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoOrdenCompra"));
			//this.jButtonGenerarExcelReporteDinamicoOrdenCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoOrdenCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionOrdenCompra!=null) {
				this.jInternalFrameImportacionOrdenCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionOrdenCompra"));
				this.jInternalFrameImportacionOrdenCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionOrdenCompra"));
				this.jInternalFrameImportacionOrdenCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionOrdenCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByOrdenCompra"));
			
			this.jButtonAbrirOrderByToolBarOrdenCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarOrdenCompra"));			
			
			if(this.jInternalFrameOrderByOrdenCompra!=null) {
				this.jInternalFrameOrderByOrdenCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByOrdenCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormOrdenCompra.jTabbedPaneRelacionesOrdenCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesOrdenCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameOrdenCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormOrdenCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormOrdenCompra = (JInternalFrameBase)event.getSource();
	            	
	            OrdenCompraBeanSwingJInternalFrame jInternalFrameParent=(OrdenCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormOrdenCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarOrdenCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosOrdenCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosOrdenCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosOrdenCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosOrdenCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoOrdenCompra";
		inputMap = this.jButtonNuevoOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoOrdenCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoOrdenCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesOrdenCompra";
		inputMap = this.jButtonNuevoRelacionesOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoOrdenCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarOrdenCompra";
		inputMap = this.jButtonModificarOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarOrdenCompra";
		inputMap = this.jButtonActualizarOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarOrdenCompra";
		inputMap = this.jButtonEliminarOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarOrdenCompra";
		inputMap = this.jButtonCancelarOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarOrdenCompra";
		inputMap = this.jButtonCerrarOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosOrdenCompra";
		inputMap = this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormOrdenCompra.jButtonGuardarCambiosOrdenCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosOrdenCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonArbolOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonArbolOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosOrdenCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosOrdenCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralOrdenCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralOrdenCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonidOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"idOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empresaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_sucursalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_ejercicioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_periodoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_anioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_mesOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_usuarioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_emisionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfecha_entregaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_secuencialOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_monedaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaOrdenCompraBusqueda"));
		//jButtonid_tipo_cambioOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_estado_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_orden_compraOrdenCompraBusqueda"));
		//jButtonid_clienteOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_formatoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_transportistaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaOrdenCompraBusqueda"));
		//jButtonid_empleadoOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtondescripcionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonporcentaje_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsumanOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sumanOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtoniceOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"iceOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonvalor_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"valor_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_descuentoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonivaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ivaOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonstockOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"stockOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonsub_totalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotal_otroOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"total_otroOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonultimo_costoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_itemsOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_itemsOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonretencionOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"retencionOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtontotalOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfleteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fleteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonimpuestoOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"impuestoOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_transaccion_moduloOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloOrdenCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_orden_compraOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_orden_compraOrdenCompraBusqueda"));
		//jButtonid_asiento_contableOrdenCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableOrdenCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonnumero_comprobanteOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteOrdenCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormOrdenCompra.jButtonfechaOrdenCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaOrdenCompraBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableOrdenCompra"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableOrdenCompra.addActionListener(new ButtonActionListener(this,"id_asiento_contableOrdenCompra"));

		this.jButtonFK_IdClienteOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdClienteOrdenCompra"));

		this.jButtonBuscarFK_IdClienteid_clienteOrdenCompra.addActionListener(new ButtonActionListener(this,"id_clienteOrdenCompra"));

		this.jButtonFK_IdEmpleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoOrdenCompra"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoOrdenCompra.addActionListener(new ButtonActionListener(this,"id_empleadoOrdenCompra"));

		this.jButtonFK_IdEstadoOrdenCompraOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoOrdenCompraOrdenCompra"));

		this.jButtonFK_IdOrdenCompraOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdOrdenCompraOrdenCompra"));

		this.jButtonFK_IdTipoTransaccionModuloOrdenCompra.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloOrdenCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionOrdenCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionOrdenCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarOrdenCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosOrdenCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
					ordencompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(OrdenCompra ordencompraAux:ordencompras) {
					ordencompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
						ordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(OrdenCompra ordencompraAux:ordencompras) {
						ordencompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(OrdenCompra ordencompraAux:ordencompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosOrdenCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosOrdenCompra.getSelectedRows();
			
			OrdenCompra ordencompraLocal=new OrdenCompra();
			
			//this.seleccionarTodosOrdenCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					ordencompraLocal =(OrdenCompra) this.ordencompraLogic.getOrdenCompras().toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					ordencompraLocal =(OrdenCompra) this.ordencompras.toArray()[this.jTableDatosOrdenCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				ordencompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
						ordencompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(OrdenCompra ordencompraAux:ordencompras) {
						ordencompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaOrdenCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosOrdenCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosOrdenCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosOrdenCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualOrdenCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarOrdenCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralOrdenCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralOrdenCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(OrdenCompra ordencompraAux:this.ordencompraLogic.getOrdenCompras()) {
				
						if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							ordencompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							ordencompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							ordencompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							ordencompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							ordencompraAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							ordencompraAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_ICE)) {
							existe=true;
							ordencompraAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO)) {
							existe=true;
							ordencompraAux.setvalor_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							ordencompraAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							ordencompraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_STOCK)) {
							existe=true;
							ordencompraAux.setstock(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							ordencompraAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO)) {
							existe=true;
							ordencompraAux.settotal_otro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							ordencompraAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							ordencompraAux.setnumero_items(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							ordencompraAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							ordencompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							ordencompraAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							ordencompraAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							ordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							ordencompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(OrdenCompra ordencompraAux:ordencompras) {
					
						if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							ordencompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							ordencompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							ordencompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							ordencompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							ordencompraAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							ordencompraAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_ICE)) {
							existe=true;
							ordencompraAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO)) {
							existe=true;
							ordencompraAux.setvalor_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							ordencompraAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IVA)) {
							existe=true;
							ordencompraAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_STOCK)) {
							existe=true;
							ordencompraAux.setstock(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							ordencompraAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO)) {
							existe=true;
							ordencompraAux.settotal_otro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							ordencompraAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS)) {
							existe=true;
							ordencompraAux.setnumero_items(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_RETENCION)) {
							existe=true;
							ordencompraAux.setretencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							ordencompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							ordencompraAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							ordencompraAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							ordencompraAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							ordencompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaOrdenCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesOrdenCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioOrdenCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesOrdenCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteOrdenCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessOrdenCompra(conSplash);
				
					this.generarReporteOrdenComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoOrdenComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoOrdenComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessOrdenCompra();
				
				this.exportarOrdenComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionOrdenCompras();
				//this.importarOrdenCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessOrdenCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelOrdenComprasSeleccionados();
				//this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE OrdenCompra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessOrdenCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoOrdenCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyOrdenCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(OrdenCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteOrdenCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessOrdenCompra(conSplash);
					
						//this.actualizarParametrosGeneralOrdenCompra();
						
						this.generarReporteProcesoAccionOrdenComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(OrdenCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO OrdenCompraS SELECCIONADOS?", "MANTENIMIENTO DE OrdenCompra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessOrdenCompra();
				
						this.actualizarParametrosGeneralOrdenCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.ordencompraReturnGeneral=ordencompraLogic.procesarAccionOrdenComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.ordencompraLogic.getOrdenCompras(),this.ordencompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralOrdenCompra();
					
					OrdenCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarOrdenCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesOrdenCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormOrdenCompra.jComboBoxTiposAccionesFormularioOrdenCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessOrdenCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesOrdenCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessOrdenCompra();
			
			if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
			OrdenCompra ordencompra=new OrdenCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingOrdenCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesOrdenCompra.getSelectedItem();
			
			
			
			
			ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(ordencomprasSeleccionados.size()==1) {
				for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
					ordencompra=ordencompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Orden Compra")) {
					jButtonDetalleOrdenCompraActionPerformed(null,rowIndex,true,false,ordencompra);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessOrdenCompra();
			
      		//this.finishProcessOrdenCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarOrdenCompraReturnGeneral() throws Exception {
		if(this.ordencompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.ordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.ordencompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.ordencompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.ordencompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.ordencompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingOrdenCompra(false);
		}
		
		if(this.ordencompraReturnGeneral.getConRetornoLista() || this.ordencompraReturnGeneral.getConRetornoObjeto()) {
			if(this.ordencompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.ordencompraLogic.setOrdenCompras(this.ordencompraReturnGeneral.getOrdenCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.ordencompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.ordencompraLogic.setOrdenCompra(this.ordencompraReturnGeneral.getOrdenCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingOrdenCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralOrdenCompra() throws Exception {
		
		
	}
	
	public ArrayList<OrdenCompra> getOrdenComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioOrdenCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(OrdenCompra ordencompraAux:ordencompraLogic.getOrdenCompras()) {
					if(ordencompraAux.getIsSelected()) {
						ordencomprasSeleccionados.add(ordencompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(OrdenCompra ordencompraAux:this.ordencompras) {
					if(ordencompraAux.getIsSelected()) {
						ordencomprasSeleccionados.add(ordencompraAux);				
					}
				}
			}
			
			if(ordencomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						ordencomprasSeleccionados.addAll(this.ordencompraLogic.getOrdenCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						ordencomprasSeleccionados.addAll(this.ordencompras);				
					}
				}
			}
		} else {
			ordencomprasSeleccionados.add(this.ordencompra);
		}
		
		return ordencomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoOrdenComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoOrdenComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoOrdenComprasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesOrdenComprasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE OrdenCompra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionOrdenComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoOrdenCompra();
		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoOrdenCompra();
		
		
		//this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados ,ordencompraImplementable,ordencompraImplementableHome);
	}
	
	public void mostrarImportacionOrdenCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionOrdenCompra();
		
		this.abrirFrameImportacionOrdenCompra();		
		
			
		//this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados ,ordencompraImplementable,ordencompraImplementableHome);
	}
	
	public void importarOrdenCompras() throws Exception {		
	
	}
	
	public void exportarOrdenComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelOrdenComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoOrdenComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlOrdenComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE OrdenCompra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarOrdenCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarOrdenCompra(ordencompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//ordencompraAux.setsDetalleGeneralEntityReporte(ordencompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarOrdenCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_STOCK;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_TOTALOTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_RETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=OrdenCompraConstantesFunciones.LABEL_FECHA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarOrdenCompra(OrdenCompra ordencompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=ordencompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getestadoordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettransportista_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getporcentaje_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getvalor_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettotal_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getstock().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getsub_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettotal_otro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getultimo_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getnumero_items().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getretencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getimpuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getordencompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getnumero_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=ordencompra.getfecha().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("OrdenCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelOrdenCompra(row);				
				iRow++;
			}				
			
			for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelOrdenCompra(ordencompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlOrdenComprasSeleccionados() throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();		
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"ordencompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("ordencompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("ordencompra");
			//elementRoot.appendChild(element);
		
			for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
				element = document.createElement("ordencompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlOrdenCompra(ordencompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE OrdenCompra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelOrdenCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_VALORDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_STOCK);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTALOTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_ULTIMOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROITEMS);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_RETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(OrdenCompraConstantesFunciones.LABEL_FECHA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelOrdenCompra(OrdenCompra ordencompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getestadoordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettransportista_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getporcentaje_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getvalor_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettotal_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getstock());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getsub_total());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettotal_otro());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getultimo_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getnumero_items());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getretencion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getimpuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getordencompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getnumero_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(ordencompra.getfecha());				
	}
	
	public void setFilaDatosExportarXmlOrdenCompra(OrdenCompra ordencompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(OrdenCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(ordencompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(OrdenCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(ordencompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(ordencompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(ordencompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(ordencompra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(ordencompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(ordencompra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(ordencompra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(ordencompra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementusuario_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(ordencompra.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementfecha_emision = document.createElement(OrdenCompraConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(ordencompra.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(OrdenCompraConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(ordencompra.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementnumero_secuencial = document.createElement(OrdenCompraConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(ordencompra.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementmoneda_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(ordencompra.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementtipocambio_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(ordencompra.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementestadoordencompra_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDESTADOORDENCOMPRA);
		elementestadoordencompra_descripcion.appendChild(document.createTextNode(ordencompra.getestadoordencompra_descripcion()));
		element.appendChild(elementestadoordencompra_descripcion);

		Element elementcliente_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(ordencompra.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementformato_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(ordencompra.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementtransportista_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(ordencompra.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);

		Element elementempleado_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(ordencompra.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementdescripcion = document.createElement(OrdenCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(ordencompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementporcentaje_descuento = document.createElement(OrdenCompraConstantesFunciones.PORCENTAJEDESCUENTO);
		elementporcentaje_descuento.appendChild(document.createTextNode(ordencompra.getporcentaje_descuento().toString().trim()));
		element.appendChild(elementporcentaje_descuento);

		Element elementsuman = document.createElement(OrdenCompraConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(ordencompra.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementice = document.createElement(OrdenCompraConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(ordencompra.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementvalor_descuento = document.createElement(OrdenCompraConstantesFunciones.VALORDESCUENTO);
		elementvalor_descuento.appendChild(document.createTextNode(ordencompra.getvalor_descuento().toString().trim()));
		element.appendChild(elementvalor_descuento);

		Element elementtotal_descuento = document.createElement(OrdenCompraConstantesFunciones.TOTALDESCUENTO);
		elementtotal_descuento.appendChild(document.createTextNode(ordencompra.gettotal_descuento().toString().trim()));
		element.appendChild(elementtotal_descuento);

		Element elementiva = document.createElement(OrdenCompraConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(ordencompra.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementstock = document.createElement(OrdenCompraConstantesFunciones.STOCK);
		elementstock.appendChild(document.createTextNode(ordencompra.getstock().toString().trim()));
		element.appendChild(elementstock);

		Element elementsub_total = document.createElement(OrdenCompraConstantesFunciones.SUBTOTAL);
		elementsub_total.appendChild(document.createTextNode(ordencompra.getsub_total().toString().trim()));
		element.appendChild(elementsub_total);

		Element elementtotal_otro = document.createElement(OrdenCompraConstantesFunciones.TOTALOTRO);
		elementtotal_otro.appendChild(document.createTextNode(ordencompra.gettotal_otro().toString().trim()));
		element.appendChild(elementtotal_otro);

		Element elementultimo_costo = document.createElement(OrdenCompraConstantesFunciones.ULTIMOCOSTO);
		elementultimo_costo.appendChild(document.createTextNode(ordencompra.getultimo_costo().toString().trim()));
		element.appendChild(elementultimo_costo);

		Element elementnumero_items = document.createElement(OrdenCompraConstantesFunciones.NUMEROITEMS);
		elementnumero_items.appendChild(document.createTextNode(ordencompra.getnumero_items().toString().trim()));
		element.appendChild(elementnumero_items);

		Element elementretencion = document.createElement(OrdenCompraConstantesFunciones.RETENCION);
		elementretencion.appendChild(document.createTextNode(ordencompra.getretencion().toString().trim()));
		element.appendChild(elementretencion);

		Element elementtotal = document.createElement(OrdenCompraConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(ordencompra.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementflete = document.createElement(OrdenCompraConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(ordencompra.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementimpuesto = document.createElement(OrdenCompraConstantesFunciones.IMPUESTO);
		elementimpuesto.appendChild(document.createTextNode(ordencompra.getimpuesto().toString().trim()));
		element.appendChild(elementimpuesto);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(ordencompra.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementordencompra_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDORDENCOMPRA);
		elementordencompra_descripcion.appendChild(document.createTextNode(ordencompra.getordencompra_descripcion()));
		element.appendChild(elementordencompra_descripcion);

		Element elementasientocontable_descripcion = document.createElement(OrdenCompraConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(ordencompra.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementnumero_comprobante = document.createElement(OrdenCompraConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(ordencompra.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);

		Element elementfecha = document.createElement(OrdenCompraConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(ordencompra.getfecha().toString().trim()));
		element.appendChild(elementfecha);
	}
	
	public void generarReporteGroupGenericoOrdenComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<OrdenCompra> ordencomprasSeleccionados=new ArrayList<OrdenCompra>();
		
		ordencomprasSeleccionados=this.getOrdenComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoOrdenCompra(ordencomprasSeleccionados);
		
		this.generarReporteOrdenCompras("Todos",ordencomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoOrdenCompra(ArrayList<OrdenCompra> ordencomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(OrdenCompra ordencompraAux:ordencomprasSeleccionados) {
				ordencompraAux.setsDetalleGeneralEntityReporte(ordencompraAux.toString());
			
				if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(ordencompraAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(ordencompraAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDESTADOORDENCOMPRA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getestadoordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.gettransportista_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDORDENCOMPRA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getordencompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(ordencompraAux.getnumero_comprobante());
				}
				 else if(sTipoSeleccionar.equals(OrdenCompraConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					ordencompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(ordencompraAux.getfecha()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,OrdenCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesOrdenCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoOrdenCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=true;
				this.isVisibilidadCeldaGuardarCambiosOrdenCompra=true;
			}
			
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=true;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=true;
			this.isVisibilidadCeldaEliminarOrdenCompra=true;
			this.isVisibilidadCeldaCancelarOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=true;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=true;
			this.isVisibilidadCeldaModificarOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
			this.isVisibilidadCeldaModificarOrdenCompra=true;
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
			this.isVisibilidadCeldaCancelarOrdenCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarOrdenCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(OrdenCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoOrdenCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=true;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=true;
		} else {
			this.actualizarEstadoPanelsOrdenCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarOrdenCompra=false;
			//this.isVisibilidadCeldaVerFormOrdenCompra=false;
			this.isVisibilidadCeldaDuplicarOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!ordencompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoOrdenCompra=false;
			this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(ordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!ordencompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;												
			}
			
			this.jButtonCerrarOrdenCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesOrdenCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.ordencompra)) {
			this.isVisibilidadCeldaActualizarOrdenCompra=false;
			this.isVisibilidadCeldaEliminarOrdenCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesOrdenCompra() {
		this.isVisibilidadCeldaNuevoOrdenCompra=false;
		this.isVisibilidadCeldaGuardarCambiosOrdenCompra=false;
	}
	
	public void actualizarEstadoPanelsOrdenCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionOrdenCompra!=null) {
				this.jScrollPanelDatosEdicionOrdenCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosOrdenCompra!=null) {
				this.jScrollPanelDatosOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionOrdenCompra!=null) {
				this.jPanelPaginacionOrdenCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
					this.jTabbedPaneBusquedasOrdenCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.ordencompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasOrdenCompra!=null) {
				this.jTabbedPaneBusquedasOrdenCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesOrdenCompra!=null) {
				this.jPanelParametrosReportesOrdenCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdAsientoContable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdAsientoContable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoOrdenCompra(Boolean isParaEstadoOrdenCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoOrdenCompraNegation=!isParaEstadoOrdenCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaEstadoOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEstadoOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaEstadoOrdenCompra;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEstadoOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEstadoOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdAsientoContable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdAsientoContable=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaOrdenCompra(Boolean isParaOrdenCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaOrdenCompraNegation=!isParaOrdenCompra;

			this.isVisibilidadFK_IdAsientoContable=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaOrdenCompra;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaOrdenCompraNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdAsientoContableOrdenCompra);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdClienteOrdenCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEmpleadoOrdenCompra);}

			this.isVisibilidadFK_IdEstadoOrdenCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEstadoOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdEstadoOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdOrdenCompra=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdOrdenCompra) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdOrdenCompraOrdenCompra);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasOrdenCompra.remove(jPanelFK_IdTipoTransaccionModuloOrdenCompra);}
		}
		
	}
	
	

	public String registrarSesionOrdenCompraParaDetalleOrdenCompras() throws Exception {
		Boolean isPaginaPopupDetalleOrdenCompra=false;

		try {

			if(this.ordencompraSessionBean==null) {
				this.ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean==null) {
				this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean=new DetalleOrdenCompraSessionBean();
			}

			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setsPathNavegacionActual(ordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleOrdenCompraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleOrdenCompra=this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleOrdenCompra(true);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleOrdenCompra(OrdenCompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setisBusquedaDesdeForeignKeySesionOrdenCompra(true);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setlidOrdenCompraActual(this.idOrdenCompraActual);
			this.jInternalFrameDetalleFormOrdenCompra.detalleordencompraSessionBean.setNoMantenimiento(true);

			ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyOrdenCompra(true);
			ordencompraSessionBean.setlIdOrdenCompraActualForeignKey(this.idOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionOrdenCompraParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(ordencompraSessionBean==null) {
				ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(ordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.ordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(OrdenCompraConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionOrdenCompra(true);
			//tipocambioSessionBean.setlidOrdenCompraActual(this.idOrdenCompraActual);

			ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyOrdenCompra(true);
			ordencompraSessionBean.setlIdOrdenCompraActualForeignKey(this.idOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionOrdenCompraParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(ordencompraSessionBean==null) {
				ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(ordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.ordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(OrdenCompraConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionOrdenCompra(true);
			//clienteSessionBean.setlidOrdenCompraActual(this.idOrdenCompraActual);

			ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyOrdenCompra(true);
			ordencompraSessionBean.setlIdOrdenCompraActualForeignKey(this.idOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionOrdenCompraParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(ordencompraSessionBean==null) {
				ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(ordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.ordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(OrdenCompraConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionOrdenCompra(true);
			//empleadoSessionBean.setlidOrdenCompraActual(this.idOrdenCompraActual);

			ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyOrdenCompra(true);
			ordencompraSessionBean.setlIdOrdenCompraActualForeignKey(this.idOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionOrdenCompraParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(ordencompraSessionBean==null) {
				ordencompraSessionBean=new OrdenCompraSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(ordencompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.ordencompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(OrdenCompraConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionOrdenCompra(true);
			//asientocontableSessionBean.setlidOrdenCompraActual(this.idOrdenCompraActual);

			ordencompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyOrdenCompra(true);
			ordencompraSessionBean.setlIdOrdenCompraActualForeignKey(this.idOrdenCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//OrdenCompraSessionBean ordencompraSessionBean=new OrdenCompraSessionBean();
		
		if(this.ordencompraSessionBean==null) {
			this.ordencompraSessionBean=new OrdenCompraSessionBean();
		}
		
		this.ordencompraSessionBean.setsUltimaBusquedaOrdenCompra(this.getsAccionBusqueda());
		this.ordencompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.ordencompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			ordencompraSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			ordencompraSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			ordencompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			ordencompraSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			ordencompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoOrdenCompra")) {
			ordencompraSessionBean.setid_estado_orden_compra(this.getid_estado_orden_compraFK_IdEstadoOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			ordencompraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
			ordencompraSessionBean.setid_orden_compra(this.getid_orden_compraFK_IdOrdenCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			ordencompraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			ordencompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			ordencompraSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			ordencompraSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//OrdenCompraSessionBean ordencompraSessionBean=new OrdenCompraSessionBean();
		
		if(this.ordencompraSessionBean==null) {
			this.ordencompraSessionBean=new OrdenCompraSessionBean();
		}
		
		if(this.ordencompraSessionBean.getsUltimaBusquedaOrdenCompra()!=null&&!this.ordencompraSessionBean.getsUltimaBusquedaOrdenCompra().equals("")) {
			this.setsAccionBusqueda(ordencompraSessionBean.getsUltimaBusquedaOrdenCompra());
			this.setiNumeroPaginacion(ordencompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(ordencompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(ordencompraSessionBean.getid_asiento_contable());
				ordencompraSessionBean.setid_asiento_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(ordencompraSessionBean.getid_cliente());
				ordencompraSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(ordencompraSessionBean.getid_ejercicio());
				ordencompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(ordencompraSessionBean.getid_empleado());
				ordencompraSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(ordencompraSessionBean.getid_empresa());
				ordencompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoOrdenCompra")) {
				this.setid_estado_orden_compraFK_IdEstadoOrdenCompra(ordencompraSessionBean.getid_estado_orden_compra());
				ordencompraSessionBean.setid_estado_orden_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(ordencompraSessionBean.getid_modulo());
				ordencompraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdOrdenCompra")) {
				this.setid_orden_compraFK_IdOrdenCompra(ordencompraSessionBean.getid_orden_compra());
				ordencompraSessionBean.setid_orden_compra(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(ordencompraSessionBean.getid_periodo());
				ordencompraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(ordencompraSessionBean.getid_sucursal());
				ordencompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(ordencompraSessionBean.getid_tipo_transaccion_modulo());
				ordencompraSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(ordencompraSessionBean.getid_usuario());
				ordencompraSessionBean.setid_usuario(-1L);
			}
		}
		
		this.ordencompraSessionBean.setsUltimaBusquedaOrdenCompra("");
		this.ordencompraSessionBean.setiNumeroPaginacion(OrdenCompraConstantesFunciones.INUMEROPAGINACION);
		this.ordencompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaOrdenCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioOrdenCompra() {
		this.updateBorderResaltarBusquedasFormularioOrdenCompra();
		this.updateVisibilidadBusquedasFormularioOrdenCompra();
		this.updateHabilitarBusquedasFormularioOrdenCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioOrdenCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasOrdenCompra.getComponents().length>0) {
	

		if(this.ordencompraConstantesFunciones.resaltarFK_IdAsientoContableOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdAsientoContableOrdenCompra);
			}
		}

		if(this.ordencompraConstantesFunciones.resaltarFK_IdClienteOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdClienteOrdenCompra);
			}
		}

		if(this.ordencompraConstantesFunciones.resaltarFK_IdEmpleadoOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEmpleadoOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdEmpleadoOrdenCompra);
			}
		}

		if(this.ordencompraConstantesFunciones.resaltarFK_IdEstadoOrdenCompraOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoOrdenCompraOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdEstadoOrdenCompraOrdenCompra);
			}
		}

		if(this.ordencompraConstantesFunciones.resaltarFK_IdOrdenCompraOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdOrdenCompraOrdenCompra);
			}
		}

		if(this.ordencompraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloOrdenCompra!=null) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloOrdenCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloOrdenCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioOrdenCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdAsientoContableOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdAsientoContableOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdClienteOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdClienteOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEmpleadoOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdEmpleadoOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdEmpleadoOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoOrdenCompraOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdEstadoOrdenCompraOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdEstadoOrdenCompraOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdOrdenCompraOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdOrdenCompraOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloOrdenCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.ordencompraConstantesFunciones.mostrarFK_IdTipoTransaccionModuloOrdenCompra);
			if(!this.ordencompraConstantesFunciones.mostrarFK_IdTipoTransaccionModuloOrdenCompra && index>-1) {
				this.jTabbedPaneBusquedasOrdenCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioOrdenCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasOrdenCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdAsientoContableOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdAsientoContableOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdClienteOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdClienteOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEmpleadoOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdEmpleadoOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdEmpleadoOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoOrdenCompraOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdEstadoOrdenCompraOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdEstadoOrdenCompraOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdOrdenCompraOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdOrdenCompraOrdenCompra);
			}

			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloOrdenCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.ordencompraConstantesFunciones.activarFK_IdTipoTransaccionModuloOrdenCompra);
				this.jTabbedPaneBusquedasOrdenCompra.setEnabledAt(index,this.ordencompraConstantesFunciones.activarFK_IdTipoTransaccionModuloOrdenCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaOrdenCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdAsientoContableOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdAsientoContableOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdAsientoContableOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdClienteOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdClienteOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdClienteOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEmpleadoOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdEmpleadoOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdEmpleadoOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoOrdenCompra")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdEstadoOrdenCompraOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdEstadoOrdenCompraOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdEstadoOrdenCompraOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdOrdenCompra")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdOrdenCompraOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdOrdenCompraOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdOrdenCompraOrdenCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasOrdenCompra.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloOrdenCompra);

			this.jTabbedPaneBusquedasOrdenCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasOrdenCompra.getComponent(index);

			this.ordencompraConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloOrdenCompra(resaltar);

			jPanel.setBorder(this.ordencompraConstantesFunciones.resaltarFK_IdTipoTransaccionModuloOrdenCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarOrdenCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioOrdenCompra() throws Exception {

		if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioOrdenCompra();
		this.updateVisibilidadResaltarControlesFormularioOrdenCompra();
		this.updateHabilitarResaltarControlesFormularioOrdenCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.ordencompraConstantesFunciones.resaltaridOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltaridOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_empresaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_empresaOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_sucursalOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_sucursalOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_moduloOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_moduloOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_ejercicioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_ejercicioOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_periodoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_periodoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_anioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_anioOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_mesOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_mesOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_usuarioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_usuarioOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarfecha_emisionOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarfecha_emisionOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarfecha_entregaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarfecha_entregaOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarnumero_secuencialOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarnumero_secuencialOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_monedaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_monedaOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_tipo_cambioOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_tipo_cambioOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_estado_orden_compraOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_estado_orden_compraOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_clienteOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_clienteOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_formatoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_formatoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_transportistaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_transportistaOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_empleadoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_empleadoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltardescripcionOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltardescripcionOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarporcentaje_descuentoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarporcentaje_descuentoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarsumanOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarsumanOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltariceOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltariceOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarvalor_descuentoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarvalor_descuentoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltartotal_descuentoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltartotal_descuentoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarivaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarivaOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarstockOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarstockOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarsub_totalOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarsub_totalOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltartotal_otroOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltartotal_otroOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarultimo_costoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarultimo_costoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarnumero_itemsOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarnumero_itemsOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarretencionOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarretencionOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltartotalOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltartotalOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarfleteOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldfleteOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarfleteOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarimpuestoOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldimpuestoOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarimpuestoOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_tipo_transaccion_moduloOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_tipo_transaccion_moduloOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_orden_compraOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_orden_compraOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarid_asiento_contableOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarid_asiento_contableOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarnumero_comprobanteOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_comprobanteOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarnumero_comprobanteOrdenCompra);}
		if(this.ordencompraConstantesFunciones.resaltarfechaOrdenCompra!=null && this.jInternalFrameDetalleFormOrdenCompra!=null) {this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfechaOrdenCompra.setBorder(this.ordencompraConstantesFunciones.resaltarfechaOrdenCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioOrdenCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
	
		//this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostraridOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelidOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostraridOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_empresaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_empresaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_empresaOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_sucursalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_sucursalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_sucursalOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_moduloOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_moduloOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_moduloOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_ejercicioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_ejercicioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_ejercicioOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_periodoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_periodoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_periodoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_anioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_anioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_anioOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_mesOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_mesOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_mesOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_usuarioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_usuarioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_usuarioOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfecha_emisionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelfecha_emisionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfecha_emisionOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfecha_entregaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelfecha_entregaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfecha_entregaOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_secuencialOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelnumero_secuencialOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_secuencialOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_monedaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_monedaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_monedaOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_tipo_cambioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_tipo_cambioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_tipo_cambioOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_tipo_cambioOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_estado_orden_compraOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_estado_orden_compraOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_estado_orden_compraOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_clienteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_clienteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_clienteOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_clienteOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_formatoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_formatoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_formatoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_transportistaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_transportistaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_transportistaOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_empleadoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_empleadoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_empleadoOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_empleadoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrardescripcionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPaneldescripcionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrardescripcionOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarporcentaje_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelporcentaje_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarporcentaje_descuentoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarsumanOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelsumanOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarsumanOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrariceOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPaneliceOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrariceOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarvalor_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelvalor_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarvalor_descuentoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotal_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPaneltotal_descuentoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotal_descuentoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarivaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelivaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarivaOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarstockOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelstockOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarstockOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarsub_totalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelsub_totalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarsub_totalOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotal_otroOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPaneltotal_otroOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotal_otroOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarultimo_costoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelultimo_costoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarultimo_costoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_itemsOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelnumero_itemsOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_itemsOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarretencionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelretencionOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarretencionOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPaneltotalOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrartotalOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldfleteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfleteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelfleteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfleteOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldimpuestoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarimpuestoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelimpuestoOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarimpuestoOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_tipo_transaccion_moduloOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_tipo_transaccion_moduloOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_tipo_transaccion_moduloOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_orden_compraOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_orden_compraOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_orden_compraOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_asiento_contableOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelid_asiento_contableOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_asiento_contableOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarid_asiento_contableOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_comprobanteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_comprobanteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelnumero_comprobanteOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarnumero_comprobanteOrdenCompra);
		//this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfechaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfechaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jPanelfechaOrdenCompra.setVisible(this.ordencompraConstantesFunciones.mostrarfechaOrdenCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioOrdenCompra() throws Exception {
		if(this.jInternalFrameDetalleFormOrdenCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormOrdenCompra!=null) {
	
		this.jInternalFrameDetalleFormOrdenCompra.jLabelidOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activaridOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empresaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_empresaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_sucursalOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_sucursalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_moduloOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_moduloOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_ejercicioOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_ejercicioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_periodoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_periodoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_anioOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_anioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_mesOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_mesOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_usuarioOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_usuarioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_emisionOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarfecha_emisionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfecha_entregaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarfecha_entregaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_secuencialOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarnumero_secuencialOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_monedaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_monedaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_cambioOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_tipo_cambioOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_tipo_cambioOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_tipo_cambioOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_estado_orden_compraOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_estado_orden_compraOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_clienteOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_clienteOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_clienteOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_clienteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_formatoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_formatoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_transportistaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_transportistaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_empleadoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_empleadoOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_empleadoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_empleadoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextAreadescripcionOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activardescripcionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldporcentaje_descuentoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarporcentaje_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsumanOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarsumanOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldiceOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activariceOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldvalor_descuentoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarvalor_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_descuentoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activartotal_descuentoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldivaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarivaOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldstockOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarstockOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldsub_totalOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarsub_totalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotal_otroOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activartotal_otroOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldultimo_costoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarultimo_costoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_itemsOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarnumero_itemsOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldretencionOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarretencionOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldtotalOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activartotalOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldfleteOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarfleteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldimpuestoOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarimpuestoOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_tipo_transaccion_moduloOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_tipo_transaccion_moduloOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_orden_compraOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_orden_compraOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jComboBoxid_asiento_contableOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_asiento_contableOrdenCompra);
			this.jInternalFrameDetalleFormOrdenCompra.jButtonid_asiento_contableOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarid_asiento_contableOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jTextFieldnumero_comprobanteOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarnumero_comprobanteOrdenCompra);
		this.jInternalFrameDetalleFormOrdenCompra.jDateChooserfechaOrdenCompra.setEnabled(this.ordencompraConstantesFunciones.activarfechaOrdenCompra);
		}
	}
	
		
}